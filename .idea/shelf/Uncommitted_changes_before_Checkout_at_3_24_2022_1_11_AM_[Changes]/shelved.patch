Index: src/main/java/linalg/MatrixOperations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\n\r\n/**\r\n * This interface provides several methods useful for matrix operations.\r\n * \r\n * @author Jacob Watters\r\n */\r\ninterface MatrixOperations {\r\n\t\r\n\t/**\r\n\t * Performs matrix addition on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to add to the instance matrix\r\n\t * @return result of matrix addition\r\n\t */\r\n\t default Matrix add(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix C = new Matrix(A.m, A.n);\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC.entries[i][j].re = A.entries[i][j].re + B.entries[i][j].re;\r\n\t\t\t\tC.entries[i][j].im = A.entries[i][j].im + B.entries[i][j].im;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn C;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds the value of a to all entries of matrix.\r\n\t * @param a Value to add to matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix add(double a) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix C = new Matrix(A.m, A.n);\r\n\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC.entries[i][j].re = A.entries[i][j].re + a;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn C;\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs matrix subtraction on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to subtract to the instance matrix\r\n\t * @return result of matrix subtraction\r\n\t */\r\n\t default Matrix sub(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix C = new Matrix(A.m, A.n);\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC.entries[i][j].re = A.entries[i][j].re - B.entries[i][j].re;\r\n\t\t\t\tC.entries[i][j].im = A.entries[i][j].im - B.entries[i][j].im;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn C;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Subtracts the value of a from all entries of matrix.\r\n\t * @param a Value to subtract from matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix sub(double a) {\r\n\t\t return this.add(-a);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs matrix multiplication on two matrices. The instance matrix\r\n\t * must have the same number of columns as the rows of B.\r\n\t * \r\n\t * If the instance matrix is a kxm matrix and B is a \r\n\t * m x n matrix then the result will be a k x n matrix.\r\n\t * \r\n\t * @param B - matrix to multiply to the instance matrix\r\n\t * @return result of matrix multiplication\r\n\t */\r\n\t default Matrix mult(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!MatrixComparisons.matMultCheck(A, B)) {\r\n\t\t\tthrow new IllegalArgumentException(\"Number of columns in first matrix must match \\n\"\r\n\t\t\t\t\t+ \"number of rows in second matrix but got \" + A.shape() + \" and \" + B.shape() + \".\");\r\n\t\t}\r\n\t\t\r\n\t\tMatrix product = new Matrix(A.m, B.n);\r\n\t\t\r\n\t\tfor(int i = 0; i < product.m; i++) {\r\n\t\t\tfor(int k = 0; k < A.n; k++) {\r\n\t\t\t\tfor(int j = 0; j < product.n; j++) {\r\n\t\t\t\t\tproduct.entries[i][j].re += (A.entries[i][k].re * B.entries[k][j].re - A.entries[i][k].im * B.entries[k][j].im);\r\n\t\t\t\t\tproduct.entries[i][j].im += (A.entries[i][k].re * B.entries[k][j].im + A.entries[i][k].im * B.entries[k][j].re);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn product;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise multiplication of two matrices.\r\n\t * \r\n\t * @throws IllegalArgumentException If matrices do not have the same dimension.\r\n\t * @param B - matrix to multiply element-wise to this matrix.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemMult(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix C = new Matrix(A.m, A.n);\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC.entries[i][j].re = A.entries[i][j].re * B.entries[i][j].re - A.entries[i][j].im * B.entries[i][j].im;\r\n\t\t\t\tC.entries[i][j].im = A.entries[i][j].re * B.entries[i][j].im + A.entries[i][j].im * B.entries[i][j].re;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn C;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply this matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\t default Matrix scalMult(double factor) {\r\n\t\treturn this.scalMult(new CNumber(factor));\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\t default Matrix scalMult(CNumber factor) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix result = new Matrix(A.m, A.n);\r\n\t\t\r\n\t\tfor(int i = 0; i < A.m; i++) {\r\n\t\t\tfor(int j = 0; j <  A.n; j++) {\r\n\t\t\t\tresult.entries[i][j] = CNumber.multiply(A.entries[i][j], factor);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise division on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to divide element-wise the instance matrix with.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemDiv(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix C = new Matrix(A.m, A.n);\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC.entries[i][j].re = \t(A.entries[i][j].re * B.entries[i][j].re + A.entries[i][j].im * B.entries[i][j].im) / \r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re * B.entries[i][j].re + B.entries[i][j].im * B.entries[i][j].im);\r\n\t\t\t\t\r\n\t\t\t\tC.entries[i][j].im = \t(A.entries[i][j].im * B.entries[i][j].re - A.entries[i][j].re * B.entries[i][j].im) / \r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re * B.entries[i][j].re + B.entries[i][j].im * B.entries[i][j].im);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn C;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(double divisor) {\r\n\t\tdouble factor = 1/divisor;\r\n\t\treturn this.scalMult(new CNumber(factor));\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(CNumber divisor) {\r\n\t\tCNumber factor = CNumber.divide(CNumber.ONE, divisor);\r\n\t\treturn this.scalMult(factor);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Computes the Frobenius inner product of two matrices A and B, {@code <A, B>}<sub>F</sub>.\r\n\t * \r\n\t * @param B - Second matrix for the Frobenius inner product.\r\n \t * @return the Frobenius inner product.\r\n\t */\r\n\t default CNumber fip(Matrix B) {\r\n\t\treturn this.mult(B).tr();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix direct sum. That is, a block diagonal matrix containing all matrices from a set of matrices.\r\n\t * \r\n\t * @param matrixList - List of matrices from which to compute the matrix direct sum.\r\n\t * @return The result of direct summing the matrices in matrixList to this matrix.\r\n\t */\r\n\t default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include \"this\" in the direct sum.\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tint new_m = A.m, new_n = A.n,\r\n\t\t\tcurrent_m = 0, current_n = 0;\r\n\t\t\r\n\t\tfor(int i=0; i<matrixList.length; i++) {\t\t\t\r\n\t\t\tnew_m += matrixList[i].m;\r\n\t\t\tnew_n += matrixList[i].n;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tMatrix directSum = new Matrix(new_m, new_n);\r\n\t\t\r\n\t\tfor(int i=-1; i<matrixList.length; i++) {\r\n\t\t\tif(i==-1) {\r\n\t\t\t\tdirectSum.setSlice(current_m, current_n, A);\r\n\t\t\t\tcurrent_m += A.m;\r\n\t\t\t\tcurrent_n += A.n;\r\n\t\t\t} else {\r\n\t\t\t\tdirectSum.setSlice(current_m, current_n, matrixList[i]);\r\n\t\t\t\tcurrent_m += matrixList[i].m;\r\n\t\t\t\tcurrent_n += matrixList[i].n;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn directSum;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes element wise square root of the matrix. All square roots are the positive root or, in\r\n\t * the case of complex entries, the root with positive real part.\r\n\t * \r\n\t * @return The element-wise square root of this matrix.\r\n\t */\r\n\t default Matrix sqrt() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tA.entries[i][j] = CNumber.sqrt(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes absolute value, element-wise, of a matrix.\r\n\t * If any of the matrix cells are complex, this will result\r\n\t * in the magnitude of that value.\r\n\t * \r\n\t * @return - element-wise absolute value of matrix.\r\n\t */\r\n\t default Matrix abs() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix abs = new Matrix(A.m, A.n);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tabs.entries[i][j] = CNumber.abs(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn abs;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as <code> Matrix.T() </code>\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix transpose() {\r\n\t\treturn this.T();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as <code> Matrix.transpose() </code>\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix T() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix At = new Matrix(A.n, A.m);\r\n\t\t\r\n\t    final int BLOCK_SIZE = 16;\r\n\t    \r\n\t    // Compute transpose using blocked algorithm\r\n\t    for(int i = 0; i < A.m; i += BLOCK_SIZE) {\r\n\t        for (int j = 0; j < A.n; j += BLOCK_SIZE) {\r\n\t            // transpose the block beginning at [i,j]\r\n\t            for (int k = i; k < i + BLOCK_SIZE && k < A.m; ++k) {\r\n\t                for (int l = j; l < j + BLOCK_SIZE && l < A.n; ++l) {\r\n\t                    At.entries[l][k] = A.entries[k][l];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    return At;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Conjugates a matrix element-wise.\r\n\t * \r\n\t * @return Conjugate of matrix\r\n\t */\r\n\t default Matrix conjugate() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix Ac = new Matrix(A.m, A.n);\r\n\t\t\r\n\t\tfor(int i = 0; i < Ac.m; i++) {\r\n\t\t\tfor(int j = 0; j < Ac.n; j++) {\r\n\t\t\t\tAc.entries[i][j] = CNumber.conjugate(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Ac;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the conjugate transpose of this matrix. \r\n\t * <br><br>\r\n\t * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}. \r\n\t * \r\n\t * @return The conjugate transpose of this matrix.\r\n\t */\r\n\t default Matrix conjT() {\r\n\t\treturn this.conjugate().T();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}. \r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix hermAdjoint() {\r\n\t\treturn this.conjugate().T();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #conjT() conjT()} and {@link #hermAdjoint() hermAdjpint()}.\r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix H() {\r\n\t\treturn this.conjugate().T();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix using reccurisive definition. This method exists\r\n\t * for computing the determinant of non-real matrices.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detRec(Matrix A) {\r\n\t\tCNumber value = CNumber.ZERO;\r\n\t\t\r\n\t\tif(A.m == 1 && A.n == 1) { // Then we simply have a 1x1 matrix.\r\n\t\t\treturn A.entries[0][0];\r\n\t\t}\r\n\t\telse if(A.m == 2 && A.n == 2) { // Then we have a 2x2 matrix, which is the base case\r\n\t\t\tCNumber a = A.entries[0][0];\r\n\t\t\tCNumber b = A.entries[0][1];\r\n\t\t\tCNumber c = A.entries[1][0];\r\n\t\t\tCNumber d = A.entries[1][1];\r\n\t\t\t\r\n\t\t\tvalue = CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));\r\n\t\t} \r\n\t\telse {\r\n\t\t\tfor(int j = 0; j < A.n; j++) {\r\n\t\t\t\tMatrix newA = A.removeRow(0).removeCol(j);\r\n\t\t\t\t\r\n\t\t\t\tCNumber num = new CNumber(Math.pow(-1, j));\r\n\t\t\t\tnum = CNumber.multiply(num, A.entries[0][j]);\r\n\t\t\t\t\r\n\t\t\t\tvalue = CNumber.add(value, CNumber.multiply(detRec(newA), num));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of real matrix using QR decomposition.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of.\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detQR(Matrix A) {\r\n\t\tCNumber detQ, detR = CNumber.ONE;\r\n\t\tMatrix[] QRh = Decompose.QR(A, true);\r\n\t\t\r\n\t\tdetQ = new CNumber(Math.pow(-1, QRh[2].entries[0][0].getReal()));\r\n\t\t\r\n\t\tfor(int i = 0; i<QRh[1].n; i++) {\r\n\t\t\tdetR = CNumber.multiply(detR, QRh[1].entries[i][i]);\r\n\t\t}\r\n\t\t\r\n\t\treturn CNumber.multiply(detR, detQ);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix. If the matrix has\r\n\t * any complex entries, this may be a complex value.\r\n\t * Note: Currently this method only works for real matirces.\r\n\t * \r\n\t * @return determinant of matrix.\r\n\t */\r\n\t default CNumber det() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!A.isSquare()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Matrix must be square but got shape \" + A.shape);\r\n\t\t}\r\n\t\t\r\n\t\tif(A.m == 2 && A.n == 2) { // Then we have a 2x2 matrix, which we can directly compute\r\n\t\t\tCNumber a = A.entries[0][0];\r\n\t\t\tCNumber b = A.entries[0][1];\r\n\t\t\tCNumber c = A.entries[1][0];\r\n\t\t\tCNumber d = A.entries[1][1];\r\n\t\t\t\r\n\t\t\treturn CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));\r\n\t\t}\r\n\t\t\r\n\t\treturn detQR(A);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along rows. Both matrices must have the same number of columns\r\n\t * Also see {@link #stack(Matrix, int) stack(Matrix B, int axis)}\r\n\t * \r\n\t * @param B\r\n\t * @return\r\n\t */\r\n\t default Matrix stack(Matrix B) {\r\n\t\treturn this.stack(B, 0);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along specified axis. Axis 0 will stack matrices along the rows. Axis 1 will\r\n\t * stack matrices along columns.\r\n\t * \r\n\t * Note: To stack matrices along axis 0 they must have the same number of columns.\r\n\t * To stack matrices along axis 1 they must have the same number of rows.\r\n\t * \r\n\t * @param B - Matrix to stack\r\n\t * @param axis - Axis along which to stack matrices.\r\n\t * @return Returns A and B stacked along specified axis.\r\n\t */\r\n\t default Matrix stack(Matrix B, int axis) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix result = null;\r\n\t\t\r\n\t\tif(axis == 0) { // Stack on rows\r\n\t\t\tif(A.entries[0].length != B.entries[0].length) { // Ensure matrices have same number or columns\r\n\t\t\t\tthrow new IllegalArgumentException(\"Must have same number of columns but \"\r\n\t\t\t\t\t\t+ \"got \" + A.entries[0].length + \" and \" + B.entries[0].length);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult = new Matrix(A.entries.length+B.entries.length, A.entries[0].length);\r\n\t\t\t\r\n\t\t\tfor(int i = 0; i < result.entries.length; i++) {\r\n\t\t\t\tfor(int j = 0; j < result.entries[0].length; j++) {\r\n\t\t\t\t\tif(i < A.entries.length) { // Then copy from A.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = B.entries[i-A.entries.length][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t\telse if(axis == 1) { // Stack on cols\r\n\t\t\tif(A.entries.length != B.entries.length) { // Ensure matrices have same number or rows\r\n\t\t\t\tthrow new IllegalArgumentException(\"Must have same number of rows but \"\r\n\t\t\t\t\t\t+ \"got \" + A.entries.length + \" and \" + B.entries.length);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult = new Matrix(A.entries.length, A.entries[0].length + B.entries[0].length);\r\n\t\t\t\r\n\t\t\tfor(int i = 0; i < result.entries.length; i++) {\r\n\t\t\t\tfor(int j = 0; j < result.entries[0].length; j++) {\r\n\t\t\t\t\tif(j < A.entries[0].length) { // Then copy from A.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = B.entries[i][j-A.entries[0].length];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new IllegalArgumentException(\"axis must be 0 or 1 but got \" + axis);\r\n\t\t}\t\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Augments two matrices. This is the same as {@link #stack(Matrix, int) stack(B, 1)}\r\n\t * \r\n\t * @param B - Matrix to augment to this matrix.\r\n\t * @return The matrix B augmented to this matrix.\r\n\t */\r\n\t default Matrix augment(Matrix B) {\r\n\t\treturn this.stack(B, 1);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes row-echelon form of matrix. This will be an upper-triangular matrix.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in row-echelon form if:\r\n\t *  - The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *  - The pivot of a nonzero row is always strictly to \r\n\t *    the right of the leading coefficient of the row above it.\r\n\t *  - Rows with all zero elements, if any, are below rows having a non-zero element.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row equivalent matrix in row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * Also see <code>{@link #rref() rref()}</code> for reduced row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix\r\n\t */\r\n\t default Matrix ref() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\tCNumber m, scale;\r\n\t\t\r\n\t\tint pivotRow = 0,\r\n\t\t\tpivotCol = 0;\r\n\t\t\r\n\t\twhile(pivotRow<A.m && pivotCol<A.n) {\r\n\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) { // Then we can make the pivot one.\r\n\t\t\t\t scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);\r\n\t\t\t\t \r\n\t\t\t\t for(int k=pivotCol; k<A.n; k++) { // scale the whole row\r\n\t\t\t\t\t A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); \r\n\t\t\t\t }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(int i=pivotRow+1; i<A.m; i++) {\r\n\t\t\t\tm = A.entries[i][pivotCol];\r\n\r\n\t\t\t\tfor(int k=pivotCol; k<A.n; k++) {\r\n\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], \r\n\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * This insures the entries to the left of the pivot are zero. \r\n\t\t\t\t * They may be a very small (in absolute value) non-zero value\r\n\t\t\t\t * resulting from errors in floating point arithmetic.\r\n\t\t\t\t */\r\n\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpivotRow++;\r\n\t\t\tpivotCol++;\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in reduced row-echelon form if:<br>\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * @param partialPivoting - Falg for use of partial pivoting.\r\n\t * <pre>\r\n\t *  - If true then the rref will be computed using partial pivoting.\r\n\t * \t    ~ This is equivalent to the method {@link #rref() rref()}.\r\n\t *  - If false then the rref will be computed WITHOUT using partial pivoting.\r\n\t * </pre>\r\n\t * @return\r\n\t */\r\n\t default Matrix rref(boolean partialPivoting) {\r\n\t\tif(partialPivoting) return rref();\r\n\t\telse return rrefNoPivot();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. This is done using partial pivoting.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in reduced row-echelon form if:<br>\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * Also see <code>{@link #ref() ref()}</code> for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\t default Matrix rref() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\tCNumber mult, scale, currentMax;\r\n\t\tint maxIndex;\r\n\t\t\r\n\t\tint pivotRow = 0,\r\n\t\t\tpivotCol = 0;\r\n\t\t\r\n\t\twhile(pivotRow<A.m && pivotCol<A.n) {\r\n\t\t\tmaxIndex = pivotRow;\r\n\t\t\tcurrentMax = A.entries[pivotRow][pivotCol];\r\n\t\t\t\r\n\t\t\tfor(int i=pivotRow; i<A.m; i++) { // Find the maximum entry in the pivot column (at or below the pivot ).\r\n\t\t\t\tif(A.entries[i][pivotCol].nearZero(1.0E-12)) { \r\n\t\t\t\t\t\r\n\t\t\t\t\t/* \r\n\t\t\t\t\t * If a number is very close to zero, assume it is supposed to be zero.\r\n\t\t\t\t\t * This protects against trying to manipulate a column which\r\n\t\t\t\t\t * is already in the correct form.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;\r\n\t\t\t\t}\r\n\t\t\t\telse if(A.entries[i][pivotCol].compareTo(currentMax) > 0) {\r\n\t\t\t\t\tmaxIndex = i;\r\n\t\t\t\t\tcurrentMax = A.entries[i][pivotCol];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!A.entries[maxIndex][pivotCol].equals(CNumber.ZERO)) { // Check that the maximum absolute value is not zero.\r\n\t\t\t\tif(pivotRow != maxIndex) {\r\n\t\t\t\t\tA = A.swapRows(pivotRow, maxIndex); // Make the row with the largest value in the pivot column the pivot for this row.\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);\r\n\t\t\t\t \r\n\t\t\t\tfor(int k=pivotCol; k<A.n; k++) { // scale the whole row so that the pivot is 1\r\n\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\t\t\tmult = A.entries[i][pivotCol];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(pivotRow != i) {\r\n\t\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(int k=pivotCol+1; k<A.n; k++) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tCNumber value = CNumber.subtract(A.entries[i][k], \r\n\t\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], mult));\r\n\t\t\t\t\t\t\tA.entries[i][k] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tpivotRow++;\r\n\t\t\t\tpivotCol++;\r\n\t\t\t}\r\n\t\t\telse { // Then we do not have a pivot for this column (i.e. the column is all zeros).\r\n\t\t\t\tpivotCol++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. \r\n\t * This is done WITHOUT using partial pivoting.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in reduced row-echelon form if:<br>\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * Also see <code>{@link #ref() ref()}</code> for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\tdefault Matrix rrefNoPivot() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\tCNumber m, scale;\r\n\t\t\r\n\t\tint pivotRow = 0,\r\n\t\t\tpivotCol = 0;\r\n\t\t\r\n\t\twhile(pivotRow<A.m && pivotCol<A.n) {\r\n\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) {\r\n\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);\r\n\t\t\t\t \r\n\t\t\t\tfor(int k=pivotCol; k<A.n; k++) { // scale the whole row\r\n\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); \r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\t\tm = A.entries[i][pivotCol];\r\n\t\t\t\t\r\n\t\t\t\tif(pivotRow != i) {\r\n\t\t\t\t\tfor(int k=pivotCol; k<A.n; k++) {\r\n\t\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], \r\n\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpivotRow++;\r\n\t\t\tpivotCol++;\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced extended row-echelon form of matrix. That is, a Matrix with\r\n\t * the same number of rows is {@link #augment(Matrix) augmented} with this matrix and\r\n\t * then this augmented matrix is put into {@link #rref() reduced row-echelon form}.\r\n\t * \r\n\t * @return Returns extended row-echelon form of this matrix.\r\n\t */\r\n\t default Matrix erref() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix I = Matrix.I(A.m);\r\n\t\tMatrix Aug = A.augment(I);\r\n\t\t\r\n\t\treturn Aug.rref();\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Computes the trace of square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #tr() tr()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber trace() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!A.isSquare()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Expecting matrix to be square but got \" + A.shape);\r\n\t\t}\r\n\t\t\r\n\t\tCNumber result = A.entries[0][0];\r\n\t\t\r\n\t\tfor(int i = 1; i < A.n; i++) {\r\n\t\t\tresult = CNumber.add(result, A.entries[i][i]);\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t} \r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the trace of a square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #trace() trace()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber tr() {\r\n\t\treturn this.trace();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space generated (or spanned) by its columns.\r\n\t * This is always an integer.\r\n\t * This corresponds to the maximal number of linearly independent columns of A. \r\n\t * This, in turn, is identical to the dimension of the vector space spanned by its rows\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t// TODO: Should be switched to rank revealing QR decomposition as it is more numerically stable.\r\n\t default int rank() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix rrefA = A.rref();\r\n\t\tint rank = A.m;\r\n\t\t\r\n\t\tfor(int i=rrefA.m-1; i>=0; i--) {\r\n\t\t\tif(rrefA.getRowAsVector(i).isZero()) {\r\n\t\t\t\trank--;\t\t\t\r\n\t\t\t} else { \r\n\t\t\t\t// Then we have no more zero rows as rrefA is in reduced row echelon form.\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn rank;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space spanned by the nullspace of this matrix.\r\n\t * The nullify is always an integer.\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t default int nullity() {\r\n\t\tint rank = this.rank();\r\n\t\treturn ((Matrix) this).m - rank;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A<sup>-1</sup> satisfying AA<sup>-1</sup>=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inverse() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!A.isSingular()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Matrix is singular.\");\r\n\t\t}\r\n\r\n\t\tMatrix[] QR = Decompose.QR(A); // Compute the QR decomposition of A. This will be used to compute the inverse.\r\n\t\tCNumber detR = CNumber.ONE;\r\n\t\t\r\n\t\tfor(int i = 0; i<QR[1].n; i++) { // Computing the determinant of R\r\n\t\t\tdetR = CNumber.multiply(detR, QR[1].entries[i][i]);\r\n\t\t}\r\n\t\t\r\n\t\tif(CNumber.round(detR, 10).re == 0) {\r\n\t\t\t/* Then we know the matrix is singular.\r\n\t\t\t * We know this by exploiting properties of the orthogonal matrix Q and the upper triangular matrix R.\r\n\t\t\t * The determinant of an orthogonal matrix is either -1 or 1. The determinant of an upper triangular matrix R is the product\r\n\t\t\t * of the diagonals. Since A=QR det(A) = det(QR) = det(Q)*det(R). So if the determinant of R is zero, then the matrix A must be singular.\r\n\t\t\t * \r\n\t\t\t * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that, \r\n\t\t\t * so it would be redundant to call the isSingular() method and recompute the QR decomposition again.\r\n\t\t\t */\r\n\t\t\tthrow new IllegalArgumentException(\"Matrix is singular, thus can not be inverted.\");\r\n\t\t}\r\n\t\t\r\n\t\t// Here we compute and return A^-1 = (R^-1)*(Q^-1)\r\n\t\treturn inverseTriU(QR[1]).mult(QR[0].H());\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A<sup>-1</sup> satisfying AA<sup>-1</sup>=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inv() {\r\n\t\treturn this.inverse();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Helper method to invert an upper triangular matrix. <br>\r\n\t * We can compute the inverse of an n-by-n upper triangular matrix U by solving the n systems...<br><br>\r\n\t * \r\n\t * Ux=I<sub>i</sub><br>\r\n\t * \r\n\t * where 1<=i<=n, I is the n-by-n identity matrix, I<sub>i</sub> is the ith column of I.<br><br>\r\n\t * \r\n\t * Each solution becomes a column in the inverse <sup>-1</sub>.\r\n\t * Because U is upper triangular, we can solve these n systems using backsolve.\r\n\t * \r\n\t * @param U - U is a square upper triangular matrix\r\n\t * @return Returns the inverse of U, denoted U<sup>-1</sub>\r\n\t */\r\n\tstatic Matrix inverseTriU(Matrix U) {\r\n\t\tMatrix Uinv = new Matrix(U.m, U.m);\r\n\t\tMatrix I = Matrix.I(U.m);\r\n\t\t\r\n\t\tif(!U.isTriU()) {\r\n\t\t\tthrow new IllegalArgumentException(\"U must be upper triangular.\");\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i=0; i<U.m; i++)  {\r\n\t\t\t// U is upper triangular, so to solve the system we simply need to use backsolve function.\r\n\t\t\tUinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i); \r\n\t\t}\r\n\t\t\r\n\t\treturn Uinv;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new matrix that contains the reciprocals of this matrix\r\n\t * \r\n\t * @return new matrix that contains the reciprocals of this matrix\r\n\t */\r\n\t default Matrix recep() {\r\n\t\tMatrix A = new Matrix((Matrix) this).copy();\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tA.entries[i][j] = CNumber.inv(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t static void main(String[] args) {\r\n\r\n\t\t\r\n\t\tint[][] b = {{1, 3, 3},\r\n\t\t\t\t \t {0, 5, 6},\r\n\t\t\t\t \t {0, 8, 9}};\r\n\t\t\r\n\t\tdouble[][] c = {{ -19.1635403109,        5,               8,               7\t\t},\r\n\t\t\t\t  \t\t{       5,         -19.1635403109,        2,               8\t\t},\r\n\t\t\t\t\t\t{       7,               5,         -15.1635403109,        6\t\t},\r\n\t\t\t\t\t\t{       5,               4,               4,         -13.1635403109 }};\r\n\t\t\r\n\t\tCNumber[][] bc = {{new CNumber(\"2+i\"), new CNumber(\"3\")},\r\n\t\t\t\t  \t\t  {new CNumber(\"1\"), new CNumber(\"-i\")}};\r\n\r\n\t\tMatrix A = new Matrix(bc);\r\n\t\tMatrix B = new Matrix(b);\r\n\t\tMatrix C = new Matrix(c);\r\n\t\t\r\n\t\tMatrix.print(\"C:\\n\", B.sqrt(), \"\\n\\n\");\r\n\t\tMatrix.print(\"C:\\n\", B, \"\\n\\n\");\r\n\r\n\t\tMatrix.print(\"rref:\\n\", A.directSum(B, C), \"\\n\\n\");\r\n\t}\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/linalg/MatrixOperations.java b/src/main/java/linalg/MatrixOperations.java
--- a/src/main/java/linalg/MatrixOperations.java	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/src/main/java/linalg/MatrixOperations.java	(date 1648105698813)
@@ -988,28 +988,16 @@
 	
 	
 	 static void main(String[] args) {
+		 Matrix A = Matrix.random("1000x1000", -1000, 1000, false);
+		 Matrix B = Matrix.random("1000x1000", -1000, 1000, false);
 
-		
-		int[][] b = {{1, 3, 3},
-				 	 {0, 5, 6},
-				 	 {0, 8, 9}};
-		
-		double[][] c = {{ -19.1635403109,        5,               8,               7		},
-				  		{       5,         -19.1635403109,        2,               8		},
-						{       7,               5,         -15.1635403109,        6		},
-						{       5,               4,               4,         -13.1635403109 }};
-		
-		CNumber[][] bc = {{new CNumber("2+i"), new CNumber("3")},
-				  		  {new CNumber("1"), new CNumber("-i")}};
+		 long s1=System.currentTimeMillis();
+		 A.mult(B);
+		 long e1=System.currentTimeMillis();
 
-		Matrix A = new Matrix(bc);
-		Matrix B = new Matrix(b);
-		Matrix C = new Matrix(c);
-		
-		Matrix.print("C:\n", B.sqrt(), "\n\n");
-		Matrix.print("C:\n", B, "\n\n");
+		 long t = e1-s1;
 
-		Matrix.print("rref:\n", A.directSum(B, C), "\n\n");
+		 System.out.println("Time: " + t + " ms");
 	}
 }
 
Index: target/site/jacoco/jacoco.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><!DOCTYPE report PUBLIC \"-//JACOCO//DTD Report 1.1//EN\" \"report.dtd\"><report name=\"Java-Linear-Algebra\"><sessioninfo id=\"DESKTOP-3F0SSFQ-fe00496a\" start=\"1632785396729\" dump=\"1632785398884\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-9cdf880c\" start=\"1632787027066\" dump=\"1632787028389\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-33e4a7ad\" start=\"1632787824685\" dump=\"1632787826107\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-d759012b\" start=\"1632787898313\" dump=\"1632787899650\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-653be16e\" start=\"1632788590487\" dump=\"1632788591452\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-e4543b44\" start=\"1632788616892\" dump=\"1632788617864\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-4d4af810\" start=\"1632788635046\" dump=\"1632788635903\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-ca0ff9dc\" start=\"1632789177899\" dump=\"1632789179094\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-2b03aa12\" start=\"1632789197815\" dump=\"1632789198970\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-92377961\" start=\"1632789713743\" dump=\"1632789715200\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-f67dcf9d\" start=\"1632791223035\" dump=\"1632791223756\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-3deffdcc\" start=\"1632791225995\" dump=\"1632791227517\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-8370ba74\" start=\"1632791234697\" dump=\"1632791236818\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-e80853d4\" start=\"1632791240963\" dump=\"1632791242073\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-9ee31791\" start=\"1632791253485\" dump=\"1632791254576\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-58a45499\" start=\"1632791643884\" dump=\"1632791645145\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-6b36a7ae\" start=\"1632791710919\" dump=\"1632791711976\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cd238e7f\" start=\"1632792212364\" dump=\"1632792213589\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-32a355ac\" start=\"1632792226532\" dump=\"1632792227738\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cf2ae673\" start=\"1632792263916\" dump=\"1632792265083\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-d8ae4a1d\" start=\"1632792284518\" dump=\"1632792285894\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-590642cc\" start=\"1632792572203\" dump=\"1632792573348\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-c18502e8\" start=\"1632792970189\" dump=\"1632792971270\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-bb68ec51\" start=\"1632793008312\" dump=\"1632793009524\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-dc7eaf97\" start=\"1632794014578\" dump=\"1632794015732\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-4fd69810\" start=\"1632794041217\" dump=\"1632794042229\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-96825214\" start=\"1632794338912\" dump=\"1632794340518\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-89a0fc42\" start=\"1632794376493\" dump=\"1632794377631\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cab82cf0\" start=\"1632794402490\" dump=\"1632794403864\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-c139591e\" start=\"1632796470111\" dump=\"1632796470839\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-82b8fd28\" start=\"1632796538375\" dump=\"1632796539119\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-3bdff75d\" start=\"1632796570427\" dump=\"1632796571185\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cdb98687\" start=\"1632796751134\" dump=\"1632796751986\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-e6b68394\" start=\"1632796813525\" dump=\"1632796814279\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-9c517ae6\" start=\"1632796822743\" dump=\"1632796823495\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-7849bf85\" start=\"1632805631900\" dump=\"1632805632787\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-8af91b33\" start=\"1634341976579\" dump=\"1634341977263\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-3c496517\" start=\"1634341993197\" dump=\"1634341994053\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-a1df1e07\" start=\"1634342019237\" dump=\"1634342019963\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-aff8a924\" start=\"1634342037885\" dump=\"1634342038662\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-f94da3ae\" start=\"1634342585320\" dump=\"1634342586098\"/><sessioninfo id=\"Jacobs-MacBook-Pro.local-f3f79794\" start=\"1634836555186\" dump=\"1634836564541\"/><package name=\"linalg/complex_number\"><class name=\"linalg/complex_number/CNumber\" sourcefilename=\"CNumber.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"66\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(D)V\" line=\"71\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(DD)V\" line=\"77\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"83\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"16\"/><counter type=\"LINE\" missed=\"0\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/complex_number/CNumber;)V\" line=\"91\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"11\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"randn\" desc=\"(Z)Llinalg/complex_number/CNumber;\" line=\"106\"><counter type=\"INSTRUCTION\" missed=\"19\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randn\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"125\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"135\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"148\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(DD[Z)Llinalg/complex_number/CNumber;\" line=\"182\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"conjugate\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"213\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"225\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;[Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"239\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"subtract\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"259\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"multiply\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"271\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"divide\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"283\"><counter type=\"INSTRUCTION\" missed=\"74\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"abs\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"310\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"324\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"addInv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"338\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"pow\" desc=\"(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;\" line=\"356\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"pow\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"388\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"exp\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"409\"><counter type=\"INSTRUCTION\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"exp\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"420\"><counter type=\"INSTRUCTION\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sqrt\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"436\"><counter type=\"INSTRUCTION\" missed=\"62\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"13\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"allSqrt\" desc=\"(Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"469\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sign\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"484\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"equals\" desc=\"(Ljava/lang/Object;)Z\" line=\"499\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"24\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"6\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"equals\" desc=\"(D)Z\" line=\"522\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"round\" desc=\"(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;\" line=\"543\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"24\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"1\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"nearZero\" desc=\"(D)Z\" line=\"565\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"compareTo\" desc=\"(Llinalg/complex_number/CNumber;)I\" line=\"579\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"compareToReal\" desc=\"(Llinalg/complex_number/CNumber;)I\" line=\"595\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"compareToReal\" desc=\"(D)I\" line=\"611\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"mag\" desc=\"()D\" line=\"624\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"max\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"639\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"min\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"662\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getReal\" desc=\"()D\" line=\"678\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getImaginary\" desc=\"()D\" line=\"686\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isReal\" desc=\"()Z\" line=\"696\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isComplex\" desc=\"()Z\" line=\"706\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isImaginary\" desc=\"()Z\" line=\"716\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isInt\" desc=\"()Z\" line=\"726\"><counter type=\"INSTRUCTION\" missed=\"21\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"doubleValue\" desc=\"()D\" line=\"743\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"floatValue\" desc=\"()F\" line=\"753\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"intValue\" desc=\"()I\" line=\"763\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"longValue\" desc=\"()J\" line=\"773\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"doubleImaginaryValue\" desc=\"()D\" line=\"781\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"floatImaginaryValue\" desc=\"()F\" line=\"791\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"intImaginaryValue\" desc=\"()I\" line=\"800\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"longImaginaryValue\" desc=\"()J\" line=\"810\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"length\" desc=\"(Llinalg/complex_number/CNumber;)I\" line=\"819\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"4\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"824\"><counter type=\"INSTRUCTION\" missed=\"69\" covered=\"28\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"4\"/><counter type=\"LINE\" missed=\"15\" covered=\"7\"/><counter type=\"COMPLEXITY\" missed=\"11\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"17\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"46\"/><counter type=\"LINE\" missed=\"0\" covered=\"9\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"819\" covered=\"180\"/><counter type=\"BRANCH\" missed=\"102\" covered=\"8\"/><counter type=\"LINE\" missed=\"141\" covered=\"47\"/><counter type=\"COMPLEXITY\" missed=\"98\" covered=\"10\"/><counter type=\"METHOD\" missed=\"43\" covered=\"10\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><sourcefile name=\"CNumber.java\"><line nr=\"17\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"93\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"110\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"148\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"149\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"154\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"156\" mi=\"39\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"161\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"183\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"187\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"191\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"192\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"193\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"197\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"213\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"225\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"239\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"240\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"243\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"244\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"247\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"271\" mi=\"26\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"283\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"285\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"286\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"287\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"288\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"290\" mi=\"50\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"296\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"310\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"324\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"338\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"356\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"357\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"358\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"359\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"361\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"362\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"365\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"367\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"368\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"371\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"374\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"388\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"390\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"391\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"392\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"393\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"395\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"398\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"409\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"420\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"436\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"437\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"438\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"440\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"443\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"445\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"446\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"447\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"448\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"449\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"452\" mi=\"7\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"453\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"457\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"469\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"470\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"471\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"472\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"484\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"485\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"487\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"499\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"501\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"502\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"504\" mi=\"0\" ci=\"12\" mb=\"2\" cb=\"2\"/><line nr=\"505\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"509\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"522\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"524\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"525\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"528\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"543\" mi=\"0\" ci=\"2\" mb=\"1\" cb=\"1\"/><line nr=\"544\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"548\" mi=\"0\" ci=\"8\" mb=\"0\" cb=\"0\"/><line nr=\"549\" mi=\"0\" ci=\"8\" mb=\"0\" cb=\"0\"/><line nr=\"551\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"565\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"579\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"580\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"581\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"595\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"596\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"597\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"611\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"624\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"639\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"641\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"642\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"643\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"647\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"662\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"664\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"665\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"666\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"670\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"678\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"686\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"696\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"706\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"716\" mi=\"14\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"726\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"728\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"729\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"730\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"732\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"735\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"743\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"753\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"763\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"773\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"781\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"791\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"800\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"810\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"819\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"824\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"826\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"828\" mi=\"0\" ci=\"4\" mb=\"1\" cb=\"1\"/><line nr=\"829\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"830\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"832\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"836\" mi=\"0\" ci=\"4\" mb=\"1\" cb=\"1\"/><line nr=\"837\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"838\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"839\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"840\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"841\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"844\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"845\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"846\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"847\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"849\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"853\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"856\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"859\" mi=\"0\" ci=\"8\" mb=\"2\" cb=\"2\"/><line nr=\"860\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"863\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"819\" covered=\"180\"/><counter type=\"BRANCH\" missed=\"102\" covered=\"8\"/><counter type=\"LINE\" missed=\"141\" covered=\"47\"/><counter type=\"COMPLEXITY\" missed=\"98\" covered=\"10\"/><counter type=\"METHOD\" missed=\"43\" covered=\"10\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"819\" covered=\"180\"/><counter type=\"BRANCH\" missed=\"102\" covered=\"8\"/><counter type=\"LINE\" missed=\"141\" covered=\"47\"/><counter type=\"COMPLEXITY\" missed=\"98\" covered=\"10\"/><counter type=\"METHOD\" missed=\"43\" covered=\"10\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></package><package name=\"linalg/util\"><class name=\"linalg/util/StringUtils\" sourcefilename=\"StringUtils.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"4\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"center\" desc=\"(Ljava/lang/String;I)Ljava/lang/String;\" line=\"9\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"5\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"center\" desc=\"(Ljava/lang/String;IC)Ljava/lang/String;\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"2\" covered=\"43\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"1\" covered=\"8\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"48\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"3\" covered=\"9\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"4\"/><counter type=\"METHOD\" missed=\"1\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/MathUtil\" sourcefilename=\"MathUtil.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"5\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"fact\" desc=\"(I)J\" line=\"7\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"lambda$fact$0\" desc=\"(JJ)J\" line=\"8\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/util/Token\" sourcefilename=\"Token.java\"><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;Ljava/lang/String;)V\" line=\"8\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"isKind\" desc=\"(Ljava/lang/String;)Z\" line=\"20\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"5\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getKind\" desc=\"()Ljava/lang/String;\" line=\"27\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getDetails\" desc=\"()Ljava/lang/String;\" line=\"33\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"matches\" desc=\"(Ljava/lang/String;Ljava/lang/String;)Z\" line=\"44\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"14\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"2\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"errorCheck\" desc=\"(Ljava/lang/String;Ljava/lang/String;)V\" line=\"55\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"6\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"2\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"errorCheck\" desc=\"(Ljava/lang/String;)V\" line=\"68\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"6\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"2\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"76\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"43\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"5\"/><counter type=\"LINE\" missed=\"6\" covered=\"10\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/ShapeLexer\" sourcefilename=\"ShapeLexer.java\"><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"10\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getContent\" desc=\"()Ljava/lang/String;\" line=\"18\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getNextToken\" desc=\"()Llinalg/util/Token;\" line=\"29\"><counter type=\"INSTRUCTION\" missed=\"120\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"33\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"16\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"129\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"37\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/util/LinAlgArrayUtils\" sourcefilename=\"LinAlgArrayUtils.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IIDD[Z)[[Llinalg/complex_number/CNumber;\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(II)[[Llinalg/complex_number/CNumber;\" line=\"40\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IID)[[Llinalg/complex_number/CNumber;\" line=\"45\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomComplex\" desc=\"(II)[[Llinalg/complex_number/CNumber;\" line=\"58\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randn\" desc=\"(IIZ)[[Llinalg/complex_number/CNumber;\" line=\"71\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"printArr\" desc=\"([[Llinalg/complex_number/CNumber;)V\" line=\"84\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"printArr\" desc=\"([Llinalg/complex_number/CNumber;)V\" line=\"94\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getDims\" desc=\"([[Llinalg/complex_number/CNumber;)Ljava/lang/String;\" line=\"101\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(II)[[Llinalg/complex_number/CNumber;\" line=\"106\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"29\"/><counter type=\"BRANCH\" missed=\"0\" covered=\"4\"/><counter type=\"LINE\" missed=\"0\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"abs\" desc=\"([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"119\"><counter type=\"INSTRUCTION\" missed=\"17\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"flatten\" desc=\"([[Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"128\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getSection\" desc=\"([[Llinalg/complex_number/CNumber;IIII)[[Llinalg/complex_number/CNumber;\" line=\"144\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"contains\" desc=\"([II)Z\" line=\"157\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend2D\" desc=\"([Llinalg/complex_number/CNumber;I)[[Llinalg/complex_number/CNumber;\" line=\"189\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend2D\" desc=\"([DI)[[Llinalg/complex_number/CNumber;\" line=\"226\"><counter type=\"INSTRUCTION\" missed=\"63\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend2D\" desc=\"([II)[[Llinalg/complex_number/CNumber;\" line=\"265\"><counter type=\"INSTRUCTION\" missed=\"65\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"291\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"group\" desc=\"([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"304\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"573\" covered=\"29\"/><counter type=\"BRANCH\" missed=\"68\" covered=\"4\"/><counter type=\"LINE\" missed=\"97\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"52\" covered=\"3\"/><counter type=\"METHOD\" missed=\"18\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/NumberLexer\" sourcefilename=\"NumberLexer.java\"><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"25\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getNextToken\" desc=\"()Llinalg/util/Token;\" line=\"38\"><counter type=\"INSTRUCTION\" missed=\"113\" covered=\"136\"/><counter type=\"BRANCH\" missed=\"31\" covered=\"29\"/><counter type=\"LINE\" missed=\"29\" covered=\"36\"/><counter type=\"COMPLEXITY\" missed=\"22\" covered=\"9\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"151\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"133\" covered=\"142\"/><counter type=\"BRANCH\" missed=\"33\" covered=\"29\"/><counter type=\"LINE\" missed=\"34\" covered=\"39\"/><counter type=\"COMPLEXITY\" missed=\"24\" covered=\"10\"/><counter type=\"METHOD\" missed=\"1\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/ExampleMatrices\" sourcefilename=\"ExampleMatrices.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"27\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"31\"><counter type=\"INSTRUCTION\" missed=\"893\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"900\" covered=\"0\"/><counter type=\"LINE\" missed=\"19\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/util/Parser\" sourcefilename=\"Parser.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"7\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"parseShape\" desc=\"(Ljava/lang/String;)[I\" line=\"16\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"parseNumber\" desc=\"(Ljava/lang/String;)[D\" line=\"46\"><counter type=\"INSTRUCTION\" missed=\"85\" covered=\"90\"/><counter type=\"BRANCH\" missed=\"11\" covered=\"7\"/><counter type=\"LINE\" missed=\"17\" covered=\"23\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"2\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"128\" covered=\"90\"/><counter type=\"BRANCH\" missed=\"11\" covered=\"7\"/><counter type=\"LINE\" missed=\"29\" covered=\"23\"/><counter type=\"COMPLEXITY\" missed=\"10\" covered=\"2\"/><counter type=\"METHOD\" missed=\"2\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/Lexer\" sourcefilename=\"Lexer.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"6\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getContent\" desc=\"()Ljava/lang/String;\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"digit\" desc=\"(I)Z\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"10\"/><counter type=\"BRANCH\" missed=\"0\" covered=\"4\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getNextSymbol\" desc=\"()I\" line=\"32\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"22\"/><counter type=\"BRANCH\" missed=\"0\" covered=\"2\"/><counter type=\"LINE\" missed=\"0\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"2\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"putBackSymbol\" desc=\"(I)V\" line=\"52\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"11\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"1\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"error\" desc=\"(Ljava/lang/String;)V\" line=\"68\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"49\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"7\"/><counter type=\"LINE\" missed=\"5\" covered=\"11\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"4\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/FileManager\" sourcefilename=\"FileManager.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"readcsv\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"33\"><counter type=\"INSTRUCTION\" missed=\"118\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"27\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"write2csv\" desc=\"(Llinalg/Matrix;Ljava/lang/String;)V\" line=\"85\"><counter type=\"INSTRUCTION\" missed=\"68\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"15\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"113\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"247\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"49\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><sourcefile name=\"FileManager.java\"><line nr=\"21\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"34\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"47\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"65\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"68\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"92\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"93\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"95\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"96\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"37\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"118\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"247\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"49\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Parser.java\"><line nr=\"7\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"2\"/><line nr=\"57\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"65\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"69\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"76\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"4\" ci=\"4\" mb=\"3\" cb=\"1\"/><line nr=\"86\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"93\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"100\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"110\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"112\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"116\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"128\" covered=\"90\"/><counter type=\"BRANCH\" missed=\"11\" covered=\"7\"/><counter type=\"LINE\" missed=\"29\" covered=\"23\"/><counter type=\"COMPLEXITY\" missed=\"10\" covered=\"2\"/><counter type=\"METHOD\" missed=\"2\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"ShapeLexer.java\"><line nr=\"10\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"11\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"12\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"39\" mi=\"12\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"41\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"44\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"6\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"48\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"61\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"73\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"74\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"77\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"80\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"129\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"37\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"NumberLexer.java\"><line nr=\"25\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"48\" mi=\"0\" ci=\"12\" mb=\"4\" cb=\"4\"/><line nr=\"50\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"57\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"2\"/><line nr=\"62\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"66\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"71\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"80\" mi=\"12\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"82\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"95\" mi=\"0\" ci=\"4\" mb=\"1\" cb=\"1\"/><line nr=\"96\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"100\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"109\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"110\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"118\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"119\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"128\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"2\"/><line nr=\"130\" mi=\"0\" ci=\"6\" mb=\"1\" cb=\"3\"/><line nr=\"131\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"0\" ci=\"6\" mb=\"1\" cb=\"3\"/><line nr=\"134\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"136\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"137\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"140\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"144\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"154\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"158\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"133\" covered=\"142\"/><counter type=\"BRANCH\" missed=\"33\" covered=\"29\"/><counter type=\"LINE\" missed=\"34\" covered=\"39\"/><counter type=\"COMPLEXITY\" missed=\"24\" covered=\"10\"/><counter type=\"METHOD\" missed=\"1\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"ExampleMatrices.java\"><line nr=\"27\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"372\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"136\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"78\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"88\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"118\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"900\" covered=\"0\"/><counter type=\"LINE\" missed=\"19\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MathUtil.java\"><line nr=\"5\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"7\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"8\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"StringUtils.java\"><line nr=\"4\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"5\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"13\" mi=\"0\" ci=\"6\" mb=\"2\" cb=\"2\"/><line nr=\"14\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"17\" mi=\"0\" ci=\"12\" mb=\"0\" cb=\"2\"/><line nr=\"18\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"2\"/><line nr=\"22\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"48\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"3\" covered=\"9\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"4\"/><counter type=\"METHOD\" missed=\"1\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"LinAlgArrayUtils.java\"><line nr=\"13\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"25\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"30\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"31\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"48\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"49\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"61\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"74\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"75\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"85\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"109\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"110\" mi=\"0\" ci=\"9\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"120\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"128\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"133\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"134\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"144\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"146\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"147\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"148\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"159\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"160\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"161\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"190\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"193\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"194\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"196\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"197\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"226\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"227\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"229\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"230\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"232\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"233\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"235\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"236\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"239\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"265\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"266\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"268\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"269\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"271\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"272\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"274\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"275\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"281\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"291\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"293\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"294\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"304\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"306\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"307\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"308\" mi=\"12\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"309\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"310\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"311\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"573\" covered=\"29\"/><counter type=\"BRANCH\" missed=\"68\" covered=\"4\"/><counter type=\"LINE\" missed=\"97\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"52\" covered=\"3\"/><counter type=\"METHOD\" missed=\"18\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"Token.java\"><line nr=\"8\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"10\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"0\" ci=\"14\" mb=\"1\" cb=\"3\"/><line nr=\"55\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"56\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"69\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"43\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"5\"/><counter type=\"LINE\" missed=\"6\" covered=\"10\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"Lexer.java\"><line nr=\"6\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"7\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"13\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"0\" ci=\"10\" mb=\"0\" cb=\"4\"/><line nr=\"32\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"2\"/><line nr=\"35\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"0\" ci=\"9\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"53\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"49\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"7\"/><counter type=\"LINE\" missed=\"5\" covered=\"11\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"4\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"2171\" covered=\"401\"/><counter type=\"BRANCH\" missed=\"164\" covered=\"58\"/><counter type=\"LINE\" missed=\"282\" covered=\"97\"/><counter type=\"COMPLEXITY\" missed=\"132\" covered=\"33\"/><counter type=\"METHOD\" missed=\"38\" covered=\"16\"/><counter type=\"CLASS\" missed=\"4\" covered=\"6\"/></package><package name=\"linalg\"><class name=\"linalg/QRDecomposition\" sourcefilename=\"QRDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"15\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"execute\" desc=\"(Llinalg/Matrix;I)[Llinalg/Matrix;\" line=\"20\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QR\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"33\"><counter type=\"INSTRUCTION\" missed=\"174\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"29\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QRtemp\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"94\"><counter type=\"INSTRUCTION\" missed=\"237\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"31\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"158\"><counter type=\"INSTRUCTION\" missed=\"622\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"1049\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"79\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"14\" covered=\"0\"/><counter type=\"METHOD\" missed=\"5\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/SchurDecomposition\" sourcefilename=\"SchurDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"8\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schurDecomp\" desc=\"(Llinalg/Matrix;ZZ)Llinalg/Matrix;\" line=\"14\"><counter type=\"INSTRUCTION\" missed=\"321\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"47\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"328\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"49\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixOperations\" sourcefilename=\"MatrixOperations.java\"><method name=\"add\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"19\"><counter type=\"INSTRUCTION\" missed=\"77\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(D)Llinalg/Matrix;\" line=\"40\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sub\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"62\"><counter type=\"INSTRUCTION\" missed=\"77\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sub\" desc=\"(D)Llinalg/Matrix;\" line=\"83\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"mult\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"98\"><counter type=\"INSTRUCTION\" missed=\"132\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"elemMult\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"128\"><counter type=\"INSTRUCTION\" missed=\"109\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalMult\" desc=\"(D)Llinalg/Matrix;\" line=\"151\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalMult\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"162\"><counter type=\"INSTRUCTION\" missed=\"43\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"elemDiv\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"182\"><counter type=\"INSTRUCTION\" missed=\"173\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(D)Llinalg/Matrix;\" line=\"207\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"219\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"fip\" desc=\"(Llinalg/Matrix;)Llinalg/complex_number/CNumber;\" line=\"231\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"directSum\" desc=\"([Llinalg/Matrix;)Llinalg/Matrix;\" line=\"242\"><counter type=\"INSTRUCTION\" missed=\"91\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sqrt\" desc=\"()Llinalg/Matrix;\" line=\"277\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"abs\" desc=\"()Llinalg/Matrix;\" line=\"297\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"transpose\" desc=\"()Llinalg/Matrix;\" line=\"316\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"T\" desc=\"()Llinalg/Matrix;\" line=\"327\"><counter type=\"INSTRUCTION\" missed=\"69\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"conjugate\" desc=\"()Llinalg/Matrix;\" line=\"354\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"conjT\" desc=\"()Llinalg/Matrix;\" line=\"375\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"hermAdjoint\" desc=\"()Llinalg/Matrix;\" line=\"387\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"H\" desc=\"()Llinalg/Matrix;\" line=\"399\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"detRec\" desc=\"(Llinalg/Matrix;)Llinalg/complex_number/CNumber;\" line=\"411\"><counter type=\"INSTRUCTION\" missed=\"102\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"detQR\" desc=\"(Llinalg/Matrix;)Llinalg/complex_number/CNumber;\" line=\"446\"><counter type=\"INSTRUCTION\" missed=\"46\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"det\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"467\"><counter type=\"INSTRUCTION\" missed=\"60\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"stack\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"494\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"stack\" desc=\"(Llinalg/Matrix;I)Llinalg/Matrix;\" line=\"510\"><counter type=\"INSTRUCTION\" missed=\"210\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"22\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"11\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"augment\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"564\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ref\" desc=\"()Llinalg/Matrix;\" line=\"587\"><counter type=\"INSTRUCTION\" missed=\"114\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rref\" desc=\"(Z)Llinalg/Matrix;\" line=\"652\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rref\" desc=\"()Llinalg/Matrix;\" line=\"678\"><counter type=\"INSTRUCTION\" missed=\"181\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"22\" covered=\"0\"/><counter type=\"LINE\" missed=\"30\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rrefNoPivot\" desc=\"()Llinalg/Matrix;\" line=\"766\"><counter type=\"INSTRUCTION\" missed=\"108\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"erref\" desc=\"()Llinalg/Matrix;\" line=\"808\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"trace\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"825\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"tr\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"850\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rank\" desc=\"()I\" line=\"864\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"nullity\" desc=\"()I\" line=\"888\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inverse\" desc=\"()Llinalg/Matrix;\" line=\"900\"><counter type=\"INSTRUCTION\" missed=\"59\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inv\" desc=\"()Llinalg/Matrix;\" line=\"937\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inverseTriU\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"956\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"recep\" desc=\"()Llinalg/Matrix;\" line=\"978\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"993\"><counter type=\"INSTRUCTION\" missed=\"255\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"2309\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"172\" covered=\"0\"/><counter type=\"LINE\" missed=\"284\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"127\" covered=\"0\"/><counter type=\"METHOD\" missed=\"41\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixManipulations\" sourcefilename=\"MatrixManipulations.java\"><method name=\"reshape\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"18\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"reshape\" desc=\"(II)Llinalg/Matrix;\" line=\"27\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"flatten\" desc=\"()Llinalg/Matrix;\" line=\"56\"><counter type=\"INSTRUCTION\" missed=\"48\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"flatten\" desc=\"(I)Llinalg/Matrix;\" line=\"82\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"14\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend\" desc=\"(I)Llinalg/Matrix;\" line=\"121\"><counter type=\"INSTRUCTION\" missed=\"70\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setValues\" desc=\"([[Llinalg/complex_number/CNumber;)V\" line=\"156\"><counter type=\"INSTRUCTION\" missed=\"36\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setValues\" desc=\"([[D)V\" line=\"174\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"set\" desc=\"(Llinalg/complex_number/CNumber;II)V\" line=\"198\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"set\" desc=\"(DII)V\" line=\"213\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setCol\" desc=\"(Llinalg/Vector;I)V\" line=\"232\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setCol\" desc=\"([Llinalg/complex_number/CNumber;I)V\" line=\"259\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setCol\" desc=\"([DI)V\" line=\"282\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setRow\" desc=\"(Llinalg/Vector;I)V\" line=\"307\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setRow\" desc=\"([Llinalg/complex_number/CNumber;I)V\" line=\"334\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setRow\" desc=\"([DI)V\" line=\"358\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setSliceCopy\" desc=\"(IILlinalg/Matrix;)Llinalg/Matrix;\" line=\"382\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setSlice\" desc=\"(IILlinalg/Matrix;)V\" line=\"412\"><counter type=\"INSTRUCTION\" missed=\"65\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeRow\" desc=\"(I)Llinalg/Matrix;\" line=\"437\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeRows\" desc=\"([I)Llinalg/Matrix;\" line=\"452\"><counter type=\"INSTRUCTION\" missed=\"51\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeCol\" desc=\"(I)Llinalg/Matrix;\" line=\"480\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeCols\" desc=\"([I)Llinalg/Matrix;\" line=\"495\"><counter type=\"INSTRUCTION\" missed=\"51\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"tril\" desc=\"()Llinalg/Matrix;\" line=\"522\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"tril\" desc=\"(I)Llinalg/Matrix;\" line=\"538\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"triu\" desc=\"()Llinalg/Matrix;\" line=\"560\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"triu\" desc=\"(I)Llinalg/Matrix;\" line=\"576\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"diag\" desc=\"()Llinalg/Matrix;\" line=\"600\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toDiag\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"610\"><counter type=\"INSTRUCTION\" missed=\"25\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"diagAsVector\" desc=\"()Llinalg/Vector;\" line=\"626\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"hessu\" desc=\"()Llinalg/Matrix;\" line=\"645\"><counter type=\"INSTRUCTION\" missed=\"258\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"23\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"hessuV\" desc=\"()[Llinalg/Matrix;\" line=\"694\"><counter type=\"INSTRUCTION\" missed=\"246\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"25\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"swapRows\" desc=\"(II)Llinalg/Matrix;\" line=\"745\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"swapCols\" desc=\"(II)Llinalg/Matrix;\" line=\"766\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"multRow\" desc=\"(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"788\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"multRow\" desc=\"(ID)Llinalg/Matrix;\" line=\"806\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"divRow\" desc=\"(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"817\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"divRow\" desc=\"(ID)Llinalg/Matrix;\" line=\"828\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toVector\" desc=\"()Llinalg/Vector;\" line=\"841\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"round\" desc=\"(I)Llinalg/Matrix;\" line=\"875\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"roundToZero\" desc=\"(I)V\" line=\"893\"><counter type=\"INSTRUCTION\" missed=\"46\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"908\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"1856\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"146\" covered=\"0\"/><counter type=\"LINE\" missed=\"268\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"113\" covered=\"0\"/><counter type=\"METHOD\" missed=\"40\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/LUDecomposition\" sourcefilename=\"LUDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"17\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"execute\" desc=\"(Llinalg/Matrix;I)[Llinalg/Matrix;\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LU\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"53\"><counter type=\"INSTRUCTION\" missed=\"93\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"13\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUPartialPivot\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"85\"><counter type=\"INSTRUCTION\" missed=\"121\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"20\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUFullPivot\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"122\"><counter type=\"INSTRUCTION\" missed=\"152\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"23\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LDUDecomposition\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"163\"><counter type=\"INSTRUCTION\" missed=\"66\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxColIndex\" desc=\"([Llinalg/complex_number/CNumber;I)I\" line=\"186\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxIndex\" desc=\"(Llinalg/Matrix;I)[I\" line=\"201\"><counter type=\"INSTRUCTION\" missed=\"51\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"544\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"37\" covered=\"0\"/><counter type=\"LINE\" missed=\"98\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/PrintOptions\" sourcefilename=\"PrintOptions.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"17\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"26\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"9\"/><counter type=\"LINE\" missed=\"2\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"1\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/SingularValueDecomposition\" sourcefilename=\"SingularValueDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"5\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"svd\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"19\"><counter type=\"INSTRUCTION\" missed=\"153\" covered=\"0\"/><counter type=\"LINE\" missed=\"15\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"46\"><counter type=\"INSTRUCTION\" missed=\"211\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"371\" covered=\"0\"/><counter type=\"LINE\" missed=\"24\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixChecks\" sourcefilename=\"MatrixChecks.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"8\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"dimensionCheck\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;I)V\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/Solvers\" sourcefilename=\"Solvers.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solve\" desc=\"(Llinalg/Matrix;[Llinalg/Vector;)[Llinalg/Vector;\" line=\"26\"><counter type=\"INSTRUCTION\" missed=\"66\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solve\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"55\"><counter type=\"INSTRUCTION\" missed=\"36\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solve\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;\" line=\"77\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solveQR\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"94\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solveQR\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;\" line=\"115\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"backSolve\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"131\"><counter type=\"INSTRUCTION\" missed=\"97\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"forwardSolve\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"173\"><counter type=\"INSTRUCTION\" missed=\"74\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"332\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"52\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/Matrix\" sourcefilename=\"Matrix.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"41\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"21\"/><counter type=\"LINE\" missed=\"0\" covered=\"6\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(I)V\" line=\"54\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"25\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"1\" covered=\"7\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(ILlinalg/complex_number/CNumber;)V\" line=\"72\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"48\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"5\"/><counter type=\"LINE\" missed=\"1\" covered=\"10\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(II)V\" line=\"96\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"23\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"2\"/><counter type=\"LINE\" missed=\"1\" covered=\"7\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(IILlinalg/complex_number/CNumber;)V\" line=\"114\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"49\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"1\" covered=\"11\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(IID)V\" line=\"142\"><counter type=\"INSTRUCTION\" missed=\"56\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/Matrix;)V\" line=\"168\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[Ljava/lang/String;)V\" line=\"181\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[Llinalg/complex_number/CNumber;)V\" line=\"200\"><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[D)V\" line=\"217\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[I)V\" line=\"236\"><counter type=\"INSTRUCTION\" missed=\"58\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"255\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;Llinalg/complex_number/CNumber;)V\" line=\"270\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;D)V\" line=\"292\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(I)Llinalg/Matrix;\" line=\"315\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(II)Llinalg/Matrix;\" line=\"329\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"342\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ones\" desc=\"(I)Llinalg/Matrix;\" line=\"357\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ones\" desc=\"(II)Llinalg/Matrix;\" line=\"378\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ones\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"398\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"identity\" desc=\"(I)Llinalg/Matrix;\" line=\"428\"><counter type=\"INSTRUCTION\" missed=\"21\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"I\" desc=\"(I)Llinalg/Matrix;\" line=\"452\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"I\" desc=\"(II)Llinalg/Matrix;\" line=\"465\"><counter type=\"INSTRUCTION\" missed=\"25\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"van\" desc=\"(Llinalg/Vector;I)Llinalg/Matrix;\" line=\"483\"><counter type=\"INSTRUCTION\" missed=\"33\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(Ljava/lang/String;DD[Z)Llinalg/Matrix;\" line=\"514\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IIDD[Z)Llinalg/Matrix;\" line=\"536\"><counter type=\"INSTRUCTION\" missed=\"31\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(Ljava/lang/String;[Z)Llinalg/Matrix;\" line=\"556\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(II[Z)Llinalg/Matrix;\" line=\"575\"><counter type=\"INSTRUCTION\" missed=\"31\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(Ljava/lang/String;D)Llinalg/Matrix;\" line=\"592\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IID)Llinalg/Matrix;\" line=\"609\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randn\" desc=\"(IIZ)Llinalg/Matrix;\" line=\"622\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomComplex\" desc=\"(II)Llinalg/Matrix;\" line=\"634\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomOrthogonal\" desc=\"(I)Llinalg/Matrix;\" line=\"646\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomUnitary\" desc=\"(I)Llinalg/Matrix;\" line=\"666\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"copy\" desc=\"()Llinalg/Matrix;\" line=\"684\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getValues\" desc=\"()[[Llinalg/complex_number/CNumber;\" line=\"693\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getValuesAsDouble\" desc=\"()[[D\" line=\"705\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getRow\" desc=\"(I)[Llinalg/complex_number/CNumber;\" line=\"724\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getRowAsVector\" desc=\"(I)Llinalg/Vector;\" line=\"735\"><counter type=\"INSTRUCTION\" missed=\"22\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getCol\" desc=\"(I)[Llinalg/complex_number/CNumber;\" line=\"750\"><counter type=\"INSTRUCTION\" missed=\"23\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getColAsVector\" desc=\"(I)Llinalg/Vector;\" line=\"767\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getSlice\" desc=\"(IIII)Llinalg/Matrix;\" line=\"787\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"get\" desc=\"(II)Llinalg/complex_number/CNumber;\" line=\"802\"><counter type=\"INSTRUCTION\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getAsDouble\" desc=\"(II)D\" line=\"813\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"print\" desc=\"([Ljava/lang/Object;)V\" line=\"823\"><counter type=\"INSTRUCTION\" missed=\"21\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"println\" desc=\"([Ljava/lang/Object;)V\" line=\"837\"><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"printSep\" desc=\"(Ljava/lang/String;[Ljava/lang/Object;)V\" line=\"855\"><counter type=\"INSTRUCTION\" missed=\"25\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"869\"><counter type=\"INSTRUCTION\" missed=\"201\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"32\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"10\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"1375\" covered=\"169\"/><counter type=\"BRANCH\" missed=\"100\" covered=\"14\"/><counter type=\"LINE\" missed=\"230\" covered=\"42\"/><counter type=\"COMPLEXITY\" missed=\"95\" covered=\"10\"/><counter type=\"METHOD\" missed=\"42\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/Vector\" sourcefilename=\"Vector.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(I)V\" line=\"35\"><counter type=\"INSTRUCTION\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(II)V\" line=\"52\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"14\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([I)V\" line=\"76\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([II)V\" line=\"93\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([D)V\" line=\"119\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([DI)V\" line=\"136\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([Llinalg/complex_number/CNumber;)V\" line=\"162\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([Llinalg/complex_number/CNumber;I)V\" line=\"179\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/Vector;)V\" line=\"202\"><counter type=\"INSTRUCTION\" missed=\"31\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toMatrix\" desc=\"(Llinalg/Vector;)Llinalg/Matrix;\" line=\"221\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toRowVector\" desc=\"()Llinalg/Vector;\" line=\"233\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toColVector\" desc=\"()Llinalg/Vector;\" line=\"249\"><counter type=\"INSTRUCTION\" missed=\"10\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"vectorType\" desc=\"()I\" line=\"263\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"innerProduct\" desc=\"(Llinalg/Vector;)Llinalg/complex_number/CNumber;\" line=\"276\"><counter type=\"INSTRUCTION\" missed=\"84\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"outerProduct\" desc=\"(Llinalg/Vector;)Llinalg/Matrix;\" line=\"324\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"337\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"351\"><counter type=\"INSTRUCTION\" missed=\"62\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"infNorm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"382\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getEntries\" desc=\"()[Llinalg/complex_number/CNumber;\" line=\"393\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(Llinalg/Vector;)Llinalg/Vector;\" line=\"408\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sub\" desc=\"(Llinalg/Vector;)Llinalg/Vector;\" line=\"419\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/Vector;\" line=\"424\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(D)Llinalg/Vector;\" line=\"428\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toMatrix\" desc=\"()Llinalg/Matrix;\" line=\"437\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"462\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"751\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"50\" covered=\"0\"/><counter type=\"LINE\" missed=\"165\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"51\" covered=\"0\"/><counter type=\"METHOD\" missed=\"26\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/CholeskyDecomposition\" sourcefilename=\"CholeskyDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"6\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"choleskyDecomp\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"12\"><counter type=\"INSTRUCTION\" missed=\"116\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"123\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixComparisons\" sourcefilename=\"MatrixComparisons.java\"><method name=\"equalTo\" desc=\"(Llinalg/Matrix;)Z\" line=\"15\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sameShape\" desc=\"(Llinalg/Matrix;I)Z\" line=\"50\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"13\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sameShape\" desc=\"(Llinalg/Matrix;)Z\" line=\"84\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"matMultCheck\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Z\" line=\"97\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isZero\" desc=\"()Z\" line=\"108\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isI\" desc=\"()Z\" line=\"130\"><counter type=\"INSTRUCTION\" missed=\"53\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isInv\" desc=\"(Llinalg/Matrix;)Z\" line=\"165\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"206\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"42\" covered=\"0\"/><counter type=\"LINE\" missed=\"46\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"7\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixProperties\" sourcefilename=\"MatrixProperties.java\"><method name=\"numCols\" desc=\"()I\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"numRows\" desc=\"()I\" line=\"32\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"shape\" desc=\"()Ljava/lang/String;\" line=\"43\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"isSquare\" desc=\"()Z\" line=\"54\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isEmpty\" desc=\"()Z\" line=\"66\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"8\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"1\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"min\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"81\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"minReal\" desc=\"()D\" line=\"101\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"max\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"126\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxReal\" desc=\"()D\" line=\"147\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"minComplex\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"170\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxComplex\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"192\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isReal\" desc=\"()Z\" line=\"213\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isComplex\" desc=\"()Z\" line=\"235\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isVector\" desc=\"()Z\" line=\"259\"><counter type=\"INSTRUCTION\" missed=\"17\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"vectorType\" desc=\"()I\" line=\"277\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSelfAdjoint\" desc=\"()Z\" line=\"303\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isHermation\" desc=\"()Z\" line=\"316\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSymmetric\" desc=\"()Z\" line=\"334\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSkewSymmetric\" desc=\"()Z\" line=\"357\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSymmetric\" desc=\"(Ljava/lang/String;)Z\" line=\"392\"><counter type=\"INSTRUCTION\" missed=\"22\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isOrthogonal\" desc=\"()Z\" line=\"419\"><counter type=\"INSTRUCTION\" missed=\"36\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isUnitary\" desc=\"()Z\" line=\"445\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isTri\" desc=\"()I\" line=\"479\"><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isTriU\" desc=\"()Z\" line=\"501\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isTriL\" desc=\"()Z\" line=\"524\"><counter type=\"INSTRUCTION\" missed=\"50\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isDiagonal\" desc=\"()Z\" line=\"551\"><counter type=\"INSTRUCTION\" missed=\"23\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isFullRank\" desc=\"()Z\" line=\"567\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSingular\" desc=\"()Z\" line=\"580\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"595\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"610\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"(DD)Llinalg/complex_number/CNumber;\" line=\"628\"><counter type=\"INSTRUCTION\" missed=\"70\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"infNorm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"649\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rowSpace\" desc=\"()Llinalg/Matrix;\" line=\"663\"><counter type=\"INSTRUCTION\" missed=\"81\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"colSpace\" desc=\"()Llinalg/Matrix;\" line=\"698\"><counter type=\"INSTRUCTION\" missed=\"79\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"nullSpace\" desc=\"()Llinalg/Matrix;\" line=\"735\"><counter type=\"INSTRUCTION\" missed=\"156\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"23\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"11\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"leftNullSpace\" desc=\"()Llinalg/Matrix;\" line=\"790\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isPos\" desc=\"()Z\" line=\"799\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isNeg\" desc=\"()Z\" line=\"820\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isPosDef\" desc=\"()Z\" line=\"845\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isPosSemidef\" desc=\"()Z\" line=\"873\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"eig\" desc=\"()[Llinalg/Matrix;\" line=\"905\"><counter type=\"INSTRUCTION\" missed=\"109\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"eigVecs\" desc=\"()Llinalg/Matrix;\" line=\"948\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"eigVals\" desc=\"()Llinalg/Matrix;\" line=\"962\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isDiagonalizable\" desc=\"()Z\" line=\"974\"><counter type=\"INSTRUCTION\" missed=\"128\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"21\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"9\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"1013\"><counter type=\"INSTRUCTION\" missed=\"858\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"2318\" covered=\"26\"/><counter type=\"BRANCH\" missed=\"213\" covered=\"1\"/><counter type=\"LINE\" missed=\"289\" covered=\"8\"/><counter type=\"COMPLEXITY\" missed=\"148\" covered=\"4\"/><counter type=\"METHOD\" missed=\"41\" covered=\"4\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/Decompose\" sourcefilename=\"Decompose.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"24\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LU\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"45\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUP\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"67\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUPQ\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"90\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LDU\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"109\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QR\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"127\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QR\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"143\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"cholesky\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"157\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schur\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"177\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schur\" desc=\"(Llinalg/Matrix;Z)Llinalg/Matrix;\" line=\"200\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schurReal\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"220\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"127\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"28\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"19\" covered=\"0\"/><counter type=\"METHOD\" missed=\"11\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><sourcefile name=\"SingularValueDecomposition.java\"><line nr=\"5\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"6\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"19\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"24\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"45\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"55\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"371\" covered=\"0\"/><counter type=\"LINE\" missed=\"24\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"LUDecomposition.java\"><line nr=\"17\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"2\" ci=\"0\" mb=\"5\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"58\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"59\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"93\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"101\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"104\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"130\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"134\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"136\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"140\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"142\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"143\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"144\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"154\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"155\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"168\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"171\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"172\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"176\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"178\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"180\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"190\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"191\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"196\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"201\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"202\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"205\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"206\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"207\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"208\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"214\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"544\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"37\" covered=\"0\"/><counter type=\"LINE\" missed=\"98\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"PrintOptions.java\"><line nr=\"17\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"9\"/><counter type=\"LINE\" missed=\"2\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"1\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"MatrixChecks.java\"><line nr=\"8\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"23\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"31\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"32\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Decompose.java\"><line nr=\"24\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"46\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"68\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"91\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"110\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"127\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"158\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"161\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"178\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"201\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"221\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"224\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"127\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"28\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"19\" covered=\"0\"/><counter type=\"METHOD\" missed=\"11\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"QRDecomposition.java\"><line nr=\"15\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"33\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"45\" mi=\"19\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"47\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"12\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"55\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"78\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"95\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"105\" mi=\"19\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"106\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"110\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"112\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"118\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"127\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"134\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"144\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"158\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"167\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"203\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"176\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"188\" mi=\"24\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"23\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"190\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"191\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"1049\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"79\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"14\" covered=\"0\"/><counter type=\"METHOD\" missed=\"5\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixComparisons.java\"><line nr=\"15\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"19\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"25\" mi=\"14\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"26\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"54\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"55\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"59\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"60\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"64\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"65\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"108\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"112\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"113\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"115\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"134\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"138\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"139\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"140\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"142\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"147\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"206\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"42\" covered=\"0\"/><counter type=\"LINE\" missed=\"46\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"7\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"SchurDecomposition.java\"><line nr=\"8\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"17\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"19\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"32\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"35\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"45\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"56\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"21\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"23\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"25\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"95\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"96\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"328\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"49\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Solvers.java\"><line nr=\"13\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"27\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"36\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"56\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"78\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"116\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"27\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"138\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"141\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"160\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"174\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"175\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"179\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"180\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"183\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"332\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"52\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixManipulations.java\"><line nr=\"18\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"19\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"32\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"37\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"38\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"63\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"64\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"89\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"93\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"94\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"122\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"128\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"129\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"132\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"133\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"138\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"141\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"156\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"158\" mi=\"16\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"159\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"174\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"176\" mi=\"16\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"177\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"182\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"183\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"201\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"213\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"215\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"216\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"232\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"234\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"235\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"237\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"238\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"241\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"242\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"244\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"261\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"262\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"265\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"266\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"268\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"282\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"284\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"285\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"288\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"289\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"291\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"307\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"309\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"310\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"312\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"313\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"317\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"319\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"334\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"336\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"337\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"340\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"341\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"343\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"358\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"360\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"361\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"364\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"365\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"367\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"382\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"384\" mi=\"14\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"385\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"389\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"390\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"391\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"395\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"412\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"414\" mi=\"14\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"415\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"420\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"421\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"424\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"437\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"438\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"452\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"455\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"457\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"458\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"459\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"460\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"462\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"466\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"480\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"481\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"495\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"496\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"498\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"500\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"501\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"502\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"503\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"505\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"509\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"522\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"538\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"539\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"541\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"542\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"543\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"547\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"560\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"576\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"577\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"578\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"581\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"582\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"583\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"585\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"586\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"590\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"600\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"610\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"612\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"613\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"616\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"626\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"627\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"629\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"630\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"633\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"645\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"646\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"647\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"649\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"650\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"654\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"655\" mi=\"23\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"656\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"658\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"659\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"660\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"661\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"662\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"663\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"666\" mi=\"32\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"668\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"669\" mi=\"29\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"670\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"673\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"674\" mi=\"37\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"675\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"680\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"682\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"694\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"695\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"696\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"697\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"699\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"700\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"704\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"705\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"707\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"708\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"709\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"710\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"711\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"712\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"715\" mi=\"32\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"717\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"718\" mi=\"29\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"719\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"722\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"723\" mi=\"37\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"724\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"728\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"730\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"731\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"733\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"745\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"746\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"748\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"749\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"751\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"752\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"754\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"766\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"767\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"769\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"770\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"772\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"773\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"774\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"777\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"788\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"789\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"791\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"792\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"795\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"806\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"817\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"828\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"841\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"842\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"844\" mi=\"6\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"845\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"847\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"850\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"851\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"854\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"855\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"858\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"862\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"875\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"877\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"878\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"879\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"883\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"893\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"894\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"896\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"897\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"898\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"899\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"903\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"908\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"909\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"911\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"912\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"1856\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"146\" covered=\"0\"/><counter type=\"LINE\" missed=\"268\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"113\" covered=\"0\"/><counter type=\"METHOD\" missed=\"40\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Matrix.java\"><line nr=\"41\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"0\" ci=\"2\" mb=\"1\" cb=\"1\"/><line nr=\"56\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"0\" ci=\"2\" mb=\"1\" cb=\"1\"/><line nr=\"74\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"0\" ci=\"8\" mb=\"0\" cb=\"2\"/><line nr=\"83\" mi=\"0\" ci=\"8\" mb=\"0\" cb=\"2\"/><line nr=\"84\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"0\" ci=\"4\" mb=\"2\" cb=\"2\"/><line nr=\"98\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"0\" ci=\"4\" mb=\"2\" cb=\"2\"/><line nr=\"116\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"126\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"127\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"142\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"4\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"144\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"148\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"149\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"154\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"155\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"159\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"160\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"168\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"169\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"171\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"172\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"183\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"188\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"189\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"201\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"202\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"206\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"207\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"217\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"218\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"219\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"221\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"223\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"224\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"225\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"228\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"236\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"237\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"238\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"239\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"240\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"243\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"244\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"247\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"255\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"256\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"257\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"258\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"260\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"261\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"270\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"271\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"272\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"273\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"274\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"275\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"276\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"279\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"280\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"283\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"292\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"293\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"294\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"295\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"296\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"298\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"300\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"301\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"302\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"305\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"315\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"329\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"330\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"342\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"343\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"344\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"345\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"346\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"357\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"359\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"360\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"361\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"365\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"378\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"380\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"381\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"382\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"386\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"398\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"399\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"400\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"402\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"404\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"405\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"406\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"410\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"428\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"430\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"431\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"434\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"452\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"465\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"467\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"468\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"471\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"483\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"484\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"487\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"488\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"490\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"491\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"492\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"495\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"514\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"515\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"516\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"518\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"536\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"537\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"540\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"556\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"557\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"558\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"560\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"575\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"576\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"579\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"592\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"593\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"594\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"596\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"609\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"622\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"634\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"646\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"647\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"648\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"650\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"651\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"654\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"666\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"667\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"668\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"670\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"671\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"674\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"684\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"693\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"705\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"707\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"708\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"709\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"713\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"724\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"735\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"737\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"739\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"750\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"752\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"753\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"756\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"767\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"769\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"770\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"773\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"787\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"789\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"790\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"793\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"802\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"813\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"823\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"824\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"826\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"837\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"838\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"841\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"842\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"855\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"856\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"859\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"860\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"869\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"871\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"872\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"873\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"875\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"876\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"878\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"880\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"881\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"884\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"887\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"888\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"889\" mi=\"9\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"890\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"891\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"894\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"896\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"898\" mi=\"9\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"899\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"900\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"901\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"902\" mi=\"23\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"903\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"906\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"907\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"908\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"912\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"914\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"916\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"917\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"919\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"922\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"1375\" covered=\"169\"/><counter type=\"BRANCH\" missed=\"100\" covered=\"14\"/><counter type=\"LINE\" missed=\"230\" covered=\"42\"/><counter type=\"COMPLEXITY\" missed=\"95\" covered=\"10\"/><counter type=\"METHOD\" missed=\"42\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"CholeskyDecomposition.java\"><line nr=\"6\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"7\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"12\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"15\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"16\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"19\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"12\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"28\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"123\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixProperties.java\"><line nr=\"21\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"66\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"5\" ci=\"5\" mb=\"3\" cb=\"1\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"82\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"105\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"106\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"107\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"112\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"127\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"149\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"152\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"153\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"154\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"159\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"171\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"174\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"175\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"176\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"193\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"195\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"196\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"197\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"198\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"213\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"214\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"216\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"217\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"218\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"219\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"225\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"235\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"236\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"238\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"239\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"240\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"241\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"247\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"260\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"262\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"263\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"266\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"277\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"280\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"281\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"283\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"284\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"286\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"287\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"290\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"303\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"317\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"334\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"336\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"337\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"340\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"357\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"359\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"360\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"363\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"392\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"393\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"395\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"396\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"398\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"399\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"402\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"421\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"422\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"425\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"426\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"429\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"431\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"445\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"447\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"448\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"451\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"479\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"480\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"482\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"483\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"484\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"485\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"486\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"487\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"490\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"501\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"502\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"504\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"505\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"506\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"507\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"508\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"513\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"524\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"525\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"527\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"528\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"531\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"532\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"533\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"534\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"535\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"540\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"551\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"553\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"554\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"557\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"567\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"568\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"570\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"571\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"574\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"580\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"581\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"583\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"595\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"610\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"611\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"614\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"628\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"629\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"631\" mi=\"15\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"632\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"636\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"637\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"638\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"641\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"644\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"649\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"650\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"663\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"664\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"665\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"666\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"671\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"672\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"673\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"674\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"675\" mi=\"13\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"676\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"685\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"698\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"699\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"700\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"701\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"706\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"707\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"708\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"709\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"710\" mi=\"13\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"711\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"724\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"735\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"737\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"738\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"739\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"744\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"745\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"746\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"748\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"749\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"750\" mi=\"13\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"751\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"760\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"761\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"762\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"764\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"765\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"767\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"768\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"769\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"770\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"776\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"777\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"779\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"790\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"799\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"800\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"802\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"803\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"804\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"805\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"806\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"811\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"820\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"821\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"823\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"824\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"825\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"826\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"827\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"832\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"845\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"848\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"849\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"850\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"852\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"853\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"855\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"860\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"873\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"876\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"877\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"878\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"880\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"881\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"883\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"888\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"905\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"907\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"908\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"909\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"911\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"912\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"913\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"914\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"916\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"917\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"919\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"921\" mi=\"18\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"922\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"927\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"931\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"932\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"934\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"948\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"962\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"963\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"974\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"975\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"976\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"977\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"979\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"981\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"982\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"984\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"985\" mi=\"20\" ci=\"0\" mb=\"6\" cb=\"0\"/><line nr=\"986\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"988\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"989\" mi=\"14\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"990\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"994\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"996\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"997\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1001\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1002\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1003\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1004\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1008\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1013\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1018\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1023\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1027\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1032\" mi=\"135\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1037\" mi=\"81\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1041\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1045\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1050\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1056\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1059\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1061\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1062\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1063\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1065\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1066\" mi=\"28\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1070\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1072\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"2318\" covered=\"26\"/><counter type=\"BRANCH\" missed=\"213\" covered=\"1\"/><counter type=\"LINE\" missed=\"289\" covered=\"8\"/><counter type=\"COMPLEXITY\" missed=\"148\" covered=\"4\"/><counter type=\"METHOD\" missed=\"41\" covered=\"4\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"Vector.java\"><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"54\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"58\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"93\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"101\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"110\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"136\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"138\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"142\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"144\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"146\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"148\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"154\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"167\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"168\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"169\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"179\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"180\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"181\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"183\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"188\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"190\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"191\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"195\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"199\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"202\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"205\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"206\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"207\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"208\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"221\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"233\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"234\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"236\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"249\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"250\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"252\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"263\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"276\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"277\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"281\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"284\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"285\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"287\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"290\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"291\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"292\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"293\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"294\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"298\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"299\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"300\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"304\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"324\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"337\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"351\" mi=\"11\" ci=\"0\" mb=\"6\" cb=\"0\"/><line nr=\"352\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"354\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"355\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"358\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"359\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"361\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"362\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"365\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"382\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"384\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"393\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"394\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"396\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"408\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"424\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"428\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"437\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"439\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"440\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"441\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"444\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"445\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"446\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"450\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"462\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"463\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"751\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"50\" covered=\"0\"/><counter type=\"LINE\" missed=\"165\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"51\" covered=\"0\"/><counter type=\"METHOD\" missed=\"26\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixOperations.java\"><line nr=\"19\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"25\" mi=\"22\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"22\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"44\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"45\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"67\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"68\" mi=\"22\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"22\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"101\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"108\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"109\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"110\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"116\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"128\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"133\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"134\" mi=\"38\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"38\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"166\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"167\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"171\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"183\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"187\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"188\" mi=\"70\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"191\" mi=\"70\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"196\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"207\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"208\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"219\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"231\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"243\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"244\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"246\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"247\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"248\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"252\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"254\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"255\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"256\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"257\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"258\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"260\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"261\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"262\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"266\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"277\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"279\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"280\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"281\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"285\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"298\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"300\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"301\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"302\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"306\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"327\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"328\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"330\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"333\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"334\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"336\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"337\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"338\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"344\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"354\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"355\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"357\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"358\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"359\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"363\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"375\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"387\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"399\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"411\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"413\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"414\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"416\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"417\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"418\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"420\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"422\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"423\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"425\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"426\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"428\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"429\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"431\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"435\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"446\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"447\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"449\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"451\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"452\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"455\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"467\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"469\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"470\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"473\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"474\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"475\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"476\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"477\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"479\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"482\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"494\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"510\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"511\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"513\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"514\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"515\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"519\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"521\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"522\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"523\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"524\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"526\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"531\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"532\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"533\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"537\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"539\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"540\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"541\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"542\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"544\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"550\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"553\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"564\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"587\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"590\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"591\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"593\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"594\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"595\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"597\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"598\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"602\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"603\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"605\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"606\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"607\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"616\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"619\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"620\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"623\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"652\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"653\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"678\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"682\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"683\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"685\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"686\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"687\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"689\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"690\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"697\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"699\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"700\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"701\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"705\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"706\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"707\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"710\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"712\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"713\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"716\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"717\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"719\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"720\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"722\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"724\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"725\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"726\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"732\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"733\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"736\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"740\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"766\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"769\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"770\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"772\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"773\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"774\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"776\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"777\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"781\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"782\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"784\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"785\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"786\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"787\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"792\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"793\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"796\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"808\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"809\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"810\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"812\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"825\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"827\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"828\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"831\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"833\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"834\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"837\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"850\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"864\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"865\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"866\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"868\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"869\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"870\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"877\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"888\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"889\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"900\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"902\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"903\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"906\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"907\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"909\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"910\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"913\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"922\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"926\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"937\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"956\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"957\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"959\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"960\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"963\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"965\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"968\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"978\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"980\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"981\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"982\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"986\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"993\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"997\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1002\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1005\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1006\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1007\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1009\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1010\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1012\" mi=\"26\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1013\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"2309\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"172\" covered=\"0\"/><counter type=\"LINE\" missed=\"284\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"127\" covered=\"0\"/><counter type=\"METHOD\" missed=\"41\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"11743\" covered=\"204\"/><counter type=\"BRANCH\" missed=\"844\" covered=\"15\"/><counter type=\"LINE\" missed=\"1644\" covered=\"54\"/><counter type=\"COMPLEXITY\" missed=\"666\" covered=\"15\"/><counter type=\"METHOD\" missed=\"239\" covered=\"11\"/><counter type=\"CLASS\" missed=\"12\" covered=\"3\"/></package><counter type=\"INSTRUCTION\" missed=\"14733\" covered=\"785\"/><counter type=\"BRANCH\" missed=\"1110\" covered=\"81\"/><counter type=\"LINE\" missed=\"2067\" covered=\"198\"/><counter type=\"COMPLEXITY\" missed=\"896\" covered=\"58\"/><counter type=\"METHOD\" missed=\"320\" covered=\"37\"/><counter type=\"CLASS\" missed=\"16\" covered=\"10\"/></report>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/jacoco.xml b/target/site/jacoco/jacoco.xml
--- a/target/site/jacoco/jacoco.xml	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/jacoco.xml	(date 1648105701898)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Java-Linear-Algebra"><sessioninfo id="DESKTOP-3F0SSFQ-fe00496a" start="1632785396729" dump="1632785398884"/><sessioninfo id="DESKTOP-3F0SSFQ-9cdf880c" start="1632787027066" dump="1632787028389"/><sessioninfo id="DESKTOP-3F0SSFQ-33e4a7ad" start="1632787824685" dump="1632787826107"/><sessioninfo id="DESKTOP-3F0SSFQ-d759012b" start="1632787898313" dump="1632787899650"/><sessioninfo id="DESKTOP-3F0SSFQ-653be16e" start="1632788590487" dump="1632788591452"/><sessioninfo id="DESKTOP-3F0SSFQ-e4543b44" start="1632788616892" dump="1632788617864"/><sessioninfo id="DESKTOP-3F0SSFQ-4d4af810" start="1632788635046" dump="1632788635903"/><sessioninfo id="DESKTOP-3F0SSFQ-ca0ff9dc" start="1632789177899" dump="1632789179094"/><sessioninfo id="DESKTOP-3F0SSFQ-2b03aa12" start="1632789197815" dump="1632789198970"/><sessioninfo id="DESKTOP-3F0SSFQ-92377961" start="1632789713743" dump="1632789715200"/><sessioninfo id="DESKTOP-3F0SSFQ-f67dcf9d" start="1632791223035" dump="1632791223756"/><sessioninfo id="DESKTOP-3F0SSFQ-3deffdcc" start="1632791225995" dump="1632791227517"/><sessioninfo id="DESKTOP-3F0SSFQ-8370ba74" start="1632791234697" dump="1632791236818"/><sessioninfo id="DESKTOP-3F0SSFQ-e80853d4" start="1632791240963" dump="1632791242073"/><sessioninfo id="DESKTOP-3F0SSFQ-9ee31791" start="1632791253485" dump="1632791254576"/><sessioninfo id="DESKTOP-3F0SSFQ-58a45499" start="1632791643884" dump="1632791645145"/><sessioninfo id="DESKTOP-3F0SSFQ-6b36a7ae" start="1632791710919" dump="1632791711976"/><sessioninfo id="DESKTOP-3F0SSFQ-cd238e7f" start="1632792212364" dump="1632792213589"/><sessioninfo id="DESKTOP-3F0SSFQ-32a355ac" start="1632792226532" dump="1632792227738"/><sessioninfo id="DESKTOP-3F0SSFQ-cf2ae673" start="1632792263916" dump="1632792265083"/><sessioninfo id="DESKTOP-3F0SSFQ-d8ae4a1d" start="1632792284518" dump="1632792285894"/><sessioninfo id="DESKTOP-3F0SSFQ-590642cc" start="1632792572203" dump="1632792573348"/><sessioninfo id="DESKTOP-3F0SSFQ-c18502e8" start="1632792970189" dump="1632792971270"/><sessioninfo id="DESKTOP-3F0SSFQ-bb68ec51" start="1632793008312" dump="1632793009524"/><sessioninfo id="DESKTOP-3F0SSFQ-dc7eaf97" start="1632794014578" dump="1632794015732"/><sessioninfo id="DESKTOP-3F0SSFQ-4fd69810" start="1632794041217" dump="1632794042229"/><sessioninfo id="DESKTOP-3F0SSFQ-96825214" start="1632794338912" dump="1632794340518"/><sessioninfo id="DESKTOP-3F0SSFQ-89a0fc42" start="1632794376493" dump="1632794377631"/><sessioninfo id="DESKTOP-3F0SSFQ-cab82cf0" start="1632794402490" dump="1632794403864"/><sessioninfo id="DESKTOP-3F0SSFQ-c139591e" start="1632796470111" dump="1632796470839"/><sessioninfo id="DESKTOP-3F0SSFQ-82b8fd28" start="1632796538375" dump="1632796539119"/><sessioninfo id="DESKTOP-3F0SSFQ-3bdff75d" start="1632796570427" dump="1632796571185"/><sessioninfo id="DESKTOP-3F0SSFQ-cdb98687" start="1632796751134" dump="1632796751986"/><sessioninfo id="DESKTOP-3F0SSFQ-e6b68394" start="1632796813525" dump="1632796814279"/><sessioninfo id="DESKTOP-3F0SSFQ-9c517ae6" start="1632796822743" dump="1632796823495"/><sessioninfo id="DESKTOP-3F0SSFQ-7849bf85" start="1632805631900" dump="1632805632787"/><sessioninfo id="DESKTOP-3F0SSFQ-8af91b33" start="1634341976579" dump="1634341977263"/><sessioninfo id="DESKTOP-3F0SSFQ-3c496517" start="1634341993197" dump="1634341994053"/><sessioninfo id="DESKTOP-3F0SSFQ-a1df1e07" start="1634342019237" dump="1634342019963"/><sessioninfo id="DESKTOP-3F0SSFQ-aff8a924" start="1634342037885" dump="1634342038662"/><sessioninfo id="DESKTOP-3F0SSFQ-f94da3ae" start="1634342585320" dump="1634342586098"/><sessioninfo id="Jacobs-MacBook-Pro.local-f3f79794" start="1634836555186" dump="1634836564541"/><package name="linalg/complex_number"><class name="linalg/complex_number/CNumber" sourcefilename="CNumber.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DD)V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Llinalg/complex_number/CNumber;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randn" desc="(Z)Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="()Llinalg/complex_number/CNumber;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="()Llinalg/complex_number/CNumber;" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(D)Llinalg/complex_number/CNumber;" line="148"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(DD[Z)Llinalg/complex_number/CNumber;" line="182"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="213"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="225"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;[Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="239"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="259"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="271"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="283"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="310"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addInv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="338"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="356"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="388"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(D)Llinalg/complex_number/CNumber;" line="409"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="420"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="436"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allSqrt" desc="(Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="469"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sign" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="484"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="499"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(D)Z" line="522"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="543"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nearZero" desc="(D)Z" line="565"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llinalg/complex_number/CNumber;)I" line="579"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(Llinalg/complex_number/CNumber;)I" line="595"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(D)I" line="611"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mag" desc="()D" line="624"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="639"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="662"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReal" desc="()D" line="678"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImaginary" desc="()D" line="686"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="696"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="706"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isImaginary" desc="()Z" line="716"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInt" desc="()Z" line="726"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleValue" desc="()D" line="743"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatValue" desc="()F" line="753"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intValue" desc="()I" line="763"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longValue" desc="()J" line="773"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleImaginaryValue" desc="()D" line="781"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatImaginaryValue" desc="()F" line="791"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intImaginaryValue" desc="()I" line="800"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longImaginaryValue" desc="()J" line="810"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="(Llinalg/complex_number/CNumber;)I" line="819"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="824"><counter type="INSTRUCTION" missed="69" covered="28"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="15" covered="7"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="819" covered="180"/><counter type="BRANCH" missed="102" covered="8"/><counter type="LINE" missed="141" covered="47"/><counter type="COMPLEXITY" missed="98" covered="10"/><counter type="METHOD" missed="43" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CNumber.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="9" ci="0" mb="0" cb="0"/><line nr="156" mi="39" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="2" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="2" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="8" ci="0" mb="4" cb="0"/><line nr="192" mi="8" ci="0" mb="4" cb="0"/><line nr="193" mi="7" ci="0" mb="0" cb="0"/><line nr="197" mi="8" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="11" ci="0" mb="0" cb="0"/><line nr="213" mi="9" ci="0" mb="0" cb="0"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="8" ci="0" mb="2" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="14" ci="0" mb="0" cb="0"/><line nr="271" mi="26" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="8" ci="0" mb="4" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="2" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="50" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="2" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="2" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="8" ci="0" mb="2" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="7" ci="0" mb="2" cb="0"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="2" cb="0"/><line nr="391" mi="6" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="2" cb="0"/><line nr="393" mi="6" ci="0" mb="0" cb="0"/><line nr="395" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="3" ci="0" mb="2" cb="0"/><line nr="437" mi="4" ci="0" mb="2" cb="0"/><line nr="438" mi="8" ci="0" mb="0" cb="0"/><line nr="440" mi="11" ci="0" mb="0" cb="0"/><line nr="443" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="5" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="7" ci="0" mb="4" cb="0"/><line nr="453" mi="6" ci="0" mb="0" cb="0"/><line nr="457" mi="2" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="470" mi="5" ci="0" mb="0" cb="0"/><line nr="471" mi="8" ci="0" mb="0" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="484" mi="4" ci="0" mb="2" cb="0"/><line nr="485" mi="2" ci="0" mb="0" cb="0"/><line nr="487" mi="8" ci="0" mb="0" cb="0"/><line nr="499" mi="0" ci="2" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="1" cb="1"/><line nr="502" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="12" mb="2" cb="2"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="10" ci="0" mb="4" cb="0"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="1" cb="1"/><line nr="544" mi="6" ci="0" mb="0" cb="0"/><line nr="548" mi="0" ci="8" mb="0" cb="0"/><line nr="549" mi="0" ci="8" mb="0" cb="0"/><line nr="551" mi="0" ci="6" mb="0" cb="0"/><line nr="565" mi="9" ci="0" mb="2" cb="0"/><line nr="579" mi="8" ci="0" mb="2" cb="0"/><line nr="580" mi="8" ci="0" mb="2" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="595" mi="8" ci="0" mb="2" cb="0"/><line nr="596" mi="8" ci="0" mb="2" cb="0"/><line nr="597" mi="2" ci="0" mb="0" cb="0"/><line nr="611" mi="7" ci="0" mb="0" cb="0"/><line nr="624" mi="13" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="641" mi="16" ci="0" mb="2" cb="0"/><line nr="642" mi="6" ci="0" mb="2" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="0" cb="0"/><line nr="662" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="16" ci="0" mb="2" cb="0"/><line nr="665" mi="6" ci="0" mb="2" cb="0"/><line nr="666" mi="2" ci="0" mb="0" cb="0"/><line nr="670" mi="2" ci="0" mb="0" cb="0"/><line nr="678" mi="3" ci="0" mb="0" cb="0"/><line nr="686" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="9" ci="0" mb="2" cb="0"/><line nr="706" mi="9" ci="0" mb="2" cb="0"/><line nr="716" mi="14" ci="0" mb="4" cb="0"/><line nr="726" mi="2" ci="0" mb="0" cb="0"/><line nr="728" mi="3" ci="0" mb="2" cb="0"/><line nr="729" mi="3" ci="0" mb="0" cb="0"/><line nr="730" mi="9" ci="0" mb="2" cb="0"/><line nr="732" mi="2" ci="0" mb="0" cb="0"/><line nr="735" mi="2" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="753" mi="4" ci="0" mb="0" cb="0"/><line nr="763" mi="4" ci="0" mb="0" cb="0"/><line nr="773" mi="4" ci="0" mb="0" cb="0"/><line nr="781" mi="3" ci="0" mb="0" cb="0"/><line nr="791" mi="4" ci="0" mb="0" cb="0"/><line nr="800" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="819" mi="0" ci="4" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="826" mi="0" ci="6" mb="0" cb="0"/><line nr="828" mi="0" ci="4" mb="1" cb="1"/><line nr="829" mi="6" ci="0" mb="2" cb="0"/><line nr="830" mi="6" ci="0" mb="0" cb="0"/><line nr="832" mi="4" ci="0" mb="0" cb="0"/><line nr="836" mi="0" ci="4" mb="1" cb="1"/><line nr="837" mi="8" ci="0" mb="4" cb="0"/><line nr="838" mi="3" ci="0" mb="0" cb="0"/><line nr="839" mi="4" ci="0" mb="0" cb="0"/><line nr="840" mi="4" ci="0" mb="2" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="844" mi="6" ci="0" mb="2" cb="0"/><line nr="845" mi="4" ci="0" mb="2" cb="0"/><line nr="846" mi="4" ci="0" mb="2" cb="0"/><line nr="847" mi="4" ci="0" mb="0" cb="0"/><line nr="849" mi="6" ci="0" mb="0" cb="0"/><line nr="853" mi="4" ci="0" mb="0" cb="0"/><line nr="856" mi="3" ci="0" mb="0" cb="0"/><line nr="859" mi="0" ci="8" mb="2" cb="2"/><line nr="860" mi="0" ci="2" mb="0" cb="0"/><line nr="863" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="819" covered="180"/><counter type="BRANCH" missed="102" covered="8"/><counter type="LINE" missed="141" covered="47"/><counter type="COMPLEXITY" missed="98" covered="10"/><counter type="METHOD" missed="43" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="819" covered="180"/><counter type="BRANCH" missed="102" covered="8"/><counter type="LINE" missed="141" covered="47"/><counter type="COMPLEXITY" missed="98" covered="10"/><counter type="METHOD" missed="43" covered="10"/><counter type="CLASS" missed="0" covered="1"/></package><package name="linalg/util"><class name="linalg/util/StringUtils" sourcefilename="StringUtils.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="center" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="center" desc="(Ljava/lang/String;IC)Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/MathUtil" sourcefilename="MathUtil.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fact" desc="(I)J" line="7"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$fact$0" desc="(JJ)J" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKind" desc="(Ljava/lang/String;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ShapeLexer" sourcefilename="ShapeLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="29"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/LinAlgArrayUtils" sourcefilename="LinAlgArrayUtils.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)[[Llinalg/complex_number/CNumber;" line="21"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II)[[Llinalg/complex_number/CNumber;" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)[[Llinalg/complex_number/CNumber;" line="45"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)[[Llinalg/complex_number/CNumber;" line="58"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)[[Llinalg/complex_number/CNumber;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([[Llinalg/complex_number/CNumber;)V" line="84"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([Llinalg/complex_number/CNumber;)V" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDims" desc="([[Llinalg/complex_number/CNumber;)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)[[Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="([[Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="128"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSection" desc="([[Llinalg/complex_number/CNumber;IIII)[[Llinalg/complex_number/CNumber;" line="144"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="([II)Z" line="157"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([Llinalg/complex_number/CNumber;I)[[Llinalg/complex_number/CNumber;" line="189"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([DI)[[Llinalg/complex_number/CNumber;" line="226"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([II)[[Llinalg/complex_number/CNumber;" line="265"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="291"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="group" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="304"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/NumberLexer" sourcefilename="NumberLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="38"><counter type="INSTRUCTION" missed="113" covered="136"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="36"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="151"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="133" covered="142"/><counter type="BRANCH" missed="33" covered="29"/><counter type="LINE" missed="34" covered="39"/><counter type="COMPLEXITY" missed="24" covered="10"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ExampleMatrices" sourcefilename="ExampleMatrices.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="893" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseShape" desc="(Ljava/lang/String;)[I" line="16"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseNumber" desc="(Ljava/lang/String;)[D" line="46"><counter type="INSTRUCTION" missed="85" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="17" covered="23"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/Lexer" sourcefilename="Lexer.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="digit" desc="(I)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextSymbol" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putBackSymbol" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/FileManager" sourcefilename="FileManager.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readcsv" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write2csv" desc="(Llinalg/Matrix;Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="FileManager.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="2" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="2" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="2" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="37" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Parser.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="4" ci="4" mb="3" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="1" cb="1"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="2" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="1"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShapeLexer.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="12" ci="0" mb="8" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="4" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NumberLexer.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="12" mb="4" cb="4"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="12" ci="0" mb="8" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="0" ci="4" mb="1" cb="1"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="6" mb="1" cb="3"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="1" cb="3"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="2" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="142"/><counter type="BRANCH" missed="33" covered="29"/><counter type="LINE" missed="34" covered="39"/><counter type="COMPLEXITY" missed="24" covered="10"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleMatrices.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="54" ci="0" mb="0" cb="0"/><line nr="36" mi="372" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="49" mi="54" ci="0" mb="0" cb="0"/><line nr="54" mi="136" ci="0" mb="0" cb="0"/><line nr="60" mi="78" ci="0" mb="0" cb="0"/><line nr="64" mi="54" ci="0" mb="0" cb="0"/><line nr="68" mi="88" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MathUtil.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="7" ci="0" mb="0" cb="0"/><line nr="8" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringUtils.java"><line nr="4" mi="2" ci="0" mb="0" cb="0"/><line nr="5" mi="5" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="2" cb="2"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="2"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinAlgArrayUtils.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="2" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="2" cb="0"/><line nr="30" mi="10" ci="0" mb="2" cb="0"/><line nr="31" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="2" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><line nr="85" mi="10" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="2" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="10" ci="0" mb="2" cb="0"/><line nr="148" mi="14" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="16" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="2" cb="0"/><line nr="197" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="230" mi="11" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="2" cb="0"/><line nr="236" mi="11" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="9" ci="0" mb="2" cb="0"/><line nr="269" mi="12" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="9" ci="0" mb="2" cb="0"/><line nr="275" mi="12" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="294" mi="11" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="10" ci="0" mb="2" cb="0"/><line nr="307" mi="10" ci="0" mb="2" cb="0"/><line nr="308" mi="12" ci="0" mb="2" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="14" mb="1" cb="3"/><line nr="55" mi="0" ci="5" mb="1" cb="1"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Lexer.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="10" mb="0" cb="4"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="2"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2171" covered="401"/><counter type="BRANCH" missed="164" covered="58"/><counter type="LINE" missed="282" covered="97"/><counter type="COMPLEXITY" missed="132" covered="33"/><counter type="METHOD" missed="38" covered="16"/><counter type="CLASS" missed="4" covered="6"/></package><package name="linalg"><class name="linalg/QRDecomposition" sourcefilename="QRDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="20"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QRtemp" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="94"><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="158"><counter type="INSTRUCTION" missed="622" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/SchurDecomposition" sourcefilename="SchurDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurDecomp" desc="(Llinalg/Matrix;ZZ)Llinalg/Matrix;" line="14"><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="328" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixOperations" sourcefilename="MatrixOperations.java"><method name="add" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="19"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Llinalg/Matrix;" line="40"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="62"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(D)Llinalg/Matrix;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="98"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemMult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="128"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(D)Llinalg/Matrix;" line="151"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="162"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemDiv" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="182"><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Matrix;" line="207"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="219"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fip" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="231"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directSum" desc="([Llinalg/Matrix;)Llinalg/Matrix;" line="242"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="()Llinalg/Matrix;" line="277"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Llinalg/Matrix;" line="297"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transpose" desc="()Llinalg/Matrix;" line="316"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="T" desc="()Llinalg/Matrix;" line="327"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="()Llinalg/Matrix;" line="354"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjT" desc="()Llinalg/Matrix;" line="375"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hermAdjoint" desc="()Llinalg/Matrix;" line="387"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="H" desc="()Llinalg/Matrix;" line="399"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detRec" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="411"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detQR" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="446"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="det" desc="()Llinalg/complex_number/CNumber;" line="467"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="494"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="510"><counter type="INSTRUCTION" missed="210" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="augment" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="564"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ref" desc="()Llinalg/Matrix;" line="587"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="(Z)Llinalg/Matrix;" line="652"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="()Llinalg/Matrix;" line="678"><counter type="INSTRUCTION" missed="181" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rrefNoPivot" desc="()Llinalg/Matrix;" line="766"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="erref" desc="()Llinalg/Matrix;" line="808"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="()Llinalg/complex_number/CNumber;" line="825"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tr" desc="()Llinalg/complex_number/CNumber;" line="850"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="864"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullity" desc="()I" line="888"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverse" desc="()Llinalg/Matrix;" line="900"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="()Llinalg/Matrix;" line="937"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseTriU" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="956"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recep" desc="()Llinalg/Matrix;" line="978"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="993"><counter type="INSTRUCTION" missed="255" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2309" covered="0"/><counter type="BRANCH" missed="172" covered="0"/><counter type="LINE" missed="284" covered="0"/><counter type="COMPLEXITY" missed="127" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixManipulations" sourcefilename="MatrixManipulations.java"><method name="reshape" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="18"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reshape" desc="(II)Llinalg/Matrix;" line="27"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="()Llinalg/Matrix;" line="56"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(I)Llinalg/Matrix;" line="82"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(I)Llinalg/Matrix;" line="121"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[Llinalg/complex_number/CNumber;)V" line="156"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[D)V" line="174"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Llinalg/complex_number/CNumber;II)V" line="198"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(DII)V" line="213"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="(Llinalg/Vector;I)V" line="232"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([Llinalg/complex_number/CNumber;I)V" line="259"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([DI)V" line="282"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="(Llinalg/Vector;I)V" line="307"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([Llinalg/complex_number/CNumber;I)V" line="334"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([DI)V" line="358"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSliceCopy" desc="(IILlinalg/Matrix;)Llinalg/Matrix;" line="382"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSlice" desc="(IILlinalg/Matrix;)V" line="412"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRow" desc="(I)Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRows" desc="([I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCol" desc="(I)Llinalg/Matrix;" line="480"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCols" desc="([I)Llinalg/Matrix;" line="495"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="()Llinalg/Matrix;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="(I)Llinalg/Matrix;" line="538"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="()Llinalg/Matrix;" line="560"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="(I)Llinalg/Matrix;" line="576"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diag" desc="()Llinalg/Matrix;" line="600"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="610"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diagAsVector" desc="()Llinalg/Vector;" line="626"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessu" desc="()Llinalg/Matrix;" line="645"><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessuV" desc="()[Llinalg/Matrix;" line="694"><counter type="INSTRUCTION" missed="246" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapRows" desc="(II)Llinalg/Matrix;" line="745"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapCols" desc="(II)Llinalg/Matrix;" line="766"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="788"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ID)Llinalg/Matrix;" line="806"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="817"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ID)Llinalg/Matrix;" line="828"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVector" desc="()Llinalg/Vector;" line="841"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(I)Llinalg/Matrix;" line="875"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundToZero" desc="(I)V" line="893"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="908"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1856" covered="0"/><counter type="BRANCH" missed="146" covered="0"/><counter type="LINE" missed="268" covered="0"/><counter type="COMPLEXITY" missed="113" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/LUDecomposition" sourcefilename="LUDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="53"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPartialPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="85"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUFullPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="122"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDUDecomposition" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="163"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxColIndex" desc="([Llinalg/complex_number/CNumber;I)I" line="186"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxIndex" desc="(Llinalg/Matrix;I)[I" line="201"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/PrintOptions" sourcefilename="PrintOptions.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/SingularValueDecomposition" sourcefilename="SingularValueDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="svd" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="19"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixChecks" sourcefilename="MatrixChecks.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;I)V" line="22"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Solvers" sourcefilename="Solvers.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;[Llinalg/Vector;)[Llinalg/Vector;" line="26"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="55"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="94"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="115"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="backSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="131"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forwardSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="173"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Matrix" sourcefilename="Matrix.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILlinalg/complex_number/CNumber;)V" line="72"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="96"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILlinalg/complex_number/CNumber;)V" line="114"><counter type="INSTRUCTION" missed="7" covered="49"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IID)V" line="142"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Matrix;)V" line="168"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Ljava/lang/String;)V" line="181"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Llinalg/complex_number/CNumber;)V" line="200"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[D)V" line="217"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[I)V" line="236"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="255"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Llinalg/complex_number/CNumber;)V" line="270"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;D)V" line="292"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(I)Llinalg/Matrix;" line="315"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)Llinalg/Matrix;" line="329"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="342"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(I)Llinalg/Matrix;" line="357"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(II)Llinalg/Matrix;" line="378"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="398"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identity" desc="(I)Llinalg/Matrix;" line="428"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(II)Llinalg/Matrix;" line="465"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="van" desc="(Llinalg/Vector;I)Llinalg/Matrix;" line="483"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;DD[Z)Llinalg/Matrix;" line="514"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)Llinalg/Matrix;" line="536"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;[Z)Llinalg/Matrix;" line="556"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II[Z)Llinalg/Matrix;" line="575"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;D)Llinalg/Matrix;" line="592"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)Llinalg/Matrix;" line="609"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)Llinalg/Matrix;" line="622"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)Llinalg/Matrix;" line="634"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomOrthogonal" desc="(I)Llinalg/Matrix;" line="646"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomUnitary" desc="(I)Llinalg/Matrix;" line="666"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Llinalg/Matrix;" line="684"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()[[Llinalg/complex_number/CNumber;" line="693"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesAsDouble" desc="()[[D" line="705"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="(I)[Llinalg/complex_number/CNumber;" line="724"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowAsVector" desc="(I)Llinalg/Vector;" line="735"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCol" desc="(I)[Llinalg/complex_number/CNumber;" line="750"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColAsVector" desc="(I)Llinalg/Vector;" line="767"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSlice" desc="(IIII)Llinalg/Matrix;" line="787"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(II)Llinalg/complex_number/CNumber;" line="802"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(II)D" line="813"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="([Ljava/lang/Object;)V" line="823"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="println" desc="([Ljava/lang/Object;)V" line="837"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printSep" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="855"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="869"><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1375" covered="169"/><counter type="BRANCH" missed="100" covered="14"/><counter type="LINE" missed="230" covered="42"/><counter type="COMPLEXITY" missed="95" covered="10"/><counter type="METHOD" missed="42" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Vector" sourcefilename="Vector.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="35"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([I)V" line="76"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([II)V" line="93"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([D)V" line="119"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([DI)V" line="136"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;)V" line="162"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;I)V" line="179"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Vector;)V" line="202"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRowVector" desc="()Llinalg/Vector;" line="233"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toColVector" desc="()Llinalg/Vector;" line="249"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="innerProduct" desc="(Llinalg/Vector;)Llinalg/complex_number/CNumber;" line="276"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outerProduct" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="351"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="382"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntries" desc="()[Llinalg/complex_number/CNumber;" line="393"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/Vector;)Llinalg/Vector;" line="408"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Vector;)Llinalg/Vector;" line="419"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Vector;" line="424"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Vector;" line="428"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="()Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/CholeskyDecomposition" sourcefilename="CholeskyDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="choleskyDecomp" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="12"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixComparisons" sourcefilename="MatrixComparisons.java"><method name="equalTo" desc="(Llinalg/Matrix;)Z" line="15"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;I)Z" line="50"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;)Z" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matMultCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;)Z" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isZero" desc="()Z" line="108"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isI" desc="()Z" line="130"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInv" desc="(Llinalg/Matrix;)Z" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixProperties" sourcefilename="MatrixProperties.java"><method name="numCols" desc="()I" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numRows" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSquare" desc="()Z" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="66"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="()Llinalg/complex_number/CNumber;" line="81"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minReal" desc="()D" line="101"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Llinalg/complex_number/CNumber;" line="126"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReal" desc="()D" line="147"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minComplex" desc="()Llinalg/complex_number/CNumber;" line="170"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxComplex" desc="()Llinalg/complex_number/CNumber;" line="192"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="213"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="235"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVector" desc="()Z" line="259"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="277"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSelfAdjoint" desc="()Z" line="303"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHermation" desc="()Z" line="316"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="()Z" line="334"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSkewSymmetric" desc="()Z" line="357"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="(Ljava/lang/String;)Z" line="392"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOrthogonal" desc="()Z" line="419"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnitary" desc="()Z" line="445"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTri" desc="()I" line="479"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriU" desc="()Z" line="501"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriL" desc="()Z" line="524"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonal" desc="()Z" line="551"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFullRank" desc="()Z" line="567"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingular" desc="()Z" line="580"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="610"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(DD)Llinalg/complex_number/CNumber;" line="628"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="649"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rowSpace" desc="()Llinalg/Matrix;" line="663"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="colSpace" desc="()Llinalg/Matrix;" line="698"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullSpace" desc="()Llinalg/Matrix;" line="735"><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftNullSpace" desc="()Llinalg/Matrix;" line="790"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPos" desc="()Z" line="799"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNeg" desc="()Z" line="820"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosDef" desc="()Z" line="845"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosSemidef" desc="()Z" line="873"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eig" desc="()[Llinalg/Matrix;" line="905"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVecs" desc="()Llinalg/Matrix;" line="948"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVals" desc="()Llinalg/Matrix;" line="962"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonalizable" desc="()Z" line="974"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="1013"><counter type="INSTRUCTION" missed="858" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2318" covered="26"/><counter type="BRANCH" missed="213" covered="1"/><counter type="LINE" missed="289" covered="8"/><counter type="COMPLEXITY" missed="148" covered="4"/><counter type="METHOD" missed="41" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Decompose" sourcefilename="Decompose.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="45"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUP" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="67"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPQ" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="90"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cholesky" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="177"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;Z)Llinalg/Matrix;" line="200"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurReal" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="220"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SingularValueDecomposition.java"><line nr="5" mi="2" ci="0" mb="0" cb="0"/><line nr="6" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="36" mi="17" ci="0" mb="0" cb="0"/><line nr="37" mi="17" ci="0" mb="0" cb="0"/><line nr="38" mi="24" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="45" ci="0" mb="0" cb="0"/><line nr="49" mi="87" ci="0" mb="0" cb="0"/><line nr="54" mi="55" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="15" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LUDecomposition.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="5" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="2" cb="0"/><line nr="58" mi="10" ci="0" mb="2" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="20" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="101" mi="14" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="20" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="2" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="2" cb="0"/><line nr="140" mi="14" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="20" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="2" cb="0"/><line nr="171" mi="8" ci="0" mb="2" cb="0"/><line nr="172" mi="19" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="8" ci="0" mb="2" cb="0"/><line nr="190" mi="6" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="2" cb="0"/><line nr="205" mi="8" ci="0" mb="2" cb="0"/><line nr="206" mi="7" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrintOptions.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixChecks.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="2" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="7" ci="0" mb="2" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Decompose.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="2" cb="0"/><line nr="201" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QRDecomposition.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="9" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="19" ci="0" mb="2" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="2" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="19" ci="0" mb="2" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="15" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="0" cb="0"/><line nr="120" mi="15" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="15" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="13" ci="0" mb="0" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="15" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="54" ci="0" mb="0" cb="0"/><line nr="162" mi="87" ci="0" mb="0" cb="0"/><line nr="167" mi="41" ci="0" mb="0" cb="0"/><line nr="170" mi="203" ci="0" mb="0" cb="0"/><line nr="176" mi="87" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="19" ci="0" mb="0" cb="0"/><line nr="186" mi="19" ci="0" mb="0" cb="0"/><line nr="187" mi="17" ci="0" mb="0" cb="0"/><line nr="188" mi="24" ci="0" mb="0" cb="0"/><line nr="189" mi="23" ci="0" mb="0" cb="0"/><line nr="190" mi="16" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixComparisons.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="4" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="24" mi="8" ci="0" mb="2" cb="0"/><line nr="25" mi="14" ci="0" mb="2" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="2" cb="0"/><line nr="112" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchurDecomposition.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="2" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="17" ci="0" mb="4" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="38" mi="12" ci="0" mb="0" cb="0"/><line nr="39" mi="18" ci="0" mb="0" cb="0"/><line nr="42" mi="15" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="2" cb="0"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="23" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="25" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="18" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="328" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Solvers.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="2" cb="0"/><line nr="36" mi="16" ci="0" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="39" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="27" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="141" mi="15" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="8" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="2" cb="0"/><line nr="183" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="14" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixManipulations.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="2" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="15" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="2" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="16" ci="0" mb="4" cb="0"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="16" ci="0" mb="4" cb="0"/><line nr="177" mi="13" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="2" cb="0"/><line nr="182" mi="11" ci="0" mb="2" cb="0"/><line nr="183" mi="14" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="2" cb="0"/><line nr="238" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="10" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="5" ci="0" mb="2" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="265" mi="8" ci="0" mb="2" cb="0"/><line nr="266" mi="12" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="288" mi="8" ci="0" mb="2" cb="0"/><line nr="289" mi="12" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="2" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="2" cb="0"/><line nr="313" mi="9" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="2" cb="0"/><line nr="317" mi="10" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="2" cb="0"/><line nr="337" mi="9" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="2" cb="0"/><line nr="341" mi="12" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="2" cb="0"/><line nr="361" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="8" ci="0" mb="2" cb="0"/><line nr="365" mi="12" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="14" ci="0" mb="4" cb="0"/><line nr="385" mi="11" ci="0" mb="0" cb="0"/><line nr="389" mi="10" ci="0" mb="2" cb="0"/><line nr="390" mi="10" ci="0" mb="2" cb="0"/><line nr="391" mi="16" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="14" ci="0" mb="4" cb="0"/><line nr="415" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="2" cb="0"/><line nr="420" mi="10" ci="0" mb="2" cb="0"/><line nr="421" mi="16" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="9" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="2" cb="0"/><line nr="458" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="8" ci="0" mb="2" cb="0"/><line nr="460" mi="12" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="9" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="11" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="8" ci="0" mb="2" cb="0"/><line nr="501" mi="4" ci="0" mb="2" cb="0"/><line nr="502" mi="8" ci="0" mb="2" cb="0"/><line nr="503" mi="12" ci="0" mb="0" cb="0"/><line nr="505" mi="1" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="8" ci="0" mb="2" cb="0"/><line nr="542" mi="13" ci="0" mb="4" cb="0"/><line nr="543" mi="12" ci="0" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="6" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="8" ci="0" mb="2" cb="0"/><line nr="582" mi="7" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="585" mi="13" ci="0" mb="4" cb="0"/><line nr="586" mi="12" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="8" ci="0" mb="2" cb="0"/><line nr="613" mi="9" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="626" mi="3" ci="0" mb="0" cb="0"/><line nr="627" mi="9" ci="0" mb="0" cb="0"/><line nr="629" mi="8" ci="0" mb="2" cb="0"/><line nr="630" mi="12" ci="0" mb="0" cb="0"/><line nr="633" mi="2" ci="0" mb="0" cb="0"/><line nr="645" mi="4" ci="0" mb="0" cb="0"/><line nr="646" mi="8" ci="0" mb="0" cb="0"/><line nr="647" mi="10" ci="0" mb="0" cb="0"/><line nr="649" mi="3" ci="0" mb="2" cb="0"/><line nr="650" mi="7" ci="0" mb="0" cb="0"/><line nr="654" mi="10" ci="0" mb="2" cb="0"/><line nr="655" mi="23" ci="0" mb="2" cb="0"/><line nr="656" mi="12" ci="0" mb="0" cb="0"/><line nr="658" mi="11" ci="0" mb="0" cb="0"/><line nr="659" mi="10" ci="0" mb="0" cb="0"/><line nr="660" mi="1" ci="0" mb="0" cb="0"/><line nr="661" mi="4" ci="0" mb="0" cb="0"/><line nr="662" mi="1" ci="0" mb="0" cb="0"/><line nr="663" mi="1" ci="0" mb="0" cb="0"/><line nr="666" mi="32" ci="0" mb="0" cb="0"/><line nr="668" mi="15" ci="0" mb="0" cb="0"/><line nr="669" mi="29" ci="0" mb="0" cb="0"/><line nr="670" mi="14" ci="0" mb="0" cb="0"/><line nr="673" mi="15" ci="0" mb="0" cb="0"/><line nr="674" mi="37" ci="0" mb="0" cb="0"/><line nr="675" mi="6" ci="0" mb="0" cb="0"/><line nr="680" mi="3" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="694" mi="4" ci="0" mb="0" cb="0"/><line nr="695" mi="8" ci="0" mb="0" cb="0"/><line nr="696" mi="10" ci="0" mb="0" cb="0"/><line nr="697" mi="3" ci="0" mb="0" cb="0"/><line nr="699" mi="3" ci="0" mb="2" cb="0"/><line nr="700" mi="7" ci="0" mb="0" cb="0"/><line nr="704" mi="10" ci="0" mb="2" cb="0"/><line nr="705" mi="12" ci="0" mb="0" cb="0"/><line nr="707" mi="11" ci="0" mb="0" cb="0"/><line nr="708" mi="10" ci="0" mb="0" cb="0"/><line nr="709" mi="1" ci="0" mb="0" cb="0"/><line nr="710" mi="4" ci="0" mb="0" cb="0"/><line nr="711" mi="1" ci="0" mb="0" cb="0"/><line nr="712" mi="1" ci="0" mb="0" cb="0"/><line nr="715" mi="32" ci="0" mb="0" cb="0"/><line nr="717" mi="15" ci="0" mb="0" cb="0"/><line nr="718" mi="29" ci="0" mb="0" cb="0"/><line nr="719" mi="14" ci="0" mb="0" cb="0"/><line nr="722" mi="15" ci="0" mb="0" cb="0"/><line nr="723" mi="37" ci="0" mb="0" cb="0"/><line nr="724" mi="6" ci="0" mb="0" cb="0"/><line nr="728" mi="3" ci="0" mb="0" cb="0"/><line nr="730" mi="4" ci="0" mb="0" cb="0"/><line nr="731" mi="4" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><line nr="745" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="3" ci="0" mb="0" cb="0"/><line nr="748" mi="5" ci="0" mb="0" cb="0"/><line nr="749" mi="5" ci="0" mb="0" cb="0"/><line nr="751" mi="5" ci="0" mb="0" cb="0"/><line nr="752" mi="5" ci="0" mb="0" cb="0"/><line nr="754" mi="2" ci="0" mb="0" cb="0"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="767" mi="3" ci="0" mb="0" cb="0"/><line nr="769" mi="4" ci="0" mb="0" cb="0"/><line nr="770" mi="4" ci="0" mb="0" cb="0"/><line nr="772" mi="8" ci="0" mb="2" cb="0"/><line nr="773" mi="9" ci="0" mb="0" cb="0"/><line nr="774" mi="9" ci="0" mb="0" cb="0"/><line nr="777" mi="2" ci="0" mb="0" cb="0"/><line nr="788" mi="3" ci="0" mb="0" cb="0"/><line nr="789" mi="8" ci="0" mb="0" cb="0"/><line nr="791" mi="8" ci="0" mb="2" cb="0"/><line nr="792" mi="14" ci="0" mb="0" cb="0"/><line nr="795" mi="2" ci="0" mb="0" cb="0"/><line nr="806" mi="8" ci="0" mb="0" cb="0"/><line nr="817" mi="6" ci="0" mb="0" cb="0"/><line nr="828" mi="7" ci="0" mb="0" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="842" mi="2" ci="0" mb="0" cb="0"/><line nr="844" mi="6" ci="0" mb="4" cb="0"/><line nr="845" mi="7" ci="0" mb="0" cb="0"/><line nr="847" mi="3" ci="0" mb="0" cb="0"/><line nr="850" mi="3" ci="0" mb="2" cb="0"/><line nr="851" mi="5" ci="0" mb="0" cb="0"/><line nr="854" mi="3" ci="0" mb="2" cb="0"/><line nr="855" mi="2" ci="0" mb="0" cb="0"/><line nr="858" mi="8" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><line nr="875" mi="6" ci="0" mb="0" cb="0"/><line nr="877" mi="8" ci="0" mb="2" cb="0"/><line nr="878" mi="8" ci="0" mb="2" cb="0"/><line nr="879" mi="14" ci="0" mb="0" cb="0"/><line nr="883" mi="2" ci="0" mb="0" cb="0"/><line nr="893" mi="8" ci="0" mb="0" cb="0"/><line nr="894" mi="3" ci="0" mb="0" cb="0"/><line nr="896" mi="8" ci="0" mb="2" cb="0"/><line nr="897" mi="8" ci="0" mb="2" cb="0"/><line nr="898" mi="11" ci="0" mb="2" cb="0"/><line nr="899" mi="7" ci="0" mb="0" cb="0"/><line nr="903" mi="1" ci="0" mb="0" cb="0"/><line nr="908" mi="19" ci="0" mb="0" cb="0"/><line nr="909" mi="6" ci="0" mb="0" cb="0"/><line nr="911" mi="9" ci="0" mb="0" cb="0"/><line nr="912" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1856" covered="0"/><counter type="BRANCH" missed="146" covered="0"/><counter type="LINE" missed="268" covered="0"/><counter type="COMPLEXITY" missed="113" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Matrix.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="2" cb="2"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="2" cb="2"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="4" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="2" cb="0"/><line nr="154" mi="7" ci="0" mb="2" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="189" mi="14" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="2" cb="0"/><line nr="207" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="2" cb="0"/><line nr="224" mi="8" ci="0" mb="2" cb="0"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="8" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="2" cb="0"/><line nr="244" mi="15" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="279" mi="8" ci="0" mb="2" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="8" ci="0" mb="2" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="7" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="2" cb="0"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="2" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="7" ci="0" mb="2" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="10" ci="0" mb="4" cb="0"/><line nr="468" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="3" ci="0" mb="2" cb="0"/><line nr="484" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="7" ci="0" mb="2" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="3" ci="0" mb="0" cb="0"/><line nr="515" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="7" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="2" cb="0"/><line nr="537" mi="17" ci="0" mb="0" cb="0"/><line nr="540" mi="11" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="0" cb="0"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="560" mi="5" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="2" cb="0"/><line nr="576" mi="17" ci="0" mb="0" cb="0"/><line nr="579" mi="11" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="8" ci="0" mb="0" cb="0"/><line nr="622" mi="8" ci="0" mb="0" cb="0"/><line nr="634" mi="7" ci="0" mb="0" cb="0"/><line nr="646" mi="8" ci="0" mb="0" cb="0"/><line nr="647" mi="3" ci="0" mb="0" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="650" mi="8" ci="0" mb="2" cb="0"/><line nr="651" mi="20" ci="0" mb="0" cb="0"/><line nr="654" mi="10" ci="0" mb="0" cb="0"/><line nr="666" mi="8" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="5" ci="0" mb="0" cb="0"/><line nr="670" mi="8" ci="0" mb="2" cb="0"/><line nr="671" mi="20" ci="0" mb="0" cb="0"/><line nr="674" mi="10" ci="0" mb="0" cb="0"/><line nr="684" mi="6" ci="0" mb="0" cb="0"/><line nr="693" mi="0" ci="3" mb="0" cb="0"/><line nr="705" mi="6" ci="0" mb="0" cb="0"/><line nr="707" mi="8" ci="0" mb="2" cb="0"/><line nr="708" mi="10" ci="0" mb="2" cb="0"/><line nr="709" mi="12" ci="0" mb="0" cb="0"/><line nr="713" mi="2" ci="0" mb="0" cb="0"/><line nr="724" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="7" ci="0" mb="0" cb="0"/><line nr="737" mi="13" ci="0" mb="0" cb="0"/><line nr="739" mi="2" ci="0" mb="0" cb="0"/><line nr="750" mi="4" ci="0" mb="0" cb="0"/><line nr="752" mi="8" ci="0" mb="2" cb="0"/><line nr="753" mi="9" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="6" ci="0" mb="0" cb="0"/><line nr="769" mi="8" ci="0" mb="2" cb="0"/><line nr="770" mi="12" ci="0" mb="0" cb="0"/><line nr="773" mi="2" ci="0" mb="0" cb="0"/><line nr="787" mi="10" ci="0" mb="0" cb="0"/><line nr="789" mi="9" ci="0" mb="2" cb="0"/><line nr="790" mi="18" ci="0" mb="0" cb="0"/><line nr="793" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="10" ci="0" mb="0" cb="0"/><line nr="813" mi="8" ci="0" mb="0" cb="0"/><line nr="823" mi="16" ci="0" mb="2" cb="0"/><line nr="824" mi="4" ci="0" mb="0" cb="0"/><line nr="826" mi="1" ci="0" mb="0" cb="0"/><line nr="837" mi="16" ci="0" mb="2" cb="0"/><line nr="838" mi="4" ci="0" mb="0" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="842" mi="1" ci="0" mb="0" cb="0"/><line nr="855" mi="16" ci="0" mb="2" cb="0"/><line nr="856" mi="6" ci="0" mb="0" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="860" mi="1" ci="0" mb="0" cb="0"/><line nr="869" mi="2" ci="0" mb="0" cb="0"/><line nr="871" mi="3" ci="0" mb="2" cb="0"/><line nr="872" mi="2" ci="0" mb="0" cb="0"/><line nr="873" mi="4" ci="0" mb="0" cb="0"/><line nr="875" mi="8" ci="0" mb="2" cb="0"/><line nr="876" mi="5" ci="0" mb="0" cb="0"/><line nr="878" mi="7" ci="0" mb="0" cb="0"/><line nr="880" mi="3" ci="0" mb="2" cb="0"/><line nr="881" mi="5" ci="0" mb="0" cb="0"/><line nr="884" mi="5" ci="0" mb="0" cb="0"/><line nr="887" mi="5" ci="0" mb="0" cb="0"/><line nr="888" mi="8" ci="0" mb="2" cb="0"/><line nr="889" mi="9" ci="0" mb="4" cb="0"/><line nr="890" mi="4" ci="0" mb="0" cb="0"/><line nr="891" mi="5" ci="0" mb="0" cb="0"/><line nr="894" mi="4" ci="0" mb="0" cb="0"/><line nr="896" mi="8" ci="0" mb="2" cb="0"/><line nr="898" mi="9" ci="0" mb="4" cb="0"/><line nr="899" mi="4" ci="0" mb="0" cb="0"/><line nr="900" mi="14" ci="0" mb="0" cb="0"/><line nr="901" mi="11" ci="0" mb="0" cb="0"/><line nr="902" mi="23" ci="0" mb="0" cb="0"/><line nr="903" mi="1" ci="0" mb="0" cb="0"/><line nr="906" mi="8" ci="0" mb="0" cb="0"/><line nr="907" mi="19" ci="0" mb="0" cb="0"/><line nr="908" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="4" ci="0" mb="0" cb="0"/><line nr="914" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="9" ci="0" mb="0" cb="0"/><line nr="917" mi="1" ci="0" mb="0" cb="0"/><line nr="919" mi="3" ci="0" mb="0" cb="0"/><line nr="922" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1375" covered="169"/><counter type="BRANCH" missed="100" covered="14"/><counter type="LINE" missed="230" covered="42"/><counter type="COMPLEXITY" missed="95" covered="10"/><counter type="METHOD" missed="42" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CholeskyDecomposition.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="5" ci="0" mb="0" cb="0"/><line nr="12" mi="19" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="2" cb="0"/><line nr="15" mi="7" ci="0" mb="2" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="7" ci="0" mb="2" cb="0"/><line nr="19" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="14" ci="0" mb="0" cb="0"/><line nr="27" mi="12" ci="0" mb="2" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixProperties.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="5" ci="5" mb="3" cb="1"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="8" ci="0" mb="2" cb="0"/><line nr="106" mi="9" ci="0" mb="2" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="9" ci="0" mb="2" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="2" cb="0"/><line nr="174" mi="8" ci="0" mb="2" cb="0"/><line nr="175" mi="9" ci="0" mb="2" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="2" cb="0"/><line nr="196" mi="8" ci="0" mb="2" cb="0"/><line nr="197" mi="9" ci="0" mb="2" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="8" ci="0" mb="2" cb="0"/><line nr="217" mi="8" ci="0" mb="2" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="8" ci="0" mb="2" cb="0"/><line nr="239" mi="8" ci="0" mb="2" cb="0"/><line nr="240" mi="8" ci="0" mb="2" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="4" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="8" ci="0" mb="4" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="8" ci="0" mb="4" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="8" ci="0" mb="4" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="2" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="7" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="2" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="2" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="2" cb="0"/><line nr="426" mi="7" ci="0" mb="0" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="2" cb="0"/><line nr="448" mi="7" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="2" cb="0"/><line nr="483" mi="3" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="2" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="2" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="10" ci="0" mb="2" cb="0"/><line nr="505" mi="10" ci="0" mb="2" cb="0"/><line nr="506" mi="9" ci="0" mb="2" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="3" ci="0" mb="2" cb="0"/><line nr="528" mi="7" ci="0" mb="0" cb="0"/><line nr="531" mi="10" ci="0" mb="2" cb="0"/><line nr="532" mi="10" ci="0" mb="2" cb="0"/><line nr="533" mi="9" ci="0" mb="2" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="2" cb="0"/><line nr="554" mi="7" ci="0" mb="0" cb="0"/><line nr="557" mi="10" ci="0" mb="4" cb="0"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="2" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="7" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="2" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="631" mi="15" ci="0" mb="8" cb="0"/><line nr="632" mi="7" ci="0" mb="0" cb="0"/><line nr="636" mi="8" ci="0" mb="2" cb="0"/><line nr="637" mi="8" ci="0" mb="2" cb="0"/><line nr="638" mi="12" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="644" mi="9" ci="0" mb="0" cb="0"/><line nr="649" mi="5" ci="0" mb="0" cb="0"/><line nr="650" mi="7" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="4" ci="0" mb="0" cb="0"/><line nr="665" mi="7" ci="0" mb="0" cb="0"/><line nr="666" mi="6" ci="0" mb="0" cb="0"/><line nr="671" mi="8" ci="0" mb="2" cb="0"/><line nr="672" mi="6" ci="0" mb="2" cb="0"/><line nr="673" mi="10" ci="0" mb="2" cb="0"/><line nr="674" mi="9" ci="0" mb="2" cb="0"/><line nr="675" mi="13" ci="0" mb="2" cb="0"/><line nr="676" mi="12" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="698" mi="3" ci="0" mb="0" cb="0"/><line nr="699" mi="3" ci="0" mb="0" cb="0"/><line nr="700" mi="7" ci="0" mb="0" cb="0"/><line nr="701" mi="6" ci="0" mb="0" cb="0"/><line nr="706" mi="8" ci="0" mb="2" cb="0"/><line nr="707" mi="6" ci="0" mb="2" cb="0"/><line nr="708" mi="10" ci="0" mb="2" cb="0"/><line nr="709" mi="9" ci="0" mb="2" cb="0"/><line nr="710" mi="13" ci="0" mb="2" cb="0"/><line nr="711" mi="12" ci="0" mb="0" cb="0"/><line nr="724" mi="2" ci="0" mb="0" cb="0"/><line nr="735" mi="4" ci="0" mb="0" cb="0"/><line nr="737" mi="7" ci="0" mb="0" cb="0"/><line nr="738" mi="6" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="744" mi="8" ci="0" mb="2" cb="0"/><line nr="745" mi="6" ci="0" mb="2" cb="0"/><line nr="746" mi="6" ci="0" mb="0" cb="0"/><line nr="748" mi="10" ci="0" mb="2" cb="0"/><line nr="749" mi="9" ci="0" mb="2" cb="0"/><line nr="750" mi="13" ci="0" mb="2" cb="0"/><line nr="751" mi="6" ci="0" mb="0" cb="0"/><line nr="760" mi="11" ci="0" mb="2" cb="0"/><line nr="761" mi="5" ci="0" mb="0" cb="0"/><line nr="762" mi="7" ci="0" mb="0" cb="0"/><line nr="764" mi="8" ci="0" mb="2" cb="0"/><line nr="765" mi="5" ci="0" mb="2" cb="0"/><line nr="767" mi="8" ci="0" mb="2" cb="0"/><line nr="768" mi="9" ci="0" mb="2" cb="0"/><line nr="769" mi="13" ci="0" mb="0" cb="0"/><line nr="770" mi="1" ci="0" mb="0" cb="0"/><line nr="776" mi="7" ci="0" mb="0" cb="0"/><line nr="777" mi="1" ci="0" mb="0" cb="0"/><line nr="779" mi="2" ci="0" mb="0" cb="0"/><line nr="790" mi="5" ci="0" mb="0" cb="0"/><line nr="799" mi="3" ci="0" mb="0" cb="0"/><line nr="800" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="8" ci="0" mb="2" cb="0"/><line nr="803" mi="8" ci="0" mb="2" cb="0"/><line nr="804" mi="17" ci="0" mb="4" cb="0"/><line nr="805" mi="2" ci="0" mb="0" cb="0"/><line nr="806" mi="2" ci="0" mb="0" cb="0"/><line nr="811" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="2" ci="0" mb="0" cb="0"/><line nr="823" mi="8" ci="0" mb="2" cb="0"/><line nr="824" mi="8" ci="0" mb="2" cb="0"/><line nr="825" mi="17" ci="0" mb="4" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="827" mi="2" ci="0" mb="0" cb="0"/><line nr="832" mi="2" ci="0" mb="0" cb="0"/><line nr="845" mi="2" ci="0" mb="0" cb="0"/><line nr="848" mi="3" ci="0" mb="2" cb="0"/><line nr="849" mi="3" ci="0" mb="0" cb="0"/><line nr="850" mi="2" ci="0" mb="0" cb="0"/><line nr="852" mi="8" ci="0" mb="2" cb="0"/><line nr="853" mi="17" ci="0" mb="4" cb="0"/><line nr="855" mi="2" ci="0" mb="0" cb="0"/><line nr="860" mi="2" ci="0" mb="0" cb="0"/><line nr="873" mi="2" ci="0" mb="0" cb="0"/><line nr="876" mi="3" ci="0" mb="2" cb="0"/><line nr="877" mi="3" ci="0" mb="0" cb="0"/><line nr="878" mi="2" ci="0" mb="0" cb="0"/><line nr="880" mi="8" ci="0" mb="2" cb="0"/><line nr="881" mi="17" ci="0" mb="4" cb="0"/><line nr="883" mi="2" ci="0" mb="0" cb="0"/><line nr="888" mi="2" ci="0" mb="0" cb="0"/><line nr="905" mi="3" ci="0" mb="0" cb="0"/><line nr="907" mi="3" ci="0" mb="0" cb="0"/><line nr="908" mi="5" ci="0" mb="0" cb="0"/><line nr="909" mi="11" ci="0" mb="0" cb="0"/><line nr="911" mi="4" ci="0" mb="0" cb="0"/><line nr="912" mi="7" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="0" cb="0"/><line nr="914" mi="7" ci="0" mb="0" cb="0"/><line nr="916" mi="6" ci="0" mb="0" cb="0"/><line nr="917" mi="4" ci="0" mb="0" cb="0"/><line nr="919" mi="8" ci="0" mb="2" cb="0"/><line nr="921" mi="18" ci="0" mb="4" cb="0"/><line nr="922" mi="11" ci="0" mb="0" cb="0"/><line nr="927" mi="5" ci="0" mb="0" cb="0"/><line nr="931" mi="4" ci="0" mb="0" cb="0"/><line nr="932" mi="4" ci="0" mb="0" cb="0"/><line nr="934" mi="2" ci="0" mb="0" cb="0"/><line nr="948" mi="5" ci="0" mb="0" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="963" mi="4" ci="0" mb="0" cb="0"/><line nr="974" mi="3" ci="0" mb="0" cb="0"/><line nr="975" mi="4" ci="0" mb="0" cb="0"/><line nr="976" mi="2" ci="0" mb="0" cb="0"/><line nr="977" mi="2" ci="0" mb="0" cb="0"/><line nr="979" mi="11" ci="0" mb="0" cb="0"/><line nr="981" mi="4" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="8" ci="0" mb="2" cb="0"/><line nr="985" mi="20" ci="0" mb="6" cb="0"/><line nr="986" mi="2" ci="0" mb="0" cb="0"/><line nr="988" mi="8" ci="0" mb="2" cb="0"/><line nr="989" mi="14" ci="0" mb="2" cb="0"/><line nr="990" mi="1" ci="0" mb="0" cb="0"/><line nr="994" mi="5" ci="0" mb="0" cb="0"/><line nr="996" mi="12" ci="0" mb="0" cb="0"/><line nr="997" mi="6" ci="0" mb="0" cb="0"/><line nr="1001" mi="8" ci="0" mb="2" cb="0"/><line nr="1002" mi="9" ci="0" mb="2" cb="0"/><line nr="1003" mi="2" ci="0" mb="0" cb="0"/><line nr="1004" mi="1" ci="0" mb="0" cb="0"/><line nr="1008" mi="2" ci="0" mb="0" cb="0"/><line nr="1013" mi="87" ci="0" mb="0" cb="0"/><line nr="1018" mi="87" ci="0" mb="0" cb="0"/><line nr="1023" mi="54" ci="0" mb="0" cb="0"/><line nr="1027" mi="87" ci="0" mb="0" cb="0"/><line nr="1032" mi="135" ci="0" mb="0" cb="0"/><line nr="1037" mi="81" ci="0" mb="0" cb="0"/><line nr="1041" mi="54" ci="0" mb="0" cb="0"/><line nr="1045" mi="87" ci="0" mb="0" cb="0"/><line nr="1050" mi="87" ci="0" mb="0" cb="0"/><line nr="1056" mi="5" ci="0" mb="0" cb="0"/><line nr="1059" mi="3" ci="0" mb="0" cb="0"/><line nr="1061" mi="15" ci="0" mb="0" cb="0"/><line nr="1062" mi="17" ci="0" mb="0" cb="0"/><line nr="1063" mi="17" ci="0" mb="0" cb="0"/><line nr="1065" mi="10" ci="0" mb="2" cb="0"/><line nr="1066" mi="28" ci="0" mb="0" cb="0"/><line nr="1070" mi="3" ci="0" mb="0" cb="0"/><line nr="1072" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2318" covered="26"/><counter type="BRANCH" missed="213" covered="1"/><counter type="LINE" missed="289" covered="8"/><counter type="COMPLEXITY" missed="148" covered="4"/><counter type="METHOD" missed="41" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vector.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="7" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="2" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="2" cb="0"/><line nr="277" mi="9" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="9" ci="0" mb="2" cb="0"/><line nr="292" mi="14" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="2" cb="0"/><line nr="298" mi="14" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="11" ci="0" mb="6" cb="0"/><line nr="352" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="2" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="16" ci="0" mb="2" cb="0"/><line nr="362" mi="7" ci="0" mb="0" cb="0"/><line nr="365" mi="9" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="2" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="11" ci="0" mb="0" cb="0"/><line nr="424" mi="11" ci="0" mb="0" cb="0"/><line nr="428" mi="7" ci="0" mb="0" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="2" cb="0"/><line nr="440" mi="9" ci="0" mb="2" cb="0"/><line nr="441" mi="12" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="2" cb="0"/><line nr="445" mi="9" ci="0" mb="2" cb="0"/><line nr="446" mi="12" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixOperations.java"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="24" mi="8" ci="0" mb="2" cb="0"/><line nr="25" mi="22" ci="0" mb="0" cb="0"/><line nr="26" mi="22" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="44" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="16" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="8" ci="0" mb="2" cb="0"/><line nr="68" mi="22" ci="0" mb="0" cb="0"/><line nr="69" mi="22" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="8" ci="0" mb="2" cb="0"/><line nr="110" mi="41" ci="0" mb="0" cb="0"/><line nr="111" mi="41" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="134" mi="38" ci="0" mb="0" cb="0"/><line nr="135" mi="38" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="2" cb="0"/><line nr="166" mi="8" ci="0" mb="2" cb="0"/><line nr="167" mi="14" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="8" ci="0" mb="2" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="70" ci="0" mb="0" cb="0"/><line nr="191" mi="70" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="2" cb="0"/><line nr="247" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="0" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="2" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="7" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="8" ci="0" mb="2" cb="0"/><line nr="280" mi="8" ci="0" mb="2" cb="0"/><line nr="281" mi="13" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="8" ci="0" mb="2" cb="0"/><line nr="302" mi="13" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="8" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="8" ci="0" mb="2" cb="0"/><line nr="334" mi="8" ci="0" mb="2" cb="0"/><line nr="336" mi="13" ci="0" mb="4" cb="0"/><line nr="337" mi="13" ci="0" mb="4" cb="0"/><line nr="338" mi="12" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="8" ci="0" mb="0" cb="0"/><line nr="357" mi="8" ci="0" mb="2" cb="0"/><line nr="358" mi="8" ci="0" mb="2" cb="0"/><line nr="359" mi="13" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="413" mi="8" ci="0" mb="4" cb="0"/><line nr="414" mi="7" ci="0" mb="0" cb="0"/><line nr="416" mi="8" ci="0" mb="4" cb="0"/><line nr="417" mi="7" ci="0" mb="0" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="7" ci="0" mb="0" cb="0"/><line nr="420" mi="7" ci="0" mb="0" cb="0"/><line nr="422" mi="8" ci="0" mb="0" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="8" ci="0" mb="2" cb="0"/><line nr="426" mi="6" ci="0" mb="0" cb="0"/><line nr="428" mi="8" ci="0" mb="0" cb="0"/><line nr="429" mi="9" ci="0" mb="0" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="15" ci="0" mb="0" cb="0"/><line nr="451" mi="10" ci="0" mb="2" cb="0"/><line nr="452" mi="11" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="467" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="2" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="473" mi="8" ci="0" mb="4" cb="0"/><line nr="474" mi="7" ci="0" mb="0" cb="0"/><line nr="475" mi="7" ci="0" mb="0" cb="0"/><line nr="476" mi="7" ci="0" mb="0" cb="0"/><line nr="477" mi="7" ci="0" mb="0" cb="0"/><line nr="479" mi="8" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="3" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="2" cb="0"/><line nr="514" mi="11" ci="0" mb="2" cb="0"/><line nr="515" mi="15" ci="0" mb="0" cb="0"/><line nr="519" mi="16" ci="0" mb="0" cb="0"/><line nr="521" mi="10" ci="0" mb="2" cb="0"/><line nr="522" mi="11" ci="0" mb="2" cb="0"/><line nr="523" mi="5" ci="0" mb="2" cb="0"/><line nr="524" mi="13" ci="0" mb="0" cb="0"/><line nr="526" mi="16" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="2" cb="0"/><line nr="532" mi="7" ci="0" mb="2" cb="0"/><line nr="533" mi="11" ci="0" mb="0" cb="0"/><line nr="537" mi="18" ci="0" mb="0" cb="0"/><line nr="539" mi="10" ci="0" mb="2" cb="0"/><line nr="540" mi="11" ci="0" mb="2" cb="0"/><line nr="541" mi="7" ci="0" mb="2" cb="0"/><line nr="542" mi="13" ci="0" mb="0" cb="0"/><line nr="544" mi="18" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="0" cb="0"/><line nr="564" mi="5" ci="0" mb="0" cb="0"/><line nr="587" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="591" mi="2" ci="0" mb="0" cb="0"/><line nr="593" mi="8" ci="0" mb="4" cb="0"/><line nr="594" mi="9" ci="0" mb="2" cb="0"/><line nr="595" mi="9" ci="0" mb="0" cb="0"/><line nr="597" mi="8" ci="0" mb="2" cb="0"/><line nr="598" mi="14" ci="0" mb="0" cb="0"/><line nr="602" mi="10" ci="0" mb="2" cb="0"/><line nr="603" mi="7" ci="0" mb="0" cb="0"/><line nr="605" mi="8" ci="0" mb="2" cb="0"/><line nr="606" mi="20" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="616" mi="7" ci="0" mb="0" cb="0"/><line nr="619" mi="1" ci="0" mb="0" cb="0"/><line nr="620" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="2" cb="0"/><line nr="653" mi="3" ci="0" mb="0" cb="0"/><line nr="678" mi="4" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="685" mi="8" ci="0" mb="4" cb="0"/><line nr="686" mi="2" ci="0" mb="0" cb="0"/><line nr="687" mi="7" ci="0" mb="0" cb="0"/><line nr="689" mi="8" ci="0" mb="2" cb="0"/><line nr="690" mi="9" ci="0" mb="2" cb="0"/><line nr="697" mi="8" ci="0" mb="0" cb="0"/><line nr="699" mi="9" ci="0" mb="2" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="701" mi="7" ci="0" mb="0" cb="0"/><line nr="705" mi="9" ci="0" mb="2" cb="0"/><line nr="706" mi="3" ci="0" mb="2" cb="0"/><line nr="707" mi="5" ci="0" mb="0" cb="0"/><line nr="710" mi="9" ci="0" mb="0" cb="0"/><line nr="712" mi="8" ci="0" mb="2" cb="0"/><line nr="713" mi="14" ci="0" mb="0" cb="0"/><line nr="716" mi="8" ci="0" mb="2" cb="0"/><line nr="717" mi="7" ci="0" mb="0" cb="0"/><line nr="719" mi="3" ci="0" mb="2" cb="0"/><line nr="720" mi="7" ci="0" mb="0" cb="0"/><line nr="722" mi="10" ci="0" mb="2" cb="0"/><line nr="724" mi="15" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="7" ci="0" mb="0" cb="0"/><line nr="732" mi="1" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><line nr="736" mi="2" ci="0" mb="0" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="766" mi="4" ci="0" mb="0" cb="0"/><line nr="769" mi="2" ci="0" mb="0" cb="0"/><line nr="770" mi="2" ci="0" mb="0" cb="0"/><line nr="772" mi="8" ci="0" mb="4" cb="0"/><line nr="773" mi="9" ci="0" mb="2" cb="0"/><line nr="774" mi="9" ci="0" mb="0" cb="0"/><line nr="776" mi="8" ci="0" mb="2" cb="0"/><line nr="777" mi="14" ci="0" mb="0" cb="0"/><line nr="781" mi="8" ci="0" mb="2" cb="0"/><line nr="782" mi="7" ci="0" mb="0" cb="0"/><line nr="784" mi="3" ci="0" mb="2" cb="0"/><line nr="785" mi="8" ci="0" mb="2" cb="0"/><line nr="786" mi="20" ci="0" mb="0" cb="0"/><line nr="787" mi="1" ci="0" mb="0" cb="0"/><line nr="792" mi="1" ci="0" mb="0" cb="0"/><line nr="793" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="2" ci="0" mb="0" cb="0"/><line nr="808" mi="3" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="812" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="3" ci="0" mb="0" cb="0"/><line nr="827" mi="3" ci="0" mb="2" cb="0"/><line nr="828" mi="7" ci="0" mb="0" cb="0"/><line nr="831" mi="7" ci="0" mb="0" cb="0"/><line nr="833" mi="8" ci="0" mb="2" cb="0"/><line nr="834" mi="9" ci="0" mb="0" cb="0"/><line nr="837" mi="2" ci="0" mb="0" cb="0"/><line nr="850" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="0" cb="0"/><line nr="865" mi="3" ci="0" mb="0" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="868" mi="9" ci="0" mb="2" cb="0"/><line nr="869" mi="5" ci="0" mb="2" cb="0"/><line nr="870" mi="1" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="888" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="6" ci="0" mb="0" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="902" mi="3" ci="0" mb="2" cb="0"/><line nr="903" mi="5" ci="0" mb="0" cb="0"/><line nr="906" mi="3" ci="0" mb="0" cb="0"/><line nr="907" mi="2" ci="0" mb="0" cb="0"/><line nr="909" mi="10" ci="0" mb="2" cb="0"/><line nr="910" mi="11" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="2" cb="0"/><line nr="922" mi="5" ci="0" mb="0" cb="0"/><line nr="926" mi="10" ci="0" mb="0" cb="0"/><line nr="937" mi="3" ci="0" mb="0" cb="0"/><line nr="956" mi="8" ci="0" mb="0" cb="0"/><line nr="957" mi="4" ci="0" mb="0" cb="0"/><line nr="959" mi="3" ci="0" mb="2" cb="0"/><line nr="960" mi="5" ci="0" mb="0" cb="0"/><line nr="963" mi="8" ci="0" mb="2" cb="0"/><line nr="965" mi="8" ci="0" mb="0" cb="0"/><line nr="968" mi="2" ci="0" mb="0" cb="0"/><line nr="978" mi="7" ci="0" mb="0" cb="0"/><line nr="980" mi="8" ci="0" mb="2" cb="0"/><line nr="981" mi="8" ci="0" mb="2" cb="0"/><line nr="982" mi="13" ci="0" mb="0" cb="0"/><line nr="986" mi="2" ci="0" mb="0" cb="0"/><line nr="993" mi="54" ci="0" mb="0" cb="0"/><line nr="997" mi="87" ci="0" mb="0" cb="0"/><line nr="1002" mi="41" ci="0" mb="0" cb="0"/><line nr="1005" mi="5" ci="0" mb="0" cb="0"/><line nr="1006" mi="5" ci="0" mb="0" cb="0"/><line nr="1007" mi="5" ci="0" mb="0" cb="0"/><line nr="1009" mi="16" ci="0" mb="0" cb="0"/><line nr="1010" mi="15" ci="0" mb="0" cb="0"/><line nr="1012" mi="26" ci="0" mb="0" cb="0"/><line nr="1013" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2309" covered="0"/><counter type="BRANCH" missed="172" covered="0"/><counter type="LINE" missed="284" covered="0"/><counter type="COMPLEXITY" missed="127" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="11743" covered="204"/><counter type="BRANCH" missed="844" covered="15"/><counter type="LINE" missed="1644" covered="54"/><counter type="COMPLEXITY" missed="666" covered="15"/><counter type="METHOD" missed="239" covered="11"/><counter type="CLASS" missed="12" covered="3"/></package><counter type="INSTRUCTION" missed="14733" covered="785"/><counter type="BRANCH" missed="1110" covered="81"/><counter type="LINE" missed="2067" covered="198"/><counter type="COMPLEXITY" missed="896" covered="58"/><counter type="METHOD" missed="320" covered="37"/><counter type="CLASS" missed="16" covered="10"/></report>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Java-Linear-Algebra"><sessioninfo id="DESKTOP-3F0SSFQ-fe00496a" start="1632785396729" dump="1632785398884"/><sessioninfo id="DESKTOP-3F0SSFQ-9cdf880c" start="1632787027066" dump="1632787028389"/><sessioninfo id="DESKTOP-3F0SSFQ-33e4a7ad" start="1632787824685" dump="1632787826107"/><sessioninfo id="DESKTOP-3F0SSFQ-d759012b" start="1632787898313" dump="1632787899650"/><sessioninfo id="DESKTOP-3F0SSFQ-653be16e" start="1632788590487" dump="1632788591452"/><sessioninfo id="DESKTOP-3F0SSFQ-e4543b44" start="1632788616892" dump="1632788617864"/><sessioninfo id="DESKTOP-3F0SSFQ-4d4af810" start="1632788635046" dump="1632788635903"/><sessioninfo id="DESKTOP-3F0SSFQ-ca0ff9dc" start="1632789177899" dump="1632789179094"/><sessioninfo id="DESKTOP-3F0SSFQ-2b03aa12" start="1632789197815" dump="1632789198970"/><sessioninfo id="DESKTOP-3F0SSFQ-92377961" start="1632789713743" dump="1632789715200"/><sessioninfo id="DESKTOP-3F0SSFQ-f67dcf9d" start="1632791223035" dump="1632791223756"/><sessioninfo id="DESKTOP-3F0SSFQ-3deffdcc" start="1632791225995" dump="1632791227517"/><sessioninfo id="DESKTOP-3F0SSFQ-8370ba74" start="1632791234697" dump="1632791236818"/><sessioninfo id="DESKTOP-3F0SSFQ-e80853d4" start="1632791240963" dump="1632791242073"/><sessioninfo id="DESKTOP-3F0SSFQ-9ee31791" start="1632791253485" dump="1632791254576"/><sessioninfo id="DESKTOP-3F0SSFQ-58a45499" start="1632791643884" dump="1632791645145"/><sessioninfo id="DESKTOP-3F0SSFQ-6b36a7ae" start="1632791710919" dump="1632791711976"/><sessioninfo id="DESKTOP-3F0SSFQ-cd238e7f" start="1632792212364" dump="1632792213589"/><sessioninfo id="DESKTOP-3F0SSFQ-32a355ac" start="1632792226532" dump="1632792227738"/><sessioninfo id="DESKTOP-3F0SSFQ-cf2ae673" start="1632792263916" dump="1632792265083"/><sessioninfo id="DESKTOP-3F0SSFQ-d8ae4a1d" start="1632792284518" dump="1632792285894"/><sessioninfo id="DESKTOP-3F0SSFQ-590642cc" start="1632792572203" dump="1632792573348"/><sessioninfo id="DESKTOP-3F0SSFQ-c18502e8" start="1632792970189" dump="1632792971270"/><sessioninfo id="DESKTOP-3F0SSFQ-bb68ec51" start="1632793008312" dump="1632793009524"/><sessioninfo id="DESKTOP-3F0SSFQ-dc7eaf97" start="1632794014578" dump="1632794015732"/><sessioninfo id="DESKTOP-3F0SSFQ-4fd69810" start="1632794041217" dump="1632794042229"/><sessioninfo id="DESKTOP-3F0SSFQ-96825214" start="1632794338912" dump="1632794340518"/><sessioninfo id="DESKTOP-3F0SSFQ-89a0fc42" start="1632794376493" dump="1632794377631"/><sessioninfo id="DESKTOP-3F0SSFQ-cab82cf0" start="1632794402490" dump="1632794403864"/><sessioninfo id="DESKTOP-3F0SSFQ-c139591e" start="1632796470111" dump="1632796470839"/><sessioninfo id="DESKTOP-3F0SSFQ-82b8fd28" start="1632796538375" dump="1632796539119"/><sessioninfo id="DESKTOP-3F0SSFQ-3bdff75d" start="1632796570427" dump="1632796571185"/><sessioninfo id="DESKTOP-3F0SSFQ-cdb98687" start="1632796751134" dump="1632796751986"/><sessioninfo id="DESKTOP-3F0SSFQ-e6b68394" start="1632796813525" dump="1632796814279"/><sessioninfo id="DESKTOP-3F0SSFQ-9c517ae6" start="1632796822743" dump="1632796823495"/><sessioninfo id="DESKTOP-3F0SSFQ-7849bf85" start="1632805631900" dump="1632805632787"/><sessioninfo id="DESKTOP-3F0SSFQ-8af91b33" start="1634341976579" dump="1634341977263"/><sessioninfo id="DESKTOP-3F0SSFQ-3c496517" start="1634341993197" dump="1634341994053"/><sessioninfo id="DESKTOP-3F0SSFQ-a1df1e07" start="1634342019237" dump="1634342019963"/><sessioninfo id="DESKTOP-3F0SSFQ-aff8a924" start="1634342037885" dump="1634342038662"/><sessioninfo id="DESKTOP-3F0SSFQ-f94da3ae" start="1634342585320" dump="1634342586098"/><sessioninfo id="Jacobs-MacBook-Pro.local-f3f79794" start="1634836555186" dump="1634836564541"/><sessioninfo id="DESKTOP-3F0SSFQ-1c4bcb6b" start="1643427498985" dump="1643427499604"/><sessioninfo id="BLD-e50ef23e" start="1648105673043" dump="1648105673441"/><sessioninfo id="BLD-74c6d6ca" start="1648105701195" dump="1648105701608"/><package name="linalg/complex_number"><class name="linalg/complex_number/CNumber" sourcefilename="CNumber.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DD)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Llinalg/complex_number/CNumber;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randn" desc="(Z)Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="()Llinalg/complex_number/CNumber;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="()Llinalg/complex_number/CNumber;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(D)Llinalg/complex_number/CNumber;" line="147"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(DD[Z)Llinalg/complex_number/CNumber;" line="181"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="212"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="224"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;[Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="238"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="258"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="270"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="282"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="309"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="323"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addInv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="355"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="387"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(D)Llinalg/complex_number/CNumber;" line="408"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="419"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="435"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allSqrt" desc="(Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="468"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sign" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="483"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="498"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(D)Z" line="521"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="542"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nearZero" desc="(D)Z" line="564"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llinalg/complex_number/CNumber;)I" line="578"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(Llinalg/complex_number/CNumber;)I" line="594"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(D)I" line="610"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mag" desc="()D" line="623"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="638"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="661"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReal" desc="()D" line="677"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImaginary" desc="()D" line="685"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="695"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="705"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isImaginary" desc="()Z" line="715"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInt" desc="()Z" line="725"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleValue" desc="()D" line="742"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatValue" desc="()F" line="752"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intValue" desc="()I" line="762"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longValue" desc="()J" line="772"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleImaginaryValue" desc="()D" line="780"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatImaginaryValue" desc="()F" line="790"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intImaginaryValue" desc="()I" line="799"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longImaginaryValue" desc="()J" line="809"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="(Llinalg/complex_number/CNumber;)I" line="818"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="823"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CNumber.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="155" mi="39" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="4" cb="0"/><line nr="191" mi="8" ci="0" mb="4" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="8" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="0" cb="0"/><line nr="224" mi="14" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="14" ci="0" mb="0" cb="0"/><line nr="270" mi="26" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="8" ci="0" mb="4" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="2" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="50" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="2" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="8" ci="0" mb="2" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="2" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="2" cb="0"/><line nr="390" mi="6" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="2" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="394" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="2" cb="0"/><line nr="436" mi="4" ci="0" mb="2" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="11" ci="0" mb="0" cb="0"/><line nr="442" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="4" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="5" ci="0" mb="0" cb="0"/><line nr="470" mi="8" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="2" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="8" ci="0" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="1" cb="1"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="12" mb="2" cb="2"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="10" ci="0" mb="4" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="2" cb="0"/><line nr="543" mi="6" ci="0" mb="0" cb="0"/><line nr="547" mi="8" ci="0" mb="0" cb="0"/><line nr="548" mi="8" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="9" ci="0" mb="2" cb="0"/><line nr="578" mi="8" ci="0" mb="2" cb="0"/><line nr="579" mi="8" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="8" ci="0" mb="2" cb="0"/><line nr="595" mi="8" ci="0" mb="2" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="7" ci="0" mb="0" cb="0"/><line nr="623" mi="13" ci="0" mb="0" cb="0"/><line nr="638" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="16" ci="0" mb="2" cb="0"/><line nr="641" mi="6" ci="0" mb="2" cb="0"/><line nr="642" mi="2" ci="0" mb="0" cb="0"/><line nr="646" mi="2" ci="0" mb="0" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="663" mi="16" ci="0" mb="2" cb="0"/><line nr="664" mi="6" ci="0" mb="2" cb="0"/><line nr="665" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="695" mi="9" ci="0" mb="2" cb="0"/><line nr="705" mi="9" ci="0" mb="2" cb="0"/><line nr="715" mi="14" ci="0" mb="4" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="2" cb="0"/><line nr="728" mi="3" ci="0" mb="0" cb="0"/><line nr="729" mi="9" ci="0" mb="2" cb="0"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="752" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="4" ci="0" mb="0" cb="0"/><line nr="772" mi="4" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="790" mi="4" ci="0" mb="0" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="818" mi="4" ci="0" mb="0" cb="0"/><line nr="823" mi="2" ci="0" mb="0" cb="0"/><line nr="825" mi="6" ci="0" mb="0" cb="0"/><line nr="827" mi="4" ci="0" mb="2" cb="0"/><line nr="828" mi="6" ci="0" mb="2" cb="0"/><line nr="829" mi="6" ci="0" mb="0" cb="0"/><line nr="831" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="4" ci="0" mb="2" cb="0"/><line nr="836" mi="8" ci="0" mb="4" cb="0"/><line nr="837" mi="3" ci="0" mb="0" cb="0"/><line nr="838" mi="4" ci="0" mb="0" cb="0"/><line nr="839" mi="4" ci="0" mb="2" cb="0"/><line nr="840" mi="3" ci="0" mb="0" cb="0"/><line nr="843" mi="6" ci="0" mb="2" cb="0"/><line nr="844" mi="4" ci="0" mb="2" cb="0"/><line nr="845" mi="4" ci="0" mb="2" cb="0"/><line nr="846" mi="4" ci="0" mb="0" cb="0"/><line nr="848" mi="6" ci="0" mb="0" cb="0"/><line nr="852" mi="4" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="858" mi="8" ci="0" mb="4" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="linalg/util"><class name="linalg/util/StringUtils" sourcefilename="StringUtils.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="center" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="center" desc="(Ljava/lang/String;IC)Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKind" desc="(Ljava/lang/String;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ShapeLexer" sourcefilename="ShapeLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="29"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/LinAlgArrayUtils" sourcefilename="LinAlgArrayUtils.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)[[Llinalg/complex_number/CNumber;" line="21"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II)[[Llinalg/complex_number/CNumber;" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)[[Llinalg/complex_number/CNumber;" line="45"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)[[Llinalg/complex_number/CNumber;" line="58"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)[[Llinalg/complex_number/CNumber;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([[Llinalg/complex_number/CNumber;)V" line="84"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([Llinalg/complex_number/CNumber;)V" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDims" desc="([[Llinalg/complex_number/CNumber;)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)[[Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="([[Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="128"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSection" desc="([[Llinalg/complex_number/CNumber;IIII)[[Llinalg/complex_number/CNumber;" line="144"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="([II)Z" line="157"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([Llinalg/complex_number/CNumber;I)[[Llinalg/complex_number/CNumber;" line="189"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([DI)[[Llinalg/complex_number/CNumber;" line="226"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([II)[[Llinalg/complex_number/CNumber;" line="265"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="291"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="group" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="304"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/NumberLexer" sourcefilename="NumberLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="35"><counter type="INSTRUCTION" missed="113" covered="136"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="36"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="113" covered="142"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="39"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ExampleMatrices" sourcefilename="ExampleMatrices.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="893" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseShape" desc="(Ljava/lang/String;)[I" line="16"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseNumber" desc="(Ljava/lang/String;)[D" line="46"><counter type="INSTRUCTION" missed="85" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="17" covered="23"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/FileManager" sourcefilename="FileManager.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readcsv" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write2csv" desc="(Llinalg/Matrix;Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Lexer" sourcefilename="Lexer.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="digit" desc="(I)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextSymbol" desc="()I" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putBackSymbol" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileManager.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="2" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="2" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="2" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="37" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Parser.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="4" ci="4" mb="3" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="1" cb="1"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="2" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="1"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShapeLexer.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="12" ci="0" mb="8" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="4" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NumberLexer.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="4" cb="4"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="12" ci="0" mb="8" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="1" cb="3"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="1" cb="3"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="113" covered="142"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="39"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleMatrices.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="54" ci="0" mb="0" cb="0"/><line nr="36" mi="372" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="49" mi="54" ci="0" mb="0" cb="0"/><line nr="54" mi="136" ci="0" mb="0" cb="0"/><line nr="60" mi="78" ci="0" mb="0" cb="0"/><line nr="64" mi="54" ci="0" mb="0" cb="0"/><line nr="68" mi="88" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringUtils.java"><line nr="4" mi="2" ci="0" mb="0" cb="0"/><line nr="5" mi="5" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="2" cb="2"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="2"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinAlgArrayUtils.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="2" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="2" cb="0"/><line nr="30" mi="10" ci="0" mb="2" cb="0"/><line nr="31" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="2" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><line nr="85" mi="10" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="2" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="10" ci="0" mb="2" cb="0"/><line nr="148" mi="14" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="16" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="2" cb="0"/><line nr="197" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="230" mi="11" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="2" cb="0"/><line nr="236" mi="11" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="9" ci="0" mb="2" cb="0"/><line nr="269" mi="12" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="9" ci="0" mb="2" cb="0"/><line nr="275" mi="12" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="294" mi="11" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="10" ci="0" mb="2" cb="0"/><line nr="307" mi="10" ci="0" mb="2" cb="0"/><line nr="308" mi="12" ci="0" mb="2" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="1" cb="3"/><line nr="65" mi="0" ci="5" mb="1" cb="1"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Lexer.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="4"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2136" covered="401"/><counter type="BRANCH" missed="162" covered="58"/><counter type="LINE" missed="274" covered="97"/><counter type="COMPLEXITY" missed="127" covered="33"/><counter type="METHOD" missed="34" covered="16"/><counter type="CLASS" missed="3" covered="6"/></package><package name="linalg"><class name="linalg/QRDecomposition" sourcefilename="QRDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="20"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QRtemp" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="94"><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="158"><counter type="INSTRUCTION" missed="622" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/SchurDecomposition" sourcefilename="SchurDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurDecomp" desc="(Llinalg/Matrix;ZZ)[Llinalg/Matrix;" line="13"><counter type="INSTRUCTION" missed="361" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="368" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixOperations" sourcefilename="MatrixOperations.java"><method name="add" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="19"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Llinalg/Matrix;" line="40"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="62"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(D)Llinalg/Matrix;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="98"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemMult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="128"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(D)Llinalg/Matrix;" line="151"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="162"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemDiv" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="182"><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Matrix;" line="207"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="219"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fip" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="231"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directSum" desc="([Llinalg/Matrix;)Llinalg/Matrix;" line="242"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="()Llinalg/Matrix;" line="277"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Llinalg/Matrix;" line="297"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transpose" desc="()Llinalg/Matrix;" line="316"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="T" desc="()Llinalg/Matrix;" line="327"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="()Llinalg/Matrix;" line="354"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjT" desc="()Llinalg/Matrix;" line="375"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hermAdjoint" desc="()Llinalg/Matrix;" line="387"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="H" desc="()Llinalg/Matrix;" line="399"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detRec" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="411"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detQR" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="446"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="det" desc="()Llinalg/complex_number/CNumber;" line="467"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="494"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="510"><counter type="INSTRUCTION" missed="210" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="augment" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="564"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ref" desc="()Llinalg/Matrix;" line="587"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="(Z)Llinalg/Matrix;" line="652"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="()Llinalg/Matrix;" line="678"><counter type="INSTRUCTION" missed="181" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rrefNoPivot" desc="()Llinalg/Matrix;" line="766"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="erref" desc="()Llinalg/Matrix;" line="808"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="()Llinalg/complex_number/CNumber;" line="825"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tr" desc="()Llinalg/complex_number/CNumber;" line="850"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="864"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullity" desc="()I" line="888"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverse" desc="()Llinalg/Matrix;" line="900"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="()Llinalg/Matrix;" line="937"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseTriU" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="956"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recep" desc="()Llinalg/Matrix;" line="978"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="991"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2093" covered="0"/><counter type="BRANCH" missed="172" covered="0"/><counter type="LINE" missed="282" covered="0"/><counter type="COMPLEXITY" missed="127" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/LUDecomposition" sourcefilename="LUDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="53"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPartialPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="85"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUFullPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="122"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDUDecomposition" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="163"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxColIndex" desc="([Llinalg/complex_number/CNumber;I)I" line="186"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxIndex" desc="(Llinalg/Matrix;I)[I" line="201"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixManipulations" sourcefilename="MatrixManipulations.java"><method name="reshape" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="18"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reshape" desc="(II)Llinalg/Matrix;" line="27"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="()Llinalg/Matrix;" line="56"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(I)Llinalg/Matrix;" line="82"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(I)Llinalg/Matrix;" line="121"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[Llinalg/complex_number/CNumber;)V" line="156"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[D)V" line="174"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Llinalg/complex_number/CNumber;II)V" line="198"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(DII)V" line="213"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="(Llinalg/Vector;I)V" line="232"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([Llinalg/complex_number/CNumber;I)V" line="259"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([DI)V" line="282"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="(Llinalg/Vector;I)V" line="307"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([Llinalg/complex_number/CNumber;I)V" line="334"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([DI)V" line="358"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSliceCopy" desc="(IILlinalg/Matrix;)Llinalg/Matrix;" line="382"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSlice" desc="(IILlinalg/Matrix;)V" line="412"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRow" desc="(I)Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRows" desc="([I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCol" desc="(I)Llinalg/Matrix;" line="480"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCols" desc="([I)Llinalg/Matrix;" line="495"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="()Llinalg/Matrix;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="(I)Llinalg/Matrix;" line="538"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="()Llinalg/Matrix;" line="560"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="(I)Llinalg/Matrix;" line="576"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diag" desc="()Llinalg/Matrix;" line="600"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="610"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([D)Llinalg/Matrix;" line="625"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diagAsVector" desc="()Llinalg/Vector;" line="640"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessu" desc="()Llinalg/Matrix;" line="659"><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessuV" desc="()[Llinalg/Matrix;" line="708"><counter type="INSTRUCTION" missed="246" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapRows" desc="(II)Llinalg/Matrix;" line="759"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapCols" desc="(II)Llinalg/Matrix;" line="780"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="802"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ID)Llinalg/Matrix;" line="820"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="831"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ID)Llinalg/Matrix;" line="842"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVector" desc="()Llinalg/Vector;" line="855"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(I)Llinalg/Matrix;" line="889"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundToZero" desc="(I)V" line="907"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="922"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1884" covered="0"/><counter type="BRANCH" missed="148" covered="0"/><counter type="LINE" missed="272" covered="0"/><counter type="COMPLEXITY" missed="115" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/PrintOptions" sourcefilename="PrintOptions.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/SingularValueDecomposition" sourcefilename="SingularValueDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="svd" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="19"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixChecks" sourcefilename="MatrixChecks.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;I)V" line="22"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Solvers" sourcefilename="Solvers.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;[Llinalg/Vector;)[Llinalg/Vector;" line="26"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="55"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="94"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="115"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="backSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="131"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forwardSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="173"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Matrix" sourcefilename="Matrix.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILlinalg/complex_number/CNumber;)V" line="72"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="96"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILlinalg/complex_number/CNumber;)V" line="114"><counter type="INSTRUCTION" missed="7" covered="49"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IID)V" line="142"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Matrix;)V" line="168"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Ljava/lang/String;)V" line="181"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Llinalg/complex_number/CNumber;)V" line="200"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[D)V" line="217"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[I)V" line="236"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="255"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Llinalg/complex_number/CNumber;)V" line="270"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;D)V" line="292"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(I)Llinalg/Matrix;" line="315"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)Llinalg/Matrix;" line="329"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="342"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(I)Llinalg/Matrix;" line="357"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(II)Llinalg/Matrix;" line="378"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="398"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identity" desc="(I)Llinalg/Matrix;" line="428"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(II)Llinalg/Matrix;" line="465"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="van" desc="(Llinalg/Vector;I)Llinalg/Matrix;" line="483"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;DD[Z)Llinalg/Matrix;" line="514"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)Llinalg/Matrix;" line="536"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;[Z)Llinalg/Matrix;" line="556"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II[Z)Llinalg/Matrix;" line="575"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;D)Llinalg/Matrix;" line="592"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)Llinalg/Matrix;" line="609"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)Llinalg/Matrix;" line="622"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)Llinalg/Matrix;" line="634"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomOrthogonal" desc="(I)Llinalg/Matrix;" line="646"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomUnitary" desc="(I)Llinalg/Matrix;" line="666"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ln" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="685"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="708"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="732"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Llinalg/Matrix;" line="754"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()[[Llinalg/complex_number/CNumber;" line="763"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesAsDouble" desc="()[[D" line="775"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="(I)[Llinalg/complex_number/CNumber;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowAsVector" desc="(I)Llinalg/Vector;" line="805"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCol" desc="(I)[Llinalg/complex_number/CNumber;" line="820"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColAsVector" desc="(I)Llinalg/Vector;" line="837"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSlice" desc="(IIII)Llinalg/Matrix;" line="857"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(II)Llinalg/complex_number/CNumber;" line="872"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(II)D" line="883"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="([Ljava/lang/Object;)V" line="893"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="println" desc="([Ljava/lang/Object;)V" line="907"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printSep" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="925"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="939"><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1517" covered="169"/><counter type="BRANCH" missed="118" covered="14"/><counter type="LINE" missed="251" covered="42"/><counter type="COMPLEXITY" missed="107" covered="10"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Vector" sourcefilename="Vector.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="35"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([I)V" line="76"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([II)V" line="93"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([D)V" line="119"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([DI)V" line="136"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;)V" line="162"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;I)V" line="179"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Vector;)V" line="202"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRowVector" desc="()Llinalg/Vector;" line="233"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toColVector" desc="()Llinalg/Vector;" line="249"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="innerProduct" desc="(Llinalg/Vector;)Llinalg/complex_number/CNumber;" line="276"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outerProduct" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="351"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="382"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntries" desc="()[Llinalg/complex_number/CNumber;" line="393"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/Vector;)Llinalg/Vector;" line="408"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Vector;)Llinalg/Vector;" line="419"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Vector;" line="424"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Vector;" line="428"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="()Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/CholeskyDecomposition" sourcefilename="CholeskyDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="choleskyDecomp" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="12"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixComparisons" sourcefilename="MatrixComparisons.java"><method name="equals" desc="(Llinalg/Matrix;)Z" line="15"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;I)Z" line="50"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;)Z" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matMultCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;)Z" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isZero" desc="()Z" line="108"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isI" desc="()Z" line="130"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInv" desc="(Llinalg/Matrix;)Z" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixProperties" sourcefilename="MatrixProperties.java"><method name="numCols" desc="()I" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numRows" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSquare" desc="()Z" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Llinalg/complex_number/CNumber;" line="81"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minReal" desc="()D" line="101"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Llinalg/complex_number/CNumber;" line="126"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReal" desc="()D" line="147"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minComplex" desc="()Llinalg/complex_number/CNumber;" line="170"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxComplex" desc="()Llinalg/complex_number/CNumber;" line="192"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="213"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="235"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVector" desc="()Z" line="259"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="277"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSelfAdjoint" desc="()Z" line="303"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHermation" desc="()Z" line="316"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="()Z" line="334"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSkewSymmetric" desc="()Z" line="357"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="(Ljava/lang/String;)Z" line="392"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOrthogonal" desc="()Z" line="419"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnitary" desc="()Z" line="445"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTri" desc="()I" line="479"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriU" desc="()Z" line="501"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriL" desc="()Z" line="524"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonal" desc="()Z" line="551"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFullRank" desc="()Z" line="567"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingular" desc="()Z" line="580"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="610"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(DD)Llinalg/complex_number/CNumber;" line="628"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="653"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rowSpace" desc="()Llinalg/Matrix;" line="667"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="colSpace" desc="()Llinalg/Matrix;" line="702"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullSpace" desc="()Llinalg/Matrix;" line="739"><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftNullSpace" desc="()Llinalg/Matrix;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPos" desc="()Z" line="803"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNeg" desc="()Z" line="824"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosDef" desc="()Z" line="849"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosSemidef" desc="()Z" line="877"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eig" desc="()[Llinalg/Matrix;" line="909"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVecs" desc="()Llinalg/Matrix;" line="952"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVals" desc="()Llinalg/Matrix;" line="966"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonalizable" desc="()Z" line="978"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="1017"><counter type="INSTRUCTION" missed="858" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2330" covered="18"/><counter type="BRANCH" missed="214" covered="0"/><counter type="LINE" missed="291" covered="6"/><counter type="COMPLEXITY" missed="149" covered="3"/><counter type="METHOD" missed="42" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Decompose" sourcefilename="Decompose.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="45"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUP" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="67"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPQ" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="90"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cholesky" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="177"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="200"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurReal" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="220"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SingularValueDecomposition.java"><line nr="5" mi="2" ci="0" mb="0" cb="0"/><line nr="6" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="36" mi="17" ci="0" mb="0" cb="0"/><line nr="37" mi="17" ci="0" mb="0" cb="0"/><line nr="38" mi="24" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="45" ci="0" mb="0" cb="0"/><line nr="49" mi="87" ci="0" mb="0" cb="0"/><line nr="54" mi="55" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="15" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LUDecomposition.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="5" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="2" cb="0"/><line nr="58" mi="10" ci="0" mb="2" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="20" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="101" mi="14" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="20" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="2" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="2" cb="0"/><line nr="140" mi="14" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="20" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="2" cb="0"/><line nr="171" mi="8" ci="0" mb="2" cb="0"/><line nr="172" mi="19" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="8" ci="0" mb="2" cb="0"/><line nr="190" mi="6" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="2" cb="0"/><line nr="205" mi="8" ci="0" mb="2" cb="0"/><line nr="206" mi="7" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrintOptions.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixChecks.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="2" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="7" ci="0" mb="2" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Decompose.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="2" cb="0"/><line nr="201" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QRDecomposition.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="9" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="19" ci="0" mb="2" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="2" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="19" ci="0" mb="2" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="15" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="0" cb="0"/><line nr="120" mi="15" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="15" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="13" ci="0" mb="0" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="15" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="54" ci="0" mb="0" cb="0"/><line nr="162" mi="87" ci="0" mb="0" cb="0"/><line nr="167" mi="41" ci="0" mb="0" cb="0"/><line nr="170" mi="203" ci="0" mb="0" cb="0"/><line nr="176" mi="87" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="19" ci="0" mb="0" cb="0"/><line nr="186" mi="19" ci="0" mb="0" cb="0"/><line nr="187" mi="17" ci="0" mb="0" cb="0"/><line nr="188" mi="24" ci="0" mb="0" cb="0"/><line nr="189" mi="23" ci="0" mb="0" cb="0"/><line nr="190" mi="16" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixComparisons.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="4" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="24" mi="8" ci="0" mb="2" cb="0"/><line nr="25" mi="14" ci="0" mb="2" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="2" cb="0"/><line nr="112" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchurDecomposition.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="2" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="17" ci="0" mb="4" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="17" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="18" ci="0" mb="0" cb="0"/><line nr="46" mi="15" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="23" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="25" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="18" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="368" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Solvers.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="2" cb="0"/><line nr="36" mi="16" ci="0" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="39" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="27" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="141" mi="15" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="8" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="2" cb="0"/><line nr="183" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="14" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Matrix.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="2" cb="2"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="2" cb="2"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="4" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="2" cb="0"/><line nr="154" mi="7" ci="0" mb="2" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="189" mi="14" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="2" cb="0"/><line nr="207" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="2" cb="0"/><line nr="224" mi="8" ci="0" mb="2" cb="0"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="8" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="2" cb="0"/><line nr="244" mi="15" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="279" mi="8" ci="0" mb="2" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="8" ci="0" mb="2" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="7" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="2" cb="0"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="2" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="7" ci="0" mb="2" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="10" ci="0" mb="4" cb="0"/><line nr="468" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="3" ci="0" mb="2" cb="0"/><line nr="484" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="7" ci="0" mb="2" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="3" ci="0" mb="0" cb="0"/><line nr="515" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="7" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="2" cb="0"/><line nr="537" mi="17" ci="0" mb="0" cb="0"/><line nr="540" mi="11" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="0" cb="0"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="560" mi="5" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="2" cb="0"/><line nr="576" mi="17" ci="0" mb="0" cb="0"/><line nr="579" mi="11" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="8" ci="0" mb="0" cb="0"/><line nr="622" mi="8" ci="0" mb="0" cb="0"/><line nr="634" mi="7" ci="0" mb="0" cb="0"/><line nr="646" mi="8" ci="0" mb="0" cb="0"/><line nr="647" mi="3" ci="0" mb="0" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="650" mi="8" ci="0" mb="2" cb="0"/><line nr="651" mi="20" ci="0" mb="0" cb="0"/><line nr="654" mi="10" ci="0" mb="0" cb="0"/><line nr="666" mi="8" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="5" ci="0" mb="0" cb="0"/><line nr="670" mi="8" ci="0" mb="2" cb="0"/><line nr="671" mi="20" ci="0" mb="0" cb="0"/><line nr="674" mi="10" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="2" cb="0"/><line nr="686" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="5" ci="0" mb="0" cb="0"/><line nr="691" mi="8" ci="0" mb="2" cb="0"/><line nr="692" mi="8" ci="0" mb="2" cb="0"/><line nr="693" mi="15" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="3" ci="0" mb="2" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="712" mi="5" ci="0" mb="0" cb="0"/><line nr="714" mi="8" ci="0" mb="2" cb="0"/><line nr="715" mi="8" ci="0" mb="2" cb="0"/><line nr="716" mi="15" ci="0" mb="0" cb="0"/><line nr="720" mi="2" ci="0" mb="0" cb="0"/><line nr="732" mi="3" ci="0" mb="2" cb="0"/><line nr="733" mi="5" ci="0" mb="0" cb="0"/><line nr="736" mi="5" ci="0" mb="0" cb="0"/><line nr="738" mi="8" ci="0" mb="2" cb="0"/><line nr="739" mi="8" ci="0" mb="2" cb="0"/><line nr="740" mi="19" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="754" mi="6" ci="0" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="775" mi="6" ci="0" mb="0" cb="0"/><line nr="777" mi="8" ci="0" mb="2" cb="0"/><line nr="778" mi="10" ci="0" mb="2" cb="0"/><line nr="779" mi="12" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="0" cb="0"/><line nr="807" mi="13" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="8" ci="0" mb="2" cb="0"/><line nr="823" mi="9" ci="0" mb="0" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="6" ci="0" mb="0" cb="0"/><line nr="839" mi="8" ci="0" mb="2" cb="0"/><line nr="840" mi="12" ci="0" mb="0" cb="0"/><line nr="843" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="10" ci="0" mb="0" cb="0"/><line nr="859" mi="9" ci="0" mb="2" cb="0"/><line nr="860" mi="18" ci="0" mb="0" cb="0"/><line nr="863" mi="2" ci="0" mb="0" cb="0"/><line nr="872" mi="10" ci="0" mb="0" cb="0"/><line nr="883" mi="8" ci="0" mb="0" cb="0"/><line nr="893" mi="16" ci="0" mb="2" cb="0"/><line nr="894" mi="4" ci="0" mb="0" cb="0"/><line nr="896" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="16" ci="0" mb="2" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="1" ci="0" mb="0" cb="0"/><line nr="925" mi="16" ci="0" mb="2" cb="0"/><line nr="926" mi="6" ci="0" mb="0" cb="0"/><line nr="929" mi="2" ci="0" mb="0" cb="0"/><line nr="930" mi="1" ci="0" mb="0" cb="0"/><line nr="939" mi="2" ci="0" mb="0" cb="0"/><line nr="941" mi="3" ci="0" mb="2" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="943" mi="4" ci="0" mb="0" cb="0"/><line nr="945" mi="8" ci="0" mb="2" cb="0"/><line nr="946" mi="5" ci="0" mb="0" cb="0"/><line nr="948" mi="7" ci="0" mb="0" cb="0"/><line nr="950" mi="3" ci="0" mb="2" cb="0"/><line nr="951" mi="5" ci="0" mb="0" cb="0"/><line nr="954" mi="5" ci="0" mb="0" cb="0"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="958" mi="8" ci="0" mb="2" cb="0"/><line nr="959" mi="9" ci="0" mb="4" cb="0"/><line nr="960" mi="4" ci="0" mb="0" cb="0"/><line nr="961" mi="5" ci="0" mb="0" cb="0"/><line nr="964" mi="4" ci="0" mb="0" cb="0"/><line nr="966" mi="8" ci="0" mb="2" cb="0"/><line nr="968" mi="9" ci="0" mb="4" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="970" mi="14" ci="0" mb="0" cb="0"/><line nr="971" mi="11" ci="0" mb="0" cb="0"/><line nr="972" mi="23" ci="0" mb="0" cb="0"/><line nr="973" mi="1" ci="0" mb="0" cb="0"/><line nr="976" mi="8" ci="0" mb="0" cb="0"/><line nr="977" mi="19" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="3" ci="0" mb="0" cb="0"/><line nr="986" mi="9" ci="0" mb="0" cb="0"/><line nr="987" mi="1" ci="0" mb="0" cb="0"/><line nr="989" mi="3" ci="0" mb="0" cb="0"/><line nr="992" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1517" covered="169"/><counter type="BRANCH" missed="118" covered="14"/><counter type="LINE" missed="251" covered="42"/><counter type="COMPLEXITY" missed="107" covered="10"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixManipulations.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="2" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="15" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="2" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="16" ci="0" mb="4" cb="0"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="16" ci="0" mb="4" cb="0"/><line nr="177" mi="13" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="2" cb="0"/><line nr="182" mi="11" ci="0" mb="2" cb="0"/><line nr="183" mi="14" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="2" cb="0"/><line nr="238" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="10" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="5" ci="0" mb="2" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="265" mi="8" ci="0" mb="2" cb="0"/><line nr="266" mi="12" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="288" mi="8" ci="0" mb="2" cb="0"/><line nr="289" mi="12" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="2" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="2" cb="0"/><line nr="313" mi="9" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="2" cb="0"/><line nr="317" mi="10" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="2" cb="0"/><line nr="337" mi="9" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="2" cb="0"/><line nr="341" mi="12" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="2" cb="0"/><line nr="361" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="8" ci="0" mb="2" cb="0"/><line nr="365" mi="12" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="14" ci="0" mb="4" cb="0"/><line nr="385" mi="11" ci="0" mb="0" cb="0"/><line nr="389" mi="10" ci="0" mb="2" cb="0"/><line nr="390" mi="10" ci="0" mb="2" cb="0"/><line nr="391" mi="16" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="14" ci="0" mb="4" cb="0"/><line nr="415" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="2" cb="0"/><line nr="420" mi="10" ci="0" mb="2" cb="0"/><line nr="421" mi="16" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="9" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="2" cb="0"/><line nr="458" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="8" ci="0" mb="2" cb="0"/><line nr="460" mi="12" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="9" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="11" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="8" ci="0" mb="2" cb="0"/><line nr="501" mi="4" ci="0" mb="2" cb="0"/><line nr="502" mi="8" ci="0" mb="2" cb="0"/><line nr="503" mi="12" ci="0" mb="0" cb="0"/><line nr="505" mi="1" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="8" ci="0" mb="2" cb="0"/><line nr="542" mi="13" ci="0" mb="4" cb="0"/><line nr="543" mi="12" ci="0" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="6" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="8" ci="0" mb="2" cb="0"/><line nr="582" mi="7" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="585" mi="13" ci="0" mb="4" cb="0"/><line nr="586" mi="12" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="8" ci="0" mb="2" cb="0"/><line nr="613" mi="9" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="625" mi="6" ci="0" mb="0" cb="0"/><line nr="627" mi="8" ci="0" mb="2" cb="0"/><line nr="628" mi="12" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="3" ci="0" mb="0" cb="0"/><line nr="641" mi="9" ci="0" mb="0" cb="0"/><line nr="643" mi="8" ci="0" mb="2" cb="0"/><line nr="644" mi="12" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="4" ci="0" mb="0" cb="0"/><line nr="660" mi="8" ci="0" mb="0" cb="0"/><line nr="661" mi="10" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="2" cb="0"/><line nr="664" mi="7" ci="0" mb="0" cb="0"/><line nr="668" mi="10" ci="0" mb="2" cb="0"/><line nr="669" mi="23" ci="0" mb="2" cb="0"/><line nr="670" mi="12" ci="0" mb="0" cb="0"/><line nr="672" mi="11" ci="0" mb="0" cb="0"/><line nr="673" mi="10" ci="0" mb="0" cb="0"/><line nr="674" mi="1" ci="0" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="676" mi="1" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="32" ci="0" mb="0" cb="0"/><line nr="682" mi="15" ci="0" mb="0" cb="0"/><line nr="683" mi="29" ci="0" mb="0" cb="0"/><line nr="684" mi="14" ci="0" mb="0" cb="0"/><line nr="687" mi="15" ci="0" mb="0" cb="0"/><line nr="688" mi="37" ci="0" mb="0" cb="0"/><line nr="689" mi="6" ci="0" mb="0" cb="0"/><line nr="694" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="8" ci="0" mb="0" cb="0"/><line nr="710" mi="10" ci="0" mb="0" cb="0"/><line nr="711" mi="3" ci="0" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="2" cb="0"/><line nr="714" mi="7" ci="0" mb="0" cb="0"/><line nr="718" mi="10" ci="0" mb="2" cb="0"/><line nr="719" mi="12" ci="0" mb="0" cb="0"/><line nr="721" mi="11" ci="0" mb="0" cb="0"/><line nr="722" mi="10" ci="0" mb="0" cb="0"/><line nr="723" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="1" ci="0" mb="0" cb="0"/><line nr="729" mi="32" ci="0" mb="0" cb="0"/><line nr="731" mi="15" ci="0" mb="0" cb="0"/><line nr="732" mi="29" ci="0" mb="0" cb="0"/><line nr="733" mi="14" ci="0" mb="0" cb="0"/><line nr="736" mi="15" ci="0" mb="0" cb="0"/><line nr="737" mi="37" ci="0" mb="0" cb="0"/><line nr="738" mi="6" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="4" ci="0" mb="0" cb="0"/><line nr="745" mi="4" ci="0" mb="0" cb="0"/><line nr="747" mi="2" ci="0" mb="0" cb="0"/><line nr="759" mi="3" ci="0" mb="0" cb="0"/><line nr="760" mi="3" ci="0" mb="0" cb="0"/><line nr="762" mi="5" ci="0" mb="0" cb="0"/><line nr="763" mi="5" ci="0" mb="0" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="5" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="781" mi="3" ci="0" mb="0" cb="0"/><line nr="783" mi="4" ci="0" mb="0" cb="0"/><line nr="784" mi="4" ci="0" mb="0" cb="0"/><line nr="786" mi="8" ci="0" mb="2" cb="0"/><line nr="787" mi="9" ci="0" mb="0" cb="0"/><line nr="788" mi="9" ci="0" mb="0" cb="0"/><line nr="791" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="3" ci="0" mb="0" cb="0"/><line nr="803" mi="8" ci="0" mb="0" cb="0"/><line nr="805" mi="8" ci="0" mb="2" cb="0"/><line nr="806" mi="14" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="8" ci="0" mb="0" cb="0"/><line nr="831" mi="6" ci="0" mb="0" cb="0"/><line nr="842" mi="7" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="858" mi="6" ci="0" mb="4" cb="0"/><line nr="859" mi="7" ci="0" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="2" cb="0"/><line nr="865" mi="5" ci="0" mb="0" cb="0"/><line nr="868" mi="3" ci="0" mb="2" cb="0"/><line nr="869" mi="2" ci="0" mb="0" cb="0"/><line nr="872" mi="8" ci="0" mb="0" cb="0"/><line nr="876" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="6" ci="0" mb="0" cb="0"/><line nr="891" mi="8" ci="0" mb="2" cb="0"/><line nr="892" mi="8" ci="0" mb="2" cb="0"/><line nr="893" mi="14" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="0" cb="0"/><line nr="907" mi="8" ci="0" mb="0" cb="0"/><line nr="908" mi="3" ci="0" mb="0" cb="0"/><line nr="910" mi="8" ci="0" mb="2" cb="0"/><line nr="911" mi="8" ci="0" mb="2" cb="0"/><line nr="912" mi="11" ci="0" mb="2" cb="0"/><line nr="913" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="1" ci="0" mb="0" cb="0"/><line nr="922" mi="19" ci="0" mb="0" cb="0"/><line nr="923" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="9" ci="0" mb="0" cb="0"/><line nr="926" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1884" covered="0"/><counter type="BRANCH" missed="148" covered="0"/><counter type="LINE" missed="272" covered="0"/><counter type="COMPLEXITY" missed="115" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CholeskyDecomposition.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="5" ci="0" mb="0" cb="0"/><line nr="12" mi="19" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="2" cb="0"/><line nr="15" mi="7" ci="0" mb="2" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="7" ci="0" mb="2" cb="0"/><line nr="19" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="14" ci="0" mb="0" cb="0"/><line nr="27" mi="12" ci="0" mb="2" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixProperties.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="4" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="8" ci="0" mb="2" cb="0"/><line nr="106" mi="9" ci="0" mb="2" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="9" ci="0" mb="2" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="2" cb="0"/><line nr="174" mi="8" ci="0" mb="2" cb="0"/><line nr="175" mi="9" ci="0" mb="2" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="2" cb="0"/><line nr="196" mi="8" ci="0" mb="2" cb="0"/><line nr="197" mi="9" ci="0" mb="2" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="8" ci="0" mb="2" cb="0"/><line nr="217" mi="8" ci="0" mb="2" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="8" ci="0" mb="2" cb="0"/><line nr="239" mi="8" ci="0" mb="2" cb="0"/><line nr="240" mi="8" ci="0" mb="2" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="4" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="8" ci="0" mb="4" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="8" ci="0" mb="4" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="8" ci="0" mb="4" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="2" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="7" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="2" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="2" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="2" cb="0"/><line nr="426" mi="7" ci="0" mb="0" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="2" cb="0"/><line nr="448" mi="7" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="2" cb="0"/><line nr="483" mi="3" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="2" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="2" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="10" ci="0" mb="2" cb="0"/><line nr="505" mi="10" ci="0" mb="2" cb="0"/><line nr="506" mi="9" ci="0" mb="2" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="3" ci="0" mb="2" cb="0"/><line nr="528" mi="7" ci="0" mb="0" cb="0"/><line nr="531" mi="10" ci="0" mb="2" cb="0"/><line nr="532" mi="10" ci="0" mb="2" cb="0"/><line nr="533" mi="9" ci="0" mb="2" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="2" cb="0"/><line nr="554" mi="7" ci="0" mb="0" cb="0"/><line nr="557" mi="10" ci="0" mb="4" cb="0"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="2" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="7" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="2" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="631" mi="15" ci="0" mb="8" cb="0"/><line nr="632" mi="7" ci="0" mb="0" cb="0"/><line nr="636" mi="8" ci="0" mb="2" cb="0"/><line nr="637" mi="8" ci="0" mb="2" cb="0"/><line nr="638" mi="12" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="644" mi="9" ci="0" mb="0" cb="0"/><line nr="653" mi="5" ci="0" mb="0" cb="0"/><line nr="654" mi="7" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="4" ci="0" mb="0" cb="0"/><line nr="669" mi="7" ci="0" mb="0" cb="0"/><line nr="670" mi="6" ci="0" mb="0" cb="0"/><line nr="675" mi="8" ci="0" mb="2" cb="0"/><line nr="676" mi="6" ci="0" mb="2" cb="0"/><line nr="677" mi="10" ci="0" mb="2" cb="0"/><line nr="678" mi="9" ci="0" mb="2" cb="0"/><line nr="679" mi="13" ci="0" mb="2" cb="0"/><line nr="680" mi="12" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="702" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="3" ci="0" mb="0" cb="0"/><line nr="704" mi="7" ci="0" mb="0" cb="0"/><line nr="705" mi="6" ci="0" mb="0" cb="0"/><line nr="710" mi="8" ci="0" mb="2" cb="0"/><line nr="711" mi="6" ci="0" mb="2" cb="0"/><line nr="712" mi="10" ci="0" mb="2" cb="0"/><line nr="713" mi="9" ci="0" mb="2" cb="0"/><line nr="714" mi="13" ci="0" mb="2" cb="0"/><line nr="715" mi="12" ci="0" mb="0" cb="0"/><line nr="728" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="741" mi="7" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="743" mi="4" ci="0" mb="0" cb="0"/><line nr="748" mi="8" ci="0" mb="2" cb="0"/><line nr="749" mi="6" ci="0" mb="2" cb="0"/><line nr="750" mi="6" ci="0" mb="0" cb="0"/><line nr="752" mi="10" ci="0" mb="2" cb="0"/><line nr="753" mi="9" ci="0" mb="2" cb="0"/><line nr="754" mi="13" ci="0" mb="2" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="764" mi="11" ci="0" mb="2" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="7" ci="0" mb="0" cb="0"/><line nr="768" mi="8" ci="0" mb="2" cb="0"/><line nr="769" mi="5" ci="0" mb="2" cb="0"/><line nr="771" mi="8" ci="0" mb="2" cb="0"/><line nr="772" mi="9" ci="0" mb="2" cb="0"/><line nr="773" mi="13" ci="0" mb="0" cb="0"/><line nr="774" mi="1" ci="0" mb="0" cb="0"/><line nr="780" mi="7" ci="0" mb="0" cb="0"/><line nr="781" mi="1" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="803" mi="3" ci="0" mb="0" cb="0"/><line nr="804" mi="2" ci="0" mb="0" cb="0"/><line nr="806" mi="8" ci="0" mb="2" cb="0"/><line nr="807" mi="8" ci="0" mb="2" cb="0"/><line nr="808" mi="17" ci="0" mb="4" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="810" mi="2" ci="0" mb="0" cb="0"/><line nr="815" mi="2" ci="0" mb="0" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="2" ci="0" mb="0" cb="0"/><line nr="827" mi="8" ci="0" mb="2" cb="0"/><line nr="828" mi="8" ci="0" mb="2" cb="0"/><line nr="829" mi="17" ci="0" mb="4" cb="0"/><line nr="830" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="2" ci="0" mb="0" cb="0"/><line nr="836" mi="2" ci="0" mb="0" cb="0"/><line nr="849" mi="2" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="2" cb="0"/><line nr="853" mi="3" ci="0" mb="0" cb="0"/><line nr="854" mi="2" ci="0" mb="0" cb="0"/><line nr="856" mi="8" ci="0" mb="2" cb="0"/><line nr="857" mi="17" ci="0" mb="4" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="864" mi="2" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="880" mi="3" ci="0" mb="2" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="0" cb="0"/><line nr="884" mi="8" ci="0" mb="2" cb="0"/><line nr="885" mi="17" ci="0" mb="4" cb="0"/><line nr="887" mi="2" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="0" cb="0"/><line nr="909" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="7" ci="0" mb="0" cb="0"/><line nr="913" mi="11" ci="0" mb="0" cb="0"/><line nr="915" mi="4" ci="0" mb="0" cb="0"/><line nr="916" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="7" ci="0" mb="0" cb="0"/><line nr="918" mi="7" ci="0" mb="0" cb="0"/><line nr="920" mi="6" ci="0" mb="0" cb="0"/><line nr="921" mi="4" ci="0" mb="0" cb="0"/><line nr="923" mi="8" ci="0" mb="2" cb="0"/><line nr="925" mi="18" ci="0" mb="4" cb="0"/><line nr="926" mi="11" ci="0" mb="0" cb="0"/><line nr="931" mi="5" ci="0" mb="0" cb="0"/><line nr="935" mi="4" ci="0" mb="0" cb="0"/><line nr="936" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="2" ci="0" mb="0" cb="0"/><line nr="952" mi="5" ci="0" mb="0" cb="0"/><line nr="966" mi="3" ci="0" mb="0" cb="0"/><line nr="967" mi="6" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="979" mi="4" ci="0" mb="0" cb="0"/><line nr="980" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="2" ci="0" mb="0" cb="0"/><line nr="983" mi="11" ci="0" mb="0" cb="0"/><line nr="985" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="4" ci="0" mb="0" cb="0"/><line nr="988" mi="8" ci="0" mb="2" cb="0"/><line nr="989" mi="20" ci="0" mb="6" cb="0"/><line nr="990" mi="2" ci="0" mb="0" cb="0"/><line nr="992" mi="8" ci="0" mb="2" cb="0"/><line nr="993" mi="14" ci="0" mb="2" cb="0"/><line nr="994" mi="1" ci="0" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="12" ci="0" mb="0" cb="0"/><line nr="1001" mi="6" ci="0" mb="0" cb="0"/><line nr="1005" mi="8" ci="0" mb="2" cb="0"/><line nr="1006" mi="9" ci="0" mb="2" cb="0"/><line nr="1007" mi="2" ci="0" mb="0" cb="0"/><line nr="1008" mi="1" ci="0" mb="0" cb="0"/><line nr="1012" mi="2" ci="0" mb="0" cb="0"/><line nr="1017" mi="87" ci="0" mb="0" cb="0"/><line nr="1022" mi="87" ci="0" mb="0" cb="0"/><line nr="1027" mi="54" ci="0" mb="0" cb="0"/><line nr="1031" mi="87" ci="0" mb="0" cb="0"/><line nr="1036" mi="135" ci="0" mb="0" cb="0"/><line nr="1041" mi="81" ci="0" mb="0" cb="0"/><line nr="1045" mi="54" ci="0" mb="0" cb="0"/><line nr="1049" mi="87" ci="0" mb="0" cb="0"/><line nr="1054" mi="87" ci="0" mb="0" cb="0"/><line nr="1060" mi="5" ci="0" mb="0" cb="0"/><line nr="1063" mi="3" ci="0" mb="0" cb="0"/><line nr="1065" mi="15" ci="0" mb="0" cb="0"/><line nr="1066" mi="17" ci="0" mb="0" cb="0"/><line nr="1067" mi="17" ci="0" mb="0" cb="0"/><line nr="1069" mi="10" ci="0" mb="2" cb="0"/><line nr="1070" mi="28" ci="0" mb="0" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1076" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2330" covered="18"/><counter type="BRANCH" missed="214" covered="0"/><counter type="LINE" missed="291" covered="6"/><counter type="COMPLEXITY" missed="149" covered="3"/><counter type="METHOD" missed="42" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vector.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="7" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="2" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="2" cb="0"/><line nr="277" mi="9" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="9" ci="0" mb="2" cb="0"/><line nr="292" mi="14" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="2" cb="0"/><line nr="298" mi="14" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="11" ci="0" mb="6" cb="0"/><line nr="352" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="2" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="16" ci="0" mb="2" cb="0"/><line nr="362" mi="7" ci="0" mb="0" cb="0"/><line nr="365" mi="9" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="2" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="11" ci="0" mb="0" cb="0"/><line nr="424" mi="11" ci="0" mb="0" cb="0"/><line nr="428" mi="7" ci="0" mb="0" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="2" cb="0"/><line nr="440" mi="9" ci="0" mb="2" cb="0"/><line nr="441" mi="12" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="2" cb="0"/><line nr="445" mi="9" ci="0" mb="2" cb="0"/><line nr="446" mi="12" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixOperations.java"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="24" mi="8" ci="0" mb="2" cb="0"/><line nr="25" mi="22" ci="0" mb="0" cb="0"/><line nr="26" mi="22" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="44" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="16" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="8" ci="0" mb="2" cb="0"/><line nr="68" mi="22" ci="0" mb="0" cb="0"/><line nr="69" mi="22" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="8" ci="0" mb="2" cb="0"/><line nr="110" mi="41" ci="0" mb="0" cb="0"/><line nr="111" mi="41" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="134" mi="38" ci="0" mb="0" cb="0"/><line nr="135" mi="38" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="2" cb="0"/><line nr="166" mi="8" ci="0" mb="2" cb="0"/><line nr="167" mi="14" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="8" ci="0" mb="2" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="70" ci="0" mb="0" cb="0"/><line nr="191" mi="70" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="2" cb="0"/><line nr="247" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="0" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="2" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="7" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="8" ci="0" mb="2" cb="0"/><line nr="280" mi="8" ci="0" mb="2" cb="0"/><line nr="281" mi="13" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="8" ci="0" mb="2" cb="0"/><line nr="302" mi="13" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="8" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="8" ci="0" mb="2" cb="0"/><line nr="334" mi="8" ci="0" mb="2" cb="0"/><line nr="336" mi="13" ci="0" mb="4" cb="0"/><line nr="337" mi="13" ci="0" mb="4" cb="0"/><line nr="338" mi="12" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="8" ci="0" mb="0" cb="0"/><line nr="357" mi="8" ci="0" mb="2" cb="0"/><line nr="358" mi="8" ci="0" mb="2" cb="0"/><line nr="359" mi="13" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="413" mi="8" ci="0" mb="4" cb="0"/><line nr="414" mi="7" ci="0" mb="0" cb="0"/><line nr="416" mi="8" ci="0" mb="4" cb="0"/><line nr="417" mi="7" ci="0" mb="0" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="7" ci="0" mb="0" cb="0"/><line nr="420" mi="7" ci="0" mb="0" cb="0"/><line nr="422" mi="8" ci="0" mb="0" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="8" ci="0" mb="2" cb="0"/><line nr="426" mi="6" ci="0" mb="0" cb="0"/><line nr="428" mi="8" ci="0" mb="0" cb="0"/><line nr="429" mi="9" ci="0" mb="0" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="15" ci="0" mb="0" cb="0"/><line nr="451" mi="10" ci="0" mb="2" cb="0"/><line nr="452" mi="11" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="467" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="2" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="473" mi="8" ci="0" mb="4" cb="0"/><line nr="474" mi="7" ci="0" mb="0" cb="0"/><line nr="475" mi="7" ci="0" mb="0" cb="0"/><line nr="476" mi="7" ci="0" mb="0" cb="0"/><line nr="477" mi="7" ci="0" mb="0" cb="0"/><line nr="479" mi="8" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="3" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="2" cb="0"/><line nr="514" mi="11" ci="0" mb="2" cb="0"/><line nr="515" mi="15" ci="0" mb="0" cb="0"/><line nr="519" mi="16" ci="0" mb="0" cb="0"/><line nr="521" mi="10" ci="0" mb="2" cb="0"/><line nr="522" mi="11" ci="0" mb="2" cb="0"/><line nr="523" mi="5" ci="0" mb="2" cb="0"/><line nr="524" mi="13" ci="0" mb="0" cb="0"/><line nr="526" mi="16" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="2" cb="0"/><line nr="532" mi="7" ci="0" mb="2" cb="0"/><line nr="533" mi="11" ci="0" mb="0" cb="0"/><line nr="537" mi="18" ci="0" mb="0" cb="0"/><line nr="539" mi="10" ci="0" mb="2" cb="0"/><line nr="540" mi="11" ci="0" mb="2" cb="0"/><line nr="541" mi="7" ci="0" mb="2" cb="0"/><line nr="542" mi="13" ci="0" mb="0" cb="0"/><line nr="544" mi="18" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="0" cb="0"/><line nr="564" mi="5" ci="0" mb="0" cb="0"/><line nr="587" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="591" mi="2" ci="0" mb="0" cb="0"/><line nr="593" mi="8" ci="0" mb="4" cb="0"/><line nr="594" mi="9" ci="0" mb="2" cb="0"/><line nr="595" mi="9" ci="0" mb="0" cb="0"/><line nr="597" mi="8" ci="0" mb="2" cb="0"/><line nr="598" mi="14" ci="0" mb="0" cb="0"/><line nr="602" mi="10" ci="0" mb="2" cb="0"/><line nr="603" mi="7" ci="0" mb="0" cb="0"/><line nr="605" mi="8" ci="0" mb="2" cb="0"/><line nr="606" mi="20" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="616" mi="7" ci="0" mb="0" cb="0"/><line nr="619" mi="1" ci="0" mb="0" cb="0"/><line nr="620" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="2" cb="0"/><line nr="653" mi="3" ci="0" mb="0" cb="0"/><line nr="678" mi="4" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="685" mi="8" ci="0" mb="4" cb="0"/><line nr="686" mi="2" ci="0" mb="0" cb="0"/><line nr="687" mi="7" ci="0" mb="0" cb="0"/><line nr="689" mi="8" ci="0" mb="2" cb="0"/><line nr="690" mi="9" ci="0" mb="2" cb="0"/><line nr="697" mi="8" ci="0" mb="0" cb="0"/><line nr="699" mi="9" ci="0" mb="2" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="701" mi="7" ci="0" mb="0" cb="0"/><line nr="705" mi="9" ci="0" mb="2" cb="0"/><line nr="706" mi="3" ci="0" mb="2" cb="0"/><line nr="707" mi="5" ci="0" mb="0" cb="0"/><line nr="710" mi="9" ci="0" mb="0" cb="0"/><line nr="712" mi="8" ci="0" mb="2" cb="0"/><line nr="713" mi="14" ci="0" mb="0" cb="0"/><line nr="716" mi="8" ci="0" mb="2" cb="0"/><line nr="717" mi="7" ci="0" mb="0" cb="0"/><line nr="719" mi="3" ci="0" mb="2" cb="0"/><line nr="720" mi="7" ci="0" mb="0" cb="0"/><line nr="722" mi="10" ci="0" mb="2" cb="0"/><line nr="724" mi="15" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="7" ci="0" mb="0" cb="0"/><line nr="732" mi="1" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><line nr="736" mi="2" ci="0" mb="0" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="766" mi="4" ci="0" mb="0" cb="0"/><line nr="769" mi="2" ci="0" mb="0" cb="0"/><line nr="770" mi="2" ci="0" mb="0" cb="0"/><line nr="772" mi="8" ci="0" mb="4" cb="0"/><line nr="773" mi="9" ci="0" mb="2" cb="0"/><line nr="774" mi="9" ci="0" mb="0" cb="0"/><line nr="776" mi="8" ci="0" mb="2" cb="0"/><line nr="777" mi="14" ci="0" mb="0" cb="0"/><line nr="781" mi="8" ci="0" mb="2" cb="0"/><line nr="782" mi="7" ci="0" mb="0" cb="0"/><line nr="784" mi="3" ci="0" mb="2" cb="0"/><line nr="785" mi="8" ci="0" mb="2" cb="0"/><line nr="786" mi="20" ci="0" mb="0" cb="0"/><line nr="787" mi="1" ci="0" mb="0" cb="0"/><line nr="792" mi="1" ci="0" mb="0" cb="0"/><line nr="793" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="2" ci="0" mb="0" cb="0"/><line nr="808" mi="3" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="812" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="3" ci="0" mb="0" cb="0"/><line nr="827" mi="3" ci="0" mb="2" cb="0"/><line nr="828" mi="7" ci="0" mb="0" cb="0"/><line nr="831" mi="7" ci="0" mb="0" cb="0"/><line nr="833" mi="8" ci="0" mb="2" cb="0"/><line nr="834" mi="9" ci="0" mb="0" cb="0"/><line nr="837" mi="2" ci="0" mb="0" cb="0"/><line nr="850" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="0" cb="0"/><line nr="865" mi="3" ci="0" mb="0" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="868" mi="9" ci="0" mb="2" cb="0"/><line nr="869" mi="5" ci="0" mb="2" cb="0"/><line nr="870" mi="1" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="888" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="6" ci="0" mb="0" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="902" mi="3" ci="0" mb="2" cb="0"/><line nr="903" mi="5" ci="0" mb="0" cb="0"/><line nr="906" mi="3" ci="0" mb="0" cb="0"/><line nr="907" mi="2" ci="0" mb="0" cb="0"/><line nr="909" mi="10" ci="0" mb="2" cb="0"/><line nr="910" mi="11" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="2" cb="0"/><line nr="922" mi="5" ci="0" mb="0" cb="0"/><line nr="926" mi="10" ci="0" mb="0" cb="0"/><line nr="937" mi="3" ci="0" mb="0" cb="0"/><line nr="956" mi="8" ci="0" mb="0" cb="0"/><line nr="957" mi="4" ci="0" mb="0" cb="0"/><line nr="959" mi="3" ci="0" mb="2" cb="0"/><line nr="960" mi="5" ci="0" mb="0" cb="0"/><line nr="963" mi="8" ci="0" mb="2" cb="0"/><line nr="965" mi="8" ci="0" mb="0" cb="0"/><line nr="968" mi="2" ci="0" mb="0" cb="0"/><line nr="978" mi="7" ci="0" mb="0" cb="0"/><line nr="980" mi="8" ci="0" mb="2" cb="0"/><line nr="981" mi="8" ci="0" mb="2" cb="0"/><line nr="982" mi="13" ci="0" mb="0" cb="0"/><line nr="986" mi="2" ci="0" mb="0" cb="0"/><line nr="991" mi="11" ci="0" mb="0" cb="0"/><line nr="992" mi="11" ci="0" mb="0" cb="0"/><line nr="994" mi="2" ci="0" mb="0" cb="0"/><line nr="995" mi="4" ci="0" mb="0" cb="0"/><line nr="996" mi="2" ci="0" mb="0" cb="0"/><line nr="998" mi="4" ci="0" mb="0" cb="0"/><line nr="1000" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2093" covered="0"/><counter type="BRANCH" missed="172" covered="0"/><counter type="LINE" missed="282" covered="0"/><counter type="COMPLEXITY" missed="127" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="11749" covered="196"/><counter type="BRANCH" missed="865" covered="14"/><counter type="LINE" missed="1675" covered="52"/><counter type="COMPLEXITY" missed="681" covered="14"/><counter type="METHOD" missed="244" covered="10"/><counter type="CLASS" missed="12" covered="3"/></package><counter type="INSTRUCTION" missed="14778" covered="703"/><counter type="BRANCH" missed="1134" covered="75"/><counter type="LINE" missed="2109" covered="177"/><counter type="COMPLEXITY" missed="911" covered="52"/><counter type="METHOD" missed="326" covered="31"/><counter type="CLASS" missed="15" covered="10"/></report>
\ No newline at end of file
Index: target/site/jacoco/jacoco-sessions.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"jacoco-resources/report.gif\" type=\"image/gif\"/><title>Sessions</title></head><body><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_session\">Sessions</span></div><h1>Sessions</h1><p>This coverage report is based on execution data from the following sessions:</p><table class=\"coverage\" cellspacing=\"0\"><thead><tr><td>Session</td><td>Start Time</td><td>Dump Time</td></tr></thead><tbody><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-fe00496a</span></td><td>Sep 27, 2021, 5:29:56 PM</td><td>Sep 27, 2021, 5:29:58 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-9cdf880c</span></td><td>Sep 27, 2021, 5:57:07 PM</td><td>Sep 27, 2021, 5:57:08 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-33e4a7ad</span></td><td>Sep 27, 2021, 6:10:24 PM</td><td>Sep 27, 2021, 6:10:26 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-d759012b</span></td><td>Sep 27, 2021, 6:11:38 PM</td><td>Sep 27, 2021, 6:11:39 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-653be16e</span></td><td>Sep 27, 2021, 6:23:10 PM</td><td>Sep 27, 2021, 6:23:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-e4543b44</span></td><td>Sep 27, 2021, 6:23:36 PM</td><td>Sep 27, 2021, 6:23:37 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-4d4af810</span></td><td>Sep 27, 2021, 6:23:55 PM</td><td>Sep 27, 2021, 6:23:55 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-ca0ff9dc</span></td><td>Sep 27, 2021, 6:32:57 PM</td><td>Sep 27, 2021, 6:32:59 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-2b03aa12</span></td><td>Sep 27, 2021, 6:33:17 PM</td><td>Sep 27, 2021, 6:33:18 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-92377961</span></td><td>Sep 27, 2021, 6:41:53 PM</td><td>Sep 27, 2021, 6:41:55 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-f67dcf9d</span></td><td>Sep 27, 2021, 7:07:03 PM</td><td>Sep 27, 2021, 7:07:03 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-3deffdcc</span></td><td>Sep 27, 2021, 7:07:05 PM</td><td>Sep 27, 2021, 7:07:07 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-8370ba74</span></td><td>Sep 27, 2021, 7:07:14 PM</td><td>Sep 27, 2021, 7:07:16 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-e80853d4</span></td><td>Sep 27, 2021, 7:07:20 PM</td><td>Sep 27, 2021, 7:07:22 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-9ee31791</span></td><td>Sep 27, 2021, 7:07:33 PM</td><td>Sep 27, 2021, 7:07:34 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-58a45499</span></td><td>Sep 27, 2021, 7:14:03 PM</td><td>Sep 27, 2021, 7:14:05 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-6b36a7ae</span></td><td>Sep 27, 2021, 7:15:10 PM</td><td>Sep 27, 2021, 7:15:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cd238e7f</span></td><td>Sep 27, 2021, 7:23:32 PM</td><td>Sep 27, 2021, 7:23:33 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-32a355ac</span></td><td>Sep 27, 2021, 7:23:46 PM</td><td>Sep 27, 2021, 7:23:47 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cf2ae673</span></td><td>Sep 27, 2021, 7:24:23 PM</td><td>Sep 27, 2021, 7:24:25 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-d8ae4a1d</span></td><td>Sep 27, 2021, 7:24:44 PM</td><td>Sep 27, 2021, 7:24:45 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-590642cc</span></td><td>Sep 27, 2021, 7:29:32 PM</td><td>Sep 27, 2021, 7:29:33 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-c18502e8</span></td><td>Sep 27, 2021, 7:36:10 PM</td><td>Sep 27, 2021, 7:36:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-bb68ec51</span></td><td>Sep 27, 2021, 7:36:48 PM</td><td>Sep 27, 2021, 7:36:49 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-dc7eaf97</span></td><td>Sep 27, 2021, 7:53:34 PM</td><td>Sep 27, 2021, 7:53:35 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-4fd69810</span></td><td>Sep 27, 2021, 7:54:01 PM</td><td>Sep 27, 2021, 7:54:02 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-96825214</span></td><td>Sep 27, 2021, 7:58:58 PM</td><td>Sep 27, 2021, 7:59:00 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-89a0fc42</span></td><td>Sep 27, 2021, 7:59:36 PM</td><td>Sep 27, 2021, 7:59:37 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cab82cf0</span></td><td>Sep 27, 2021, 8:00:02 PM</td><td>Sep 27, 2021, 8:00:03 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-c139591e</span></td><td>Sep 27, 2021, 8:34:30 PM</td><td>Sep 27, 2021, 8:34:30 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-82b8fd28</span></td><td>Sep 27, 2021, 8:35:38 PM</td><td>Sep 27, 2021, 8:35:39 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-3bdff75d</span></td><td>Sep 27, 2021, 8:36:10 PM</td><td>Sep 27, 2021, 8:36:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cdb98687</span></td><td>Sep 27, 2021, 8:39:11 PM</td><td>Sep 27, 2021, 8:39:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-e6b68394</span></td><td>Sep 27, 2021, 8:40:13 PM</td><td>Sep 27, 2021, 8:40:14 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-9c517ae6</span></td><td>Sep 27, 2021, 8:40:22 PM</td><td>Sep 27, 2021, 8:40:23 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-7849bf85</span></td><td>Sep 27, 2021, 11:07:11 PM</td><td>Sep 27, 2021, 11:07:12 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-8af91b33</span></td><td>Oct 15, 2021, 5:52:56 PM</td><td>Oct 15, 2021, 5:52:57 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-3c496517</span></td><td>Oct 15, 2021, 5:53:13 PM</td><td>Oct 15, 2021, 5:53:14 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-a1df1e07</span></td><td>Oct 15, 2021, 5:53:39 PM</td><td>Oct 15, 2021, 5:53:39 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-aff8a924</span></td><td>Oct 15, 2021, 5:53:57 PM</td><td>Oct 15, 2021, 5:53:58 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-f94da3ae</span></td><td>Oct 15, 2021, 6:03:05 PM</td><td>Oct 15, 2021, 6:03:06 PM</td></tr><tr><td><span class=\"el_session\">Jacobs-MacBook-Pro.local-f3f79794</span></td><td>Oct 21, 2021, 11:15:55 AM</td><td>Oct 21, 2021, 11:16:04 AM</td></tr></tbody></table><p>Execution data for the following classes is considered in this report:</p><table class=\"coverage\" cellspacing=\"0\"><thead><tr><td>Class</td><td>Id</td></tr></thead><tbody><tr><td><span class=\"el_class\">javax.script.ScriptEngineManager</span></td><td><code>cfba6fa511e45893</code></td></tr><tr><td><span class=\"el_class\">javax.script.ScriptEngineManager.1</span></td><td><code>4213e2cd4b902651</code></td></tr><tr><td><span class=\"el_class\">javax.script.SimpleBindings</span></td><td><code>890d1d7b85b0079e</code></td></tr><tr><td><span class=\"el_class\">linalg.Matrix</span></td><td><code>667058e680b2f652</code></td></tr><tr><td><a href=\"linalg/Matrix.html\" class=\"el_class\">linalg.Matrix</a></td><td><code>00b8d5a70cad62e5</code></td></tr><tr><td><span class=\"el_class\">linalg.MatrixProperties</span></td><td><code>cdbd098f2f60b471</code></td></tr><tr><td><span class=\"el_class\">linalg.MatrixProperties</span></td><td><code>d64dde15d3116a6c</code></td></tr><tr><td><a href=\"linalg/MatrixProperties.html\" class=\"el_class\">linalg.MatrixProperties</a></td><td><code>940009cc5570b904</code></td></tr><tr><td><a href=\"linalg/PrintOptions.html\" class=\"el_class\">linalg.PrintOptions</a></td><td><code>87d4b57eebd861ea</code></td></tr><tr><td><span class=\"el_class\">linalg.complex_number.CNumber</span></td><td><code>636bfcd68857fbe0</code></td></tr><tr><td><span class=\"el_class\">linalg.complex_number.CNumber</span></td><td><code>dcd0ca675fd9eb8f</code></td></tr><tr><td><a href=\"linalg.complex_number/CNumber.html\" class=\"el_class\">linalg.complex_number.CNumber</a></td><td><code>14f9a28efbe96ee9</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>cf2e2350c5b6a9d3</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>c3aaa749ff55a981</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>11adaf541eec3222</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>552479f8a0848667</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>a5c3049d60beefbe</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>8cf74707bcf3597a</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>76638ca8ea700e75</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>35c6023225290204</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>d84a0b40f81e49ce</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>9dd2ed04d8db5d08</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>c214f1f35630fac0</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>8572d9652414f11e</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>c299df505630fac0</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>2b5017d334fdd733</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>eb792b51a9e2ccb8</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>77eca11bc8859ffb</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>5adf6b227cd150a2</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>a54c0a104c71dcbe</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>1db964b78a884e22</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>63df2e41a62baa1b</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>90d3bed4db0e78cf</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>59c436c645fb1f27</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>24746b3e26f41451</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>b438baf14d3de40f</code></td></tr><tr><td><a href=\"linalg.util/Lexer.html\" class=\"el_class\">linalg.util.Lexer</a></td><td><code>4653487ac8971dba</code></td></tr><tr><td><span class=\"el_class\">linalg.util.LinAlgArrayUtils</span></td><td><code>a89da6d783c46fc7</code></td></tr><tr><td><span class=\"el_class\">linalg.util.LinAlgArrayUtils</span></td><td><code>8ba7f2c59cc0deca</code></td></tr><tr><td><a href=\"linalg.util/LinAlgArrayUtils.html\" class=\"el_class\">linalg.util.LinAlgArrayUtils</a></td><td><code>7b7f3e2843bb4d00</code></td></tr><tr><td><a href=\"linalg.util/NumberLexer.html\" class=\"el_class\">linalg.util.NumberLexer</a></td><td><code>b2af6f818100434a</code></td></tr><tr><td><a href=\"linalg.util/Parser.html\" class=\"el_class\">linalg.util.Parser</a></td><td><code>c8f69ece7e388640</code></td></tr><tr><td><a href=\"linalg.util/StringUtils.html\" class=\"el_class\">linalg.util.StringUtils</a></td><td><code>925d5f087ae2f647</code></td></tr><tr><td><a href=\"linalg.util/Token.html\" class=\"el_class\">linalg.util.Token</a></td><td><code>dcf02146e3250669</code></td></tr><tr><td><span class=\"el_class\">linalg.util.Token</span></td><td><code>ac7c2a5240d8912f</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.BaseProviderFactory</span></td><td><code>5bdb25554fb3d5df</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.BiProperty</span></td><td><code>9a2074ae999b3c8a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.Command</span></td><td><code>f31ca5085797c808</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.DumpErrorSingleton</span></td><td><code>e3f1c75f159a9ac5</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.ForkedProcessEventType</span></td><td><code>dc56c5dba14b9d58</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.ForkingReporterFactory</span></td><td><code>bcadcd63978e8dcf</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.ForkingRunListener</span></td><td><code>08c963875a23e517</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.MasterProcessCommand</span></td><td><code>90562129b4defd58</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.Shutdown</span></td><td><code>fab38023c4f1ded4</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.cli.CommandLineOption</span></td><td><code>4401c2efb3702254</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.provider.AbstractProvider</span></td><td><code>cf68f167cf236f7b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ConsoleOutputCapture</span></td><td><code>b8719a08fbb63e05</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ConsoleOutputCapture.ForwardingPrintStream</span></td><td><code>7c2392ea44674f2d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ConsoleOutputCapture.NullOutputStream</span></td><td><code>f7132188596462e2</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.LegacyPojoStackTraceWriter</span></td><td><code>1aa62cd28375d6e2</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ReporterConfiguration</span></td><td><code>39591ad2c5816a79</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.RunMode</span></td><td><code>f02e60476bce4d8d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.SafeThrowable</span></td><td><code>32b5c60e4604ceb7</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.SimpleReportEntry</span></td><td><code>e252cb5986c391cc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.suite.RunResult</span></td><td><code>8d97f6894fd90ced</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.DirectoryScannerParameters</span></td><td><code>c53ea59aeaf0b80a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.IncludedExcludedPatterns</span></td><td><code>43b8f8de9b3a1945</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest</span></td><td><code>7e73a65f1017294e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest.ClassMatcher</span></td><td><code>0f9c29dc1562afeb</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest.MethodMatcher</span></td><td><code>fccae89ce7b4ee31</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest.Type</span></td><td><code>bf93fc9765a2bd72</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.RunOrderParameters</span></td><td><code>cb70af248c260139</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.TestArtifactInfo</span></td><td><code>c68e923f629df613</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.TestListResolver</span></td><td><code>3dc896f10c8df96c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.TestRequest</span></td><td><code>976405c051909d71</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.CloseableIterator</span></td><td><code>f2c0acf940ec6fbe</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.DefaultRunOrderCalculator</span></td><td><code>1f50ae9e4b9717cd</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.DefaultScanResult</span></td><td><code>46fdc84739146387</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.ReflectionUtils</span></td><td><code>6079e135f863f220</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.RunOrder</span></td><td><code>0ea36dbbf05327aa</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.TestsToRun</span></td><td><code>cc3376426ef9c01c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.TestsToRun.ClassesIterator</span></td><td><code>cd6601db7bc899db</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleReadableChannel</span></td><td><code>6abb59e4c94390af</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleWritableChannel</span></td><td><code>989f9bf3c66ab7be</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.Channels</span></td><td><code>95e459b596e3b873</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.Channels.3</span></td><td><code>9770f03bd51e14f7</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.Channels.4</span></td><td><code>a0e3eaa91d355cc2</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory</span></td><td><code>a56bf84543725f3a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory.NamedThreadFactory</span></td><td><code>cfeefeb0265a8a13</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.DumpFileUtils</span></td><td><code>9a7dbfdf3c2027c8</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.ImmutableMap</span></td><td><code>ee11b540cdd4034e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.ImmutableMap.Node</span></td><td><code>984f6258c6d6ac9c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.ObjectUtils</span></td><td><code>8c788ffcde97fbb4</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.StringUtils</span></td><td><code>f5ecc67792b101a3</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.AbstractPathConfiguration</span></td><td><code>4839ca4be6e46906</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.BooterDeserializer</span></td><td><code>02dc12ed0aec9547</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ClassLoaderConfiguration</span></td><td><code>462fdbd63f8ea8c8</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.Classpath</span></td><td><code>5c18bd381e88bcc8</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ClasspathConfiguration</span></td><td><code>4c9fc97c565be4cc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.CommandReader</span></td><td><code>c29c2eca0cd24bfc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.CommandReader.1</span></td><td><code>727226d97ed192cb</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.CommandReader.CommandRunnable</span></td><td><code>41ac58e8d85ca2bd</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter</span></td><td><code>708bf5b29b088537</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.1</span></td><td><code>7d062229af4458f7</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.3</span></td><td><code>093e1d6ec83caf1c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.4</span></td><td><code>88f2f3e42230f38d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.6</span></td><td><code>a150022bee6cbd41</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.7</span></td><td><code>7d0ab78a1157bb24</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.8</span></td><td><code>01800b3929973273</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.PingScheduler</span></td><td><code>fb97687ca93ecbd1</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.PpidChecker</span></td><td><code>cc99aab0e566c991</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ProcessCheckerType</span></td><td><code>5e6688e4a6a909e6</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.PropertiesWrapper</span></td><td><code>f63d2b2f2fd9087a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ProviderConfiguration</span></td><td><code>146800cea9c5f6cc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.StartupConfiguration</span></td><td><code>1cb50557cb9ebb0b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.SystemPropertyManager</span></td><td><code>3a0459e270104889</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.TypeEncodedValue</span></td><td><code>25e613e357b4f737</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder</span></td><td><code>477264b3887a3b8b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder.FrameCompletion</span></td><td><code>00319e897e4dfd77</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelEncoder</span></td><td><code>d52ce258d8e88d04</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory</span></td><td><code>3e8e80dcadf11ad6</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory</span></td><td><code>6bb9533ad5c08a49</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.JUnitPlatformProvider</span></td><td><code>847b42ef97f97d2b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.RunListenerAdapter</span></td><td><code>d23fd29ada1102cb</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.RunListenerAdapter.1</span></td><td><code>55724259eef83afa</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.TestPlanScannerFilter</span></td><td><code>a3ae2542fd30e874</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.report.PojoStackTraceWriter</span></td><td><code>693eee167813eb7d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.codec.binary.Base64</span></td><td><code>cd6927ec7cf0569e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.codec.binary.BaseNCodec</span></td><td><code>c8dd8163b58acfc1</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.codec.binary.BaseNCodec.Context</span></td><td><code>84b370e464e7008c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.JavaVersion</span></td><td><code>590095a767529b48</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.StringUtils</span></td><td><code>ae3c2c379ffab6fd</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.SystemUtils</span></td><td><code>e4faf882077bc6c0</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.math.NumberUtils</span></td><td><code>505629194db735ed</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.utils.StringUtils</span></td><td><code>5ba1288622b5e22e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.utils.cli.ShutdownHookUtils</span></td><td><code>b7b46c5c1f482bd4</code></td></tr><tr><td><span class=\"el_class\">org.apiguardian.api.API.Status</span></td><td><code>0341e8d99fc36573</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.AssertArrayEquals</span></td><td><code>9f4f742684c38546</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.AssertEquals</span></td><td><code>196f9a5d80a1b0b4</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.AssertionUtils</span></td><td><code>54f95f15cc856931</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.Assertions</span></td><td><code>6e029941b09226e8</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.TestInstance.Lifecycle</span></td><td><code>1f8fa67947feae07</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.extension.ConditionEvaluationResult</span></td><td><code>2f9dc9ea54b57975</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.extension.ExtensionContext</span></td><td><code>3a50244b0f646355</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.JupiterTestEngine</span></td><td><code>91ce387d63124b0b</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.AbstractExtensionContext</span></td><td><code>e85864ea28ce4900</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ClassExtensionContext</span></td><td><code>0edd8a16a5a0f423</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ClassTestDescriptor</span></td><td><code>871339326cdec08d</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ExtensionUtils</span></td><td><code>c0d4b22308952386</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsNonStaticExtensionField</span></td><td><code>5ca7136962622da7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsStaticExtensionField</span></td><td><code>da084ed9633b1c35</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor</span></td><td><code>2004d10245ed7c14</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.JupiterEngineExtensionContext</span></td><td><code>5bcfdadb7f42ddc0</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.JupiterTestDescriptor</span></td><td><code>45d6f6cb92bcef66</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.LifecycleMethodUtils</span></td><td><code>8fd6cd271b5fe7b7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.MethodBasedTestDescriptor</span></td><td><code>7fbbb277bd63085e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.MethodExtensionContext</span></td><td><code>043325a115f0f7bf</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.TestInstanceLifecycleUtils</span></td><td><code>5a6dea961f455d41</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor</span></td><td><code>ca5344ff78b9ac3c</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.AbstractMethodResolver</span></td><td><code>f474a5f7b9196c63</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.DiscoveryFilterApplier</span></td><td><code>e52beeff7f999c17</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.DiscoverySelectorResolver</span></td><td><code>09a38603c216d18c</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.JavaElementsResolver</span></td><td><code>b033bb5913e5b39e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.MethodFinder</span></td><td><code>5ea468d2eb528361</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.NestedTestsResolver</span></td><td><code>9d92451ae793af41</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestContainerResolver</span></td><td><code>452b660f7a80187f</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestFactoryMethodResolver</span></td><td><code>59fd27320e375440</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestMethodResolver</span></td><td><code>812706355dbf565c</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestTemplateMethodResolver</span></td><td><code>47563eb55cd35171</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsInnerClass</span></td><td><code>f7d9846d00228720</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsNestedTestClass</span></td><td><code>e47ff7cd33073803</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsPotentialTestContainer</span></td><td><code>bf17d6180e3bfcd4</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestClassWithTests</span></td><td><code>94179bc44f8c4ff7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestFactoryMethod</span></td><td><code>a2c68978bd6bfbc6</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestMethod</span></td><td><code>8b244977e441886e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestTemplateMethod</span></td><td><code>0baf1066bf0cbad7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestableMethod</span></td><td><code>59a0b58a40803fe2</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ConditionEvaluator</span></td><td><code>cf027eab03077ec8</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ExecutableInvoker</span></td><td><code>3dcb283c9aa60206</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ExtensionValuesStore</span></td><td><code>6da645cbae2256c5</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext</span></td><td><code>2fa1acfc81a9e564</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.Builder</span></td><td><code>8afc8bcaa04b5a1e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State</span></td><td><code>98926feeb7289b09</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ThrowableCollector</span></td><td><code>32288e69ddefa8fb</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.DisabledCondition</span></td><td><code>23223b45668b6ef2</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ExtensionRegistry</span></td><td><code>6de7dc4a18ac97dc</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.RepeatedTestExtension</span></td><td><code>1b7914cc8cf83732</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ScriptExecutionCondition</span></td><td><code>72f1d00f1b0a51e3</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ScriptExecutionCondition.Evaluator</span></td><td><code>36e29b1b3214594b</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ScriptExecutionEvaluator</span></td><td><code>c2e888183731e173</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.TestInfoParameterResolver</span></td><td><code>1b5b370a56807cae</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.TestReporterParameterResolver</span></td><td><code>60beaf7c80fe99cc</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.script.ScriptAccessor.EnvironmentVariableAccessor</span></td><td><code>c0c905d5fe8998ca</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.script.ScriptAccessor.SystemPropertyAccessor</span></td><td><code>18fe4dab72ac1573</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.script.ScriptExecutionManager</span></td><td><code>1f06dfe26cdafe2c</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.logging.LoggerFactory</span></td><td><code>657201953ff2c697</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.logging.LoggerFactory.DelegatingLogger</span></td><td><code>0e5317bba55fc49d</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.AnnotationUtils</span></td><td><code>a1ef6e0681f70a1e</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.AnnotationUtils.AnnotationCacheKey</span></td><td><code>a2872bf2a614d925</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.BlacklistedExceptions</span></td><td><code>73365157bacc50af</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClassFilter</span></td><td><code>093a789d01159576</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClassLoaderUtils</span></td><td><code>fcbbcbe2d963c55b</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClassUtils</span></td><td><code>4f8139a452003bd6</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClasspathScanner</span></td><td><code>c0a3b9155dc07154</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.CollectionUtils</span></td><td><code>ad417bb7390cff66</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ExceptionUtils</span></td><td><code>1dc9dedfab661762</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.Preconditions</span></td><td><code>3b76bcacee9114c0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ReflectionUtils</span></td><td><code>1dca291d849b53b2</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode</span></td><td><code>b267f8ac562d551e</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.StringUtils</span></td><td><code>9596041173fac5b0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.CompositeFilter</span></td><td><code>ec8dc82249eeb7a9</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.CompositeFilter.1</span></td><td><code>70825b5141694d2a</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.ExecutionRequest</span></td><td><code>ed3835cc21e5a048</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.Filter</span></td><td><code>f932423ccd3b54bf</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.FilterResult</span></td><td><code>cdaa92f4f6f79059</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestDescriptor</span></td><td><code>a81a3e15d23f5898</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestDescriptor.Type</span></td><td><code>eb97fc5a29f3ee3a</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestExecutionResult</span></td><td><code>abbab174d32db912</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestExecutionResult.Status</span></td><td><code>da0473a55d05e891</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.UniqueId</span></td><td><code>64973686b4e2c690</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.UniqueId.Segment</span></td><td><code>1872a6198babd9f0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.UniqueIdFormat</span></td><td><code>1470555fac6c7a2b</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.discovery.ClassSelector</span></td><td><code>228aa96d72021db2</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.discovery.DiscoverySelectors</span></td><td><code>c61e9bcc0c5d43d7</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.AbstractTestDescriptor</span></td><td><code>2bfbf25c43491443</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.ClassSource</span></td><td><code>deebd86abf2ac9e8</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.EngineDescriptor</span></td><td><code>b7dbf6dfb794516c</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.MethodSource</span></td><td><code>e22f7f8c4f01d2d8</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.filter.ClasspathScanningSupport</span></td><td><code>045afdae065e9ce0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.ExecutionTracker</span></td><td><code>cbd37bfd76595d62</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine</span></td><td><code>410766a2a07e44b1</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor</span></td><td><code>43b3a991558bcb42</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.1</span></td><td><code>59988b34a20c03de</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.NodeExecutor</span></td><td><code>d5df9a54f301545d</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.Node</span></td><td><code>1e2e35414f9ebddd</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.Node.SkipResult</span></td><td><code>a8b0f84ec81d03c3</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.SingleTestExecutor</span></td><td><code>eb68067e61cad23e</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.TestIdentifier</span></td><td><code>225bb434f8f223e2</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.TestPlan</span></td><td><code>9a2b71b572924cbc</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.DefaultDiscoveryRequest</span></td><td><code>7dda3ad9a0e6a666</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.DefaultLauncher</span></td><td><code>1a1f88af87dc6ec1</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.ExecutionListenerAdapter</span></td><td><code>52cf3c3c69d4dfba</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.LauncherConfigurationParameters</span></td><td><code>ef55cacb5e47a902</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder</span></td><td><code>e78a71b91c159e69</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.LauncherFactory</span></td><td><code>e2bd67b8a72737b5</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.Root</span></td><td><code>32394ca895f9fb9a</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry</span></td><td><code>7c054c4cf76cb0f6</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.ServiceLoaderTestExecutionListenerRegistry</span></td><td><code>2299bac1075a6bf3</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.TestExecutionListenerRegistry</span></td><td><code>190f4fb2b0ab865d</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.TestExecutionListenerRegistry.CompositeTestExecutionListener</span></td><td><code>7538d2d860e1f9cb</code></td></tr><tr><td><span class=\"el_class\">org.opentest4j.AssertionFailedError</span></td><td><code>2c5f69ceb24e9128</code></td></tr><tr><td><span class=\"el_class\">sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo</span></td><td><code>888d0e6a76acb845</code></td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/jacoco-sessions.html b/target/site/jacoco/jacoco-sessions.html
--- a/target/site/jacoco/jacoco-sessions.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/jacoco-sessions.html	(date 1648105701898)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Sessions</title></head><body><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><a href="index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_session">Sessions</span></div><h1>Sessions</h1><p>This coverage report is based on execution data from the following sessions:</p><table class="coverage" cellspacing="0"><thead><tr><td>Session</td><td>Start Time</td><td>Dump Time</td></tr></thead><tbody><tr><td><span class="el_session">DESKTOP-3F0SSFQ-fe00496a</span></td><td>Sep 27, 2021, 5:29:56 PM</td><td>Sep 27, 2021, 5:29:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9cdf880c</span></td><td>Sep 27, 2021, 5:57:07 PM</td><td>Sep 27, 2021, 5:57:08 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-33e4a7ad</span></td><td>Sep 27, 2021, 6:10:24 PM</td><td>Sep 27, 2021, 6:10:26 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d759012b</span></td><td>Sep 27, 2021, 6:11:38 PM</td><td>Sep 27, 2021, 6:11:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-653be16e</span></td><td>Sep 27, 2021, 6:23:10 PM</td><td>Sep 27, 2021, 6:23:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e4543b44</span></td><td>Sep 27, 2021, 6:23:36 PM</td><td>Sep 27, 2021, 6:23:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4d4af810</span></td><td>Sep 27, 2021, 6:23:55 PM</td><td>Sep 27, 2021, 6:23:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-ca0ff9dc</span></td><td>Sep 27, 2021, 6:32:57 PM</td><td>Sep 27, 2021, 6:32:59 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-2b03aa12</span></td><td>Sep 27, 2021, 6:33:17 PM</td><td>Sep 27, 2021, 6:33:18 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-92377961</span></td><td>Sep 27, 2021, 6:41:53 PM</td><td>Sep 27, 2021, 6:41:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f67dcf9d</span></td><td>Sep 27, 2021, 7:07:03 PM</td><td>Sep 27, 2021, 7:07:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3deffdcc</span></td><td>Sep 27, 2021, 7:07:05 PM</td><td>Sep 27, 2021, 7:07:07 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8370ba74</span></td><td>Sep 27, 2021, 7:07:14 PM</td><td>Sep 27, 2021, 7:07:16 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e80853d4</span></td><td>Sep 27, 2021, 7:07:20 PM</td><td>Sep 27, 2021, 7:07:22 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9ee31791</span></td><td>Sep 27, 2021, 7:07:33 PM</td><td>Sep 27, 2021, 7:07:34 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-58a45499</span></td><td>Sep 27, 2021, 7:14:03 PM</td><td>Sep 27, 2021, 7:14:05 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-6b36a7ae</span></td><td>Sep 27, 2021, 7:15:10 PM</td><td>Sep 27, 2021, 7:15:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cd238e7f</span></td><td>Sep 27, 2021, 7:23:32 PM</td><td>Sep 27, 2021, 7:23:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-32a355ac</span></td><td>Sep 27, 2021, 7:23:46 PM</td><td>Sep 27, 2021, 7:23:47 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cf2ae673</span></td><td>Sep 27, 2021, 7:24:23 PM</td><td>Sep 27, 2021, 7:24:25 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d8ae4a1d</span></td><td>Sep 27, 2021, 7:24:44 PM</td><td>Sep 27, 2021, 7:24:45 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-590642cc</span></td><td>Sep 27, 2021, 7:29:32 PM</td><td>Sep 27, 2021, 7:29:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c18502e8</span></td><td>Sep 27, 2021, 7:36:10 PM</td><td>Sep 27, 2021, 7:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-bb68ec51</span></td><td>Sep 27, 2021, 7:36:48 PM</td><td>Sep 27, 2021, 7:36:49 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-dc7eaf97</span></td><td>Sep 27, 2021, 7:53:34 PM</td><td>Sep 27, 2021, 7:53:35 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4fd69810</span></td><td>Sep 27, 2021, 7:54:01 PM</td><td>Sep 27, 2021, 7:54:02 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-96825214</span></td><td>Sep 27, 2021, 7:58:58 PM</td><td>Sep 27, 2021, 7:59:00 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-89a0fc42</span></td><td>Sep 27, 2021, 7:59:36 PM</td><td>Sep 27, 2021, 7:59:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cab82cf0</span></td><td>Sep 27, 2021, 8:00:02 PM</td><td>Sep 27, 2021, 8:00:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c139591e</span></td><td>Sep 27, 2021, 8:34:30 PM</td><td>Sep 27, 2021, 8:34:30 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-82b8fd28</span></td><td>Sep 27, 2021, 8:35:38 PM</td><td>Sep 27, 2021, 8:35:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3bdff75d</span></td><td>Sep 27, 2021, 8:36:10 PM</td><td>Sep 27, 2021, 8:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cdb98687</span></td><td>Sep 27, 2021, 8:39:11 PM</td><td>Sep 27, 2021, 8:39:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e6b68394</span></td><td>Sep 27, 2021, 8:40:13 PM</td><td>Sep 27, 2021, 8:40:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9c517ae6</span></td><td>Sep 27, 2021, 8:40:22 PM</td><td>Sep 27, 2021, 8:40:23 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-7849bf85</span></td><td>Sep 27, 2021, 11:07:11 PM</td><td>Sep 27, 2021, 11:07:12 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8af91b33</span></td><td>Oct 15, 2021, 5:52:56 PM</td><td>Oct 15, 2021, 5:52:57 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3c496517</span></td><td>Oct 15, 2021, 5:53:13 PM</td><td>Oct 15, 2021, 5:53:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-a1df1e07</span></td><td>Oct 15, 2021, 5:53:39 PM</td><td>Oct 15, 2021, 5:53:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-aff8a924</span></td><td>Oct 15, 2021, 5:53:57 PM</td><td>Oct 15, 2021, 5:53:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f94da3ae</span></td><td>Oct 15, 2021, 6:03:05 PM</td><td>Oct 15, 2021, 6:03:06 PM</td></tr><tr><td><span class="el_session">Jacobs-MacBook-Pro.local-f3f79794</span></td><td>Oct 21, 2021, 11:15:55 AM</td><td>Oct 21, 2021, 11:16:04 AM</td></tr></tbody></table><p>Execution data for the following classes is considered in this report:</p><table class="coverage" cellspacing="0"><thead><tr><td>Class</td><td>Id</td></tr></thead><tbody><tr><td><span class="el_class">javax.script.ScriptEngineManager</span></td><td><code>cfba6fa511e45893</code></td></tr><tr><td><span class="el_class">javax.script.ScriptEngineManager.1</span></td><td><code>4213e2cd4b902651</code></td></tr><tr><td><span class="el_class">javax.script.SimpleBindings</span></td><td><code>890d1d7b85b0079e</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>667058e680b2f652</code></td></tr><tr><td><a href="linalg/Matrix.html" class="el_class">linalg.Matrix</a></td><td><code>00b8d5a70cad62e5</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>cdbd098f2f60b471</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>d64dde15d3116a6c</code></td></tr><tr><td><a href="linalg/MatrixProperties.html" class="el_class">linalg.MatrixProperties</a></td><td><code>940009cc5570b904</code></td></tr><tr><td><a href="linalg/PrintOptions.html" class="el_class">linalg.PrintOptions</a></td><td><code>87d4b57eebd861ea</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>636bfcd68857fbe0</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>dcd0ca675fd9eb8f</code></td></tr><tr><td><a href="linalg.complex_number/CNumber.html" class="el_class">linalg.complex_number.CNumber</a></td><td><code>14f9a28efbe96ee9</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>cf2e2350c5b6a9d3</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c3aaa749ff55a981</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>11adaf541eec3222</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>552479f8a0848667</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a5c3049d60beefbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8cf74707bcf3597a</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>76638ca8ea700e75</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>35c6023225290204</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>d84a0b40f81e49ce</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>9dd2ed04d8db5d08</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c214f1f35630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8572d9652414f11e</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c299df505630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>2b5017d334fdd733</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>eb792b51a9e2ccb8</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>77eca11bc8859ffb</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>5adf6b227cd150a2</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a54c0a104c71dcbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>1db964b78a884e22</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>63df2e41a62baa1b</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>90d3bed4db0e78cf</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>59c436c645fb1f27</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>24746b3e26f41451</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>b438baf14d3de40f</code></td></tr><tr><td><a href="linalg.util/Lexer.html" class="el_class">linalg.util.Lexer</a></td><td><code>4653487ac8971dba</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>a89da6d783c46fc7</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>8ba7f2c59cc0deca</code></td></tr><tr><td><a href="linalg.util/LinAlgArrayUtils.html" class="el_class">linalg.util.LinAlgArrayUtils</a></td><td><code>7b7f3e2843bb4d00</code></td></tr><tr><td><a href="linalg.util/NumberLexer.html" class="el_class">linalg.util.NumberLexer</a></td><td><code>b2af6f818100434a</code></td></tr><tr><td><a href="linalg.util/Parser.html" class="el_class">linalg.util.Parser</a></td><td><code>c8f69ece7e388640</code></td></tr><tr><td><a href="linalg.util/StringUtils.html" class="el_class">linalg.util.StringUtils</a></td><td><code>925d5f087ae2f647</code></td></tr><tr><td><a href="linalg.util/Token.html" class="el_class">linalg.util.Token</a></td><td><code>dcf02146e3250669</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>ac7c2a5240d8912f</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BaseProviderFactory</span></td><td><code>5bdb25554fb3d5df</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BiProperty</span></td><td><code>9a2074ae999b3c8a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Command</span></td><td><code>f31ca5085797c808</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.DumpErrorSingleton</span></td><td><code>e3f1c75f159a9ac5</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkedProcessEventType</span></td><td><code>dc56c5dba14b9d58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingReporterFactory</span></td><td><code>bcadcd63978e8dcf</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingRunListener</span></td><td><code>08c963875a23e517</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.MasterProcessCommand</span></td><td><code>90562129b4defd58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Shutdown</span></td><td><code>fab38023c4f1ded4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.cli.CommandLineOption</span></td><td><code>4401c2efb3702254</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.provider.AbstractProvider</span></td><td><code>cf68f167cf236f7b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture</span></td><td><code>b8719a08fbb63e05</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.ForwardingPrintStream</span></td><td><code>7c2392ea44674f2d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.NullOutputStream</span></td><td><code>f7132188596462e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.LegacyPojoStackTraceWriter</span></td><td><code>1aa62cd28375d6e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ReporterConfiguration</span></td><td><code>39591ad2c5816a79</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.RunMode</span></td><td><code>f02e60476bce4d8d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SafeThrowable</span></td><td><code>32b5c60e4604ceb7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SimpleReportEntry</span></td><td><code>e252cb5986c391cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.suite.RunResult</span></td><td><code>8d97f6894fd90ced</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.DirectoryScannerParameters</span></td><td><code>c53ea59aeaf0b80a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.IncludedExcludedPatterns</span></td><td><code>43b8f8de9b3a1945</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest</span></td><td><code>7e73a65f1017294e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.ClassMatcher</span></td><td><code>0f9c29dc1562afeb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.MethodMatcher</span></td><td><code>fccae89ce7b4ee31</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.Type</span></td><td><code>bf93fc9765a2bd72</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.RunOrderParameters</span></td><td><code>cb70af248c260139</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestArtifactInfo</span></td><td><code>c68e923f629df613</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestListResolver</span></td><td><code>3dc896f10c8df96c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestRequest</span></td><td><code>976405c051909d71</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.CloseableIterator</span></td><td><code>f2c0acf940ec6fbe</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultRunOrderCalculator</span></td><td><code>1f50ae9e4b9717cd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultScanResult</span></td><td><code>46fdc84739146387</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.ReflectionUtils</span></td><td><code>6079e135f863f220</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.RunOrder</span></td><td><code>0ea36dbbf05327aa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun</span></td><td><code>cc3376426ef9c01c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun.ClassesIterator</span></td><td><code>cd6601db7bc899db</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleReadableChannel</span></td><td><code>6abb59e4c94390af</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleWritableChannel</span></td><td><code>989f9bf3c66ab7be</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels</span></td><td><code>95e459b596e3b873</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.3</span></td><td><code>9770f03bd51e14f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.4</span></td><td><code>a0e3eaa91d355cc2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory</span></td><td><code>a56bf84543725f3a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory.NamedThreadFactory</span></td><td><code>cfeefeb0265a8a13</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DumpFileUtils</span></td><td><code>9a7dbfdf3c2027c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap</span></td><td><code>ee11b540cdd4034e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap.Node</span></td><td><code>984f6258c6d6ac9c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ObjectUtils</span></td><td><code>8c788ffcde97fbb4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.StringUtils</span></td><td><code>f5ecc67792b101a3</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.AbstractPathConfiguration</span></td><td><code>4839ca4be6e46906</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.BooterDeserializer</span></td><td><code>02dc12ed0aec9547</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClassLoaderConfiguration</span></td><td><code>462fdbd63f8ea8c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.Classpath</span></td><td><code>5c18bd381e88bcc8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClasspathConfiguration</span></td><td><code>4c9fc97c565be4cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader</span></td><td><code>c29c2eca0cd24bfc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.1</span></td><td><code>727226d97ed192cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.CommandRunnable</span></td><td><code>41ac58e8d85ca2bd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter</span></td><td><code>708bf5b29b088537</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.1</span></td><td><code>7d062229af4458f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.3</span></td><td><code>093e1d6ec83caf1c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.4</span></td><td><code>88f2f3e42230f38d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.6</span></td><td><code>a150022bee6cbd41</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.7</span></td><td><code>7d0ab78a1157bb24</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.8</span></td><td><code>01800b3929973273</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.PingScheduler</span></td><td><code>fb97687ca93ecbd1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PpidChecker</span></td><td><code>cc99aab0e566c991</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProcessCheckerType</span></td><td><code>5e6688e4a6a909e6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PropertiesWrapper</span></td><td><code>f63d2b2f2fd9087a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProviderConfiguration</span></td><td><code>146800cea9c5f6cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.StartupConfiguration</span></td><td><code>1cb50557cb9ebb0b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.SystemPropertyManager</span></td><td><code>3a0459e270104889</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.TypeEncodedValue</span></td><td><code>25e613e357b4f737</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder</span></td><td><code>477264b3887a3b8b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder.FrameCompletion</span></td><td><code>00319e897e4dfd77</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelEncoder</span></td><td><code>d52ce258d8e88d04</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory</span></td><td><code>3e8e80dcadf11ad6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory</span></td><td><code>6bb9533ad5c08a49</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.JUnitPlatformProvider</span></td><td><code>847b42ef97f97d2b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter</span></td><td><code>d23fd29ada1102cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter.1</span></td><td><code>55724259eef83afa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.TestPlanScannerFilter</span></td><td><code>a3ae2542fd30e874</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.report.PojoStackTraceWriter</span></td><td><code>693eee167813eb7d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.Base64</span></td><td><code>cd6927ec7cf0569e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec</span></td><td><code>c8dd8163b58acfc1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec.Context</span></td><td><code>84b370e464e7008c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.JavaVersion</span></td><td><code>590095a767529b48</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.StringUtils</span></td><td><code>ae3c2c379ffab6fd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.SystemUtils</span></td><td><code>e4faf882077bc6c0</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.math.NumberUtils</span></td><td><code>505629194db735ed</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.StringUtils</span></td><td><code>5ba1288622b5e22e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.cli.ShutdownHookUtils</span></td><td><code>b7b46c5c1f482bd4</code></td></tr><tr><td><span class="el_class">org.apiguardian.api.API.Status</span></td><td><code>0341e8d99fc36573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertArrayEquals</span></td><td><code>9f4f742684c38546</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertEquals</span></td><td><code>196f9a5d80a1b0b4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertionUtils</span></td><td><code>54f95f15cc856931</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.Assertions</span></td><td><code>6e029941b09226e8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.TestInstance.Lifecycle</span></td><td><code>1f8fa67947feae07</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ConditionEvaluationResult</span></td><td><code>2f9dc9ea54b57975</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ExtensionContext</span></td><td><code>3a50244b0f646355</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.JupiterTestEngine</span></td><td><code>91ce387d63124b0b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.AbstractExtensionContext</span></td><td><code>e85864ea28ce4900</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassExtensionContext</span></td><td><code>0edd8a16a5a0f423</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassTestDescriptor</span></td><td><code>871339326cdec08d</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils</span></td><td><code>c0d4b22308952386</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsNonStaticExtensionField</span></td><td><code>5ca7136962622da7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsStaticExtensionField</span></td><td><code>da084ed9633b1c35</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor</span></td><td><code>2004d10245ed7c14</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineExtensionContext</span></td><td><code>5bcfdadb7f42ddc0</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterTestDescriptor</span></td><td><code>45d6f6cb92bcef66</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.LifecycleMethodUtils</span></td><td><code>8fd6cd271b5fe7b7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodBasedTestDescriptor</span></td><td><code>7fbbb277bd63085e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodExtensionContext</span></td><td><code>043325a115f0f7bf</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestInstanceLifecycleUtils</span></td><td><code>5a6dea961f455d41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor</span></td><td><code>ca5344ff78b9ac3c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.AbstractMethodResolver</span></td><td><code>f474a5f7b9196c63</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoveryFilterApplier</span></td><td><code>e52beeff7f999c17</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoverySelectorResolver</span></td><td><code>09a38603c216d18c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.JavaElementsResolver</span></td><td><code>b033bb5913e5b39e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.MethodFinder</span></td><td><code>5ea468d2eb528361</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.NestedTestsResolver</span></td><td><code>9d92451ae793af41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestContainerResolver</span></td><td><code>452b660f7a80187f</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestFactoryMethodResolver</span></td><td><code>59fd27320e375440</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestMethodResolver</span></td><td><code>812706355dbf565c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestTemplateMethodResolver</span></td><td><code>47563eb55cd35171</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsInnerClass</span></td><td><code>f7d9846d00228720</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsNestedTestClass</span></td><td><code>e47ff7cd33073803</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsPotentialTestContainer</span></td><td><code>bf17d6180e3bfcd4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestClassWithTests</span></td><td><code>94179bc44f8c4ff7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestFactoryMethod</span></td><td><code>a2c68978bd6bfbc6</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestMethod</span></td><td><code>8b244977e441886e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestTemplateMethod</span></td><td><code>0baf1066bf0cbad7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestableMethod</span></td><td><code>59a0b58a40803fe2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ConditionEvaluator</span></td><td><code>cf027eab03077ec8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExecutableInvoker</span></td><td><code>3dcb283c9aa60206</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExtensionValuesStore</span></td><td><code>6da645cbae2256c5</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext</span></td><td><code>2fa1acfc81a9e564</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.Builder</span></td><td><code>8afc8bcaa04b5a1e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State</span></td><td><code>98926feeb7289b09</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ThrowableCollector</span></td><td><code>32288e69ddefa8fb</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.DisabledCondition</span></td><td><code>23223b45668b6ef2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ExtensionRegistry</span></td><td><code>6de7dc4a18ac97dc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.RepeatedTestExtension</span></td><td><code>1b7914cc8cf83732</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition</span></td><td><code>72f1d00f1b0a51e3</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition.Evaluator</span></td><td><code>36e29b1b3214594b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionEvaluator</span></td><td><code>c2e888183731e173</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestInfoParameterResolver</span></td><td><code>1b5b370a56807cae</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestReporterParameterResolver</span></td><td><code>60beaf7c80fe99cc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.EnvironmentVariableAccessor</span></td><td><code>c0c905d5fe8998ca</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.SystemPropertyAccessor</span></td><td><code>18fe4dab72ac1573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptExecutionManager</span></td><td><code>1f06dfe26cdafe2c</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory</span></td><td><code>657201953ff2c697</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory.DelegatingLogger</span></td><td><code>0e5317bba55fc49d</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils</span></td><td><code>a1ef6e0681f70a1e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils.AnnotationCacheKey</span></td><td><code>a2872bf2a614d925</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.BlacklistedExceptions</span></td><td><code>73365157bacc50af</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassFilter</span></td><td><code>093a789d01159576</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassLoaderUtils</span></td><td><code>fcbbcbe2d963c55b</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassUtils</span></td><td><code>4f8139a452003bd6</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClasspathScanner</span></td><td><code>c0a3b9155dc07154</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.CollectionUtils</span></td><td><code>ad417bb7390cff66</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ExceptionUtils</span></td><td><code>1dc9dedfab661762</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.Preconditions</span></td><td><code>3b76bcacee9114c0</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils</span></td><td><code>1dca291d849b53b2</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode</span></td><td><code>b267f8ac562d551e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.StringUtils</span></td><td><code>9596041173fac5b0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter</span></td><td><code>ec8dc82249eeb7a9</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter.1</span></td><td><code>70825b5141694d2a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.ExecutionRequest</span></td><td><code>ed3835cc21e5a048</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.Filter</span></td><td><code>f932423ccd3b54bf</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.FilterResult</span></td><td><code>cdaa92f4f6f79059</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor</span></td><td><code>a81a3e15d23f5898</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor.Type</span></td><td><code>eb97fc5a29f3ee3a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult</span></td><td><code>abbab174d32db912</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult.Status</span></td><td><code>da0473a55d05e891</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId</span></td><td><code>64973686b4e2c690</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId.Segment</span></td><td><code>1872a6198babd9f0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueIdFormat</span></td><td><code>1470555fac6c7a2b</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.ClassSelector</span></td><td><code>228aa96d72021db2</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.DiscoverySelectors</span></td><td><code>c61e9bcc0c5d43d7</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.AbstractTestDescriptor</span></td><td><code>2bfbf25c43491443</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.ClassSource</span></td><td><code>deebd86abf2ac9e8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.EngineDescriptor</span></td><td><code>b7dbf6dfb794516c</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.MethodSource</span></td><td><code>e22f7f8c4f01d2d8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.filter.ClasspathScanningSupport</span></td><td><code>045afdae065e9ce0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.ExecutionTracker</span></td><td><code>cbd37bfd76595d62</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine</span></td><td><code>410766a2a07e44b1</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor</span></td><td><code>43b3a991558bcb42</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.1</span></td><td><code>59988b34a20c03de</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.NodeExecutor</span></td><td><code>d5df9a54f301545d</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node</span></td><td><code>1e2e35414f9ebddd</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node.SkipResult</span></td><td><code>a8b0f84ec81d03c3</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.SingleTestExecutor</span></td><td><code>eb68067e61cad23e</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestIdentifier</span></td><td><code>225bb434f8f223e2</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestPlan</span></td><td><code>9a2b71b572924cbc</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultDiscoveryRequest</span></td><td><code>7dda3ad9a0e6a666</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultLauncher</span></td><td><code>1a1f88af87dc6ec1</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ExecutionListenerAdapter</span></td><td><code>52cf3c3c69d4dfba</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherConfigurationParameters</span></td><td><code>ef55cacb5e47a902</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder</span></td><td><code>e78a71b91c159e69</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherFactory</span></td><td><code>e2bd67b8a72737b5</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.Root</span></td><td><code>32394ca895f9fb9a</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry</span></td><td><code>7c054c4cf76cb0f6</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestExecutionListenerRegistry</span></td><td><code>2299bac1075a6bf3</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry</span></td><td><code>190f4fb2b0ab865d</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry.CompositeTestExecutionListener</span></td><td><code>7538d2d860e1f9cb</code></td></tr><tr><td><span class="el_class">org.opentest4j.AssertionFailedError</span></td><td><code>2c5f69ceb24e9128</code></td></tr><tr><td><span class="el_class">sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo</span></td><td><code>888d0e6a76acb845</code></td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Sessions</title></head><body><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><a href="index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_session">Sessions</span></div><h1>Sessions</h1><p>This coverage report is based on execution data from the following sessions:</p><table class="coverage" cellspacing="0"><thead><tr><td>Session</td><td>Start Time</td><td>Dump Time</td></tr></thead><tbody><tr><td><span class="el_session">DESKTOP-3F0SSFQ-fe00496a</span></td><td>Sep 27, 2021, 5:29:56 PM</td><td>Sep 27, 2021, 5:29:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9cdf880c</span></td><td>Sep 27, 2021, 5:57:07 PM</td><td>Sep 27, 2021, 5:57:08 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-33e4a7ad</span></td><td>Sep 27, 2021, 6:10:24 PM</td><td>Sep 27, 2021, 6:10:26 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d759012b</span></td><td>Sep 27, 2021, 6:11:38 PM</td><td>Sep 27, 2021, 6:11:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-653be16e</span></td><td>Sep 27, 2021, 6:23:10 PM</td><td>Sep 27, 2021, 6:23:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e4543b44</span></td><td>Sep 27, 2021, 6:23:36 PM</td><td>Sep 27, 2021, 6:23:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4d4af810</span></td><td>Sep 27, 2021, 6:23:55 PM</td><td>Sep 27, 2021, 6:23:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-ca0ff9dc</span></td><td>Sep 27, 2021, 6:32:57 PM</td><td>Sep 27, 2021, 6:32:59 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-2b03aa12</span></td><td>Sep 27, 2021, 6:33:17 PM</td><td>Sep 27, 2021, 6:33:18 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-92377961</span></td><td>Sep 27, 2021, 6:41:53 PM</td><td>Sep 27, 2021, 6:41:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f67dcf9d</span></td><td>Sep 27, 2021, 7:07:03 PM</td><td>Sep 27, 2021, 7:07:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3deffdcc</span></td><td>Sep 27, 2021, 7:07:05 PM</td><td>Sep 27, 2021, 7:07:07 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8370ba74</span></td><td>Sep 27, 2021, 7:07:14 PM</td><td>Sep 27, 2021, 7:07:16 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e80853d4</span></td><td>Sep 27, 2021, 7:07:20 PM</td><td>Sep 27, 2021, 7:07:22 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9ee31791</span></td><td>Sep 27, 2021, 7:07:33 PM</td><td>Sep 27, 2021, 7:07:34 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-58a45499</span></td><td>Sep 27, 2021, 7:14:03 PM</td><td>Sep 27, 2021, 7:14:05 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-6b36a7ae</span></td><td>Sep 27, 2021, 7:15:10 PM</td><td>Sep 27, 2021, 7:15:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cd238e7f</span></td><td>Sep 27, 2021, 7:23:32 PM</td><td>Sep 27, 2021, 7:23:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-32a355ac</span></td><td>Sep 27, 2021, 7:23:46 PM</td><td>Sep 27, 2021, 7:23:47 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cf2ae673</span></td><td>Sep 27, 2021, 7:24:23 PM</td><td>Sep 27, 2021, 7:24:25 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d8ae4a1d</span></td><td>Sep 27, 2021, 7:24:44 PM</td><td>Sep 27, 2021, 7:24:45 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-590642cc</span></td><td>Sep 27, 2021, 7:29:32 PM</td><td>Sep 27, 2021, 7:29:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c18502e8</span></td><td>Sep 27, 2021, 7:36:10 PM</td><td>Sep 27, 2021, 7:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-bb68ec51</span></td><td>Sep 27, 2021, 7:36:48 PM</td><td>Sep 27, 2021, 7:36:49 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-dc7eaf97</span></td><td>Sep 27, 2021, 7:53:34 PM</td><td>Sep 27, 2021, 7:53:35 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4fd69810</span></td><td>Sep 27, 2021, 7:54:01 PM</td><td>Sep 27, 2021, 7:54:02 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-96825214</span></td><td>Sep 27, 2021, 7:58:58 PM</td><td>Sep 27, 2021, 7:59:00 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-89a0fc42</span></td><td>Sep 27, 2021, 7:59:36 PM</td><td>Sep 27, 2021, 7:59:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cab82cf0</span></td><td>Sep 27, 2021, 8:00:02 PM</td><td>Sep 27, 2021, 8:00:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c139591e</span></td><td>Sep 27, 2021, 8:34:30 PM</td><td>Sep 27, 2021, 8:34:30 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-82b8fd28</span></td><td>Sep 27, 2021, 8:35:38 PM</td><td>Sep 27, 2021, 8:35:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3bdff75d</span></td><td>Sep 27, 2021, 8:36:10 PM</td><td>Sep 27, 2021, 8:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cdb98687</span></td><td>Sep 27, 2021, 8:39:11 PM</td><td>Sep 27, 2021, 8:39:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e6b68394</span></td><td>Sep 27, 2021, 8:40:13 PM</td><td>Sep 27, 2021, 8:40:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9c517ae6</span></td><td>Sep 27, 2021, 8:40:22 PM</td><td>Sep 27, 2021, 8:40:23 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-7849bf85</span></td><td>Sep 27, 2021, 11:07:11 PM</td><td>Sep 27, 2021, 11:07:12 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8af91b33</span></td><td>Oct 15, 2021, 5:52:56 PM</td><td>Oct 15, 2021, 5:52:57 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3c496517</span></td><td>Oct 15, 2021, 5:53:13 PM</td><td>Oct 15, 2021, 5:53:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-a1df1e07</span></td><td>Oct 15, 2021, 5:53:39 PM</td><td>Oct 15, 2021, 5:53:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-aff8a924</span></td><td>Oct 15, 2021, 5:53:57 PM</td><td>Oct 15, 2021, 5:53:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f94da3ae</span></td><td>Oct 15, 2021, 6:03:05 PM</td><td>Oct 15, 2021, 6:03:06 PM</td></tr><tr><td><span class="el_session">Jacobs-MacBook-Pro.local-f3f79794</span></td><td>Oct 21, 2021, 11:15:55 AM</td><td>Oct 21, 2021, 11:16:04 AM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-1c4bcb6b</span></td><td>Jan 28, 2022, 8:38:18 PM</td><td>Jan 28, 2022, 8:38:19 PM</td></tr><tr><td><span class="el_session">BLD-e50ef23e</span></td><td>Mar 24, 2022, 1:07:53 AM</td><td>Mar 24, 2022, 1:07:53 AM</td></tr><tr><td><span class="el_session">BLD-74c6d6ca</span></td><td>Mar 24, 2022, 1:08:21 AM</td><td>Mar 24, 2022, 1:08:21 AM</td></tr></tbody></table><p>Execution data for the following classes is considered in this report:</p><table class="coverage" cellspacing="0"><thead><tr><td>Class</td><td>Id</td></tr></thead><tbody><tr><td><span class="el_class">javax.script.ScriptEngineManager</span></td><td><code>cfba6fa511e45893</code></td></tr><tr><td><span class="el_class">javax.script.ScriptEngineManager.1</span></td><td><code>4213e2cd4b902651</code></td></tr><tr><td><span class="el_class">javax.script.SimpleBindings</span></td><td><code>890d1d7b85b0079e</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>667058e680b2f652</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>00b8d5a70cad62e5</code></td></tr><tr><td><a href="linalg/Matrix.html" class="el_class">linalg.Matrix</a></td><td><code>3afaba76d8b7e79a</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>cdbd098f2f60b471</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>d64dde15d3116a6c</code></td></tr><tr><td><a href="linalg/MatrixProperties.html" class="el_class">linalg.MatrixProperties</a></td><td><code>f8468dbb2948351f</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>940009cc5570b904</code></td></tr><tr><td><a href="linalg/PrintOptions.html" class="el_class">linalg.PrintOptions</a></td><td><code>87d4b57eebd861ea</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>636bfcd68857fbe0</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>dcd0ca675fd9eb8f</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>14f9a28efbe96ee9</code></td></tr><tr><td><a href="linalg.complex_number/CNumber.html" class="el_class">linalg.complex_number.CNumber</a></td><td><code>319e7e840503e797</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>cf2e2350c5b6a9d3</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c3aaa749ff55a981</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>11adaf541eec3222</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>552479f8a0848667</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a5c3049d60beefbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8cf74707bcf3597a</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>76638ca8ea700e75</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>35c6023225290204</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>d84a0b40f81e49ce</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>9dd2ed04d8db5d08</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c214f1f35630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8572d9652414f11e</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c299df505630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>2b5017d334fdd733</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>eb792b51a9e2ccb8</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>77eca11bc8859ffb</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>5adf6b227cd150a2</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a54c0a104c71dcbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>1db964b78a884e22</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>63df2e41a62baa1b</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>90d3bed4db0e78cf</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>59c436c645fb1f27</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>24746b3e26f41451</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>b438baf14d3de40f</code></td></tr><tr><td><span class="el_class">linalg.util.Lexer</span></td><td><code>4653487ac8971dba</code></td></tr><tr><td><a href="linalg.util/Lexer.html" class="el_class">linalg.util.Lexer</a></td><td><code>e409ebfa2a659ebb</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>a89da6d783c46fc7</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>8ba7f2c59cc0deca</code></td></tr><tr><td><a href="linalg.util/LinAlgArrayUtils.html" class="el_class">linalg.util.LinAlgArrayUtils</a></td><td><code>7b7f3e2843bb4d00</code></td></tr><tr><td><a href="linalg.util/NumberLexer.html" class="el_class">linalg.util.NumberLexer</a></td><td><code>fd3785bd9c8bdf19</code></td></tr><tr><td><span class="el_class">linalg.util.NumberLexer</span></td><td><code>b2af6f818100434a</code></td></tr><tr><td><a href="linalg.util/Parser.html" class="el_class">linalg.util.Parser</a></td><td><code>c8f69ece7e388640</code></td></tr><tr><td><a href="linalg.util/StringUtils.html" class="el_class">linalg.util.StringUtils</a></td><td><code>925d5f087ae2f647</code></td></tr><tr><td><a href="linalg.util/Token.html" class="el_class">linalg.util.Token</a></td><td><code>f4b4f2408890702c</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>dcf02146e3250669</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>ac7c2a5240d8912f</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BaseProviderFactory</span></td><td><code>5bdb25554fb3d5df</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BiProperty</span></td><td><code>9a2074ae999b3c8a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Command</span></td><td><code>f31ca5085797c808</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.DumpErrorSingleton</span></td><td><code>e3f1c75f159a9ac5</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkedProcessEventType</span></td><td><code>dc56c5dba14b9d58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingReporterFactory</span></td><td><code>bcadcd63978e8dcf</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingRunListener</span></td><td><code>08c963875a23e517</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.MasterProcessCommand</span></td><td><code>90562129b4defd58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Shutdown</span></td><td><code>fab38023c4f1ded4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.cli.CommandLineOption</span></td><td><code>4401c2efb3702254</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.provider.AbstractProvider</span></td><td><code>cf68f167cf236f7b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture</span></td><td><code>b8719a08fbb63e05</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.ForwardingPrintStream</span></td><td><code>7c2392ea44674f2d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.NullOutputStream</span></td><td><code>f7132188596462e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.LegacyPojoStackTraceWriter</span></td><td><code>1aa62cd28375d6e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ReporterConfiguration</span></td><td><code>39591ad2c5816a79</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.RunMode</span></td><td><code>f02e60476bce4d8d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SafeThrowable</span></td><td><code>32b5c60e4604ceb7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SimpleReportEntry</span></td><td><code>e252cb5986c391cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.suite.RunResult</span></td><td><code>8d97f6894fd90ced</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.DirectoryScannerParameters</span></td><td><code>c53ea59aeaf0b80a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.IncludedExcludedPatterns</span></td><td><code>43b8f8de9b3a1945</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest</span></td><td><code>7e73a65f1017294e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.ClassMatcher</span></td><td><code>0f9c29dc1562afeb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.MethodMatcher</span></td><td><code>fccae89ce7b4ee31</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.Type</span></td><td><code>bf93fc9765a2bd72</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.RunOrderParameters</span></td><td><code>cb70af248c260139</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestArtifactInfo</span></td><td><code>c68e923f629df613</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestListResolver</span></td><td><code>3dc896f10c8df96c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestRequest</span></td><td><code>976405c051909d71</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.CloseableIterator</span></td><td><code>f2c0acf940ec6fbe</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultRunOrderCalculator</span></td><td><code>1f50ae9e4b9717cd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultScanResult</span></td><td><code>46fdc84739146387</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.ReflectionUtils</span></td><td><code>6079e135f863f220</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.RunOrder</span></td><td><code>0ea36dbbf05327aa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun</span></td><td><code>cc3376426ef9c01c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun.ClassesIterator</span></td><td><code>cd6601db7bc899db</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleReadableChannel</span></td><td><code>6abb59e4c94390af</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleWritableChannel</span></td><td><code>989f9bf3c66ab7be</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels</span></td><td><code>95e459b596e3b873</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.3</span></td><td><code>9770f03bd51e14f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.4</span></td><td><code>a0e3eaa91d355cc2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory</span></td><td><code>a56bf84543725f3a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory.NamedThreadFactory</span></td><td><code>cfeefeb0265a8a13</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DumpFileUtils</span></td><td><code>9a7dbfdf3c2027c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap</span></td><td><code>ee11b540cdd4034e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap.Node</span></td><td><code>984f6258c6d6ac9c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ObjectUtils</span></td><td><code>8c788ffcde97fbb4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.StringUtils</span></td><td><code>f5ecc67792b101a3</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.AbstractPathConfiguration</span></td><td><code>4839ca4be6e46906</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.BooterDeserializer</span></td><td><code>02dc12ed0aec9547</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClassLoaderConfiguration</span></td><td><code>462fdbd63f8ea8c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.Classpath</span></td><td><code>5c18bd381e88bcc8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClasspathConfiguration</span></td><td><code>4c9fc97c565be4cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader</span></td><td><code>c29c2eca0cd24bfc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.1</span></td><td><code>727226d97ed192cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.CommandRunnable</span></td><td><code>41ac58e8d85ca2bd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter</span></td><td><code>708bf5b29b088537</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.1</span></td><td><code>7d062229af4458f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.3</span></td><td><code>093e1d6ec83caf1c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.4</span></td><td><code>88f2f3e42230f38d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.6</span></td><td><code>a150022bee6cbd41</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.7</span></td><td><code>7d0ab78a1157bb24</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.8</span></td><td><code>01800b3929973273</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.PingScheduler</span></td><td><code>fb97687ca93ecbd1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PpidChecker</span></td><td><code>cc99aab0e566c991</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProcessCheckerType</span></td><td><code>5e6688e4a6a909e6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PropertiesWrapper</span></td><td><code>f63d2b2f2fd9087a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProviderConfiguration</span></td><td><code>146800cea9c5f6cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.StartupConfiguration</span></td><td><code>1cb50557cb9ebb0b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.SystemPropertyManager</span></td><td><code>3a0459e270104889</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.TypeEncodedValue</span></td><td><code>25e613e357b4f737</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder</span></td><td><code>477264b3887a3b8b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder.FrameCompletion</span></td><td><code>00319e897e4dfd77</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelEncoder</span></td><td><code>d52ce258d8e88d04</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory</span></td><td><code>3e8e80dcadf11ad6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory</span></td><td><code>6bb9533ad5c08a49</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.JUnitPlatformProvider</span></td><td><code>847b42ef97f97d2b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter</span></td><td><code>d23fd29ada1102cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter.1</span></td><td><code>55724259eef83afa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.TestPlanScannerFilter</span></td><td><code>a3ae2542fd30e874</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.report.PojoStackTraceWriter</span></td><td><code>693eee167813eb7d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.Base64</span></td><td><code>cd6927ec7cf0569e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec</span></td><td><code>c8dd8163b58acfc1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec.Context</span></td><td><code>84b370e464e7008c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.JavaVersion</span></td><td><code>590095a767529b48</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.StringUtils</span></td><td><code>ae3c2c379ffab6fd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.SystemUtils</span></td><td><code>e4faf882077bc6c0</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.math.NumberUtils</span></td><td><code>505629194db735ed</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.StringUtils</span></td><td><code>5ba1288622b5e22e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.cli.ShutdownHookUtils</span></td><td><code>b7b46c5c1f482bd4</code></td></tr><tr><td><span class="el_class">org.apiguardian.api.API.Status</span></td><td><code>0341e8d99fc36573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertArrayEquals</span></td><td><code>9f4f742684c38546</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertEquals</span></td><td><code>196f9a5d80a1b0b4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertionUtils</span></td><td><code>54f95f15cc856931</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.Assertions</span></td><td><code>6e029941b09226e8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.TestInstance.Lifecycle</span></td><td><code>1f8fa67947feae07</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ConditionEvaluationResult</span></td><td><code>2f9dc9ea54b57975</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ExtensionContext</span></td><td><code>3a50244b0f646355</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.JupiterTestEngine</span></td><td><code>91ce387d63124b0b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.AbstractExtensionContext</span></td><td><code>e85864ea28ce4900</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassExtensionContext</span></td><td><code>0edd8a16a5a0f423</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassTestDescriptor</span></td><td><code>871339326cdec08d</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils</span></td><td><code>c0d4b22308952386</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsNonStaticExtensionField</span></td><td><code>5ca7136962622da7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsStaticExtensionField</span></td><td><code>da084ed9633b1c35</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor</span></td><td><code>2004d10245ed7c14</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineExtensionContext</span></td><td><code>5bcfdadb7f42ddc0</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterTestDescriptor</span></td><td><code>45d6f6cb92bcef66</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.LifecycleMethodUtils</span></td><td><code>8fd6cd271b5fe7b7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodBasedTestDescriptor</span></td><td><code>7fbbb277bd63085e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodExtensionContext</span></td><td><code>043325a115f0f7bf</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestInstanceLifecycleUtils</span></td><td><code>5a6dea961f455d41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor</span></td><td><code>ca5344ff78b9ac3c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.AbstractMethodResolver</span></td><td><code>f474a5f7b9196c63</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoveryFilterApplier</span></td><td><code>e52beeff7f999c17</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoverySelectorResolver</span></td><td><code>09a38603c216d18c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.JavaElementsResolver</span></td><td><code>b033bb5913e5b39e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.MethodFinder</span></td><td><code>5ea468d2eb528361</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.NestedTestsResolver</span></td><td><code>9d92451ae793af41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestContainerResolver</span></td><td><code>452b660f7a80187f</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestFactoryMethodResolver</span></td><td><code>59fd27320e375440</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestMethodResolver</span></td><td><code>812706355dbf565c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestTemplateMethodResolver</span></td><td><code>47563eb55cd35171</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsInnerClass</span></td><td><code>f7d9846d00228720</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsNestedTestClass</span></td><td><code>e47ff7cd33073803</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsPotentialTestContainer</span></td><td><code>bf17d6180e3bfcd4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestClassWithTests</span></td><td><code>94179bc44f8c4ff7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestFactoryMethod</span></td><td><code>a2c68978bd6bfbc6</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestMethod</span></td><td><code>8b244977e441886e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestTemplateMethod</span></td><td><code>0baf1066bf0cbad7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestableMethod</span></td><td><code>59a0b58a40803fe2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ConditionEvaluator</span></td><td><code>cf027eab03077ec8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExecutableInvoker</span></td><td><code>3dcb283c9aa60206</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExtensionValuesStore</span></td><td><code>6da645cbae2256c5</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext</span></td><td><code>2fa1acfc81a9e564</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.Builder</span></td><td><code>8afc8bcaa04b5a1e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State</span></td><td><code>98926feeb7289b09</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ThrowableCollector</span></td><td><code>32288e69ddefa8fb</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.DisabledCondition</span></td><td><code>23223b45668b6ef2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ExtensionRegistry</span></td><td><code>6de7dc4a18ac97dc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.RepeatedTestExtension</span></td><td><code>1b7914cc8cf83732</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition</span></td><td><code>72f1d00f1b0a51e3</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition.Evaluator</span></td><td><code>36e29b1b3214594b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionEvaluator</span></td><td><code>c2e888183731e173</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestInfoParameterResolver</span></td><td><code>1b5b370a56807cae</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestReporterParameterResolver</span></td><td><code>60beaf7c80fe99cc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.EnvironmentVariableAccessor</span></td><td><code>c0c905d5fe8998ca</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.SystemPropertyAccessor</span></td><td><code>18fe4dab72ac1573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptExecutionManager</span></td><td><code>1f06dfe26cdafe2c</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory</span></td><td><code>657201953ff2c697</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory.DelegatingLogger</span></td><td><code>0e5317bba55fc49d</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils</span></td><td><code>a1ef6e0681f70a1e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils.AnnotationCacheKey</span></td><td><code>a2872bf2a614d925</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.BlacklistedExceptions</span></td><td><code>73365157bacc50af</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassFilter</span></td><td><code>093a789d01159576</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassLoaderUtils</span></td><td><code>fcbbcbe2d963c55b</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassUtils</span></td><td><code>4f8139a452003bd6</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClasspathScanner</span></td><td><code>c0a3b9155dc07154</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.CollectionUtils</span></td><td><code>ad417bb7390cff66</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ExceptionUtils</span></td><td><code>1dc9dedfab661762</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.Preconditions</span></td><td><code>3b76bcacee9114c0</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils</span></td><td><code>1dca291d849b53b2</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode</span></td><td><code>b267f8ac562d551e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.StringUtils</span></td><td><code>9596041173fac5b0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter</span></td><td><code>ec8dc82249eeb7a9</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter.1</span></td><td><code>70825b5141694d2a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.ExecutionRequest</span></td><td><code>ed3835cc21e5a048</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.Filter</span></td><td><code>f932423ccd3b54bf</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.FilterResult</span></td><td><code>cdaa92f4f6f79059</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor</span></td><td><code>a81a3e15d23f5898</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor.Type</span></td><td><code>eb97fc5a29f3ee3a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult</span></td><td><code>abbab174d32db912</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult.Status</span></td><td><code>da0473a55d05e891</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId</span></td><td><code>64973686b4e2c690</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId.Segment</span></td><td><code>1872a6198babd9f0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueIdFormat</span></td><td><code>1470555fac6c7a2b</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.ClassSelector</span></td><td><code>228aa96d72021db2</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.DiscoverySelectors</span></td><td><code>c61e9bcc0c5d43d7</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.AbstractTestDescriptor</span></td><td><code>2bfbf25c43491443</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.ClassSource</span></td><td><code>deebd86abf2ac9e8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.EngineDescriptor</span></td><td><code>b7dbf6dfb794516c</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.MethodSource</span></td><td><code>e22f7f8c4f01d2d8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.filter.ClasspathScanningSupport</span></td><td><code>045afdae065e9ce0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.ExecutionTracker</span></td><td><code>cbd37bfd76595d62</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine</span></td><td><code>410766a2a07e44b1</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor</span></td><td><code>43b3a991558bcb42</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.1</span></td><td><code>59988b34a20c03de</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.NodeExecutor</span></td><td><code>d5df9a54f301545d</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node</span></td><td><code>1e2e35414f9ebddd</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node.SkipResult</span></td><td><code>a8b0f84ec81d03c3</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.SingleTestExecutor</span></td><td><code>eb68067e61cad23e</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestIdentifier</span></td><td><code>225bb434f8f223e2</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestPlan</span></td><td><code>9a2b71b572924cbc</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultDiscoveryRequest</span></td><td><code>7dda3ad9a0e6a666</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultLauncher</span></td><td><code>1a1f88af87dc6ec1</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ExecutionListenerAdapter</span></td><td><code>52cf3c3c69d4dfba</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherConfigurationParameters</span></td><td><code>ef55cacb5e47a902</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder</span></td><td><code>e78a71b91c159e69</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherFactory</span></td><td><code>e2bd67b8a72737b5</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.Root</span></td><td><code>32394ca895f9fb9a</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry</span></td><td><code>7c054c4cf76cb0f6</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestExecutionListenerRegistry</span></td><td><code>2299bac1075a6bf3</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry</span></td><td><code>190f4fb2b0ab865d</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry.CompositeTestExecutionListener</span></td><td><code>7538d2d860e1f9cb</code></td></tr><tr><td><span class="el_class">org.opentest4j.AssertionFailedError</span></td><td><code>2c5f69ceb24e9128</code></td></tr><tr><td><span class="el_class">sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo</span></td><td><code>888d0e6a76acb845</code></td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/Lexer.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>Lexer</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_class\">Lexer</span></div><h1>Lexer</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">13 of 62</td><td class=\"ctr2\">79%</td><td class=\"bar\">1 of 8</td><td class=\"ctr2\">87%</td><td class=\"ctr1\">3</td><td class=\"ctr2\">10</td><td class=\"ctr1\">5</td><td class=\"ctr2\">16</td><td class=\"ctr1\">2</td><td class=\"ctr2\">6</td></tr></tfoot><tbody><tr><td id=\"a1\"><a href=\"Lexer.java.html#L68\" class=\"el_method\">error(String)</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d3\"/><td class=\"ctr2\" id=\"e3\">n/a</td><td class=\"ctr1\" id=\"f0\">1</td><td class=\"ctr2\" id=\"g3\">1</td><td class=\"ctr1\" id=\"h0\">3</td><td class=\"ctr2\" id=\"i2\">3</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a5\"><a href=\"Lexer.java.html#L52\" class=\"el_method\">putBackSymbol(int)</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"60\" height=\"10\" title=\"11\" alt=\"11\"/></td><td class=\"ctr2\" id=\"c3\">73%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/></td><td class=\"ctr2\" id=\"e2\">50%</td><td class=\"ctr1\" id=\"f1\">1</td><td class=\"ctr2\" id=\"g1\">2</td><td class=\"ctr1\" id=\"h1\">1</td><td class=\"ctr2\" id=\"i1\">4</td><td class=\"ctr1\" id=\"j2\">0</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a2\"><a href=\"Lexer.java.html#L13\" class=\"el_method\">getContent()</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d4\"/><td class=\"ctr2\" id=\"e4\">n/a</td><td class=\"ctr1\" id=\"f2\">1</td><td class=\"ctr2\" id=\"g4\">1</td><td class=\"ctr1\" id=\"h2\">1</td><td class=\"ctr2\" id=\"i4\">1</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr><tr><td id=\"a3\"><a href=\"Lexer.java.html#L32\" class=\"el_method\">getNextSymbol()</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"120\" height=\"10\" title=\"22\" alt=\"22\"/></td><td class=\"ctr2\" id=\"c0\">100%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"60\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e0\">100%</td><td class=\"ctr1\" id=\"f3\">0</td><td class=\"ctr2\" id=\"g2\">2</td><td class=\"ctr1\" id=\"h3\">0</td><td class=\"ctr2\" id=\"i0\">5</td><td class=\"ctr1\" id=\"j3\">0</td><td class=\"ctr2\" id=\"k3\">1</td></tr><tr><td id=\"a0\"><a href=\"Lexer.java.html#L21\" class=\"el_method\">digit(int)</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"54\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"c1\">100%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"120\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e1\">100%</td><td class=\"ctr1\" id=\"f4\">0</td><td class=\"ctr2\" id=\"g0\">3</td><td class=\"ctr1\" id=\"h4\">0</td><td class=\"ctr2\" id=\"i5\">1</td><td class=\"ctr1\" id=\"j4\">0</td><td class=\"ctr2\" id=\"k4\">1</td></tr><tr><td id=\"a4\"><a href=\"Lexer.java.html#L6\" class=\"el_method\">Lexer()</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c2\">100%</td><td class=\"bar\" id=\"d5\"/><td class=\"ctr2\" id=\"e5\">n/a</td><td class=\"ctr1\" id=\"f5\">0</td><td class=\"ctr2\" id=\"g5\">1</td><td class=\"ctr1\" id=\"h5\">0</td><td class=\"ctr2\" id=\"i3\">2</td><td class=\"ctr1\" id=\"j5\">0</td><td class=\"ctr2\" id=\"k5\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/Lexer.html b/target/site/jacoco/linalg.util/Lexer.html
--- a/target/site/jacoco/linalg.util/Lexer.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/Lexer.html	(date 1648105701841)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Lexer</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">Lexer</span></div><h1>Lexer</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">13 of 62</td><td class="ctr2">79%</td><td class="bar">1 of 8</td><td class="ctr2">87%</td><td class="ctr1">3</td><td class="ctr2">10</td><td class="ctr1">5</td><td class="ctr2">16</td><td class="ctr1">2</td><td class="ctr2">6</td></tr></tfoot><tbody><tr><td id="a1"><a href="Lexer.java.html#L68" class="el_method">error(String)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d3"/><td class="ctr2" id="e3">n/a</td><td class="ctr1" id="f0">1</td><td class="ctr2" id="g3">1</td><td class="ctr1" id="h0">3</td><td class="ctr2" id="i2">3</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a5"><a href="Lexer.java.html#L52" class="el_method">putBackSymbol(int)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/><img src="../jacoco-resources/greenbar.gif" width="60" height="10" title="11" alt="11"/></td><td class="ctr2" id="c3">73%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="30" height="10" title="1" alt="1"/></td><td class="ctr2" id="e2">50%</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g1">2</td><td class="ctr1" id="h1">1</td><td class="ctr2" id="i1">4</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a2"><a href="Lexer.java.html#L13" class="el_method">getContent()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="3" alt="3"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d4"/><td class="ctr2" id="e4">n/a</td><td class="ctr1" id="f2">1</td><td class="ctr2" id="g4">1</td><td class="ctr1" id="h2">1</td><td class="ctr2" id="i4">1</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a3"><a href="Lexer.java.html#L32" class="el_method">getNextSymbol()</a></td><td class="bar" id="b3"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="22" alt="22"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d2"><img src="../jacoco-resources/greenbar.gif" width="60" height="10" title="2" alt="2"/></td><td class="ctr2" id="e0">100%</td><td class="ctr1" id="f3">0</td><td class="ctr2" id="g2">2</td><td class="ctr1" id="h3">0</td><td class="ctr2" id="i0">5</td><td class="ctr1" id="j3">0</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a0"><a href="Lexer.java.html#L21" class="el_method">digit(int)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/greenbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="c1">100%</td><td class="bar" id="d1"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="4" alt="4"/></td><td class="ctr2" id="e1">100%</td><td class="ctr1" id="f4">0</td><td class="ctr2" id="g0">3</td><td class="ctr1" id="h4">0</td><td class="ctr2" id="i5">1</td><td class="ctr1" id="j4">0</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a4"><a href="Lexer.java.html#L6" class="el_method">Lexer()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/greenbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="c2">100%</td><td class="bar" id="d5"/><td class="ctr2" id="e5">n/a</td><td class="ctr1" id="f5">0</td><td class="ctr2" id="g5">1</td><td class="ctr1" id="h5">0</td><td class="ctr2" id="i3">2</td><td class="ctr1" id="j5">0</td><td class="ctr2" id="k5">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Lexer</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">Lexer</span></div><h1>Lexer</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">13 of 62</td><td class="ctr2">79%</td><td class="bar">1 of 8</td><td class="ctr2">87%</td><td class="ctr1">3</td><td class="ctr2">10</td><td class="ctr1">5</td><td class="ctr2">16</td><td class="ctr1">2</td><td class="ctr2">6</td></tr></tfoot><tbody><tr><td id="a1"><a href="Lexer.java.html#L69" class="el_method">error(String)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d3"/><td class="ctr2" id="e3">n/a</td><td class="ctr1" id="f0">1</td><td class="ctr2" id="g3">1</td><td class="ctr1" id="h0">3</td><td class="ctr2" id="i2">3</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a5"><a href="Lexer.java.html#L53" class="el_method">putBackSymbol(int)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/><img src="../jacoco-resources/greenbar.gif" width="60" height="10" title="11" alt="11"/></td><td class="ctr2" id="c3">73%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="30" height="10" title="1" alt="1"/></td><td class="ctr2" id="e2">50%</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g1">2</td><td class="ctr1" id="h1">1</td><td class="ctr2" id="i1">4</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a2"><a href="Lexer.java.html#L14" class="el_method">getContent()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="3" alt="3"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d4"/><td class="ctr2" id="e4">n/a</td><td class="ctr1" id="f2">1</td><td class="ctr2" id="g4">1</td><td class="ctr1" id="h2">1</td><td class="ctr2" id="i4">1</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a3"><a href="Lexer.java.html#L33" class="el_method">getNextSymbol()</a></td><td class="bar" id="b3"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="22" alt="22"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d2"><img src="../jacoco-resources/greenbar.gif" width="60" height="10" title="2" alt="2"/></td><td class="ctr2" id="e0">100%</td><td class="ctr1" id="f3">0</td><td class="ctr2" id="g2">2</td><td class="ctr1" id="h3">0</td><td class="ctr2" id="i0">5</td><td class="ctr1" id="j3">0</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a0"><a href="Lexer.java.html#L22" class="el_method">digit(int)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/greenbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="c1">100%</td><td class="bar" id="d1"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="4" alt="4"/></td><td class="ctr2" id="e1">100%</td><td class="ctr1" id="f4">0</td><td class="ctr2" id="g0">3</td><td class="ctr1" id="h4">0</td><td class="ctr2" id="i5">1</td><td class="ctr1" id="j4">0</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a4"><a href="Lexer.java.html#L6" class="el_method">Lexer()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/greenbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="c2">100%</td><td class="bar" id="d5"/><td class="ctr2" id="e5">n/a</td><td class="ctr1" id="f5">0</td><td class="ctr2" id="g5">1</td><td class="ctr1" id="h5">0</td><td class="ctr2" id="i3">2</td><td class="ctr1" id="j5">0</td><td class="ctr2" id="k5">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/Lexer.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>Lexer.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_source\">Lexer.java</span></div><h1>Lexer.java</h1><pre class=\"source lang-java linenums\">package linalg.util;\r\n\r\n/**\r\n * Performs lexicographical analysis and produces tokens.\r\n */\r\n<span class=\"fc\" id=\"L6\">class Lexer {</span>\r\n<span class=\"fc\" id=\"L7\">\tprotected String content = &quot;&quot;; // Content of Lexer</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * @return content of Lexer\r\n\t */\r\n<span class=\"nc\" id=\"L13\">\tpublic String getContent() { return content; }</span>\r\n\t\r\n\t\r\n\t/** \r\n\t * @param code - ascii value of character\r\n\t * @return returns true if character is digit. Otherwise, returns false.\r\n\t */\r\n\tprotected boolean digit(int code ) {  \r\n<span class=\"fc bfc\" id=\"L21\" title=\"All 4 branches covered.\">\t    return 48&lt;=code &amp;&amp; code&lt;=57;</span>\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Produces individual symbols from content, left to right, as ascii values. \r\n\t * \r\n\t * @return Returns ascii value of the next symbol from content. If content is empty then returns -1\r\n\t */\r\n\tprotected int getNextSymbol() {\r\n<span class=\"fc\" id=\"L32\">\t\tint result = -1;\t</span>\r\n\t\t\r\n<span class=\"fc bfc\" id=\"L34\" title=\"All 2 branches covered.\">\t\tif (content.length() &gt; 0) {</span>\r\n<span class=\"fc\" id=\"L35\">\t\t\tresult = content.charAt(0);</span>\r\n<span class=\"fc\" id=\"L36\">\t\t\tcontent = content.substring(1, content.length());</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"fc\" id=\"L39\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Replaces unneded symbol back into content string.\r\n\t * \r\n\t * Note: This method should only be used when the programer is confident the token\r\n\t * is not an unexpected token.\r\n\t * \r\n\t * @param sym - symbol to place back into content string\r\n\t */\r\n\tprotected void putBackSymbol(int sym) {\t\t\r\n<span class=\"pc bpc\" id=\"L52\" title=\"1 of 2 branches missed.\">\t\tif(sym == -1) {</span>\r\n<span class=\"nc\" id=\"L53\">\t\t\tcontent = &quot;&quot;;</span>\r\n\t\t}\r\n\t\telse {\r\n<span class=\"fc\" id=\"L56\">\t\t\tcontent = (char) sym + content;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"fc\" id=\"L59\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Stops exicution with an error message\r\n\t * \r\n\t * @param message - error message to print\r\n\t */\r\n\tprotected static void error( String message ) {\r\n<span class=\"nc\" id=\"L68\">\t     System.out.println( message );</span>\r\n<span class=\"nc\" id=\"L69\">\t     System.exit(1);</span>\r\n<span class=\"nc\" id=\"L70\">\t}</span>\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/Lexer.java.html b/target/site/jacoco/linalg.util/Lexer.java.html
--- a/target/site/jacoco/linalg.util/Lexer.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/Lexer.java.html	(date 1648105701835)
@@ -8,9 +8,10 @@
 	
 	
 	/**
+	 * Gets the content of this Lexer.
 	 * @return content of Lexer
 	 */
-<span class="nc" id="L13">	public String getContent() { return content; }</span>
+<span class="nc" id="L14">	public String getContent() { return content; }</span>
 	
 	
 	/** 
@@ -18,7 +19,7 @@
 	 * @return returns true if character is digit. Otherwise, returns false.
 	 */
 	protected boolean digit(int code ) {  
-<span class="fc bfc" id="L21" title="All 4 branches covered.">	    return 48&lt;=code &amp;&amp; code&lt;=57;</span>
+<span class="fc bfc" id="L22" title="All 4 branches covered.">	    return 48&lt;=code &amp;&amp; code&lt;=57;</span>
 	}
 	
 	
@@ -29,44 +30,44 @@
 	 * @return Returns ascii value of the next symbol from content. If content is empty then returns -1
 	 */
 	protected int getNextSymbol() {
-<span class="fc" id="L32">		int result = -1;	</span>
+<span class="fc" id="L33">		int result = -1;	</span>
 		
-<span class="fc bfc" id="L34" title="All 2 branches covered.">		if (content.length() &gt; 0) {</span>
-<span class="fc" id="L35">			result = content.charAt(0);</span>
-<span class="fc" id="L36">			content = content.substring(1, content.length());</span>
+<span class="fc bfc" id="L35" title="All 2 branches covered.">		if (content.length() &gt; 0) {</span>
+<span class="fc" id="L36">			result = content.charAt(0);</span>
+<span class="fc" id="L37">			content = content.substring(1, content.length());</span>
 		}
 		
-<span class="fc" id="L39">		return result;</span>
+<span class="fc" id="L40">		return result;</span>
 	}
 	
 	
 	/**
-	 * Replaces unneded symbol back into content string.
+	 * Replaces unneeded symbol back into content string.
 	 * 
-	 * Note: This method should only be used when the programer is confident the token
+	 * Note: This method should only be used when the programmer is confident the token
 	 * is not an unexpected token.
 	 * 
 	 * @param sym - symbol to place back into content string
 	 */
 	protected void putBackSymbol(int sym) {		
-<span class="pc bpc" id="L52" title="1 of 2 branches missed.">		if(sym == -1) {</span>
-<span class="nc" id="L53">			content = &quot;&quot;;</span>
+<span class="pc bpc" id="L53" title="1 of 2 branches missed.">		if(sym == -1) {</span>
+<span class="nc" id="L54">			content = &quot;&quot;;</span>
 		}
 		else {
-<span class="fc" id="L56">			content = (char) sym + content;</span>
+<span class="fc" id="L57">			content = (char) sym + content;</span>
 		}
 		
-<span class="fc" id="L59">	}</span>
+<span class="fc" id="L60">	}</span>
 	
 	
 	/**
-	 * Stops exicution with an error message
+	 * Stops execution with an error message
 	 * 
 	 * @param message - error message to print
 	 */
 	protected static void error( String message ) {
-<span class="nc" id="L68">	     System.out.println( message );</span>
-<span class="nc" id="L69">	     System.exit(1);</span>
-<span class="nc" id="L70">	}</span>
+<span class="nc" id="L69">	     System.out.println( message );</span>
+<span class="nc" id="L70">	     System.exit(1);</span>
+<span class="nc" id="L71">	}</span>
 }
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"jacoco-resources/report.gif\" type=\"image/gif\"/><title>Java-Linear-Algebra</title><script type=\"text/javascript\" src=\"jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><span class=\"el_report\">Java-Linear-Algebra</span></div><h1>Java-Linear-Algebra</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">15,114 of 15,760</td><td class=\"ctr2\">4%</td><td class=\"bar\">1,146 of 1,215</td><td class=\"ctr2\">5%</td><td class=\"ctr1\">921</td><td class=\"ctr2\">968</td><td class=\"ctr1\">2,134</td><td class=\"ctr2\">2,298</td><td class=\"ctr1\">331</td><td class=\"ctr2\">359</td><td class=\"ctr1\">18</td><td class=\"ctr2\">26</td></tr></tfoot><tbody><tr><td id=\"a0\"><a href=\"linalg/index.html\" class=\"el_package\">linalg</a></td><td class=\"bar\" id=\"b0\"><img src=\"jacoco-resources/redbar.gif\" width=\"118\" height=\"10\" title=\"12,017\" alt=\"12,017\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"1\" height=\"10\" title=\"187\" alt=\"187\"/></td><td class=\"ctr2\" id=\"c2\">1%</td><td class=\"bar\" id=\"d0\"><img src=\"jacoco-resources/redbar.gif\" width=\"118\" height=\"10\" title=\"869\" alt=\"869\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"1\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e2\">1%</td><td class=\"ctr1\" id=\"f0\">685</td><td class=\"ctr2\" id=\"g0\">698</td><td class=\"ctr1\" id=\"h0\">1,686</td><td class=\"ctr2\" id=\"i0\">1,734</td><td class=\"ctr1\" id=\"j0\">246</td><td class=\"ctr2\" id=\"k0\">255</td><td class=\"ctr1\" id=\"l0\">14</td><td class=\"ctr2\" id=\"m0\">16</td></tr><tr><td id=\"a2\"><a href=\"linalg.util/index.html\" class=\"el_package\">linalg.util</a></td><td class=\"bar\" id=\"b1\"><img src=\"jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"2,204\" alt=\"2,204\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"3\" height=\"10\" title=\"353\" alt=\"353\"/></td><td class=\"ctr2\" id=\"c0\">13%</td><td class=\"bar\" id=\"d1\"><img src=\"jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"170\" alt=\"170\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"7\" height=\"10\" title=\"52\" alt=\"52\"/></td><td class=\"ctr2\" id=\"e0\">23%</td><td class=\"ctr1\" id=\"f1\">133</td><td class=\"ctr2\" id=\"g1\">162</td><td class=\"ctr1\" id=\"h1\">288</td><td class=\"ctr2\" id=\"i1\">376</td><td class=\"ctr1\" id=\"j2\">37</td><td class=\"ctr2\" id=\"k2\">51</td><td class=\"ctr1\" id=\"l1\">4</td><td class=\"ctr2\" id=\"m1\">9</td></tr><tr><td id=\"a1\"><a href=\"linalg.complex_number/index.html\" class=\"el_package\">linalg.complex_number</a></td><td class=\"bar\" id=\"b2\"><img src=\"jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"893\" alt=\"893\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"1\" height=\"10\" title=\"106\" alt=\"106\"/></td><td class=\"ctr2\" id=\"c1\">10%</td><td class=\"bar\" id=\"d2\"><img src=\"jacoco-resources/redbar.gif\" width=\"14\" height=\"10\" title=\"107\" alt=\"107\"/></td><td class=\"ctr2\" id=\"e1\">2%</td><td class=\"ctr1\" id=\"f2\">103</td><td class=\"ctr2\" id=\"g2\">108</td><td class=\"ctr1\" id=\"h2\">160</td><td class=\"ctr2\" id=\"i2\">188</td><td class=\"ctr1\" id=\"j1\">48</td><td class=\"ctr2\" id=\"k1\">53</td><td class=\"ctr1\" id=\"l2\">0</td><td class=\"ctr2\" id=\"m2\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/index.html b/target/site/jacoco/index.html
--- a/target/site/jacoco/index.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/index.html	(date 1648105701882)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Java-Linear-Algebra</title><script type="text/javascript" src="jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><span class="el_report">Java-Linear-Algebra</span></div><h1>Java-Linear-Algebra</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">15,114 of 15,760</td><td class="ctr2">4%</td><td class="bar">1,146 of 1,215</td><td class="ctr2">5%</td><td class="ctr1">921</td><td class="ctr2">968</td><td class="ctr1">2,134</td><td class="ctr2">2,298</td><td class="ctr1">331</td><td class="ctr2">359</td><td class="ctr1">18</td><td class="ctr2">26</td></tr></tfoot><tbody><tr><td id="a0"><a href="linalg/index.html" class="el_package">linalg</a></td><td class="bar" id="b0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="12,017" alt="12,017"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="187" alt="187"/></td><td class="ctr2" id="c2">1%</td><td class="bar" id="d0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="869" alt="869"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="14" alt="14"/></td><td class="ctr2" id="e2">1%</td><td class="ctr1" id="f0">685</td><td class="ctr2" id="g0">698</td><td class="ctr1" id="h0">1,686</td><td class="ctr2" id="i0">1,734</td><td class="ctr1" id="j0">246</td><td class="ctr2" id="k0">255</td><td class="ctr1" id="l0">14</td><td class="ctr2" id="m0">16</td></tr><tr><td id="a2"><a href="linalg.util/index.html" class="el_package">linalg.util</a></td><td class="bar" id="b1"><img src="jacoco-resources/redbar.gif" width="21" height="10" title="2,204" alt="2,204"/><img src="jacoco-resources/greenbar.gif" width="3" height="10" title="353" alt="353"/></td><td class="ctr2" id="c0">13%</td><td class="bar" id="d1"><img src="jacoco-resources/redbar.gif" width="23" height="10" title="170" alt="170"/><img src="jacoco-resources/greenbar.gif" width="7" height="10" title="52" alt="52"/></td><td class="ctr2" id="e0">23%</td><td class="ctr1" id="f1">133</td><td class="ctr2" id="g1">162</td><td class="ctr1" id="h1">288</td><td class="ctr2" id="i1">376</td><td class="ctr1" id="j2">37</td><td class="ctr2" id="k2">51</td><td class="ctr1" id="l1">4</td><td class="ctr2" id="m1">9</td></tr><tr><td id="a1"><a href="linalg.complex_number/index.html" class="el_package">linalg.complex_number</a></td><td class="bar" id="b2"><img src="jacoco-resources/redbar.gif" width="8" height="10" title="893" alt="893"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="106" alt="106"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d2"><img src="jacoco-resources/redbar.gif" width="14" height="10" title="107" alt="107"/></td><td class="ctr2" id="e1">2%</td><td class="ctr1" id="f2">103</td><td class="ctr2" id="g2">108</td><td class="ctr1" id="h2">160</td><td class="ctr2" id="i2">188</td><td class="ctr1" id="j1">48</td><td class="ctr2" id="k1">53</td><td class="ctr1" id="l2">0</td><td class="ctr2" id="m2">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Java-Linear-Algebra</title><script type="text/javascript" src="jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><span class="el_report">Java-Linear-Algebra</span></div><h1>Java-Linear-Algebra</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">14,778 of 15,481</td><td class="ctr2">4%</td><td class="bar">1,134 of 1,209</td><td class="ctr2">6%</td><td class="ctr1">911</td><td class="ctr2">963</td><td class="ctr1">2,109</td><td class="ctr2">2,286</td><td class="ctr1">326</td><td class="ctr2">357</td><td class="ctr1">15</td><td class="ctr2">25</td></tr></tfoot><tbody><tr><td id="a0"><a href="linalg/index.html" class="el_package">linalg</a></td><td class="bar" id="b0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="11,749" alt="11,749"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="196" alt="196"/></td><td class="ctr2" id="c2">1%</td><td class="bar" id="d0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="865" alt="865"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="14" alt="14"/></td><td class="ctr2" id="e2">1%</td><td class="ctr1" id="f0">681</td><td class="ctr2" id="g0">695</td><td class="ctr1" id="h0">1,675</td><td class="ctr2" id="i0">1,727</td><td class="ctr1" id="j0">244</td><td class="ctr2" id="k0">254</td><td class="ctr1" id="l0">12</td><td class="ctr2" id="m0">15</td></tr><tr><td id="a2"><a href="linalg.util/index.html" class="el_package">linalg.util</a></td><td class="bar" id="b1"><img src="jacoco-resources/redbar.gif" width="21" height="10" title="2,136" alt="2,136"/><img src="jacoco-resources/greenbar.gif" width="4" height="10" title="401" alt="401"/></td><td class="ctr2" id="c0">15%</td><td class="bar" id="d1"><img src="jacoco-resources/redbar.gif" width="22" height="10" title="162" alt="162"/><img src="jacoco-resources/greenbar.gif" width="7" height="10" title="58" alt="58"/></td><td class="ctr2" id="e0">26%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">160</td><td class="ctr1" id="h1">274</td><td class="ctr2" id="i1">371</td><td class="ctr1" id="j2">34</td><td class="ctr2" id="k2">50</td><td class="ctr1" id="l1">3</td><td class="ctr2" id="m1">9</td></tr><tr><td id="a1"><a href="linalg.complex_number/index.html" class="el_package">linalg.complex_number</a></td><td class="bar" id="b2"><img src="jacoco-resources/redbar.gif" width="8" height="10" title="893" alt="893"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="106" alt="106"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d2"><img src="jacoco-resources/redbar.gif" width="14" height="10" title="107" alt="107"/></td><td class="ctr2" id="e1">2%</td><td class="ctr1" id="f2">103</td><td class="ctr2" id="g2">108</td><td class="ctr1" id="h2">160</td><td class="ctr2" id="i2">188</td><td class="ctr1" id="j1">48</td><td class="ctr2" id="k1">53</td><td class="ctr1" id="l2">0</td><td class="ctr2" id="m2">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/NumberLexer.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>NumberLexer</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_class\">NumberLexer</span></div><h1>NumberLexer</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">133 of 275</td><td class=\"ctr2\">51%</td><td class=\"bar\">33 of 62</td><td class=\"ctr2\">46%</td><td class=\"ctr1\">24</td><td class=\"ctr2\">34</td><td class=\"ctr1\">34</td><td class=\"ctr2\">73</td><td class=\"ctr1\">1</td><td class=\"ctr2\">3</td></tr></tfoot><tbody><tr><td id=\"a0\"><a href=\"NumberLexer.java.html#L38\" class=\"el_method\">getNextToken()</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"54\" height=\"10\" title=\"113\" alt=\"113\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"65\" height=\"10\" title=\"136\" alt=\"136\"/></td><td class=\"ctr2\" id=\"c1\">54%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"62\" height=\"10\" title=\"31\" alt=\"31\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"58\" height=\"10\" title=\"29\" alt=\"29\"/></td><td class=\"ctr2\" id=\"e0\">48%</td><td class=\"ctr1\" id=\"f0\">22</td><td class=\"ctr2\" id=\"g0\">31</td><td class=\"ctr1\" id=\"h0\">29</td><td class=\"ctr2\" id=\"i0\">65</td><td class=\"ctr1\" id=\"j1\">0</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a1\"><a href=\"NumberLexer.java.html#L151\" class=\"el_method\">main(String[])</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"9\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f1\">2</td><td class=\"ctr2\" id=\"g1\">2</td><td class=\"ctr1\" id=\"h1\">5</td><td class=\"ctr2\" id=\"i1\">5</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a2\"><a href=\"NumberLexer.java.html#L25\" class=\"el_method\">NumberLexer(String)</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"2\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c0\">100%</td><td class=\"bar\" id=\"d2\"/><td class=\"ctr2\" id=\"e2\">n/a</td><td class=\"ctr1\" id=\"f2\">0</td><td class=\"ctr2\" id=\"g2\">1</td><td class=\"ctr1\" id=\"h2\">0</td><td class=\"ctr2\" id=\"i2\">3</td><td class=\"ctr1\" id=\"j2\">0</td><td class=\"ctr2\" id=\"k2\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/NumberLexer.html b/target/site/jacoco/linalg.util/NumberLexer.html
--- a/target/site/jacoco/linalg.util/NumberLexer.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/NumberLexer.html	(date 1648105701839)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>NumberLexer</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">NumberLexer</span></div><h1>NumberLexer</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">133 of 275</td><td class="ctr2">51%</td><td class="bar">33 of 62</td><td class="ctr2">46%</td><td class="ctr1">24</td><td class="ctr2">34</td><td class="ctr1">34</td><td class="ctr2">73</td><td class="ctr1">1</td><td class="ctr2">3</td></tr></tfoot><tbody><tr><td id="a0"><a href="NumberLexer.java.html#L38" class="el_method">getNextToken()</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="113" alt="113"/><img src="../jacoco-resources/greenbar.gif" width="65" height="10" title="136" alt="136"/></td><td class="ctr2" id="c1">54%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="62" height="10" title="31" alt="31"/><img src="../jacoco-resources/greenbar.gif" width="58" height="10" title="29" alt="29"/></td><td class="ctr2" id="e0">48%</td><td class="ctr1" id="f0">22</td><td class="ctr2" id="g0">31</td><td class="ctr1" id="h0">29</td><td class="ctr2" id="i0">65</td><td class="ctr1" id="j1">0</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a1"><a href="NumberLexer.java.html#L151" class="el_method">main(String[])</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="9" height="10" title="20" alt="20"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="2" alt="2"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f1">2</td><td class="ctr2" id="g1">2</td><td class="ctr1" id="h1">5</td><td class="ctr2" id="i1">5</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a2"><a href="NumberLexer.java.html#L25" class="el_method">NumberLexer(String)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/greenbar.gif" width="2" height="10" title="6" alt="6"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d2"/><td class="ctr2" id="e2">n/a</td><td class="ctr1" id="f2">0</td><td class="ctr2" id="g2">1</td><td class="ctr1" id="h2">0</td><td class="ctr2" id="i2">3</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k2">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>NumberLexer</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">NumberLexer</span></div><h1>NumberLexer</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">113 of 255</td><td class="ctr2">55%</td><td class="bar">31 of 60</td><td class="ctr2">48%</td><td class="ctr1">22</td><td class="ctr2">32</td><td class="ctr1">29</td><td class="ctr2">68</td><td class="ctr1">0</td><td class="ctr2">2</td></tr></tfoot><tbody><tr><td id="a0"><a href="NumberLexer.java.html#L35" class="el_method">getNextToken()</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="113" alt="113"/><img src="../jacoco-resources/greenbar.gif" width="65" height="10" title="136" alt="136"/></td><td class="ctr2" id="c1">54%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="62" height="10" title="31" alt="31"/><img src="../jacoco-resources/greenbar.gif" width="58" height="10" title="29" alt="29"/></td><td class="ctr2" id="e0">48%</td><td class="ctr1" id="f0">22</td><td class="ctr2" id="g0">31</td><td class="ctr1" id="h0">29</td><td class="ctr2" id="i0">65</td><td class="ctr1" id="j0">0</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a1"><a href="NumberLexer.java.html#L22" class="el_method">NumberLexer(String)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/greenbar.gif" width="2" height="10" title="6" alt="6"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d1"/><td class="ctr2" id="e1">n/a</td><td class="ctr1" id="f1">0</td><td class="ctr2" id="g1">1</td><td class="ctr1" id="h1">0</td><td class="ctr2" id="i1">3</td><td class="ctr1" id="j1">0</td><td class="ctr2" id="k1">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/NumberLexer.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>NumberLexer.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_source\">NumberLexer.java</span></div><h1>NumberLexer.java</h1><pre class=\"source lang-java linenums\">package linalg.util;\r\n\r\n/**\r\n * This class produces tokens for a complex number.\r\n * \r\n * There are four tokens, opp, num, im, and eof.\r\n * \r\n * opp is an operator e.g. + or -.\r\n * num is A standard number\r\n * im is the imaginary unit i\r\n * eof is the token representing the end of the number\r\n * \r\n * @since 1.0\r\n * @author Jacob Watters\r\n * @version 1.0\r\n */\r\n\r\n\r\n\r\nclass NumberLexer extends Lexer {\r\n\t\r\n\t/**\r\n\t * @param content - String representation of complex number\r\n\t */\r\n<span class=\"fc\" id=\"L25\">\tpublic NumberLexer(String content) {</span>\r\n<span class=\"fc\" id=\"L26\">\t\tthis.content = content;</span>\r\n<span class=\"fc\" id=\"L27\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Produces next token from complex number string. Also removes this\r\n\t * token from the string\r\n\t * \r\n\t * @return Next token in string\r\n\t */\r\n\tpublic Token getNextToken() {\t\r\n\t\t\r\n<span class=\"fc\" id=\"L38\">\t\tint state = 1;  // state of FA</span>\r\n<span class=\"fc\" id=\"L39\">        String data = &quot;&quot;;  // specific info for the token</span>\r\n<span class=\"fc\" id=\"L40\">        boolean done = false;  </span>\r\n        int sym;  // holds current symbol\r\n        \r\n        \r\n        do {\r\n<span class=\"fc\" id=\"L45\">    \t\tsym = getNextSymbol(); // Will return -1 if there is no symbol to get</span>\r\n        \t\r\n<span class=\"fc bfc\" id=\"L47\" title=\"All 2 branches covered.\">        \tif(state == 1) {</span>\r\n<span class=\"pc bpc\" id=\"L48\" title=\"4 of 8 branches missed.\">        \t\tif(sym == 9 || sym == 10 || sym == 13 ||</span>\r\n                        sym == 32) { // Whitespace\r\n<span class=\"nc\" id=\"L50\">        \t\t\tstate = 1;</span>\r\n        \t\t}\r\n<span class=\"pc bpc\" id=\"L52\" title=\"1 of 2 branches missed.\">        \t\telse if(sym == 45) {</span>\r\n<span class=\"nc\" id=\"L53\">        \t\t\tstate = 2;</span>\r\n<span class=\"nc\" id=\"L54\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t} \r\n<span class=\"fc bfc\" id=\"L56\" title=\"All 2 branches covered.\">        \t\telse if(sym == 43) {</span>\r\n<span class=\"fc\" id=\"L57\">        \t\t\tstate = 4;</span>\r\n<span class=\"fc\" id=\"L58\">        \t\t\tdata += (char) sym;</span>\r\n<span class=\"fc\" id=\"L59\">        \t\t\tdone = true;</span>\r\n        \t\t} \r\n<span class=\"fc bfc\" id=\"L61\" title=\"All 2 branches covered.\">        \t\telse if(digit(sym)) {</span>\r\n<span class=\"fc\" id=\"L62\">        \t\t\tstate = 3;</span>\r\n<span class=\"fc\" id=\"L63\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t} \r\n<span class=\"fc bfc\" id=\"L65\" title=\"All 2 branches covered.\">        \t\telse if(sym == 'i') {</span>\r\n<span class=\"fc\" id=\"L66\">        \t\t\tstate = 6;</span>\r\n<span class=\"fc\" id=\"L67\">        \t\t\tdata += (char) sym;</span>\r\n<span class=\"fc\" id=\"L68\">        \t\t\tdone = true;</span>\r\n        \t\t}\r\n<span class=\"pc bpc\" id=\"L70\" title=\"1 of 2 branches missed.\">        \t\telse if(sym == -1) { // We have reached the end of the string</span>\r\n<span class=\"fc\" id=\"L71\">        \t\t\tstate = 5;</span>\r\n<span class=\"fc\" id=\"L72\">        \t\t\tdone = true;</span>\r\n        \t\t}\r\n        \t\telse {\r\n<span class=\"nc\" id=\"L75\">        \t\t\terror(&quot;Unexpected symbol: &quot; + (char) sym);</span>\r\n        \t\t}\r\n        \t}\r\n        \t\r\n<span class=\"pc bpc\" id=\"L79\" title=\"1 of 2 branches missed.\">        \telse if(state == 2) {</span>\r\n<span class=\"nc bnc\" id=\"L80\" title=\"All 8 branches missed.\">        \t\tif(sym == 9 || sym == 10 || sym == 13 ||</span>\r\n                        sym == 32) { // Whitespace\r\n<span class=\"nc\" id=\"L82\">        \t\t\tputBackSymbol(sym);</span>\r\n<span class=\"nc\" id=\"L83\">        \t\t\tdone = true;</span>\r\n        \t\t}\r\n<span class=\"nc bnc\" id=\"L85\" title=\"All 2 branches missed.\">        \t\telse if(digit(sym)) {</span>\r\n<span class=\"nc\" id=\"L86\">        \t\t\tstate = 3;\t</span>\r\n<span class=\"nc\" id=\"L87\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t} \r\n        \t\telse {\r\n<span class=\"nc\" id=\"L90\">        \t\t\tputBackSymbol(sym);</span>\r\n<span class=\"nc\" id=\"L91\">        \t\t\tdone = true;</span>\r\n        \t\t}\r\n        \t}\r\n<span class=\"pc bpc\" id=\"L94\" title=\"1 of 2 branches missed.\">        \telse if(state == 3) {</span>\r\n<span class=\"pc bpc\" id=\"L95\" title=\"1 of 2 branches missed.\">        \t\tif(digit(sym)) {</span>\r\n<span class=\"nc\" id=\"L96\">        \t\t\tstate = 3;\t</span>\r\n<span class=\"nc\" id=\"L97\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t} \r\n<span class=\"pc bpc\" id=\"L99\" title=\"1 of 2 branches missed.\">        \t\telse if(sym == '.') {</span>\r\n<span class=\"nc\" id=\"L100\">        \t\t\tstate = 7;</span>\r\n<span class=\"nc\" id=\"L101\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t}\r\n        \t\telse {\r\n<span class=\"fc\" id=\"L104\">        \t\t\tputBackSymbol(sym);</span>\r\n<span class=\"fc\" id=\"L105\">        \t\t\tdone = true;</span>\r\n        \t\t}\r\n        \t}\r\n<span class=\"nc bnc\" id=\"L108\" title=\"All 2 branches missed.\">        \telse if(state == 7) {</span>\r\n<span class=\"nc bnc\" id=\"L109\" title=\"All 2 branches missed.\">        \t\tif(digit(sym)) {</span>\r\n<span class=\"nc\" id=\"L110\">        \t\t\tstate = 8;</span>\r\n<span class=\"nc\" id=\"L111\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t}\r\n        \t\telse {\r\n<span class=\"nc\" id=\"L114\">        \t\t\terror(&quot;Unexpected symbol: &quot; + (char) sym);</span>\r\n        \t\t}\r\n        \t}\r\n<span class=\"nc bnc\" id=\"L117\" title=\"All 2 branches missed.\">        \telse if(state == 8) {</span>\r\n<span class=\"nc bnc\" id=\"L118\" title=\"All 2 branches missed.\">        \t\tif(digit(sym)) {</span>\r\n<span class=\"nc\" id=\"L119\">        \t\t\tstate = 8;\t</span>\r\n<span class=\"nc\" id=\"L120\">        \t\t\tdata += (char) sym;</span>\r\n        \t\t} \r\n        \t\telse {\r\n<span class=\"nc\" id=\"L123\">        \t\t\tputBackSymbol(sym);</span>\r\n<span class=\"nc\" id=\"L124\">        \t\t\tdone = true;</span>\r\n        \t\t}\r\n        \t}\r\n        \t\r\n<span class=\"fc bfc\" id=\"L128\" title=\"All 2 branches covered.\">        } while(!done);</span>\r\n        \r\n<span class=\"pc bpc\" id=\"L130\" title=\"1 of 4 branches missed.\">\t\tif(state == 2 || state == 4) { // we have an operator</span>\r\n<span class=\"fc\" id=\"L131\">\t\t\treturn new Token(&quot;opp&quot;, data);</span>\r\n\t\t}\r\n<span class=\"pc bpc\" id=\"L133\" title=\"1 of 4 branches missed.\">\t\telse if(state == 3 || state == 8) { // we have a number</span>\r\n<span class=\"fc\" id=\"L134\">\t\t\treturn new Token(&quot;num&quot;, data);</span>\r\n\t\t}\r\n<span class=\"fc bfc\" id=\"L136\" title=\"All 2 branches covered.\">\t\telse if(state == 5) { // end of number</span>\r\n<span class=\"fc\" id=\"L137\">\t\t\treturn new Token(&quot;eof&quot;, data);</span>\r\n\t\t}\r\n<span class=\"pc bpc\" id=\"L139\" title=\"1 of 2 branches missed.\">\t\telse if(state == 6) { // we have the imaginary unit</span>\r\n<span class=\"fc\" id=\"L140\">\t\t\treturn new Token(&quot;im&quot;, data);</span>\r\n\t\t}\r\n\t\telse {\r\n<span class=\"nc\" id=\"L143\">\t\t\terror(&quot;somehow Lexer FA halted in bad state &quot; + state );</span>\r\n<span class=\"nc\" id=\"L144\">\t        return null;</span>\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t// FOR DEVELOPMENT TESTING ONLY //\r\n\tpublic static void main(String[] args) {\r\n<span class=\"nc\" id=\"L151\">\t\tNumberLexer lex = new NumberLexer(&quot;1-2i&quot;);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L153\" title=\"All 2 branches missed.\">\t\twhile(!lex.content.equals(&quot;&quot;)) {</span>\r\n<span class=\"nc\" id=\"L154\">\t\t\tSystem.out.println(lex.getNextToken());</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L157\">\t\tSystem.out.println(lex.getNextToken());</span>\r\n<span class=\"nc\" id=\"L158\">\t}</span>\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/NumberLexer.java.html b/target/site/jacoco/linalg.util/NumberLexer.java.html
--- a/target/site/jacoco/linalg.util/NumberLexer.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/NumberLexer.java.html	(date 1648105701832)
@@ -14,17 +14,14 @@
  * @author Jacob Watters
  * @version 1.0
  */
-
-
-
 class NumberLexer extends Lexer {
 	
 	/**
 	 * @param content - String representation of complex number
 	 */
-<span class="fc" id="L25">	public NumberLexer(String content) {</span>
-<span class="fc" id="L26">		this.content = content;</span>
-<span class="fc" id="L27">	}</span>
+<span class="fc" id="L22">	public NumberLexer(String content) {</span>
+<span class="fc" id="L23">		this.content = content;</span>
+<span class="fc" id="L24">	}</span>
 	
 	
 	/**
@@ -35,126 +32,114 @@
 	 */
 	public Token getNextToken() {	
 		
-<span class="fc" id="L38">		int state = 1;  // state of FA</span>
-<span class="fc" id="L39">        String data = &quot;&quot;;  // specific info for the token</span>
-<span class="fc" id="L40">        boolean done = false;  </span>
+<span class="fc" id="L35">		int state = 1;  // state of FA</span>
+<span class="fc" id="L36">        String data = &quot;&quot;;  // specific info for the token</span>
+<span class="fc" id="L37">        boolean done = false;  </span>
         int sym;  // holds current symbol
         
         
         do {
-<span class="fc" id="L45">    		sym = getNextSymbol(); // Will return -1 if there is no symbol to get</span>
+<span class="fc" id="L42">    		sym = getNextSymbol(); // Will return -1 if there is no symbol to get</span>
         	
-<span class="fc bfc" id="L47" title="All 2 branches covered.">        	if(state == 1) {</span>
-<span class="pc bpc" id="L48" title="4 of 8 branches missed.">        		if(sym == 9 || sym == 10 || sym == 13 ||</span>
+<span class="fc bfc" id="L44" title="All 2 branches covered.">        	if(state == 1) {</span>
+<span class="pc bpc" id="L45" title="4 of 8 branches missed.">        		if(sym == 9 || sym == 10 || sym == 13 ||</span>
                         sym == 32) { // Whitespace
-<span class="nc" id="L50">        			state = 1;</span>
+<span class="nc" id="L47">        			state = 1;</span>
         		}
-<span class="pc bpc" id="L52" title="1 of 2 branches missed.">        		else if(sym == 45) {</span>
-<span class="nc" id="L53">        			state = 2;</span>
-<span class="nc" id="L54">        			data += (char) sym;</span>
+<span class="pc bpc" id="L49" title="1 of 2 branches missed.">        		else if(sym == 45) {</span>
+<span class="nc" id="L50">        			state = 2;</span>
+<span class="nc" id="L51">        			data += (char) sym;</span>
         		} 
-<span class="fc bfc" id="L56" title="All 2 branches covered.">        		else if(sym == 43) {</span>
-<span class="fc" id="L57">        			state = 4;</span>
-<span class="fc" id="L58">        			data += (char) sym;</span>
-<span class="fc" id="L59">        			done = true;</span>
+<span class="fc bfc" id="L53" title="All 2 branches covered.">        		else if(sym == 43) {</span>
+<span class="fc" id="L54">        			state = 4;</span>
+<span class="fc" id="L55">        			data += (char) sym;</span>
+<span class="fc" id="L56">        			done = true;</span>
         		} 
-<span class="fc bfc" id="L61" title="All 2 branches covered.">        		else if(digit(sym)) {</span>
-<span class="fc" id="L62">        			state = 3;</span>
-<span class="fc" id="L63">        			data += (char) sym;</span>
+<span class="fc bfc" id="L58" title="All 2 branches covered.">        		else if(digit(sym)) {</span>
+<span class="fc" id="L59">        			state = 3;</span>
+<span class="fc" id="L60">        			data += (char) sym;</span>
         		} 
-<span class="fc bfc" id="L65" title="All 2 branches covered.">        		else if(sym == 'i') {</span>
-<span class="fc" id="L66">        			state = 6;</span>
-<span class="fc" id="L67">        			data += (char) sym;</span>
-<span class="fc" id="L68">        			done = true;</span>
+<span class="fc bfc" id="L62" title="All 2 branches covered.">        		else if(sym == 'i') {</span>
+<span class="fc" id="L63">        			state = 6;</span>
+<span class="fc" id="L64">        			data += (char) sym;</span>
+<span class="fc" id="L65">        			done = true;</span>
         		}
-<span class="pc bpc" id="L70" title="1 of 2 branches missed.">        		else if(sym == -1) { // We have reached the end of the string</span>
-<span class="fc" id="L71">        			state = 5;</span>
-<span class="fc" id="L72">        			done = true;</span>
+<span class="pc bpc" id="L67" title="1 of 2 branches missed.">        		else if(sym == -1) { // We have reached the end of the string</span>
+<span class="fc" id="L68">        			state = 5;</span>
+<span class="fc" id="L69">        			done = true;</span>
         		}
         		else {
-<span class="nc" id="L75">        			error(&quot;Unexpected symbol: &quot; + (char) sym);</span>
+<span class="nc" id="L72">        			error(&quot;Unexpected symbol: &quot; + (char) sym);</span>
         		}
         	}
         	
-<span class="pc bpc" id="L79" title="1 of 2 branches missed.">        	else if(state == 2) {</span>
-<span class="nc bnc" id="L80" title="All 8 branches missed.">        		if(sym == 9 || sym == 10 || sym == 13 ||</span>
+<span class="pc bpc" id="L76" title="1 of 2 branches missed.">        	else if(state == 2) {</span>
+<span class="nc bnc" id="L77" title="All 8 branches missed.">        		if(sym == 9 || sym == 10 || sym == 13 ||</span>
                         sym == 32) { // Whitespace
-<span class="nc" id="L82">        			putBackSymbol(sym);</span>
-<span class="nc" id="L83">        			done = true;</span>
+<span class="nc" id="L79">        			putBackSymbol(sym);</span>
+<span class="nc" id="L80">        			done = true;</span>
         		}
-<span class="nc bnc" id="L85" title="All 2 branches missed.">        		else if(digit(sym)) {</span>
-<span class="nc" id="L86">        			state = 3;	</span>
-<span class="nc" id="L87">        			data += (char) sym;</span>
+<span class="nc bnc" id="L82" title="All 2 branches missed.">        		else if(digit(sym)) {</span>
+<span class="nc" id="L83">        			state = 3;	</span>
+<span class="nc" id="L84">        			data += (char) sym;</span>
         		} 
         		else {
-<span class="nc" id="L90">        			putBackSymbol(sym);</span>
-<span class="nc" id="L91">        			done = true;</span>
+<span class="nc" id="L87">        			putBackSymbol(sym);</span>
+<span class="nc" id="L88">        			done = true;</span>
         		}
         	}
-<span class="pc bpc" id="L94" title="1 of 2 branches missed.">        	else if(state == 3) {</span>
-<span class="pc bpc" id="L95" title="1 of 2 branches missed.">        		if(digit(sym)) {</span>
-<span class="nc" id="L96">        			state = 3;	</span>
-<span class="nc" id="L97">        			data += (char) sym;</span>
+<span class="pc bpc" id="L91" title="1 of 2 branches missed.">        	else if(state == 3) {</span>
+<span class="pc bpc" id="L92" title="1 of 2 branches missed.">        		if(digit(sym)) {</span>
+<span class="nc" id="L93">        			state = 3;	</span>
+<span class="nc" id="L94">        			data += (char) sym;</span>
         		} 
-<span class="pc bpc" id="L99" title="1 of 2 branches missed.">        		else if(sym == '.') {</span>
-<span class="nc" id="L100">        			state = 7;</span>
-<span class="nc" id="L101">        			data += (char) sym;</span>
+<span class="pc bpc" id="L96" title="1 of 2 branches missed.">        		else if(sym == '.') {</span>
+<span class="nc" id="L97">        			state = 7;</span>
+<span class="nc" id="L98">        			data += (char) sym;</span>
         		}
         		else {
-<span class="fc" id="L104">        			putBackSymbol(sym);</span>
-<span class="fc" id="L105">        			done = true;</span>
+<span class="fc" id="L101">        			putBackSymbol(sym);</span>
+<span class="fc" id="L102">        			done = true;</span>
         		}
         	}
-<span class="nc bnc" id="L108" title="All 2 branches missed.">        	else if(state == 7) {</span>
-<span class="nc bnc" id="L109" title="All 2 branches missed.">        		if(digit(sym)) {</span>
-<span class="nc" id="L110">        			state = 8;</span>
-<span class="nc" id="L111">        			data += (char) sym;</span>
+<span class="nc bnc" id="L105" title="All 2 branches missed.">        	else if(state == 7) {</span>
+<span class="nc bnc" id="L106" title="All 2 branches missed.">        		if(digit(sym)) {</span>
+<span class="nc" id="L107">        			state = 8;</span>
+<span class="nc" id="L108">        			data += (char) sym;</span>
         		}
         		else {
-<span class="nc" id="L114">        			error(&quot;Unexpected symbol: &quot; + (char) sym);</span>
+<span class="nc" id="L111">        			error(&quot;Unexpected symbol: &quot; + (char) sym);</span>
         		}
         	}
-<span class="nc bnc" id="L117" title="All 2 branches missed.">        	else if(state == 8) {</span>
-<span class="nc bnc" id="L118" title="All 2 branches missed.">        		if(digit(sym)) {</span>
-<span class="nc" id="L119">        			state = 8;	</span>
-<span class="nc" id="L120">        			data += (char) sym;</span>
+<span class="nc bnc" id="L114" title="All 2 branches missed.">        	else if(state == 8) {</span>
+<span class="nc bnc" id="L115" title="All 2 branches missed.">        		if(digit(sym)) {</span>
+<span class="nc" id="L116">        			state = 8;	</span>
+<span class="nc" id="L117">        			data += (char) sym;</span>
         		} 
         		else {
-<span class="nc" id="L123">        			putBackSymbol(sym);</span>
-<span class="nc" id="L124">        			done = true;</span>
+<span class="nc" id="L120">        			putBackSymbol(sym);</span>
+<span class="nc" id="L121">        			done = true;</span>
         		}
         	}
         	
-<span class="fc bfc" id="L128" title="All 2 branches covered.">        } while(!done);</span>
+<span class="fc bfc" id="L125" title="All 2 branches covered.">        } while(!done);</span>
         
-<span class="pc bpc" id="L130" title="1 of 4 branches missed.">		if(state == 2 || state == 4) { // we have an operator</span>
-<span class="fc" id="L131">			return new Token(&quot;opp&quot;, data);</span>
+<span class="pc bpc" id="L127" title="1 of 4 branches missed.">		if(state == 2 || state == 4) { // we have an operator</span>
+<span class="fc" id="L128">			return new Token(&quot;opp&quot;, data);</span>
 		}
-<span class="pc bpc" id="L133" title="1 of 4 branches missed.">		else if(state == 3 || state == 8) { // we have a number</span>
-<span class="fc" id="L134">			return new Token(&quot;num&quot;, data);</span>
+<span class="pc bpc" id="L130" title="1 of 4 branches missed.">		else if(state == 3 || state == 8) { // we have a number</span>
+<span class="fc" id="L131">			return new Token(&quot;num&quot;, data);</span>
 		}
-<span class="fc bfc" id="L136" title="All 2 branches covered.">		else if(state == 5) { // end of number</span>
-<span class="fc" id="L137">			return new Token(&quot;eof&quot;, data);</span>
+<span class="fc bfc" id="L133" title="All 2 branches covered.">		else if(state == 5) { // end of number</span>
+<span class="fc" id="L134">			return new Token(&quot;eof&quot;, data);</span>
 		}
-<span class="pc bpc" id="L139" title="1 of 2 branches missed.">		else if(state == 6) { // we have the imaginary unit</span>
-<span class="fc" id="L140">			return new Token(&quot;im&quot;, data);</span>
+<span class="pc bpc" id="L136" title="1 of 2 branches missed.">		else if(state == 6) { // we have the imaginary unit</span>
+<span class="fc" id="L137">			return new Token(&quot;im&quot;, data);</span>
 		}
 		else {
-<span class="nc" id="L143">			error(&quot;somehow Lexer FA halted in bad state &quot; + state );</span>
-<span class="nc" id="L144">	        return null;</span>
+<span class="nc" id="L140">			error(&quot;somehow Lexer FA halted in bad state &quot; + state );</span>
+<span class="nc" id="L141">	        return null;</span>
 		}
 	}
-	
-	
-	// FOR DEVELOPMENT TESTING ONLY //
-	public static void main(String[] args) {
-<span class="nc" id="L151">		NumberLexer lex = new NumberLexer(&quot;1-2i&quot;);</span>
-		
-<span class="nc bnc" id="L153" title="All 2 branches missed.">		while(!lex.content.equals(&quot;&quot;)) {</span>
-<span class="nc" id="L154">			System.out.println(lex.getNextToken());</span>
-		}
-		
-<span class="nc" id="L157">		System.out.println(lex.getNextToken());</span>
-<span class="nc" id="L158">	}</span>
 }
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/src/test/java/linalg/matrix/MatrixConstructorTest.java\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
--- a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(date 1648105700800)
@@ -1,1 +1,1 @@
-/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/src/test/java/linalg/matrix/MatrixConstructorTest.java
+C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\src\test\java\linalg\matrix\MatrixConstructorTest.java
Index: target/site/jacoco/linalg.util/StringUtils.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>StringUtils</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_class\">StringUtils</span></div><h1>StringUtils</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">57 of 57</td><td class=\"ctr2\">0%</td><td class=\"bar\">8 of 8</td><td class=\"ctr2\">0%</td><td class=\"ctr1\">7</td><td class=\"ctr2\">7</td><td class=\"ctr1\">12</td><td class=\"ctr2\">12</td><td class=\"ctr1\">3</td><td class=\"ctr2\">3</td></tr></tfoot><tbody><tr><td id=\"a1\"><a href=\"StringUtils.java.html#L13\" class=\"el_method\">center(String, int, char)</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"45\" alt=\"45\"/></td><td class=\"ctr2\" id=\"c0\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e0\">0%</td><td class=\"ctr1\" id=\"f0\">5</td><td class=\"ctr2\" id=\"g0\">5</td><td class=\"ctr1\" id=\"h0\">9</td><td class=\"ctr2\" id=\"i0\">9</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a2\"><a href=\"StringUtils.java.html#L4\" class=\"el_method\">StringUtils()</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d1\"/><td class=\"ctr2\" id=\"e1\">n/a</td><td class=\"ctr1\" id=\"f1\">1</td><td class=\"ctr2\" id=\"g1\">1</td><td class=\"ctr1\" id=\"h1\">2</td><td class=\"ctr2\" id=\"i1\">2</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a0\"><a href=\"StringUtils.java.html#L9\" class=\"el_method\">center(String, int)</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"13\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d2\"/><td class=\"ctr2\" id=\"e2\">n/a</td><td class=\"ctr1\" id=\"f2\">1</td><td class=\"ctr2\" id=\"g2\">1</td><td class=\"ctr1\" id=\"h2\">1</td><td class=\"ctr2\" id=\"i2\">1</td><td class=\"ctr1\" id=\"j2\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/StringUtils.html b/target/site/jacoco/linalg.util/StringUtils.html
--- a/target/site/jacoco/linalg.util/StringUtils.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/StringUtils.html	(date 1648105701837)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>StringUtils</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">StringUtils</span></div><h1>StringUtils</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">57 of 57</td><td class="ctr2">0%</td><td class="bar">8 of 8</td><td class="ctr2">0%</td><td class="ctr1">7</td><td class="ctr2">7</td><td class="ctr1">12</td><td class="ctr2">12</td><td class="ctr1">3</td><td class="ctr2">3</td></tr></tfoot><tbody><tr><td id="a1"><a href="StringUtils.java.html#L13" class="el_method">center(String, int, char)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="45" alt="45"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="8" alt="8"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f0">5</td><td class="ctr2" id="g0">5</td><td class="ctr1" id="h0">9</td><td class="ctr2" id="i0">9</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a2"><a href="StringUtils.java.html#L4" class="el_method">StringUtils()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="7" alt="7"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d1"/><td class="ctr2" id="e1">n/a</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g1">1</td><td class="ctr1" id="h1">2</td><td class="ctr2" id="i1">2</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a0"><a href="StringUtils.java.html#L9" class="el_method">center(String, int)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="13" height="10" title="5" alt="5"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d2"/><td class="ctr2" id="e2">n/a</td><td class="ctr1" id="f2">1</td><td class="ctr2" id="g2">1</td><td class="ctr1" id="h2">1</td><td class="ctr2" id="i2">1</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>StringUtils</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">StringUtils</span></div><h1>StringUtils</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">9 of 57</td><td class="ctr2">84%</td><td class="bar">2 of 8</td><td class="ctr2">75%</td><td class="ctr1">3</td><td class="ctr2">7</td><td class="ctr1">3</td><td class="ctr2">12</td><td class="ctr1">1</td><td class="ctr2">3</td></tr></tfoot><tbody><tr><td id="a2"><a href="StringUtils.java.html#L4" class="el_method">StringUtils()</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="7" alt="7"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d1"/><td class="ctr2" id="e1">n/a</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g1">1</td><td class="ctr1" id="h0">2</td><td class="ctr2" id="i1">2</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a1"><a href="StringUtils.java.html#L13" class="el_method">center(String, int, char)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="2" alt="2"/><img src="../jacoco-resources/greenbar.gif" width="114" height="10" title="43" alt="43"/></td><td class="ctr2" id="c1">95%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="2" alt="2"/><img src="../jacoco-resources/greenbar.gif" width="90" height="10" title="6" alt="6"/></td><td class="ctr2" id="e0">75%</td><td class="ctr1" id="f0">2</td><td class="ctr2" id="g0">5</td><td class="ctr1" id="h1">1</td><td class="ctr2" id="i0">9</td><td class="ctr1" id="j1">0</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a0"><a href="StringUtils.java.html#L9" class="el_method">center(String, int)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/greenbar.gif" width="13" height="10" title="5" alt="5"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d2"/><td class="ctr2" id="e2">n/a</td><td class="ctr1" id="f2">0</td><td class="ctr2" id="g2">1</td><td class="ctr1" id="h2">0</td><td class="ctr2" id="i2">1</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k2">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>linalg\\MatrixComparisons.class\r\nlinalg\\util\\LinAlgArrayUtils.class\r\nlinalg\\CholeskyDecomposition.class\r\nlinalg\\LUDecomposition.class\r\nlinalg\\Vector.class\r\nlinalg\\util\\StringUtils.class\r\nlinalg\\MatrixProperties.class\r\nlinalg\\Solvers.class\r\nlinalg\\MatrixChecks.class\r\nlinalg\\MatrixManipulations.class\r\nlinalg\\util\\Token.class\r\nlinalg\\SingularValueDecomposition.class\r\nlinalg\\util\\Parser.class\r\nlinalg\\util\\ExampleMatrices.class\r\nlinalg\\Matrix.class\r\nlinalg\\util\\ShapeLexer.class\r\nlinalg\\PrintOptions.class\r\nlinalg\\util\\FileManager.class\r\nlinalg\\Decompose.class\r\nlinalg\\QRDecomposition.class\r\nlinalg\\util\\NumberLexer.class\r\nlinalg\\complex_number\\CNumber.class\r\nlinalg\\SchurDecomposition.class\r\nlinalg\\SimpleMatrix.class\r\nlinalg\\MatrixOperations.class\r\nlinalg\\util\\Lexer.class\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1648105700788)
@@ -21,6 +21,5 @@
 linalg\util\NumberLexer.class
 linalg\complex_number\CNumber.class
 linalg\SchurDecomposition.class
-linalg\SimpleMatrix.class
 linalg\MatrixOperations.class
 linalg\util\Lexer.class
Index: target/site/jacoco/linalg.util/StringUtils.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>StringUtils.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_source\">StringUtils.java</span></div><h1>StringUtils.java</h1><pre class=\"source lang-java linenums\">package linalg.util;\r\n\r\npublic class StringUtils {\r\n<span class=\"nc\" id=\"L4\">    private StringUtils() { // hide public constructor</span>\r\n<span class=\"nc\" id=\"L5\">        throw new IllegalStateException(&quot;Utility class&quot;);</span>\r\n    }\r\n\r\n    public static String center(String s, int size) {\r\n<span class=\"nc\" id=\"L9\">        return center(s, size, ' ');</span>\r\n    }\r\n\r\n    public static String center(String s, int size, char pad) {\r\n<span class=\"nc bnc\" id=\"L13\" title=\"All 4 branches missed.\">        if (s == null || size &lt;= s.length())</span>\r\n<span class=\"nc\" id=\"L14\">            return s;</span>\r\n\r\n<span class=\"nc\" id=\"L16\">        StringBuilder sb = new StringBuilder(size);</span>\r\n<span class=\"nc bnc\" id=\"L17\" title=\"All 2 branches missed.\">        for (int i = 0; i &lt; (size - s.length()) / 2; i++) {</span>\r\n<span class=\"nc\" id=\"L18\">            sb.append(pad);</span>\r\n        }\r\n<span class=\"nc\" id=\"L20\">        sb.append(s);</span>\r\n<span class=\"nc bnc\" id=\"L21\" title=\"All 2 branches missed.\">        while (sb.length() &lt; size) {</span>\r\n<span class=\"nc\" id=\"L22\">            sb.append(pad);</span>\r\n        }\r\n<span class=\"nc\" id=\"L24\">        return sb.toString();</span>\r\n    }\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/StringUtils.java.html b/target/site/jacoco/linalg.util/StringUtils.java.html
--- a/target/site/jacoco/linalg.util/StringUtils.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/StringUtils.java.html	(date 1648105701833)
@@ -6,22 +6,22 @@
     }
 
     public static String center(String s, int size) {
-<span class="nc" id="L9">        return center(s, size, ' ');</span>
+<span class="fc" id="L9">        return center(s, size, ' ');</span>
     }
 
     public static String center(String s, int size, char pad) {
-<span class="nc bnc" id="L13" title="All 4 branches missed.">        if (s == null || size &lt;= s.length())</span>
+<span class="pc bpc" id="L13" title="2 of 4 branches missed.">        if (s == null || size &lt;= s.length())</span>
 <span class="nc" id="L14">            return s;</span>
 
-<span class="nc" id="L16">        StringBuilder sb = new StringBuilder(size);</span>
-<span class="nc bnc" id="L17" title="All 2 branches missed.">        for (int i = 0; i &lt; (size - s.length()) / 2; i++) {</span>
-<span class="nc" id="L18">            sb.append(pad);</span>
+<span class="fc" id="L16">        StringBuilder sb = new StringBuilder(size);</span>
+<span class="fc bfc" id="L17" title="All 2 branches covered.">        for (int i = 0; i &lt; (size - s.length()) / 2; i++) {</span>
+<span class="fc" id="L18">            sb.append(pad);</span>
         }
-<span class="nc" id="L20">        sb.append(s);</span>
-<span class="nc bnc" id="L21" title="All 2 branches missed.">        while (sb.length() &lt; size) {</span>
-<span class="nc" id="L22">            sb.append(pad);</span>
+<span class="fc" id="L20">        sb.append(s);</span>
+<span class="fc bfc" id="L21" title="All 2 branches covered.">        while (sb.length() &lt; size) {</span>
+<span class="fc" id="L22">            sb.append(pad);</span>
         }
-<span class="nc" id="L24">        return sb.toString();</span>
+<span class="fc" id="L24">        return sb.toString();</span>
     }
 }
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/Token.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>Token</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_class\">Token</span></div><h1>Token</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">24 of 67</td><td class=\"ctr2\">64%</td><td class=\"bar\">3 of 8</td><td class=\"ctr2\">62%</td><td class=\"ctr1\">5</td><td class=\"ctr2\">12</td><td class=\"ctr1\">6</td><td class=\"ctr2\">16</td><td class=\"ctr1\">2</td><td class=\"ctr2\">8</td></tr></tfoot><tbody><tr><td id=\"a1\"><a href=\"Token.java.html#L55\" class=\"el_method\">errorCheck(String, String)</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"68\" height=\"10\" title=\"8\" alt=\"8\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"51\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c5\">42%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/></td><td class=\"ctr2\" id=\"e1\">50%</td><td class=\"ctr1\" id=\"f0\">1</td><td class=\"ctr2\" id=\"g1\">2</td><td class=\"ctr1\" id=\"h0\">2</td><td class=\"ctr2\" id=\"i0\">4</td><td class=\"ctr1\" id=\"j2\">0</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a0\"><a href=\"Token.java.html#L68\" class=\"el_method\">errorCheck(String)</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"60\" height=\"10\" title=\"7\" alt=\"7\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"51\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c4\">46%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/></td><td class=\"ctr2\" id=\"e2\">50%</td><td class=\"ctr1\" id=\"f1\">1</td><td class=\"ctr2\" id=\"g2\">2</td><td class=\"ctr1\" id=\"h1\">2</td><td class=\"ctr2\" id=\"i1\">4</td><td class=\"ctr1\" id=\"j3\">0</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a7\"><a href=\"Token.java.html#L76\" class=\"el_method\">toString()</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"51\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d3\"/><td class=\"ctr2\" id=\"e3\">n/a</td><td class=\"ctr1\" id=\"f2\">1</td><td class=\"ctr2\" id=\"g3\">1</td><td class=\"ctr1\" id=\"h2\">1</td><td class=\"ctr2\" id=\"i3\">1</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr><tr><td id=\"a3\"><a href=\"Token.java.html#L27\" class=\"el_method\">getKind()</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"25\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d4\"/><td class=\"ctr2\" id=\"e4\">n/a</td><td class=\"ctr1\" id=\"f3\">1</td><td class=\"ctr2\" id=\"g4\">1</td><td class=\"ctr1\" id=\"h3\">1</td><td class=\"ctr2\" id=\"i4\">1</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k3\">1</td></tr><tr><td id=\"a5\"><a href=\"Token.java.html#L44\" class=\"el_method\">matches(String, String)</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"120\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"c0\">100%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"30\" height=\"10\" title=\"1\" alt=\"1\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"90\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"e0\">75%</td><td class=\"ctr1\" id=\"f4\">1</td><td class=\"ctr2\" id=\"g0\">3</td><td class=\"ctr1\" id=\"h4\">0</td><td class=\"ctr2\" id=\"i5\">1</td><td class=\"ctr1\" id=\"j4\">0</td><td class=\"ctr2\" id=\"k4\">1</td></tr><tr><td id=\"a6\"><a href=\"Token.java.html#L8\" class=\"el_method\">Token(String, String)</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"77\" height=\"10\" title=\"9\" alt=\"9\"/></td><td class=\"ctr2\" id=\"c1\">100%</td><td class=\"bar\" id=\"d5\"/><td class=\"ctr2\" id=\"e5\">n/a</td><td class=\"ctr1\" id=\"f5\">0</td><td class=\"ctr2\" id=\"g5\">1</td><td class=\"ctr1\" id=\"h5\">0</td><td class=\"ctr2\" id=\"i2\">3</td><td class=\"ctr1\" id=\"j5\">0</td><td class=\"ctr2\" id=\"k5\">1</td></tr><tr><td id=\"a4\"><a href=\"Token.java.html#L20\" class=\"el_method\">isKind(String)</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"42\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c2\">100%</td><td class=\"bar\" id=\"d6\"/><td class=\"ctr2\" id=\"e6\">n/a</td><td class=\"ctr1\" id=\"f6\">0</td><td class=\"ctr2\" id=\"g6\">1</td><td class=\"ctr1\" id=\"h6\">0</td><td class=\"ctr2\" id=\"i6\">1</td><td class=\"ctr1\" id=\"j6\">0</td><td class=\"ctr2\" id=\"k6\">1</td></tr><tr><td id=\"a2\"><a href=\"Token.java.html#L33\" class=\"el_method\">getDetails()</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/greenbar.gif\" width=\"25\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c3\">100%</td><td class=\"bar\" id=\"d7\"/><td class=\"ctr2\" id=\"e7\">n/a</td><td class=\"ctr1\" id=\"f7\">0</td><td class=\"ctr2\" id=\"g7\">1</td><td class=\"ctr1\" id=\"h7\">0</td><td class=\"ctr2\" id=\"i7\">1</td><td class=\"ctr1\" id=\"j7\">0</td><td class=\"ctr2\" id=\"k7\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/Token.html b/target/site/jacoco/linalg.util/Token.html
--- a/target/site/jacoco/linalg.util/Token.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/Token.html	(date 1648105701837)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Token</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">Token</span></div><h1>Token</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">24 of 67</td><td class="ctr2">64%</td><td class="bar">3 of 8</td><td class="ctr2">62%</td><td class="ctr1">5</td><td class="ctr2">12</td><td class="ctr1">6</td><td class="ctr2">16</td><td class="ctr1">2</td><td class="ctr2">8</td></tr></tfoot><tbody><tr><td id="a1"><a href="Token.java.html#L55" class="el_method">errorCheck(String, String)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="68" height="10" title="8" alt="8"/><img src="../jacoco-resources/greenbar.gif" width="51" height="10" title="6" alt="6"/></td><td class="ctr2" id="c5">42%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="30" height="10" title="1" alt="1"/></td><td class="ctr2" id="e1">50%</td><td class="ctr1" id="f0">1</td><td class="ctr2" id="g1">2</td><td class="ctr1" id="h0">2</td><td class="ctr2" id="i0">4</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a0"><a href="Token.java.html#L68" class="el_method">errorCheck(String)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="60" height="10" title="7" alt="7"/><img src="../jacoco-resources/greenbar.gif" width="51" height="10" title="6" alt="6"/></td><td class="ctr2" id="c4">46%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="30" height="10" title="1" alt="1"/></td><td class="ctr2" id="e2">50%</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g2">2</td><td class="ctr1" id="h1">2</td><td class="ctr2" id="i1">4</td><td class="ctr1" id="j3">0</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a7"><a href="Token.java.html#L76" class="el_method">toString()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="51" height="10" title="6" alt="6"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d3"/><td class="ctr2" id="e3">n/a</td><td class="ctr1" id="f2">1</td><td class="ctr2" id="g3">1</td><td class="ctr1" id="h2">1</td><td class="ctr2" id="i3">1</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a3"><a href="Token.java.html#L27" class="el_method">getKind()</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="25" height="10" title="3" alt="3"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d4"/><td class="ctr2" id="e4">n/a</td><td class="ctr1" id="f3">1</td><td class="ctr2" id="g4">1</td><td class="ctr1" id="h3">1</td><td class="ctr2" id="i4">1</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a5"><a href="Token.java.html#L44" class="el_method">matches(String, String)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="14" alt="14"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="90" height="10" title="3" alt="3"/></td><td class="ctr2" id="e0">75%</td><td class="ctr1" id="f4">1</td><td class="ctr2" id="g0">3</td><td class="ctr1" id="h4">0</td><td class="ctr2" id="i5">1</td><td class="ctr1" id="j4">0</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a6"><a href="Token.java.html#L8" class="el_method">Token(String, String)</a></td><td class="bar" id="b5"><img src="../jacoco-resources/greenbar.gif" width="77" height="10" title="9" alt="9"/></td><td class="ctr2" id="c1">100%</td><td class="bar" id="d5"/><td class="ctr2" id="e5">n/a</td><td class="ctr1" id="f5">0</td><td class="ctr2" id="g5">1</td><td class="ctr1" id="h5">0</td><td class="ctr2" id="i2">3</td><td class="ctr1" id="j5">0</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a4"><a href="Token.java.html#L20" class="el_method">isKind(String)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/greenbar.gif" width="42" height="10" title="5" alt="5"/></td><td class="ctr2" id="c2">100%</td><td class="bar" id="d6"/><td class="ctr2" id="e6">n/a</td><td class="ctr1" id="f6">0</td><td class="ctr2" id="g6">1</td><td class="ctr1" id="h6">0</td><td class="ctr2" id="i6">1</td><td class="ctr1" id="j6">0</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a2"><a href="Token.java.html#L33" class="el_method">getDetails()</a></td><td class="bar" id="b7"><img src="../jacoco-resources/greenbar.gif" width="25" height="10" title="3" alt="3"/></td><td class="ctr2" id="c3">100%</td><td class="bar" id="d7"/><td class="ctr2" id="e7">n/a</td><td class="ctr1" id="f7">0</td><td class="ctr2" id="g7">1</td><td class="ctr1" id="h7">0</td><td class="ctr2" id="i7">1</td><td class="ctr1" id="j7">0</td><td class="ctr2" id="k7">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Token</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg.util</a> &gt; <span class="el_class">Token</span></div><h1>Token</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">24 of 67</td><td class="ctr2">64%</td><td class="bar">3 of 8</td><td class="ctr2">62%</td><td class="ctr1">5</td><td class="ctr2">12</td><td class="ctr1">6</td><td class="ctr2">16</td><td class="ctr1">2</td><td class="ctr2">8</td></tr></tfoot><tbody><tr><td id="a1"><a href="Token.java.html#L65" class="el_method">errorCheck(String, String)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="68" height="10" title="8" alt="8"/><img src="../jacoco-resources/greenbar.gif" width="51" height="10" title="6" alt="6"/></td><td class="ctr2" id="c5">42%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="30" height="10" title="1" alt="1"/></td><td class="ctr2" id="e1">50%</td><td class="ctr1" id="f0">1</td><td class="ctr2" id="g1">2</td><td class="ctr1" id="h0">2</td><td class="ctr2" id="i0">4</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a0"><a href="Token.java.html#L78" class="el_method">errorCheck(String)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="60" height="10" title="7" alt="7"/><img src="../jacoco-resources/greenbar.gif" width="51" height="10" title="6" alt="6"/></td><td class="ctr2" id="c4">46%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="30" height="10" title="1" alt="1"/></td><td class="ctr2" id="e2">50%</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g2">2</td><td class="ctr1" id="h1">2</td><td class="ctr2" id="i1">4</td><td class="ctr1" id="j3">0</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a7"><a href="Token.java.html#L90" class="el_method">toString()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="51" height="10" title="6" alt="6"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d3"/><td class="ctr2" id="e3">n/a</td><td class="ctr1" id="f2">1</td><td class="ctr2" id="g3">1</td><td class="ctr1" id="h2">1</td><td class="ctr2" id="i3">1</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a3"><a href="Token.java.html#L36" class="el_method">getKind()</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="25" height="10" title="3" alt="3"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d4"/><td class="ctr2" id="e4">n/a</td><td class="ctr1" id="f3">1</td><td class="ctr2" id="g4">1</td><td class="ctr1" id="h3">1</td><td class="ctr2" id="i4">1</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a5"><a href="Token.java.html#L54" class="el_method">matches(String, String)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="14" alt="14"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="90" height="10" title="3" alt="3"/></td><td class="ctr2" id="e0">75%</td><td class="ctr1" id="f4">1</td><td class="ctr2" id="g0">3</td><td class="ctr1" id="h4">0</td><td class="ctr2" id="i5">1</td><td class="ctr1" id="j4">0</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a6"><a href="Token.java.html#L16" class="el_method">Token(String, String)</a></td><td class="bar" id="b5"><img src="../jacoco-resources/greenbar.gif" width="77" height="10" title="9" alt="9"/></td><td class="ctr2" id="c1">100%</td><td class="bar" id="d5"/><td class="ctr2" id="e5">n/a</td><td class="ctr1" id="f5">0</td><td class="ctr2" id="g5">1</td><td class="ctr1" id="h5">0</td><td class="ctr2" id="i2">3</td><td class="ctr1" id="j5">0</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a4"><a href="Token.java.html#L28" class="el_method">isKind(String)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/greenbar.gif" width="42" height="10" title="5" alt="5"/></td><td class="ctr2" id="c2">100%</td><td class="bar" id="d6"/><td class="ctr2" id="e6">n/a</td><td class="ctr1" id="f6">0</td><td class="ctr2" id="g6">1</td><td class="ctr1" id="h6">0</td><td class="ctr2" id="i6">1</td><td class="ctr1" id="j6">0</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a2"><a href="Token.java.html#L43" class="el_method">getDetails()</a></td><td class="bar" id="b7"><img src="../jacoco-resources/greenbar.gif" width="25" height="10" title="3" alt="3"/></td><td class="ctr2" id="c3">100%</td><td class="bar" id="d7"/><td class="ctr2" id="e7">n/a</td><td class="ctr1" id="f7">0</td><td class="ctr2" id="g7">1</td><td class="ctr1" id="h7">0</td><td class="ctr2" id="i7">1</td><td class="ctr1" id="j7">0</td><td class="ctr2" id="k7">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/Token.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>Token.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg.util</a> &gt; <span class=\"el_source\">Token.java</span></div><h1>Token.java</h1><pre class=\"source lang-java linenums\">package linalg.util;\r\n\r\n\r\nclass Token {\r\n\tprivate String kind;\r\n\tprivate String details;\r\n\t  \r\n<span class=\"fc\" id=\"L8\">\tpublic Token( String k, String d ) {</span>\r\n<span class=\"fc\" id=\"L9\">\t\tkind = k;  details = d;</span>\r\n<span class=\"fc\" id=\"L10\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if token is of kind s\r\n\t * \r\n\t * @param s - token of interest\r\n\t * @return true if token kind equalTo s\r\n\t */\r\n\tpublic boolean isKind( String s ) {\r\n<span class=\"fc\" id=\"L20\">\t    return kind.equals( s );</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * @return token kind\r\n\t */\r\n<span class=\"nc\" id=\"L27\">\tpublic String getKind() { return kind; }</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * @return token details \r\n\t */\r\n<span class=\"fc\" id=\"L33\">\tpublic String getDetails() { return details; }</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if given tokens kind and details match k and d respectivly\r\n\t * \r\n\t * @param k - token kind\r\n\t * @param d - token details\r\n\t * @return True if token matches kind and details, otherwise false\r\n\t */\r\n\tpublic boolean matches( String k, String d ) {\r\n<span class=\"pc bpc\" id=\"L44\" title=\"1 of 4 branches missed.\">\t    return kind.equals(k) &amp;&amp; details.equals(d);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * If a given tokens kind and details match k and d respectivly then the program will halt\r\n\t * \r\n\t * @param k - token kind\r\n\t * @param d - token details\r\n\t */\r\n\tpublic void errorCheck(String k, String d) {\r\n<span class=\"pc bpc\" id=\"L55\" title=\"1 of 2 branches missed.\">\t\tif(!this.matches(k, d)) {</span>\r\n<span class=\"nc\" id=\"L56\">\t\t\tSystem.out.println(&quot;Expecting token [&quot; + k + &quot;,&quot; + d + &quot;] but got &quot; + this);</span>\r\n<span class=\"nc\" id=\"L57\">\t\t\tSystem.exit(1);</span>\r\n\t\t}\r\n<span class=\"fc\" id=\"L59\">\t}</span>\r\n\r\n\t\r\n\t/**\r\n\t * If a given token does not match the provided kind then the program will halt\r\n\t * \r\n\t * @param k - token kind\r\n\t */\r\n\tpublic void errorCheck(String k) {\r\n<span class=\"pc bpc\" id=\"L68\" title=\"1 of 2 branches missed.\">\t\tif(!this.kind.equals(k)) {</span>\r\n<span class=\"nc\" id=\"L69\">\t\t\tSystem.out.println(&quot;Expecting token of kind &quot; + k + &quot; but got &quot; + this);</span>\r\n<span class=\"nc\" id=\"L70\">\t\t\tSystem.exit(1);</span>\r\n\t\t}\r\n<span class=\"fc\" id=\"L72\">\t}</span>\r\n\t\r\n\t\r\n\tpublic String toString() {  \r\n<span class=\"nc\" id=\"L76\">\t    return &quot;[&quot; + kind + &quot;,&quot; + details + &quot;]&quot;;</span>\r\n\t}\r\n\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/Token.java.html b/target/site/jacoco/linalg.util/Token.java.html
--- a/target/site/jacoco/linalg.util/Token.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/Token.java.html	(date 1648105701835)
@@ -1,80 +1,93 @@
 <?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Token.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.source.html" class="el_package">linalg.util</a> &gt; <span class="el_source">Token.java</span></div><h1>Token.java</h1><pre class="source lang-java linenums">package linalg.util;
 
-
+/**
+ * A token is a sub-unit of some string which is being parsed. It has a type or &quot;kind&quot; and contents or &quot;details&quot;.
+ */
 class Token {
 	private String kind;
 	private String details;
-	  
-<span class="fc" id="L8">	public Token( String k, String d ) {</span>
-<span class="fc" id="L9">		kind = k;  details = d;</span>
-<span class="fc" id="L10">	}</span>
+
+
+	/**
+	 * Creates a token of the specified kind and with the specified details.
+	 * @param k Kind of token to create.
+	 * @param d Details of the token.
+	 */
+<span class="fc" id="L16">	public Token( String k, String d ) {</span>
+<span class="fc" id="L17">		kind = k;  details = d;</span>
+<span class="fc" id="L18">	}</span>
 	
 	
 	/**
-	 * Checks if token is of kind s
+	 * Checks if token is of kind s.
 	 * 
-	 * @param s - token of interest
-	 * @return true if token kind equalTo s
+	 * @param s token of interest.
+	 * @return true if token kind equalTo s.
 	 */
 	public boolean isKind( String s ) {
-<span class="fc" id="L20">	    return kind.equals( s );</span>
+<span class="fc" id="L28">	    return kind.equals( s );</span>
 	}
 	
 	
 	/**
-	 * @return token kind
+	 * Gets the kind of this token.
+	 * @return token kind.
 	 */
-<span class="nc" id="L27">	public String getKind() { return kind; }</span>
+<span class="nc" id="L36">	public String getKind() { return kind; }</span>
 	
 	
 	/**
-	 * @return token details 
+	 * Gets the details of this token.
+	 * @return token details.
 	 */
-<span class="fc" id="L33">	public String getDetails() { return details; }</span>
+<span class="fc" id="L43">	public String getDetails() { return details; }</span>
 	
 	
 	/**
-	 * Checks if given tokens kind and details match k and d respectivly
+	 * Checks if given tokens kind and details match k and d respectively.
 	 * 
-	 * @param k - token kind
-	 * @param d - token details
-	 * @return True if token matches kind and details, otherwise false
+	 * @param k token kind.
+	 * @param d token details.
+	 * @return True if token matches kind and details, otherwise false.
 	 */
 	public boolean matches( String k, String d ) {
-<span class="pc bpc" id="L44" title="1 of 4 branches missed.">	    return kind.equals(k) &amp;&amp; details.equals(d);</span>
+<span class="pc bpc" id="L54" title="1 of 4 branches missed.">	    return kind.equals(k) &amp;&amp; details.equals(d);</span>
 	}
 	
 	
 	/**
-	 * If a given tokens kind and details match k and d respectivly then the program will halt
+	 * If a given tokens kind and details match k and d respectively then the program will halt.
 	 * 
-	 * @param k - token kind
-	 * @param d - token details
+	 * @param k token kind
+	 * @param d token details
 	 */
 	public void errorCheck(String k, String d) {
-<span class="pc bpc" id="L55" title="1 of 2 branches missed.">		if(!this.matches(k, d)) {</span>
-<span class="nc" id="L56">			System.out.println(&quot;Expecting token [&quot; + k + &quot;,&quot; + d + &quot;] but got &quot; + this);</span>
-<span class="nc" id="L57">			System.exit(1);</span>
+<span class="pc bpc" id="L65" title="1 of 2 branches missed.">		if(!this.matches(k, d)) {</span>
+<span class="nc" id="L66">			System.out.println(&quot;Expecting token [&quot; + k + &quot;,&quot; + d + &quot;] but got &quot; + this);</span>
+<span class="nc" id="L67">			System.exit(1);</span>
 		}
-<span class="fc" id="L59">	}</span>
+<span class="fc" id="L69">	}</span>
 
 	
 	/**
-	 * If a given token does not match the provided kind then the program will halt
+	 * If a given token does not match the provided kind then the program will halt.
 	 * 
-	 * @param k - token kind
+	 * @param k token kind.
 	 */
 	public void errorCheck(String k) {
-<span class="pc bpc" id="L68" title="1 of 2 branches missed.">		if(!this.kind.equals(k)) {</span>
-<span class="nc" id="L69">			System.out.println(&quot;Expecting token of kind &quot; + k + &quot; but got &quot; + this);</span>
-<span class="nc" id="L70">			System.exit(1);</span>
+<span class="pc bpc" id="L78" title="1 of 2 branches missed.">		if(!this.kind.equals(k)) {</span>
+<span class="nc" id="L79">			System.out.println(&quot;Expecting token of kind &quot; + k + &quot; but got &quot; + this);</span>
+<span class="nc" id="L80">			System.exit(1);</span>
 		}
-<span class="fc" id="L72">	}</span>
-	
-	
+<span class="fc" id="L82">	}</span>
+
+
+	/**
+	 * Constructs a string representation of a token. This will be of the form [kind, details].
+	 * @return A string representing of this token.
+	 */
 	public String toString() {  
-<span class="nc" id="L76">	    return &quot;[&quot; + kind + &quot;,&quot; + details + &quot;]&quot;;</span>
+<span class="nc" id="L90">	    return &quot;[&quot; + this.kind + &quot;,&quot; + this.details + &quot;]&quot;;</span>
 	}
-
 }
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>linalg.util</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"index.source.html\" class=\"el_source\">Source Files</a><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_package\">linalg.util</span></div><h1>linalg.util</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">2,204 of 2,557</td><td class=\"ctr2\">13%</td><td class=\"bar\">170 of 222</td><td class=\"ctr2\">23%</td><td class=\"ctr1\">133</td><td class=\"ctr2\">162</td><td class=\"ctr1\">288</td><td class=\"ctr2\">376</td><td class=\"ctr1\">37</td><td class=\"ctr2\">51</td><td class=\"ctr1\">4</td><td class=\"ctr2\">9</td></tr></tfoot><tbody><tr><td id=\"a0\"><a href=\"ExampleMatrices.html\" class=\"el_class\">ExampleMatrices</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"900\" alt=\"900\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d8\"/><td class=\"ctr2\" id=\"e8\">n/a</td><td class=\"ctr1\" id=\"f8\">2</td><td class=\"ctr2\" id=\"g8\">2</td><td class=\"ctr1\" id=\"h5\">19</td><td class=\"ctr2\" id=\"i5\">19</td><td class=\"ctr1\" id=\"j4\">2</td><td class=\"ctr2\" id=\"k8\">2</td><td class=\"ctr1\" id=\"l0\">1</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a3\"><a href=\"LinAlgArrayUtils.html\" class=\"el_class\">LinAlgArrayUtils</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"76\" height=\"10\" title=\"573\" alt=\"573\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"3\" height=\"10\" title=\"29\" alt=\"29\"/></td><td class=\"ctr2\" id=\"c4\">4%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"113\" height=\"10\" title=\"68\" alt=\"68\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"6\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e4\">5%</td><td class=\"ctr1\" id=\"f0\">52</td><td class=\"ctr2\" id=\"g0\">55</td><td class=\"ctr1\" id=\"h0\">97</td><td class=\"ctr2\" id=\"i0\">102</td><td class=\"ctr1\" id=\"j0\">18</td><td class=\"ctr2\" id=\"k0\">19</td><td class=\"ctr1\" id=\"l4\">0</td><td class=\"ctr2\" id=\"m1\">1</td></tr><tr><td id=\"a1\"><a href=\"FileManager.html\" class=\"el_class\">FileManager</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"247\" alt=\"247\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"26\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f3\">12</td><td class=\"ctr2\" id=\"g3\">12</td><td class=\"ctr1\" id=\"h1\">49</td><td class=\"ctr2\" id=\"i3\">49</td><td class=\"ctr1\" id=\"j1\">4</td><td class=\"ctr2\" id=\"k3\">4</td><td class=\"ctr1\" id=\"l1\">1</td><td class=\"ctr2\" id=\"m2\">1</td></tr><tr><td id=\"a4\"><a href=\"NumberLexer.html\" class=\"el_class\">NumberLexer</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"133\" alt=\"133\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"18\" height=\"10\" title=\"142\" alt=\"142\"/></td><td class=\"ctr2\" id=\"c2\">51%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"55\" height=\"10\" title=\"33\" alt=\"33\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"48\" height=\"10\" title=\"29\" alt=\"29\"/></td><td class=\"ctr2\" id=\"e2\">46%</td><td class=\"ctr1\" id=\"f1\">24</td><td class=\"ctr2\" id=\"g1\">34</td><td class=\"ctr1\" id=\"h3\">34</td><td class=\"ctr2\" id=\"i1\">73</td><td class=\"ctr1\" id=\"j8\">1</td><td class=\"ctr2\" id=\"k4\">3</td><td class=\"ctr1\" id=\"l5\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a6\"><a href=\"ShapeLexer.html\" class=\"el_class\">ShapeLexer</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"129\" alt=\"129\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"50\" height=\"10\" title=\"30\" alt=\"30\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f2\">18</td><td class=\"ctr2\" id=\"g2\">18</td><td class=\"ctr1\" id=\"h2\">37</td><td class=\"ctr2\" id=\"i4\">37</td><td class=\"ctr1\" id=\"j2\">3</td><td class=\"ctr2\" id=\"k5\">3</td><td class=\"ctr1\" id=\"l2\">1</td><td class=\"ctr2\" id=\"m4\">1</td></tr><tr><td id=\"a5\"><a href=\"Parser.html\" class=\"el_class\">Parser</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"128\" alt=\"128\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"12\" height=\"10\" title=\"90\" alt=\"90\"/></td><td class=\"ctr2\" id=\"c3\">41%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"11\" alt=\"11\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"11\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"e3\">38%</td><td class=\"ctr1\" id=\"f4\">10</td><td class=\"ctr2\" id=\"g4\">12</td><td class=\"ctr1\" id=\"h4\">29</td><td class=\"ctr2\" id=\"i2\">52</td><td class=\"ctr1\" id=\"j5\">2</td><td class=\"ctr2\" id=\"k6\">3</td><td class=\"ctr1\" id=\"l6\">0</td><td class=\"ctr2\" id=\"m5\">1</td></tr><tr><td id=\"a7\"><a href=\"StringUtils.html\" class=\"el_class\">StringUtils</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"7\" height=\"10\" title=\"57\" alt=\"57\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"13\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f5\">7</td><td class=\"ctr2\" id=\"g7\">7</td><td class=\"ctr1\" id=\"h6\">12</td><td class=\"ctr2\" id=\"i8\">12</td><td class=\"ctr1\" id=\"j3\">3</td><td class=\"ctr2\" id=\"k7\">3</td><td class=\"ctr1\" id=\"l3\">1</td><td class=\"ctr2\" id=\"m6\">1</td></tr><tr><td id=\"a8\"><a href=\"Token.html\" class=\"el_class\">Token</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"24\" alt=\"24\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"5\" height=\"10\" title=\"43\" alt=\"43\"/></td><td class=\"ctr2\" id=\"c1\">64%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"3\" alt=\"3\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"e1\">62%</td><td class=\"ctr1\" id=\"f6\">5</td><td class=\"ctr2\" id=\"g5\">12</td><td class=\"ctr1\" id=\"h7\">6</td><td class=\"ctr2\" id=\"i6\">16</td><td class=\"ctr1\" id=\"j6\">2</td><td class=\"ctr2\" id=\"k1\">8</td><td class=\"ctr1\" id=\"l7\">0</td><td class=\"ctr2\" id=\"m7\">1</td></tr><tr><td id=\"a2\"><a href=\"Lexer.html\" class=\"el_class\">Lexer</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"13\" alt=\"13\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"6\" height=\"10\" title=\"49\" alt=\"49\"/></td><td class=\"ctr2\" id=\"c0\">79%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"1\" alt=\"1\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"11\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"e0\">87%</td><td class=\"ctr1\" id=\"f7\">3</td><td class=\"ctr2\" id=\"g6\">10</td><td class=\"ctr1\" id=\"h8\">5</td><td class=\"ctr2\" id=\"i7\">16</td><td class=\"ctr1\" id=\"j7\">2</td><td class=\"ctr2\" id=\"k2\">6</td><td class=\"ctr1\" id=\"l8\">0</td><td class=\"ctr2\" id=\"m8\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/index.html b/target/site/jacoco/linalg.util/index.html
--- a/target/site/jacoco/linalg.util/index.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/index.html	(date 1648105701842)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg.util</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.source.html" class="el_source">Source Files</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg.util</span></div><h1>linalg.util</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,204 of 2,557</td><td class="ctr2">13%</td><td class="bar">170 of 222</td><td class="ctr2">23%</td><td class="ctr1">133</td><td class="ctr2">162</td><td class="ctr1">288</td><td class="ctr2">376</td><td class="ctr1">37</td><td class="ctr2">51</td><td class="ctr1">4</td><td class="ctr2">9</td></tr></tfoot><tbody><tr><td id="a0"><a href="ExampleMatrices.html" class="el_class">ExampleMatrices</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="900" alt="900"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"/><td class="ctr2" id="e8">n/a</td><td class="ctr1" id="f8">2</td><td class="ctr2" id="g8">2</td><td class="ctr1" id="h5">19</td><td class="ctr2" id="i5">19</td><td class="ctr1" id="j4">2</td><td class="ctr2" id="k8">2</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a3"><a href="LinAlgArrayUtils.html" class="el_class">LinAlgArrayUtils</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="573" alt="573"/><img src="../jacoco-resources/greenbar.gif" width="3" height="10" title="29" alt="29"/></td><td class="ctr2" id="c4">4%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="113" height="10" title="68" alt="68"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="4" alt="4"/></td><td class="ctr2" id="e4">5%</td><td class="ctr1" id="f0">52</td><td class="ctr2" id="g0">55</td><td class="ctr1" id="h0">97</td><td class="ctr2" id="i0">102</td><td class="ctr1" id="j0">18</td><td class="ctr2" id="k0">19</td><td class="ctr1" id="l4">0</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a1"><a href="FileManager.html" class="el_class">FileManager</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="247" alt="247"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="16" alt="16"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f3">12</td><td class="ctr2" id="g3">12</td><td class="ctr1" id="h1">49</td><td class="ctr2" id="i3">49</td><td class="ctr1" id="j1">4</td><td class="ctr2" id="k3">4</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a4"><a href="NumberLexer.html" class="el_class">NumberLexer</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="133" alt="133"/><img src="../jacoco-resources/greenbar.gif" width="18" height="10" title="142" alt="142"/></td><td class="ctr2" id="c2">51%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="55" height="10" title="33" alt="33"/><img src="../jacoco-resources/greenbar.gif" width="48" height="10" title="29" alt="29"/></td><td class="ctr2" id="e2">46%</td><td class="ctr1" id="f1">24</td><td class="ctr2" id="g1">34</td><td class="ctr1" id="h3">34</td><td class="ctr2" id="i1">73</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k4">3</td><td class="ctr1" id="l5">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a6"><a href="ShapeLexer.html" class="el_class">ShapeLexer</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="129" alt="129"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="50" height="10" title="30" alt="30"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f2">18</td><td class="ctr2" id="g2">18</td><td class="ctr1" id="h2">37</td><td class="ctr2" id="i4">37</td><td class="ctr1" id="j2">3</td><td class="ctr2" id="k5">3</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a5"><a href="Parser.html" class="el_class">Parser</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="128" alt="128"/><img src="../jacoco-resources/greenbar.gif" width="12" height="10" title="90" alt="90"/></td><td class="ctr2" id="c3">41%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="11" alt="11"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e3">38%</td><td class="ctr1" id="f4">10</td><td class="ctr2" id="g4">12</td><td class="ctr1" id="h4">29</td><td class="ctr2" id="i2">52</td><td class="ctr1" id="j5">2</td><td class="ctr2" id="k6">3</td><td class="ctr1" id="l6">0</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a7"><a href="StringUtils.html" class="el_class">StringUtils</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="7" height="10" title="57" alt="57"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="13" height="10" title="8" alt="8"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f5">7</td><td class="ctr2" id="g7">7</td><td class="ctr1" id="h6">12</td><td class="ctr2" id="i8">12</td><td class="ctr1" id="j3">3</td><td class="ctr2" id="k7">3</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a8"><a href="Token.html" class="el_class">Token</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="24" alt="24"/><img src="../jacoco-resources/greenbar.gif" width="5" height="10" title="43" alt="43"/></td><td class="ctr2" id="c1">64%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="3" alt="3"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="5" alt="5"/></td><td class="ctr2" id="e1">62%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g5">12</td><td class="ctr1" id="h7">6</td><td class="ctr2" id="i6">16</td><td class="ctr1" id="j6">2</td><td class="ctr2" id="k1">8</td><td class="ctr1" id="l7">0</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a2"><a href="Lexer.html" class="el_class">Lexer</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="13" alt="13"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="49" alt="49"/></td><td class="ctr2" id="c0">79%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e0">87%</td><td class="ctr1" id="f7">3</td><td class="ctr2" id="g6">10</td><td class="ctr1" id="h8">5</td><td class="ctr2" id="i7">16</td><td class="ctr1" id="j7">2</td><td class="ctr2" id="k2">6</td><td class="ctr1" id="l8">0</td><td class="ctr2" id="m8">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg.util</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.source.html" class="el_source">Source Files</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg.util</span></div><h1>linalg.util</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,136 of 2,537</td><td class="ctr2">15%</td><td class="bar">162 of 220</td><td class="ctr2">26%</td><td class="ctr1">127</td><td class="ctr2">160</td><td class="ctr1">274</td><td class="ctr2">371</td><td class="ctr1">34</td><td class="ctr2">50</td><td class="ctr1">3</td><td class="ctr2">9</td></tr></tfoot><tbody><tr><td id="a0"><a href="ExampleMatrices.html" class="el_class">ExampleMatrices</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="900" alt="900"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d8"/><td class="ctr2" id="e8">n/a</td><td class="ctr1" id="f8">2</td><td class="ctr2" id="g8">2</td><td class="ctr1" id="h5">19</td><td class="ctr2" id="i5">19</td><td class="ctr1" id="j3">2</td><td class="ctr2" id="k7">2</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a3"><a href="LinAlgArrayUtils.html" class="el_class">LinAlgArrayUtils</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="573" alt="573"/><img src="../jacoco-resources/greenbar.gif" width="3" height="10" title="29" alt="29"/></td><td class="ctr2" id="c5">4%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="113" height="10" title="68" alt="68"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="4" alt="4"/></td><td class="ctr2" id="e5">5%</td><td class="ctr1" id="f0">52</td><td class="ctr2" id="g0">55</td><td class="ctr1" id="h0">97</td><td class="ctr2" id="i0">102</td><td class="ctr1" id="j0">18</td><td class="ctr2" id="k0">19</td><td class="ctr1" id="l3">0</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a1"><a href="FileManager.html" class="el_class">FileManager</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="247" alt="247"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="16" alt="16"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f3">12</td><td class="ctr2" id="g3">12</td><td class="ctr1" id="h1">49</td><td class="ctr2" id="i3">49</td><td class="ctr1" id="j1">4</td><td class="ctr2" id="k3">4</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a6"><a href="ShapeLexer.html" class="el_class">ShapeLexer</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="129" alt="129"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="50" height="10" title="30" alt="30"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f2">18</td><td class="ctr2" id="g2">18</td><td class="ctr1" id="h2">37</td><td class="ctr2" id="i4">37</td><td class="ctr1" id="j2">3</td><td class="ctr2" id="k4">3</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a5"><a href="Parser.html" class="el_class">Parser</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="128" alt="128"/><img src="../jacoco-resources/greenbar.gif" width="12" height="10" title="90" alt="90"/></td><td class="ctr2" id="c4">41%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="11" alt="11"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e4">38%</td><td class="ctr1" id="f4">10</td><td class="ctr2" id="g4">12</td><td class="ctr1" id="h3">29</td><td class="ctr2" id="i2">52</td><td class="ctr1" id="j4">2</td><td class="ctr2" id="k5">3</td><td class="ctr1" id="l4">0</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a4"><a href="NumberLexer.html" class="el_class">NumberLexer</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="15" height="10" title="113" alt="113"/><img src="../jacoco-resources/greenbar.gif" width="18" height="10" title="142" alt="142"/></td><td class="ctr2" id="c3">55%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="51" height="10" title="31" alt="31"/><img src="../jacoco-resources/greenbar.gif" width="48" height="10" title="29" alt="29"/></td><td class="ctr2" id="e3">48%</td><td class="ctr1" id="f1">22</td><td class="ctr2" id="g1">32</td><td class="ctr1" id="h4">29</td><td class="ctr2" id="i1">68</td><td class="ctr1" id="j8">0</td><td class="ctr2" id="k8">2</td><td class="ctr1" id="l5">0</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a8"><a href="Token.html" class="el_class">Token</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="24" alt="24"/><img src="../jacoco-resources/greenbar.gif" width="5" height="10" title="43" alt="43"/></td><td class="ctr2" id="c2">64%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="3" alt="3"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="5" alt="5"/></td><td class="ctr2" id="e2">62%</td><td class="ctr1" id="f5">5</td><td class="ctr2" id="g5">12</td><td class="ctr1" id="h6">6</td><td class="ctr2" id="i6">16</td><td class="ctr1" id="j5">2</td><td class="ctr2" id="k1">8</td><td class="ctr1" id="l6">0</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a2"><a href="Lexer.html" class="el_class">Lexer</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="13" alt="13"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="49" alt="49"/></td><td class="ctr2" id="c1">79%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e0">87%</td><td class="ctr1" id="f6">3</td><td class="ctr2" id="g6">10</td><td class="ctr1" id="h7">5</td><td class="ctr2" id="i7">16</td><td class="ctr1" id="j6">2</td><td class="ctr2" id="k2">6</td><td class="ctr1" id="l7">0</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a7"><a href="StringUtils.html" class="el_class">StringUtils</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="9" alt="9"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="48" alt="48"/></td><td class="ctr2" id="c0">84%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="2" alt="2"/><img src="../jacoco-resources/greenbar.gif" width="10" height="10" title="6" alt="6"/></td><td class="ctr2" id="e1">75%</td><td class="ctr1" id="f7">3</td><td class="ctr2" id="g7">7</td><td class="ctr1" id="h8">3</td><td class="ctr2" id="i8">12</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k6">3</td><td class="ctr1" id="l8">0</td><td class="ctr2" id="m8">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg.util/index.source.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>linalg.util</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"index.html\" class=\"el_class\">Classes</a><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_package\">linalg.util</span></div><h1>linalg.util</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">2,204 of 2,557</td><td class=\"ctr2\">13%</td><td class=\"bar\">170 of 222</td><td class=\"ctr2\">23%</td><td class=\"ctr1\">133</td><td class=\"ctr2\">162</td><td class=\"ctr1\">288</td><td class=\"ctr2\">376</td><td class=\"ctr1\">37</td><td class=\"ctr2\">51</td><td class=\"ctr1\">4</td><td class=\"ctr2\">9</td></tr></tfoot><tbody><tr><td id=\"a0\"><a href=\"ExampleMatrices.java.html\" class=\"el_source\">ExampleMatrices.java</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"900\" alt=\"900\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d8\"/><td class=\"ctr2\" id=\"e8\">n/a</td><td class=\"ctr1\" id=\"f8\">2</td><td class=\"ctr2\" id=\"g8\">2</td><td class=\"ctr1\" id=\"h5\">19</td><td class=\"ctr2\" id=\"i5\">19</td><td class=\"ctr1\" id=\"j4\">2</td><td class=\"ctr2\" id=\"k8\">2</td><td class=\"ctr1\" id=\"l0\">1</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a3\"><a href=\"LinAlgArrayUtils.java.html\" class=\"el_source\">LinAlgArrayUtils.java</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"76\" height=\"10\" title=\"573\" alt=\"573\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"3\" height=\"10\" title=\"29\" alt=\"29\"/></td><td class=\"ctr2\" id=\"c4\">4%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"113\" height=\"10\" title=\"68\" alt=\"68\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"6\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e4\">5%</td><td class=\"ctr1\" id=\"f0\">52</td><td class=\"ctr2\" id=\"g0\">55</td><td class=\"ctr1\" id=\"h0\">97</td><td class=\"ctr2\" id=\"i0\">102</td><td class=\"ctr1\" id=\"j0\">18</td><td class=\"ctr2\" id=\"k0\">19</td><td class=\"ctr1\" id=\"l4\">0</td><td class=\"ctr2\" id=\"m1\">1</td></tr><tr><td id=\"a1\"><a href=\"FileManager.java.html\" class=\"el_source\">FileManager.java</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"247\" alt=\"247\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"26\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f3\">12</td><td class=\"ctr2\" id=\"g3\">12</td><td class=\"ctr1\" id=\"h1\">49</td><td class=\"ctr2\" id=\"i3\">49</td><td class=\"ctr1\" id=\"j1\">4</td><td class=\"ctr2\" id=\"k3\">4</td><td class=\"ctr1\" id=\"l1\">1</td><td class=\"ctr2\" id=\"m2\">1</td></tr><tr><td id=\"a4\"><a href=\"NumberLexer.java.html\" class=\"el_source\">NumberLexer.java</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"133\" alt=\"133\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"18\" height=\"10\" title=\"142\" alt=\"142\"/></td><td class=\"ctr2\" id=\"c2\">51%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"55\" height=\"10\" title=\"33\" alt=\"33\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"48\" height=\"10\" title=\"29\" alt=\"29\"/></td><td class=\"ctr2\" id=\"e2\">46%</td><td class=\"ctr1\" id=\"f1\">24</td><td class=\"ctr2\" id=\"g1\">34</td><td class=\"ctr1\" id=\"h3\">34</td><td class=\"ctr2\" id=\"i1\">73</td><td class=\"ctr1\" id=\"j8\">1</td><td class=\"ctr2\" id=\"k4\">3</td><td class=\"ctr1\" id=\"l5\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a6\"><a href=\"ShapeLexer.java.html\" class=\"el_source\">ShapeLexer.java</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"129\" alt=\"129\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"50\" height=\"10\" title=\"30\" alt=\"30\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f2\">18</td><td class=\"ctr2\" id=\"g2\">18</td><td class=\"ctr1\" id=\"h2\">37</td><td class=\"ctr2\" id=\"i4\">37</td><td class=\"ctr1\" id=\"j2\">3</td><td class=\"ctr2\" id=\"k5\">3</td><td class=\"ctr1\" id=\"l2\">1</td><td class=\"ctr2\" id=\"m4\">1</td></tr><tr><td id=\"a5\"><a href=\"Parser.java.html\" class=\"el_source\">Parser.java</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"128\" alt=\"128\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"12\" height=\"10\" title=\"90\" alt=\"90\"/></td><td class=\"ctr2\" id=\"c3\">41%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"11\" alt=\"11\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"11\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"e3\">38%</td><td class=\"ctr1\" id=\"f4\">10</td><td class=\"ctr2\" id=\"g4\">12</td><td class=\"ctr1\" id=\"h4\">29</td><td class=\"ctr2\" id=\"i2\">52</td><td class=\"ctr1\" id=\"j5\">2</td><td class=\"ctr2\" id=\"k6\">3</td><td class=\"ctr1\" id=\"l6\">0</td><td class=\"ctr2\" id=\"m5\">1</td></tr><tr><td id=\"a7\"><a href=\"StringUtils.java.html\" class=\"el_source\">StringUtils.java</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"7\" height=\"10\" title=\"57\" alt=\"57\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"13\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f5\">7</td><td class=\"ctr2\" id=\"g7\">7</td><td class=\"ctr1\" id=\"h6\">12</td><td class=\"ctr2\" id=\"i8\">12</td><td class=\"ctr1\" id=\"j3\">3</td><td class=\"ctr2\" id=\"k7\">3</td><td class=\"ctr1\" id=\"l3\">1</td><td class=\"ctr2\" id=\"m6\">1</td></tr><tr><td id=\"a8\"><a href=\"Token.java.html\" class=\"el_source\">Token.java</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"24\" alt=\"24\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"5\" height=\"10\" title=\"43\" alt=\"43\"/></td><td class=\"ctr2\" id=\"c1\">64%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"3\" alt=\"3\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"e1\">62%</td><td class=\"ctr1\" id=\"f6\">5</td><td class=\"ctr2\" id=\"g5\">12</td><td class=\"ctr1\" id=\"h7\">6</td><td class=\"ctr2\" id=\"i6\">16</td><td class=\"ctr1\" id=\"j6\">2</td><td class=\"ctr2\" id=\"k1\">8</td><td class=\"ctr1\" id=\"l7\">0</td><td class=\"ctr2\" id=\"m7\">1</td></tr><tr><td id=\"a2\"><a href=\"Lexer.java.html\" class=\"el_source\">Lexer.java</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"13\" alt=\"13\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"6\" height=\"10\" title=\"49\" alt=\"49\"/></td><td class=\"ctr2\" id=\"c0\">79%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"1\" alt=\"1\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"11\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"e0\">87%</td><td class=\"ctr1\" id=\"f7\">3</td><td class=\"ctr2\" id=\"g6\">10</td><td class=\"ctr1\" id=\"h8\">5</td><td class=\"ctr2\" id=\"i7\">16</td><td class=\"ctr1\" id=\"j7\">2</td><td class=\"ctr2\" id=\"k2\">6</td><td class=\"ctr1\" id=\"l8\">0</td><td class=\"ctr2\" id=\"m8\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg.util/index.source.html b/target/site/jacoco/linalg.util/index.source.html
--- a/target/site/jacoco/linalg.util/index.source.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg.util/index.source.html	(date 1648105701836)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg.util</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.html" class="el_class">Classes</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg.util</span></div><h1>linalg.util</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,204 of 2,557</td><td class="ctr2">13%</td><td class="bar">170 of 222</td><td class="ctr2">23%</td><td class="ctr1">133</td><td class="ctr2">162</td><td class="ctr1">288</td><td class="ctr2">376</td><td class="ctr1">37</td><td class="ctr2">51</td><td class="ctr1">4</td><td class="ctr2">9</td></tr></tfoot><tbody><tr><td id="a0"><a href="ExampleMatrices.java.html" class="el_source">ExampleMatrices.java</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="900" alt="900"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"/><td class="ctr2" id="e8">n/a</td><td class="ctr1" id="f8">2</td><td class="ctr2" id="g8">2</td><td class="ctr1" id="h5">19</td><td class="ctr2" id="i5">19</td><td class="ctr1" id="j4">2</td><td class="ctr2" id="k8">2</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a3"><a href="LinAlgArrayUtils.java.html" class="el_source">LinAlgArrayUtils.java</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="573" alt="573"/><img src="../jacoco-resources/greenbar.gif" width="3" height="10" title="29" alt="29"/></td><td class="ctr2" id="c4">4%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="113" height="10" title="68" alt="68"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="4" alt="4"/></td><td class="ctr2" id="e4">5%</td><td class="ctr1" id="f0">52</td><td class="ctr2" id="g0">55</td><td class="ctr1" id="h0">97</td><td class="ctr2" id="i0">102</td><td class="ctr1" id="j0">18</td><td class="ctr2" id="k0">19</td><td class="ctr1" id="l4">0</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a1"><a href="FileManager.java.html" class="el_source">FileManager.java</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="247" alt="247"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="16" alt="16"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f3">12</td><td class="ctr2" id="g3">12</td><td class="ctr1" id="h1">49</td><td class="ctr2" id="i3">49</td><td class="ctr1" id="j1">4</td><td class="ctr2" id="k3">4</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a4"><a href="NumberLexer.java.html" class="el_source">NumberLexer.java</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="133" alt="133"/><img src="../jacoco-resources/greenbar.gif" width="18" height="10" title="142" alt="142"/></td><td class="ctr2" id="c2">51%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="55" height="10" title="33" alt="33"/><img src="../jacoco-resources/greenbar.gif" width="48" height="10" title="29" alt="29"/></td><td class="ctr2" id="e2">46%</td><td class="ctr1" id="f1">24</td><td class="ctr2" id="g1">34</td><td class="ctr1" id="h3">34</td><td class="ctr2" id="i1">73</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k4">3</td><td class="ctr1" id="l5">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a6"><a href="ShapeLexer.java.html" class="el_source">ShapeLexer.java</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="129" alt="129"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="50" height="10" title="30" alt="30"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f2">18</td><td class="ctr2" id="g2">18</td><td class="ctr1" id="h2">37</td><td class="ctr2" id="i4">37</td><td class="ctr1" id="j2">3</td><td class="ctr2" id="k5">3</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a5"><a href="Parser.java.html" class="el_source">Parser.java</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="128" alt="128"/><img src="../jacoco-resources/greenbar.gif" width="12" height="10" title="90" alt="90"/></td><td class="ctr2" id="c3">41%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="11" alt="11"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e3">38%</td><td class="ctr1" id="f4">10</td><td class="ctr2" id="g4">12</td><td class="ctr1" id="h4">29</td><td class="ctr2" id="i2">52</td><td class="ctr1" id="j5">2</td><td class="ctr2" id="k6">3</td><td class="ctr1" id="l6">0</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a7"><a href="StringUtils.java.html" class="el_source">StringUtils.java</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="7" height="10" title="57" alt="57"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="13" height="10" title="8" alt="8"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f5">7</td><td class="ctr2" id="g7">7</td><td class="ctr1" id="h6">12</td><td class="ctr2" id="i8">12</td><td class="ctr1" id="j3">3</td><td class="ctr2" id="k7">3</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a8"><a href="Token.java.html" class="el_source">Token.java</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="24" alt="24"/><img src="../jacoco-resources/greenbar.gif" width="5" height="10" title="43" alt="43"/></td><td class="ctr2" id="c1">64%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="3" alt="3"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="5" alt="5"/></td><td class="ctr2" id="e1">62%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g5">12</td><td class="ctr1" id="h7">6</td><td class="ctr2" id="i6">16</td><td class="ctr1" id="j6">2</td><td class="ctr2" id="k1">8</td><td class="ctr1" id="l7">0</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a2"><a href="Lexer.java.html" class="el_source">Lexer.java</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="13" alt="13"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="49" alt="49"/></td><td class="ctr2" id="c0">79%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e0">87%</td><td class="ctr1" id="f7">3</td><td class="ctr2" id="g6">10</td><td class="ctr1" id="h8">5</td><td class="ctr2" id="i7">16</td><td class="ctr1" id="j7">2</td><td class="ctr2" id="k2">6</td><td class="ctr1" id="l8">0</td><td class="ctr2" id="m8">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg.util</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.html" class="el_class">Classes</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg.util</span></div><h1>linalg.util</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,136 of 2,537</td><td class="ctr2">15%</td><td class="bar">162 of 220</td><td class="ctr2">26%</td><td class="ctr1">127</td><td class="ctr2">160</td><td class="ctr1">274</td><td class="ctr2">371</td><td class="ctr1">34</td><td class="ctr2">50</td><td class="ctr1">3</td><td class="ctr2">9</td></tr></tfoot><tbody><tr><td id="a0"><a href="ExampleMatrices.java.html" class="el_source">ExampleMatrices.java</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="900" alt="900"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d8"/><td class="ctr2" id="e8">n/a</td><td class="ctr1" id="f8">2</td><td class="ctr2" id="g8">2</td><td class="ctr1" id="h5">19</td><td class="ctr2" id="i5">19</td><td class="ctr1" id="j3">2</td><td class="ctr2" id="k7">2</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a3"><a href="LinAlgArrayUtils.java.html" class="el_source">LinAlgArrayUtils.java</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="573" alt="573"/><img src="../jacoco-resources/greenbar.gif" width="3" height="10" title="29" alt="29"/></td><td class="ctr2" id="c5">4%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="113" height="10" title="68" alt="68"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="4" alt="4"/></td><td class="ctr2" id="e5">5%</td><td class="ctr1" id="f0">52</td><td class="ctr2" id="g0">55</td><td class="ctr1" id="h0">97</td><td class="ctr2" id="i0">102</td><td class="ctr1" id="j0">18</td><td class="ctr2" id="k0">19</td><td class="ctr1" id="l3">0</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a1"><a href="FileManager.java.html" class="el_source">FileManager.java</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="247" alt="247"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="16" alt="16"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f3">12</td><td class="ctr2" id="g3">12</td><td class="ctr1" id="h1">49</td><td class="ctr2" id="i3">49</td><td class="ctr1" id="j1">4</td><td class="ctr2" id="k3">4</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a6"><a href="ShapeLexer.java.html" class="el_source">ShapeLexer.java</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="129" alt="129"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="50" height="10" title="30" alt="30"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f2">18</td><td class="ctr2" id="g2">18</td><td class="ctr1" id="h2">37</td><td class="ctr2" id="i4">37</td><td class="ctr1" id="j2">3</td><td class="ctr2" id="k4">3</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a5"><a href="Parser.java.html" class="el_source">Parser.java</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="128" alt="128"/><img src="../jacoco-resources/greenbar.gif" width="12" height="10" title="90" alt="90"/></td><td class="ctr2" id="c4">41%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="11" alt="11"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e4">38%</td><td class="ctr1" id="f4">10</td><td class="ctr2" id="g4">12</td><td class="ctr1" id="h3">29</td><td class="ctr2" id="i2">52</td><td class="ctr1" id="j4">2</td><td class="ctr2" id="k5">3</td><td class="ctr1" id="l4">0</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a4"><a href="NumberLexer.java.html" class="el_source">NumberLexer.java</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="15" height="10" title="113" alt="113"/><img src="../jacoco-resources/greenbar.gif" width="18" height="10" title="142" alt="142"/></td><td class="ctr2" id="c3">55%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="51" height="10" title="31" alt="31"/><img src="../jacoco-resources/greenbar.gif" width="48" height="10" title="29" alt="29"/></td><td class="ctr2" id="e3">48%</td><td class="ctr1" id="f1">22</td><td class="ctr2" id="g1">32</td><td class="ctr1" id="h4">29</td><td class="ctr2" id="i1">68</td><td class="ctr1" id="j8">0</td><td class="ctr2" id="k8">2</td><td class="ctr1" id="l5">0</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a8"><a href="Token.java.html" class="el_source">Token.java</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="24" alt="24"/><img src="../jacoco-resources/greenbar.gif" width="5" height="10" title="43" alt="43"/></td><td class="ctr2" id="c2">64%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="3" alt="3"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="5" alt="5"/></td><td class="ctr2" id="e2">62%</td><td class="ctr1" id="f5">5</td><td class="ctr2" id="g5">12</td><td class="ctr1" id="h6">6</td><td class="ctr2" id="i6">16</td><td class="ctr1" id="j5">2</td><td class="ctr2" id="k1">8</td><td class="ctr1" id="l6">0</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a2"><a href="Lexer.java.html" class="el_source">Lexer.java</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="13" alt="13"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="49" alt="49"/></td><td class="ctr2" id="c1">79%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="1" alt="1"/><img src="../jacoco-resources/greenbar.gif" width="11" height="10" title="7" alt="7"/></td><td class="ctr2" id="e0">87%</td><td class="ctr1" id="f6">3</td><td class="ctr2" id="g6">10</td><td class="ctr1" id="h7">5</td><td class="ctr2" id="i7">16</td><td class="ctr1" id="j6">2</td><td class="ctr2" id="k2">6</td><td class="ctr1" id="l7">0</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a7"><a href="StringUtils.java.html" class="el_source">StringUtils.java</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="9" alt="9"/><img src="../jacoco-resources/greenbar.gif" width="6" height="10" title="48" alt="48"/></td><td class="ctr2" id="c0">84%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="2" alt="2"/><img src="../jacoco-resources/greenbar.gif" width="10" height="10" title="6" alt="6"/></td><td class="ctr2" id="e1">75%</td><td class="ctr1" id="f7">3</td><td class="ctr2" id="g7">7</td><td class="ctr1" id="h8">3</td><td class="ctr2" id="i8">12</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k6">3</td><td class="ctr1" id="l8">0</td><td class="ctr2" id="m8">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/MatrixManipulations.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixManipulations</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_class\">MatrixManipulations</span></div><h1>MatrixManipulations</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">1,856 of 1,856</td><td class=\"ctr2\">0%</td><td class=\"bar\">146 of 146</td><td class=\"ctr2\">0%</td><td class=\"ctr1\">113</td><td class=\"ctr2\">113</td><td class=\"ctr1\">268</td><td class=\"ctr2\">268</td><td class=\"ctr1\">40</td><td class=\"ctr2\">40</td></tr></tfoot><tbody><tr><td id=\"a7\"><a href=\"MatrixManipulations.java.html#L645\" class=\"el_method\">hessu()</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"258\" alt=\"258\"/></td><td class=\"ctr2\" id=\"c0\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e0\">0%</td><td class=\"ctr1\" id=\"f7\">4</td><td class=\"ctr2\" id=\"g7\">4</td><td class=\"ctr1\" id=\"h1\">23</td><td class=\"ctr2\" id=\"i1\">23</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a8\"><a href=\"MatrixManipulations.java.html#L694\" class=\"el_method\">hessuV()</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"114\" height=\"10\" title=\"246\" alt=\"246\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f15\">3</td><td class=\"ctr2\" id=\"g15\">3</td><td class=\"ctr1\" id=\"h0\">25</td><td class=\"ctr2\" id=\"i0\">25</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixManipulations.java.html#L121\" class=\"el_method\">extend(int)</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"70\" alt=\"70\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f0\">6</td><td class=\"ctr2\" id=\"g0\">6</td><td class=\"ctr1\" id=\"h3\">12</td><td class=\"ctr2\" id=\"i3\">12</td><td class=\"ctr1\" id=\"j2\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr><tr><td id=\"a31\"><a href=\"MatrixManipulations.java.html#L174\" class=\"el_method\">setValues(double[][])</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"31\" height=\"10\" title=\"67\" alt=\"67\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f1\">5</td><td class=\"ctr2\" id=\"g1\">5</td><td class=\"ctr1\" id=\"h13\">7</td><td class=\"ctr2\" id=\"i13\">7</td><td class=\"ctr1\" id=\"j3\">1</td><td class=\"ctr2\" id=\"k3\">1</td></tr><tr><td id=\"a29\"><a href=\"MatrixManipulations.java.html#L382\" class=\"el_method\">setSliceCopy(int, int, Matrix)</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"31\" height=\"10\" title=\"67\" alt=\"67\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f2\">5</td><td class=\"ctr2\" id=\"g2\">5</td><td class=\"ctr1\" id=\"h14\">7</td><td class=\"ctr2\" id=\"i14\">7</td><td class=\"ctr1\" id=\"j4\">1</td><td class=\"ctr2\" id=\"k4\">1</td></tr><tr><td id=\"a28\"><a href=\"MatrixManipulations.java.html#L412\" class=\"el_method\">setSlice(int, int, Matrix)</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"30\" height=\"10\" title=\"65\" alt=\"65\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f3\">5</td><td class=\"ctr2\" id=\"g3\">5</td><td class=\"ctr1\" id=\"h15\">7</td><td class=\"ctr2\" id=\"i15\">7</td><td class=\"ctr1\" id=\"j5\">1</td><td class=\"ctr2\" id=\"k5\">1</td></tr><tr><td id=\"a16\"><a href=\"MatrixManipulations.java.html#L27\" class=\"el_method\">reshape(int, int)</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"29\" height=\"10\" title=\"64\" alt=\"64\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f8\">4</td><td class=\"ctr2\" id=\"g8\">4</td><td class=\"ctr1\" id=\"h5\">10</td><td class=\"ctr2\" id=\"i5\">10</td><td class=\"ctr1\" id=\"j6\">1</td><td class=\"ctr2\" id=\"k6\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixManipulations.java.html#L82\" class=\"el_method\">flatten(int)</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"29\" height=\"10\" title=\"64\" alt=\"64\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f4\">5</td><td class=\"ctr2\" id=\"g4\">5</td><td class=\"ctr1\" id=\"h2\">14</td><td class=\"ctr2\" id=\"i2\">14</td><td class=\"ctr1\" id=\"j7\">1</td><td class=\"ctr2\" id=\"k7\">1</td></tr><tr><td id=\"a39\"><a href=\"MatrixManipulations.java.html#L576\" class=\"el_method\">triu(int)</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"26\" height=\"10\" title=\"57\" alt=\"57\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f5\">5</td><td class=\"ctr2\" id=\"g5\">5</td><td class=\"ctr1\" id=\"h6\">9</td><td class=\"ctr2\" id=\"i6\">9</td><td class=\"ctr1\" id=\"j8\">1</td><td class=\"ctr2\" id=\"k8\">1</td></tr><tr><td id=\"a15\"><a href=\"MatrixManipulations.java.html#L452\" class=\"el_method\">removeRows(int[])</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"51\" alt=\"51\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f9\">4</td><td class=\"ctr2\" id=\"g9\">4</td><td class=\"ctr1\" id=\"h7\">9</td><td class=\"ctr2\" id=\"i7\">9</td><td class=\"ctr1\" id=\"j9\">1</td><td class=\"ctr2\" id=\"k9\">1</td></tr><tr><td id=\"a13\"><a href=\"MatrixManipulations.java.html#L495\" class=\"el_method\">removeCols(int[])</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"51\" alt=\"51\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f10\">4</td><td class=\"ctr2\" id=\"g10\">4</td><td class=\"ctr1\" id=\"h8\">9</td><td class=\"ctr2\" id=\"i8\">9</td><td class=\"ctr1\" id=\"j10\">1</td><td class=\"ctr2\" id=\"k10\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixManipulations.java.html#L56\" class=\"el_method\">flatten()</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"22\" height=\"10\" title=\"48\" alt=\"48\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f16\">3</td><td class=\"ctr2\" id=\"g16\">3</td><td class=\"ctr1\" id=\"h9\">9</td><td class=\"ctr2\" id=\"i9\">9</td><td class=\"ctr1\" id=\"j11\">1</td><td class=\"ctr2\" id=\"k11\">1</td></tr><tr><td id=\"a19\"><a href=\"MatrixManipulations.java.html#L893\" class=\"el_method\">roundToZero(int)</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"46\" alt=\"46\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f11\">4</td><td class=\"ctr2\" id=\"g11\">4</td><td class=\"ctr1\" id=\"h16\">7</td><td class=\"ctr2\" id=\"i16\">7</td><td class=\"ctr1\" id=\"j12\">1</td><td class=\"ctr2\" id=\"k12\">1</td></tr><tr><td id=\"a27\"><a href=\"MatrixManipulations.java.html#L307\" class=\"el_method\">setRow(Vector, int)</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"45\" alt=\"45\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f12\">4</td><td class=\"ctr2\" id=\"g12\">4</td><td class=\"ctr1\" id=\"h10\">8</td><td class=\"ctr2\" id=\"i10\">8</td><td class=\"ctr1\" id=\"j13\">1</td><td class=\"ctr2\" id=\"k13\">1</td></tr><tr><td id=\"a24\"><a href=\"MatrixManipulations.java.html#L232\" class=\"el_method\">setCol(Vector, int)</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"44\" alt=\"44\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e14\">0%</td><td class=\"ctr1\" id=\"f13\">4</td><td class=\"ctr2\" id=\"g13\">4</td><td class=\"ctr1\" id=\"h11\">8</td><td class=\"ctr2\" id=\"i11\">8</td><td class=\"ctr1\" id=\"j14\">1</td><td class=\"ctr2\" id=\"k14\">1</td></tr><tr><td id=\"a37\"><a href=\"MatrixManipulations.java.html#L538\" class=\"el_method\">tril(int)</a></td><td class=\"bar\" id=\"b15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"44\" alt=\"44\"/></td><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e15\">0%</td><td class=\"ctr1\" id=\"f14\">4</td><td class=\"ctr2\" id=\"g14\">4</td><td class=\"ctr1\" id=\"h18\">6</td><td class=\"ctr2\" id=\"i18\">6</td><td class=\"ctr1\" id=\"j15\">1</td><td class=\"ctr2\" id=\"k15\">1</td></tr><tr><td id=\"a35\"><a href=\"MatrixManipulations.java.html#L841\" class=\"el_method\">toVector()</a></td><td class=\"bar\" id=\"b16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"44\" alt=\"44\"/></td><td class=\"ctr2\" id=\"c16\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e16\">0%</td><td class=\"ctr1\" id=\"f6\">5</td><td class=\"ctr2\" id=\"g6\">5</td><td class=\"ctr1\" id=\"h4\">11</td><td class=\"ctr2\" id=\"i4\">11</td><td class=\"ctr1\" id=\"j16\">1</td><td class=\"ctr2\" id=\"k16\">1</td></tr><tr><td id=\"a32\"><a href=\"MatrixManipulations.java.html#L766\" class=\"el_method\">swapCols(int, int)</a></td><td class=\"bar\" id=\"b17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"19\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"c17\">0%</td><td class=\"bar\" id=\"d23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e17\">0%</td><td class=\"ctr1\" id=\"f23\">2</td><td class=\"ctr2\" id=\"g23\">2</td><td class=\"ctr1\" id=\"h12\">8</td><td class=\"ctr2\" id=\"i12\">8</td><td class=\"ctr1\" id=\"j17\">1</td><td class=\"ctr2\" id=\"k17\">1</td></tr><tr><td id=\"a22\"><a href=\"MatrixManipulations.java.html#L259\" class=\"el_method\">setCol(CNumber[], int)</a></td><td class=\"bar\" id=\"b18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c18\">0%</td><td class=\"bar\" id=\"d17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e18\">0%</td><td class=\"ctr1\" id=\"f17\">3</td><td class=\"ctr2\" id=\"g17\">3</td><td class=\"ctr1\" id=\"h19\">6</td><td class=\"ctr2\" id=\"i19\">6</td><td class=\"ctr1\" id=\"j18\">1</td><td class=\"ctr2\" id=\"k18\">1</td></tr><tr><td id=\"a23\"><a href=\"MatrixManipulations.java.html#L282\" class=\"el_method\">setCol(double[], int)</a></td><td class=\"bar\" id=\"b19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c19\">0%</td><td class=\"bar\" id=\"d18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e19\">0%</td><td class=\"ctr1\" id=\"f18\">3</td><td class=\"ctr2\" id=\"g18\">3</td><td class=\"ctr1\" id=\"h20\">6</td><td class=\"ctr2\" id=\"i20\">6</td><td class=\"ctr1\" id=\"j19\">1</td><td class=\"ctr2\" id=\"k19\">1</td></tr><tr><td id=\"a25\"><a href=\"MatrixManipulations.java.html#L334\" class=\"el_method\">setRow(CNumber[], int)</a></td><td class=\"bar\" id=\"b20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c20\">0%</td><td class=\"bar\" id=\"d19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e20\">0%</td><td class=\"ctr1\" id=\"f19\">3</td><td class=\"ctr2\" id=\"g19\">3</td><td class=\"ctr1\" id=\"h21\">6</td><td class=\"ctr2\" id=\"i21\">6</td><td class=\"ctr1\" id=\"j20\">1</td><td class=\"ctr2\" id=\"k20\">1</td></tr><tr><td id=\"a26\"><a href=\"MatrixManipulations.java.html#L358\" class=\"el_method\">setRow(double[], int)</a></td><td class=\"bar\" id=\"b21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c21\">0%</td><td class=\"bar\" id=\"d20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e21\">0%</td><td class=\"ctr1\" id=\"f20\">3</td><td class=\"ctr2\" id=\"g20\">3</td><td class=\"ctr1\" id=\"h22\">6</td><td class=\"ctr2\" id=\"i22\">6</td><td class=\"ctr1\" id=\"j21\">1</td><td class=\"ctr2\" id=\"k21\">1</td></tr><tr><td id=\"a18\"><a href=\"MatrixManipulations.java.html#L875\" class=\"el_method\">round(int)</a></td><td class=\"bar\" id=\"b22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c22\">0%</td><td class=\"bar\" id=\"d21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e22\">0%</td><td class=\"ctr1\" id=\"f21\">3</td><td class=\"ctr2\" id=\"g21\">3</td><td class=\"ctr1\" id=\"h23\">5</td><td class=\"ctr2\" id=\"i23\">5</td><td class=\"ctr1\" id=\"j22\">1</td><td class=\"ctr2\" id=\"k22\">1</td></tr><tr><td id=\"a30\"><a href=\"MatrixManipulations.java.html#L156\" class=\"el_method\">setValues(CNumber[][])</a></td><td class=\"bar\" id=\"b23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"36\" alt=\"36\"/></td><td class=\"ctr2\" id=\"c23\">0%</td><td class=\"bar\" id=\"d22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e23\">0%</td><td class=\"ctr1\" id=\"f22\">3</td><td class=\"ctr2\" id=\"g22\">3</td><td class=\"ctr1\" id=\"h24\">5</td><td class=\"ctr2\" id=\"i24\">5</td><td class=\"ctr1\" id=\"j23\">1</td><td class=\"ctr2\" id=\"k23\">1</td></tr><tr><td id=\"a10\"><a href=\"MatrixManipulations.java.html#L788\" class=\"el_method\">multRow(int, CNumber)</a></td><td class=\"bar\" id=\"b24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"35\" alt=\"35\"/></td><td class=\"ctr2\" id=\"c24\">0%</td><td class=\"bar\" id=\"d24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e24\">0%</td><td class=\"ctr1\" id=\"f24\">2</td><td class=\"ctr2\" id=\"g24\">2</td><td class=\"ctr1\" id=\"h25\">5</td><td class=\"ctr2\" id=\"i25\">5</td><td class=\"ctr1\" id=\"j24\">1</td><td class=\"ctr2\" id=\"k24\">1</td></tr><tr><td id=\"a9\"><a href=\"MatrixManipulations.java.html#L908\" class=\"el_method\">main(String[])</a></td><td class=\"bar\" id=\"b25\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"35\" alt=\"35\"/></td><td class=\"ctr2\" id=\"c25\">0%</td><td class=\"bar\" id=\"d27\"/><td class=\"ctr2\" id=\"e27\">n/a</td><td class=\"ctr1\" id=\"f27\">1</td><td class=\"ctr2\" id=\"g27\">1</td><td class=\"ctr1\" id=\"h27\">4</td><td class=\"ctr2\" id=\"i27\">4</td><td class=\"ctr1\" id=\"j25\">1</td><td class=\"ctr2\" id=\"k25\">1</td></tr><tr><td id=\"a1\"><a href=\"MatrixManipulations.java.html#L626\" class=\"el_method\">diagAsVector()</a></td><td class=\"bar\" id=\"b26\"><img src=\"../jacoco-resources/redbar.gif\" width=\"15\" height=\"10\" title=\"34\" alt=\"34\"/></td><td class=\"ctr2\" id=\"c26\">0%</td><td class=\"bar\" id=\"d25\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e25\">0%</td><td class=\"ctr1\" id=\"f25\">2</td><td class=\"ctr2\" id=\"g25\">2</td><td class=\"ctr1\" id=\"h26\">5</td><td class=\"ctr2\" id=\"i26\">5</td><td class=\"ctr1\" id=\"j26\">1</td><td class=\"ctr2\" id=\"k26\">1</td></tr><tr><td id=\"a33\"><a href=\"MatrixManipulations.java.html#L745\" class=\"el_method\">swapRows(int, int)</a></td><td class=\"bar\" id=\"b27\"><img src=\"../jacoco-resources/redbar.gif\" width=\"13\" height=\"10\" title=\"28\" alt=\"28\"/></td><td class=\"ctr2\" id=\"c27\">0%</td><td class=\"bar\" id=\"d28\"/><td class=\"ctr2\" id=\"e28\">n/a</td><td class=\"ctr1\" id=\"f28\">1</td><td class=\"ctr2\" id=\"g28\">1</td><td class=\"ctr1\" id=\"h17\">7</td><td class=\"ctr2\" id=\"i17\">7</td><td class=\"ctr1\" id=\"j27\">1</td><td class=\"ctr2\" id=\"k27\">1</td></tr><tr><td id=\"a34\"><a href=\"MatrixManipulations.java.html#L610\" class=\"el_method\">toDiag(CNumber[])</a></td><td class=\"bar\" id=\"b28\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"25\" alt=\"25\"/></td><td class=\"ctr2\" id=\"c28\">0%</td><td class=\"bar\" id=\"d26\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e26\">0%</td><td class=\"ctr1\" id=\"f26\">2</td><td class=\"ctr2\" id=\"g26\">2</td><td class=\"ctr1\" id=\"h28\">4</td><td class=\"ctr2\" id=\"i28\">4</td><td class=\"ctr1\" id=\"j28\">1</td><td class=\"ctr2\" id=\"k28\">1</td></tr><tr><td id=\"a17\"><a href=\"MatrixManipulations.java.html#L18\" class=\"el_method\">reshape(String)</a></td><td class=\"bar\" id=\"b29\"><img src=\"../jacoco-resources/redbar.gif\" width=\"7\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"c29\">0%</td><td class=\"bar\" id=\"d29\"/><td class=\"ctr2\" id=\"e29\">n/a</td><td class=\"ctr1\" id=\"f29\">1</td><td class=\"ctr2\" id=\"g29\">1</td><td class=\"ctr1\" id=\"h29\">4</td><td class=\"ctr2\" id=\"i29\">4</td><td class=\"ctr1\" id=\"j29\">1</td><td class=\"ctr2\" id=\"k29\">1</td></tr><tr><td id=\"a21\"><a href=\"MatrixManipulations.java.html#L213\" class=\"el_method\">set(double, int, int)</a></td><td class=\"bar\" id=\"b30\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"c30\">0%</td><td class=\"bar\" id=\"d30\"/><td class=\"ctr2\" id=\"e30\">n/a</td><td class=\"ctr1\" id=\"f30\">1</td><td class=\"ctr2\" id=\"g30\">1</td><td class=\"ctr1\" id=\"h30\">3</td><td class=\"ctr2\" id=\"i30\">3</td><td class=\"ctr1\" id=\"j30\">1</td><td class=\"ctr2\" id=\"k30\">1</td></tr><tr><td id=\"a14\"><a href=\"MatrixManipulations.java.html#L437\" class=\"el_method\">removeRow(int)</a></td><td class=\"bar\" id=\"b31\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"c31\">0%</td><td class=\"bar\" id=\"d31\"/><td class=\"ctr2\" id=\"e31\">n/a</td><td class=\"ctr1\" id=\"f31\">1</td><td class=\"ctr2\" id=\"g31\">1</td><td class=\"ctr1\" id=\"h32\">2</td><td class=\"ctr2\" id=\"i32\">2</td><td class=\"ctr1\" id=\"j31\">1</td><td class=\"ctr2\" id=\"k31\">1</td></tr><tr><td id=\"a12\"><a href=\"MatrixManipulations.java.html#L480\" class=\"el_method\">removeCol(int)</a></td><td class=\"bar\" id=\"b32\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"c32\">0%</td><td class=\"bar\" id=\"d32\"/><td class=\"ctr2\" id=\"e32\">n/a</td><td class=\"ctr1\" id=\"f32\">1</td><td class=\"ctr2\" id=\"g32\">1</td><td class=\"ctr1\" id=\"h33\">2</td><td class=\"ctr2\" id=\"i33\">2</td><td class=\"ctr1\" id=\"j32\">1</td><td class=\"ctr2\" id=\"k32\">1</td></tr><tr><td id=\"a20\"><a href=\"MatrixManipulations.java.html#L198\" class=\"el_method\">set(CNumber, int, int)</a></td><td class=\"bar\" id=\"b33\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"11\" alt=\"11\"/></td><td class=\"ctr2\" id=\"c33\">0%</td><td class=\"bar\" id=\"d33\"/><td class=\"ctr2\" id=\"e33\">n/a</td><td class=\"ctr1\" id=\"f33\">1</td><td class=\"ctr2\" id=\"g33\">1</td><td class=\"ctr1\" id=\"h31\">3</td><td class=\"ctr2\" id=\"i31\">3</td><td class=\"ctr1\" id=\"j33\">1</td><td class=\"ctr2\" id=\"k33\">1</td></tr><tr><td id=\"a11\"><a href=\"MatrixManipulations.java.html#L806\" class=\"el_method\">multRow(int, double)</a></td><td class=\"bar\" id=\"b34\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"c34\">0%</td><td class=\"bar\" id=\"d34\"/><td class=\"ctr2\" id=\"e34\">n/a</td><td class=\"ctr1\" id=\"f34\">1</td><td class=\"ctr2\" id=\"g34\">1</td><td class=\"ctr1\" id=\"h34\">1</td><td class=\"ctr2\" id=\"i34\">1</td><td class=\"ctr1\" id=\"j34\">1</td><td class=\"ctr2\" id=\"k34\">1</td></tr><tr><td id=\"a3\"><a href=\"MatrixManipulations.java.html#L828\" class=\"el_method\">divRow(int, double)</a></td><td class=\"bar\" id=\"b35\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"c35\">0%</td><td class=\"bar\" id=\"d35\"/><td class=\"ctr2\" id=\"e35\">n/a</td><td class=\"ctr1\" id=\"f35\">1</td><td class=\"ctr2\" id=\"g35\">1</td><td class=\"ctr1\" id=\"h35\">1</td><td class=\"ctr2\" id=\"i35\">1</td><td class=\"ctr1\" id=\"j35\">1</td><td class=\"ctr2\" id=\"k35\">1</td></tr><tr><td id=\"a0\"><a href=\"MatrixManipulations.java.html#L600\" class=\"el_method\">diag()</a></td><td class=\"bar\" id=\"b36\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c36\">0%</td><td class=\"bar\" id=\"d36\"/><td class=\"ctr2\" id=\"e36\">n/a</td><td class=\"ctr1\" id=\"f36\">1</td><td class=\"ctr2\" id=\"g36\">1</td><td class=\"ctr1\" id=\"h36\">1</td><td class=\"ctr2\" id=\"i36\">1</td><td class=\"ctr1\" id=\"j36\">1</td><td class=\"ctr2\" id=\"k36\">1</td></tr><tr><td id=\"a2\"><a href=\"MatrixManipulations.java.html#L817\" class=\"el_method\">divRow(int, CNumber)</a></td><td class=\"bar\" id=\"b37\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"c37\">0%</td><td class=\"bar\" id=\"d37\"/><td class=\"ctr2\" id=\"e37\">n/a</td><td class=\"ctr1\" id=\"f37\">1</td><td class=\"ctr2\" id=\"g37\">1</td><td class=\"ctr1\" id=\"h37\">1</td><td class=\"ctr2\" id=\"i37\">1</td><td class=\"ctr1\" id=\"j37\">1</td><td class=\"ctr2\" id=\"k37\">1</td></tr><tr><td id=\"a36\"><a href=\"MatrixManipulations.java.html#L522\" class=\"el_method\">tril()</a></td><td class=\"bar\" id=\"b38\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c38\">0%</td><td class=\"bar\" id=\"d38\"/><td class=\"ctr2\" id=\"e38\">n/a</td><td class=\"ctr1\" id=\"f38\">1</td><td class=\"ctr2\" id=\"g38\">1</td><td class=\"ctr1\" id=\"h38\">1</td><td class=\"ctr2\" id=\"i38\">1</td><td class=\"ctr1\" id=\"j38\">1</td><td class=\"ctr2\" id=\"k38\">1</td></tr><tr><td id=\"a38\"><a href=\"MatrixManipulations.java.html#L560\" class=\"el_method\">triu()</a></td><td class=\"bar\" id=\"b39\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c39\">0%</td><td class=\"bar\" id=\"d39\"/><td class=\"ctr2\" id=\"e39\">n/a</td><td class=\"ctr1\" id=\"f39\">1</td><td class=\"ctr2\" id=\"g39\">1</td><td class=\"ctr1\" id=\"h39\">1</td><td class=\"ctr2\" id=\"i39\">1</td><td class=\"ctr1\" id=\"j39\">1</td><td class=\"ctr2\" id=\"k39\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixManipulations.html b/target/site/jacoco/linalg/MatrixManipulations.html
--- a/target/site/jacoco/linalg/MatrixManipulations.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/MatrixManipulations.html	(date 1648105701870)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixManipulations</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixManipulations</span></div><h1>MatrixManipulations</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">1,856 of 1,856</td><td class="ctr2">0%</td><td class="bar">146 of 146</td><td class="ctr2">0%</td><td class="ctr1">113</td><td class="ctr2">113</td><td class="ctr1">268</td><td class="ctr2">268</td><td class="ctr1">40</td><td class="ctr2">40</td></tr></tfoot><tbody><tr><td id="a7"><a href="MatrixManipulations.java.html#L645" class="el_method">hessu()</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="258" alt="258"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f7">4</td><td class="ctr2" id="g7">4</td><td class="ctr1" id="h1">23</td><td class="ctr2" id="i1">23</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a8"><a href="MatrixManipulations.java.html#L694" class="el_method">hessuV()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="114" height="10" title="246" alt="246"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f15">3</td><td class="ctr2" id="g15">3</td><td class="ctr1" id="h0">25</td><td class="ctr2" id="i0">25</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a4"><a href="MatrixManipulations.java.html#L121" class="el_method">extend(int)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="70" alt="70"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="10" alt="10"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f0">6</td><td class="ctr2" id="g0">6</td><td class="ctr1" id="h3">12</td><td class="ctr2" id="i3">12</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a31"><a href="MatrixManipulations.java.html#L174" class="el_method">setValues(double[][])</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="31" height="10" title="67" alt="67"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f1">5</td><td class="ctr2" id="g1">5</td><td class="ctr1" id="h13">7</td><td class="ctr2" id="i13">7</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a29"><a href="MatrixManipulations.java.html#L382" class="el_method">setSliceCopy(int, int, Matrix)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="31" height="10" title="67" alt="67"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f2">5</td><td class="ctr2" id="g2">5</td><td class="ctr1" id="h14">7</td><td class="ctr2" id="i14">7</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a28"><a href="MatrixManipulations.java.html#L412" class="el_method">setSlice(int, int, Matrix)</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="65" alt="65"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f3">5</td><td class="ctr2" id="g3">5</td><td class="ctr1" id="h15">7</td><td class="ctr2" id="i15">7</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a16"><a href="MatrixManipulations.java.html#L27" class="el_method">reshape(int, int)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="29" height="10" title="64" alt="64"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f8">4</td><td class="ctr2" id="g8">4</td><td class="ctr1" id="h5">10</td><td class="ctr2" id="i5">10</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.java.html#L82" class="el_method">flatten(int)</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="29" height="10" title="64" alt="64"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f4">5</td><td class="ctr2" id="g4">5</td><td class="ctr1" id="h2">14</td><td class="ctr2" id="i2">14</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a39"><a href="MatrixManipulations.java.html#L576" class="el_method">triu(int)</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="57" alt="57"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f5">5</td><td class="ctr2" id="g5">5</td><td class="ctr1" id="h6">9</td><td class="ctr2" id="i6">9</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a15"><a href="MatrixManipulations.java.html#L452" class="el_method">removeRows(int[])</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="51" alt="51"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f9">4</td><td class="ctr2" id="g9">4</td><td class="ctr1" id="h7">9</td><td class="ctr2" id="i7">9</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a13"><a href="MatrixManipulations.java.html#L495" class="el_method">removeCols(int[])</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="51" alt="51"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f10">4</td><td class="ctr2" id="g10">4</td><td class="ctr1" id="h8">9</td><td class="ctr2" id="i8">9</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a5"><a href="MatrixManipulations.java.html#L56" class="el_method">flatten()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="48" alt="48"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f16">3</td><td class="ctr2" id="g16">3</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a19"><a href="MatrixManipulations.java.html#L893" class="el_method">roundToZero(int)</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="46" alt="46"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f11">4</td><td class="ctr2" id="g11">4</td><td class="ctr1" id="h16">7</td><td class="ctr2" id="i16">7</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a27"><a href="MatrixManipulations.java.html#L307" class="el_method">setRow(Vector, int)</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="45" alt="45"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f12">4</td><td class="ctr2" id="g12">4</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a24"><a href="MatrixManipulations.java.html#L232" class="el_method">setCol(Vector, int)</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="44" alt="44"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f13">4</td><td class="ctr2" id="g13">4</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a37"><a href="MatrixManipulations.java.html#L538" class="el_method">tril(int)</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="44" alt="44"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f14">4</td><td class="ctr2" id="g14">4</td><td class="ctr1" id="h18">6</td><td class="ctr2" id="i18">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a35"><a href="MatrixManipulations.java.html#L841" class="el_method">toVector()</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="44" alt="44"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g6">5</td><td class="ctr1" id="h4">11</td><td class="ctr2" id="i4">11</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a32"><a href="MatrixManipulations.java.html#L766" class="el_method">swapCols(int, int)</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="19" height="10" title="42" alt="42"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f23">2</td><td class="ctr2" id="g23">2</td><td class="ctr1" id="h12">8</td><td class="ctr2" id="i12">8</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a22"><a href="MatrixManipulations.java.html#L259" class="el_method">setCol(CNumber[], int)</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f17">3</td><td class="ctr2" id="g17">3</td><td class="ctr1" id="h19">6</td><td class="ctr2" id="i19">6</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a23"><a href="MatrixManipulations.java.html#L282" class="el_method">setCol(double[], int)</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f18">3</td><td class="ctr2" id="g18">3</td><td class="ctr1" id="h20">6</td><td class="ctr2" id="i20">6</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a25"><a href="MatrixManipulations.java.html#L334" class="el_method">setRow(CNumber[], int)</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f19">3</td><td class="ctr2" id="g19">3</td><td class="ctr1" id="h21">6</td><td class="ctr2" id="i21">6</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a26"><a href="MatrixManipulations.java.html#L358" class="el_method">setRow(double[], int)</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f20">3</td><td class="ctr2" id="g20">3</td><td class="ctr1" id="h22">6</td><td class="ctr2" id="i22">6</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a18"><a href="MatrixManipulations.java.html#L875" class="el_method">round(int)</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a30"><a href="MatrixManipulations.java.html#L156" class="el_method">setValues(CNumber[][])</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="36" alt="36"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a10"><a href="MatrixManipulations.java.html#L788" class="el_method">multRow(int, CNumber)</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="35" alt="35"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f24">2</td><td class="ctr2" id="g24">2</td><td class="ctr1" id="h25">5</td><td class="ctr2" id="i25">5</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a9"><a href="MatrixManipulations.java.html#L908" class="el_method">main(String[])</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="35" alt="35"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d27"/><td class="ctr2" id="e27">n/a</td><td class="ctr1" id="f27">1</td><td class="ctr2" id="g27">1</td><td class="ctr1" id="h27">4</td><td class="ctr2" id="i27">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a1"><a href="MatrixManipulations.java.html#L626" class="el_method">diagAsVector()</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="15" height="10" title="34" alt="34"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d25"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e25">0%</td><td class="ctr1" id="f25">2</td><td class="ctr2" id="g25">2</td><td class="ctr1" id="h26">5</td><td class="ctr2" id="i26">5</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a33"><a href="MatrixManipulations.java.html#L745" class="el_method">swapRows(int, int)</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="13" height="10" title="28" alt="28"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d28"/><td class="ctr2" id="e28">n/a</td><td class="ctr1" id="f28">1</td><td class="ctr2" id="g28">1</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a34"><a href="MatrixManipulations.java.html#L610" class="el_method">toDiag(CNumber[])</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="25" alt="25"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d26"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e26">0%</td><td class="ctr1" id="f26">2</td><td class="ctr2" id="g26">2</td><td class="ctr1" id="h28">4</td><td class="ctr2" id="i28">4</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a17"><a href="MatrixManipulations.java.html#L18" class="el_method">reshape(String)</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="7" height="10" title="16" alt="16"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d29"/><td class="ctr2" id="e29">n/a</td><td class="ctr1" id="f29">1</td><td class="ctr2" id="g29">1</td><td class="ctr1" id="h29">4</td><td class="ctr2" id="i29">4</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a21"><a href="MatrixManipulations.java.html#L213" class="el_method">set(double, int, int)</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="14" alt="14"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d30"/><td class="ctr2" id="e30">n/a</td><td class="ctr1" id="f30">1</td><td class="ctr2" id="g30">1</td><td class="ctr1" id="h30">3</td><td class="ctr2" id="i30">3</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a14"><a href="MatrixManipulations.java.html#L437" class="el_method">removeRow(int)</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="12" alt="12"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d31"/><td class="ctr2" id="e31">n/a</td><td class="ctr1" id="f31">1</td><td class="ctr2" id="g31">1</td><td class="ctr1" id="h32">2</td><td class="ctr2" id="i32">2</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a12"><a href="MatrixManipulations.java.html#L480" class="el_method">removeCol(int)</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="12" alt="12"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d32"/><td class="ctr2" id="e32">n/a</td><td class="ctr1" id="f32">1</td><td class="ctr2" id="g32">1</td><td class="ctr1" id="h33">2</td><td class="ctr2" id="i33">2</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a20"><a href="MatrixManipulations.java.html#L198" class="el_method">set(CNumber, int, int)</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="11" alt="11"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d33"/><td class="ctr2" id="e33">n/a</td><td class="ctr1" id="f33">1</td><td class="ctr2" id="g33">1</td><td class="ctr1" id="h31">3</td><td class="ctr2" id="i31">3</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a11"><a href="MatrixManipulations.java.html#L806" class="el_method">multRow(int, double)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="8" alt="8"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h34">1</td><td class="ctr2" id="i34">1</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a3"><a href="MatrixManipulations.java.html#L828" class="el_method">divRow(int, double)</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="7" alt="7"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">1</td><td class="ctr2" id="i35">1</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a0"><a href="MatrixManipulations.java.html#L600" class="el_method">diag()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="6" alt="6"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">1</td><td class="ctr2" id="i36">1</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a2"><a href="MatrixManipulations.java.html#L817" class="el_method">divRow(int, CNumber)</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="6" alt="6"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">1</td><td class="ctr2" id="i37">1</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a36"><a href="MatrixManipulations.java.html#L522" class="el_method">tril()</a></td><td class="bar" id="b38"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i38">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a38"><a href="MatrixManipulations.java.html#L560" class="el_method">triu()</a></td><td class="bar" id="b39"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i39">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixManipulations</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixManipulations</span></div><h1>MatrixManipulations</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">1,884 of 1,884</td><td class="ctr2">0%</td><td class="bar">148 of 148</td><td class="ctr2">0%</td><td class="ctr1">115</td><td class="ctr2">115</td><td class="ctr1">272</td><td class="ctr2">272</td><td class="ctr1">41</td><td class="ctr2">41</td></tr></tfoot><tbody><tr><td id="a7"><a href="MatrixManipulations.java.html#L659" class="el_method">hessu()</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="258" alt="258"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f7">4</td><td class="ctr2" id="g7">4</td><td class="ctr1" id="h1">23</td><td class="ctr2" id="i1">23</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a8"><a href="MatrixManipulations.java.html#L708" class="el_method">hessuV()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="114" height="10" title="246" alt="246"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f15">3</td><td class="ctr2" id="g15">3</td><td class="ctr1" id="h0">25</td><td class="ctr2" id="i0">25</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a4"><a href="MatrixManipulations.java.html#L121" class="el_method">extend(int)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="70" alt="70"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="10" alt="10"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f0">6</td><td class="ctr2" id="g0">6</td><td class="ctr1" id="h3">12</td><td class="ctr2" id="i3">12</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a31"><a href="MatrixManipulations.java.html#L174" class="el_method">setValues(double[][])</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="31" height="10" title="67" alt="67"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f1">5</td><td class="ctr2" id="g1">5</td><td class="ctr1" id="h13">7</td><td class="ctr2" id="i13">7</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a29"><a href="MatrixManipulations.java.html#L382" class="el_method">setSliceCopy(int, int, Matrix)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="31" height="10" title="67" alt="67"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f2">5</td><td class="ctr2" id="g2">5</td><td class="ctr1" id="h14">7</td><td class="ctr2" id="i14">7</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a28"><a href="MatrixManipulations.java.html#L412" class="el_method">setSlice(int, int, Matrix)</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="65" alt="65"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f3">5</td><td class="ctr2" id="g3">5</td><td class="ctr1" id="h15">7</td><td class="ctr2" id="i15">7</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a16"><a href="MatrixManipulations.java.html#L27" class="el_method">reshape(int, int)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="29" height="10" title="64" alt="64"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f8">4</td><td class="ctr2" id="g8">4</td><td class="ctr1" id="h5">10</td><td class="ctr2" id="i5">10</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.java.html#L82" class="el_method">flatten(int)</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="29" height="10" title="64" alt="64"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f4">5</td><td class="ctr2" id="g4">5</td><td class="ctr1" id="h2">14</td><td class="ctr2" id="i2">14</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a40"><a href="MatrixManipulations.java.html#L576" class="el_method">triu(int)</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="57" alt="57"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f5">5</td><td class="ctr2" id="g5">5</td><td class="ctr1" id="h6">9</td><td class="ctr2" id="i6">9</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a15"><a href="MatrixManipulations.java.html#L452" class="el_method">removeRows(int[])</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="51" alt="51"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f9">4</td><td class="ctr2" id="g9">4</td><td class="ctr1" id="h7">9</td><td class="ctr2" id="i7">9</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a13"><a href="MatrixManipulations.java.html#L495" class="el_method">removeCols(int[])</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="51" alt="51"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f10">4</td><td class="ctr2" id="g10">4</td><td class="ctr1" id="h8">9</td><td class="ctr2" id="i8">9</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a5"><a href="MatrixManipulations.java.html#L56" class="el_method">flatten()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="48" alt="48"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f16">3</td><td class="ctr2" id="g16">3</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a19"><a href="MatrixManipulations.java.html#L907" class="el_method">roundToZero(int)</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="46" alt="46"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f11">4</td><td class="ctr2" id="g11">4</td><td class="ctr1" id="h16">7</td><td class="ctr2" id="i16">7</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a27"><a href="MatrixManipulations.java.html#L307" class="el_method">setRow(Vector, int)</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="45" alt="45"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f12">4</td><td class="ctr2" id="g12">4</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a24"><a href="MatrixManipulations.java.html#L232" class="el_method">setCol(Vector, int)</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="44" alt="44"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f13">4</td><td class="ctr2" id="g13">4</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a38"><a href="MatrixManipulations.java.html#L538" class="el_method">tril(int)</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="44" alt="44"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="6" alt="6"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f14">4</td><td class="ctr2" id="g14">4</td><td class="ctr1" id="h18">6</td><td class="ctr2" id="i18">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a36"><a href="MatrixManipulations.java.html#L855" class="el_method">toVector()</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="44" alt="44"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="8" alt="8"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g6">5</td><td class="ctr1" id="h4">11</td><td class="ctr2" id="i4">11</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a32"><a href="MatrixManipulations.java.html#L780" class="el_method">swapCols(int, int)</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="19" height="10" title="42" alt="42"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f23">2</td><td class="ctr2" id="g23">2</td><td class="ctr1" id="h12">8</td><td class="ctr2" id="i12">8</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a22"><a href="MatrixManipulations.java.html#L259" class="el_method">setCol(CNumber[], int)</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f17">3</td><td class="ctr2" id="g17">3</td><td class="ctr1" id="h19">6</td><td class="ctr2" id="i19">6</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a23"><a href="MatrixManipulations.java.html#L282" class="el_method">setCol(double[], int)</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f18">3</td><td class="ctr2" id="g18">3</td><td class="ctr1" id="h20">6</td><td class="ctr2" id="i20">6</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a25"><a href="MatrixManipulations.java.html#L334" class="el_method">setRow(CNumber[], int)</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f19">3</td><td class="ctr2" id="g19">3</td><td class="ctr1" id="h21">6</td><td class="ctr2" id="i21">6</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a26"><a href="MatrixManipulations.java.html#L358" class="el_method">setRow(double[], int)</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f20">3</td><td class="ctr2" id="g20">3</td><td class="ctr1" id="h22">6</td><td class="ctr2" id="i22">6</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a18"><a href="MatrixManipulations.java.html#L889" class="el_method">round(int)</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a30"><a href="MatrixManipulations.java.html#L156" class="el_method">setValues(CNumber[][])</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="36" alt="36"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="4" alt="4"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a10"><a href="MatrixManipulations.java.html#L802" class="el_method">multRow(int, CNumber)</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="35" alt="35"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f24">2</td><td class="ctr2" id="g24">2</td><td class="ctr1" id="h25">5</td><td class="ctr2" id="i25">5</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a9"><a href="MatrixManipulations.java.html#L922" class="el_method">main(String[])</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="35" alt="35"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d28"/><td class="ctr2" id="e28">n/a</td><td class="ctr1" id="f28">1</td><td class="ctr2" id="g28">1</td><td class="ctr1" id="h27">4</td><td class="ctr2" id="i27">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a1"><a href="MatrixManipulations.java.html#L640" class="el_method">diagAsVector()</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="15" height="10" title="34" alt="34"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d25"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e25">0%</td><td class="ctr1" id="f25">2</td><td class="ctr2" id="g25">2</td><td class="ctr1" id="h26">5</td><td class="ctr2" id="i26">5</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a35"><a href="MatrixManipulations.java.html#L625" class="el_method">toDiag(double[])</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="13" height="10" title="28" alt="28"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d26"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e26">0%</td><td class="ctr1" id="f26">2</td><td class="ctr2" id="g26">2</td><td class="ctr1" id="h28">4</td><td class="ctr2" id="i28">4</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a33"><a href="MatrixManipulations.java.html#L759" class="el_method">swapRows(int, int)</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="13" height="10" title="28" alt="28"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d29"/><td class="ctr2" id="e29">n/a</td><td class="ctr1" id="f29">1</td><td class="ctr2" id="g29">1</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a34"><a href="MatrixManipulations.java.html#L610" class="el_method">toDiag(CNumber[])</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="25" alt="25"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d27"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="2" alt="2"/></td><td class="ctr2" id="e27">0%</td><td class="ctr1" id="f27">2</td><td class="ctr2" id="g27">2</td><td class="ctr1" id="h29">4</td><td class="ctr2" id="i29">4</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a17"><a href="MatrixManipulations.java.html#L18" class="el_method">reshape(String)</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="7" height="10" title="16" alt="16"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d30"/><td class="ctr2" id="e30">n/a</td><td class="ctr1" id="f30">1</td><td class="ctr2" id="g30">1</td><td class="ctr1" id="h30">4</td><td class="ctr2" id="i30">4</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a21"><a href="MatrixManipulations.java.html#L213" class="el_method">set(double, int, int)</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="14" alt="14"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d31"/><td class="ctr2" id="e31">n/a</td><td class="ctr1" id="f31">1</td><td class="ctr2" id="g31">1</td><td class="ctr1" id="h31">3</td><td class="ctr2" id="i31">3</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a14"><a href="MatrixManipulations.java.html#L437" class="el_method">removeRow(int)</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="12" alt="12"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d32"/><td class="ctr2" id="e32">n/a</td><td class="ctr1" id="f32">1</td><td class="ctr2" id="g32">1</td><td class="ctr1" id="h33">2</td><td class="ctr2" id="i33">2</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a12"><a href="MatrixManipulations.java.html#L480" class="el_method">removeCol(int)</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="12" alt="12"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d33"/><td class="ctr2" id="e33">n/a</td><td class="ctr1" id="f33">1</td><td class="ctr2" id="g33">1</td><td class="ctr1" id="h34">2</td><td class="ctr2" id="i34">2</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a20"><a href="MatrixManipulations.java.html#L198" class="el_method">set(CNumber, int, int)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="11" alt="11"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h32">3</td><td class="ctr2" id="i32">3</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a11"><a href="MatrixManipulations.java.html#L820" class="el_method">multRow(int, double)</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="8" alt="8"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">1</td><td class="ctr2" id="i35">1</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a3"><a href="MatrixManipulations.java.html#L842" class="el_method">divRow(int, double)</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="7" alt="7"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">1</td><td class="ctr2" id="i36">1</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a0"><a href="MatrixManipulations.java.html#L600" class="el_method">diag()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="6" alt="6"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">1</td><td class="ctr2" id="i37">1</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a2"><a href="MatrixManipulations.java.html#L831" class="el_method">divRow(int, CNumber)</a></td><td class="bar" id="b38"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="6" alt="6"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i38">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a37"><a href="MatrixManipulations.java.html#L522" class="el_method">tril()</a></td><td class="bar" id="b39"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i39">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr><tr><td id="a39"><a href="MatrixManipulations.java.html#L560" class="el_method">triu()</a></td><td class="bar" id="b40"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c40">0%</td><td class="bar" id="d40"/><td class="ctr2" id="e40">n/a</td><td class="ctr1" id="f40">1</td><td class="ctr2" id="g40">1</td><td class="ctr1" id="h40">1</td><td class="ctr2" id="i40">1</td><td class="ctr1" id="j40">1</td><td class="ctr2" id="k40">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/MatrixManipulations.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixManipulations.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_source\">MatrixManipulations.java</span></div><h1>MatrixManipulations.java</h1><pre class=\"source lang-java linenums\">package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\nimport linalg.util.LinAlgArrayUtils;\r\nimport linalg.util.Parser;\r\n\r\n/**\r\n * This interface provides several methods useful for matrix manipulations and is\r\n * Implemented by the Matrix class.\r\n * \r\n * @author Jacob Watters\r\n */\r\n// TODO: Many methods in this class should probably manipulate the instance object and have void return.\r\n interface MatrixManipulations {\r\n\t\r\n\t\r\n\t default Matrix reshape(String newShape) {\r\n<span class=\"nc\" id=\"L18\">\t\tint[] dimensions = Parser.parseShape(newShape);</span>\r\n<span class=\"nc\" id=\"L19\">\t\tint \tnewM = dimensions[0],</span>\r\n<span class=\"nc\" id=\"L20\">\t\t\t\tnewN = dimensions[1];</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L22\">\t\treturn this.reshape(newM, newN);</span>\r\n\t}\r\n\t\r\n\t\r\n\t default Matrix reshape(int newM, int newN) {\r\n<span class=\"nc\" id=\"L27\">\t\tMatrix A = ((Matrix) this).flatten();</span>\r\n<span class=\"nc\" id=\"L28\">\t\tMatrix reshape = new Matrix(newM, newN);</span>\r\n<span class=\"nc\" id=\"L29\">\t\tint aj=0;</span>\r\n\r\n<span class=\"nc bnc\" id=\"L31\" title=\"All 2 branches missed.\">\t\tif(newM*newN != A.m*A.n) {</span>\r\n<span class=\"nc\" id=\"L32\">\t\t\tthrow new IllegalArgumentException(&quot;Can not reshape matrix of shape &quot; + A.shape + &quot; to &quot; + newM + &quot;x&quot; + newN + &quot;.&quot;);</span>\r\n\t\t}\r\n\r\n\r\n<span class=\"nc bnc\" id=\"L36\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;reshape.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L37\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;reshape.n; j++) {</span>\r\n<span class=\"nc\" id=\"L38\">\t\t\t\treshape.entries[i][j] = new CNumber(A.entries[0][aj]);</span>\r\n<span class=\"nc\" id=\"L39\">\t\t\t\taj++;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L44\">\t\treturn reshape;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Flattens an &lt;code&gt;MxN&lt;/code&gt; matrix to a 1x(m*n) matrix.\r\n\t * Each row of the Matrix is appended to the end\r\n\t * of the first row of the Matrix in order.\r\n\t * \r\n\t * @return \r\n\t */\r\n\t default Matrix flatten() {\r\n<span class=\"nc\" id=\"L56\">\t\tMatrix A = (Matrix) this,</span>\r\n\t\t\t\tflat;\r\n<span class=\"nc\" id=\"L58\">\t\tint count = 0;</span>\r\n\r\n<span class=\"nc\" id=\"L60\">\t\tCNumber[][] flat_A = new CNumber[1][A.m*A.n];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L62\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L63\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L64\">\t\t\t\tflat_A[0][count] = A.entries[i][j];</span>\r\n<span class=\"nc\" id=\"L65\">\t\t\t\tcount++;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L69\">\t\tflat = new Matrix(flat_A);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L71\">\t\treturn flat;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Flattens an &lt;code&gt;MxN&lt;/code&gt; matrix to a 1x(m*n) or (m*n)x1 matrix depending on axis.\r\n\t *\r\n\t * @param axis - axis along which to flatten\r\n\t * @return \r\n\t */\r\n\t default Matrix flatten(int axis) {\r\n<span class=\"nc\" id=\"L82\">\t\tMatrix A = (Matrix) this,</span>\r\n\t\t\t\tflat;\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L85\" title=\"All 2 branches missed.\">\t\tif(axis == 0) {</span>\r\n<span class=\"nc\" id=\"L86\">\t\t\tflat = A.flatten();</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L88\" title=\"All 2 branches missed.\">\t\telse if(axis == 1) {\t</span>\r\n<span class=\"nc\" id=\"L89\">\t\t\tint count = 0;</span>\r\n\r\n<span class=\"nc\" id=\"L91\">\t\t\tCNumber[][] flat_A = new CNumber[A.m*A.n][1];</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L93\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L94\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L95\">\t\t\t\t\tflat_A[count][0] = A.entries[i][j];</span>\r\n<span class=\"nc\" id=\"L96\">\t\t\t\t\tcount++;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L100\">\t\t\tflat = new Matrix(flat_A);</span>\r\n<span class=\"nc\" id=\"L101\">\t\t}</span>\r\n\t\telse {\r\n<span class=\"nc\" id=\"L103\">\t\t\tthrow new IllegalArgumentException(&quot;axis must be 0 or 1 but got &quot; + axis);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L106\">\t\treturn flat;</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Extends a row or column vector to form a matrix. That is, for a row vector,\r\n\t *\r\n\t * @param n Number of times to make the extension. That is, for a row vector with m entries, a matrix of shape\r\n\t *          n-by-m will be formed. For a column vector with m entries, a matrix of shape m-by-n will be formed.\r\n\t *\r\n\t * @return The extended matrix formed from the vector.\r\n\t * @throws IllegalCallerException if the caller is not a {@link Vector}\r\n\t */\r\n\tdefault Matrix extend(int n) {\r\n\r\n<span class=\"nc bnc\" id=\"L121\" title=\"All 2 branches missed.\">\t\tif(!(this instanceof Vector)) {</span>\r\n<span class=\"nc\" id=\"L122\">\t\t\tthrow new IllegalCallerException(&quot;This matrix is not a Vector.&quot;);</span>\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L125\">\t\tVector v = (Vector) this;</span>\r\n\t\tMatrix extended;\r\n\r\n<span class=\"nc bnc\" id=\"L128\" title=\"All 2 branches missed.\">\t\tif(v.vectorType() == Vector.COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L129\">\t\t\textended = new Matrix(v.numRows(), n);</span>\r\n\r\n<span class=\"nc bnc\" id=\"L131\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;extended.numRows(); i++) {</span>\r\n<span class=\"nc bnc\" id=\"L132\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j=0; j&lt;extended.numCols(); j++) {</span>\r\n<span class=\"nc\" id=\"L133\">\t\t\t\t\textended.entries[i][j] = v.get(i, 0);</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L138\">\t\t\textended = new Matrix(n, v.numCols());</span>\r\n\r\n<span class=\"nc bnc\" id=\"L140\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;n; i++) {</span>\r\n<span class=\"nc\" id=\"L141\">\t\t\t\textended.entries[i] = v.getEntries();</span>\r\n\t\t\t}\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L145\">\t\treturn extended;</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies values from array into matrix. The given array must have the same dimensions\r\n\t * as the matrix object. This will replace any current values in the matrix.\r\n\t * \r\n\t *  @param values - Values to copy into array\r\n\t */\r\n\t default void setValues(CNumber[][] values) {\r\n<span class=\"nc\" id=\"L156\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L158\" title=\"All 4 branches missed.\">\t\tif(values.length != A.entries.length || values[0].length != A.entries[0].length) {</span>\r\n<span class=\"nc\" id=\"L159\">\t\t\tthrow new IllegalArgumentException(&quot;Expecting array with shape &quot; + A.shape + </span>\r\n\t\t\t\t\t&quot; but got array with shape &quot; + values.length + &quot;x&quot; + values[0].length + &quot;.&quot;);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L163\">\t\tA.entries = values;</span>\r\n<span class=\"nc\" id=\"L164\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Copies values from array into matrix. The given array must have the same dimensions\r\n\t * as the matrix object. A will replace any current values in the matrix.\r\n\t * \r\n\t *  @param values - Values to copy into array\r\n\t */\r\n\t default void setValues(double[][] values) {\r\n<span class=\"nc\" id=\"L174\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L176\" title=\"All 4 branches missed.\">\t\tif(values.length != A.entries.length || values[0].length != A.entries[0].length) {</span>\r\n<span class=\"nc\" id=\"L177\">\t\t\tthrow new IllegalArgumentException(&quot;Expecting array with shape &quot; + A.shape + </span>\r\n\t\t\t\t\t&quot; but got array with shape &quot; + values.length + &quot;x&quot; + values[0].length + &quot;.&quot;);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L181\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; A.entries.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L182\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt; A.entries[0].length; j++) {</span>\r\n<span class=\"nc\" id=\"L183\">\t\t\t\tA.entries[i][j] = new CNumber(values[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n<span class=\"nc\" id=\"L186\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified element in matrix to value. A will replace the current value\r\n\t * at that index.\r\n\t *\r\n\t * @param value - value to insert into matrix\r\n\t * @param row - row to insert value\r\n\t * @param col - column to insert value\r\n\t */\r\n\t default void set(CNumber value, int row, int col) {\r\n<span class=\"nc\" id=\"L198\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L200\">\t\tA.entries[row][col] = value;</span>\r\n<span class=\"nc\" id=\"L201\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified element in matrix to value. A will replace the current value\r\n\t * at that index.\r\n\t *\r\n\t * @param value - value to insert into matrix\r\n\t * @param row - row index to insert value\r\n\t * @param col - column index to insert value\r\n\t */\r\n\t default void set(double value, int row, int col) {\r\n<span class=\"nc\" id=\"L213\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L215\">\t\tA.entries[row][col] = new CNumber(value);</span>\r\n<span class=\"nc\" id=\"L216\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified column of this matrix to the values stored within the passed column vector.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see &lt;br&gt;\r\n\t * {@link #setCol(CNumber[], int) setCol(CNumber[] col, int colIndex)}&lt;br&gt;\r\n\t * {@link #setCol(double[], int) setCol(double[] col, int colIndex)}\r\n\t * \r\n\t * @throws IllegalArgumentException if the vector is not a column vector or if the vector and matrix do not\r\n\t * \thave the same number of rows.\r\n\t * @param col - Column vector containing the new entries for the specified column.\r\n\t * @param colIndex - Index of new column to set. \r\n\t */\r\n\t default void setCol(Vector col, int colIndex) {\r\n<span class=\"nc\" id=\"L232\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L234\" title=\"All 2 branches missed.\">\t\tif(col.vectorType() != Vector.COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L235\">\t\t\tthrow new IllegalArgumentException(&quot;Vector must be column vector.&quot;); // TODO: Add vectorTypeAsString();</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L237\" title=\"All 2 branches missed.\">\t\tif(col.m != A.m) {</span>\r\n<span class=\"nc\" id=\"L238\">\t\t\tthrow new IllegalArgumentException(&quot;Can not set column for matrix of shape &quot; + A.shape + &quot; with a vector of shape &quot; + col.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L241\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L242\">\t\t\tA.entries[i][colIndex] = col.get(i, 0);</span>\r\n\t\t}\r\n<span class=\"nc\" id=\"L244\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified column of this matrix to the values stored within the passed array.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * {@link #setCol(Vector, int) setCol(Vector col, int colIndex)}&lt;br&gt;\r\n\t * {@link #setCol(double[], int) setCol(double[] col, int colIndex)}\r\n\t * \r\n\t * @throws IllegalArgumentException if the array of values has a different length then the number of rows in the matrix.\r\n\t * @param col - array containing the new entries for the specified column.\r\n\t * @param colIndex - Index of new column to set. \r\n\t */\r\n\t default void setCol(CNumber[] col, int colIndex) {\r\n<span class=\"nc\" id=\"L259\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L261\" title=\"All 2 branches missed.\">\t\tif(col.length != A.m) {</span>\r\n<span class=\"nc\" id=\"L262\">\t\t\tthrow new IllegalArgumentException(&quot;Can not set column for matrix of shape &quot; + A.shape + &quot; with array of length &quot; + col.length);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L265\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L266\">\t\t\tA.entries[i][colIndex] = new CNumber(col[i]);</span>\r\n\t\t}\r\n<span class=\"nc\" id=\"L268\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified column of this matrix to the values stored within the passed array.\r\n\t * Also see&lt;br&gt;\r\n\t * {@link #setCol(Vector, int) setCol(Vector col, int colIndex)}&lt;br&gt;\r\n\t * {@link #setCol(CNumber[], int) setCol(CNumber[] col, int colIndex)}\r\n\t * \r\n\t * @throws IllegalArgumentException if the array of values has a different length then the number of rows in the matrix.\r\n\t * @param col - array containing the new entries for the specified column.\r\n\t * @param colIndex - Index of new column to set. \r\n\t */\r\n\t default void setCol(double[] col, int colIndex) {\r\n<span class=\"nc\" id=\"L282\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L284\" title=\"All 2 branches missed.\">\t\tif(col.length != A.m) {</span>\r\n<span class=\"nc\" id=\"L285\">\t\t\tthrow new IllegalArgumentException(&quot;Can not set column for matrix of shape &quot; + A.shape + &quot; with array of length &quot; + col.length);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L288\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L289\">\t\t\tA.entries[i][colIndex] = new CNumber(col[i]);</span>\r\n\t\t}\r\n<span class=\"nc\" id=\"L291\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified row of this matrix to the values stored within the passed row vector.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see &lt;br&gt;\r\n\t * {@link #setRow(CNumber[], int) setRow(CNumber[] col, int colIndex)}&lt;br&gt;\r\n\t * {@link #setRow(double[], int) setRow(double[] col, int colIndex)}\r\n\t * \r\n\t * @throws IllegalArgumentException if the vector is not a row vector or if the vector and matrix do not\r\n\t * \thave the same number of columns.\r\n\t * @param row - row vector containing the new entries for the specified column.\r\n\t * @param rowIndex - Index of new row to set. \r\n\t */\r\n\t default void setRow(Vector row, int rowIndex) {\r\n<span class=\"nc\" id=\"L307\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L309\" title=\"All 2 branches missed.\">\t\tif(row.vectorType() != Vector.ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L310\">\t\t\tthrow new IllegalArgumentException(&quot;Vector must be row vector.&quot;); // TODO: Add vectorTypeAsString();</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L312\" title=\"All 2 branches missed.\">\t\tif(row.n != A.n) {</span>\r\n<span class=\"nc\" id=\"L313\">\t\t\tthrow new IllegalArgumentException(&quot;Can not set column for matrix of shape &quot; + A.shape + &quot; with a vector of shape &quot; + row.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L316\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.n; i++) {</span>\r\n<span class=\"nc\" id=\"L317\">\t\t\tA.entries[rowIndex][i] = row.get(0, i);</span>\r\n\t\t}\r\n<span class=\"nc\" id=\"L319\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified row of this matrix to the values stored within the passed array.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * {@link #setRow(Vector, int) setRow(Vector col, int colIndex)}&lt;br&gt;\r\n\t * {@link #setRow(double[], int) setRow(double[] col, int colIndex)}\r\n\t * \r\n\t * @throws IllegalArgumentException if the array of values has a different length then the number of columns in the matrix.\r\n\t * @param row - array containing the new entries for the specified column.\r\n\t * @param rowIndex - Index of new column to set. \r\n\t */\r\n\t default void setRow(CNumber[] row, int rowIndex) {\r\n<span class=\"nc\" id=\"L334\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L336\" title=\"All 2 branches missed.\">\t\tif(row.length != A.n) {</span>\r\n<span class=\"nc\" id=\"L337\">\t\t\tthrow new IllegalArgumentException(&quot;Can not set column for matrix of shape &quot; + A.shape + &quot; with array of length &quot; + row.length);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L340\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.n; i++) {</span>\r\n<span class=\"nc\" id=\"L341\">\t\t\tA.entries[rowIndex][i] = new CNumber(row[i]);</span>\r\n\t\t}\r\n<span class=\"nc\" id=\"L343\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets specified row of this matrix to the values stored within the passed array.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * {@link #setRow(Vector, int) setRow(Vector col, int colIndex)}&lt;br&gt;\r\n\t * {@link #setRow(CNumber[], int) setRow(CNumber[] col, int colIndex)}\r\n\t * \r\n\t * @throws IllegalArgumentException if the array of values has a different length then the number of columns in the matrix.\r\n\t * @param row - array containing the new entries for the specified column.\r\n\t * @param rowIndex - Index of new column to set. \r\n\t */\r\n\t default void setRow(double[] row, int rowIndex) {\r\n<span class=\"nc\" id=\"L358\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L360\" title=\"All 2 branches missed.\">\t\tif(row.length != A.n) {</span>\r\n<span class=\"nc\" id=\"L361\">\t\t\tthrow new IllegalArgumentException(&quot;Can not set column for matrix of shape &quot; + A.shape + &quot; with array of length &quot; + row.length);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L364\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.n; i++) {</span>\r\n<span class=\"nc\" id=\"L365\">\t\t\tA.entries[rowIndex][i] = new CNumber(row[i]);</span>\r\n\t\t}\r\n<span class=\"nc\" id=\"L367\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a copy of this matrix and sets a specified slice of the copy to the values stored in the &lt;code&gt;values&lt;/code&gt; matrix. Together\r\n\t * the parameters &lt;code&gt;rowStart&lt;/code&gt; and &lt;code&gt;colStart&lt;/code&gt; define the upper left corner of the \r\n\t * slice to set.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * If the values matrix does not fit within this matrix, an error will be thrown.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * If want to adjust this matrix instance directly see {@link #setSlice(int, int, Matrix) setSlice(Matrix values, int rowStart, int colStart)}\r\n\t * \r\n\t * @return\r\n\t */\r\n\t default Matrix setSliceCopy(int rowStart, int colStart, Matrix values) {\r\n<span class=\"nc\" id=\"L382\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L384\" title=\"All 4 branches missed.\">\t\tif(values.m + rowStart &gt; A.m || values.n + colStart &gt; A.n) {</span>\r\n<span class=\"nc\" id=\"L385\">\t\t\tthrow new IllegalArgumentException(&quot;Values do not fit in matrix. Attempting to set values of shape &quot; + values.shape +</span>\r\n\t\t\t\t\t&quot; with offset of (&quot; + rowStart + &quot;, &quot; + colStart + &quot;) in a matrix of shape &quot; + A.shape + &quot;.&quot;);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L389\" title=\"All 2 branches missed.\">\t\tfor(int i=rowStart; i&lt;values.m + rowStart; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L390\" title=\"All 2 branches missed.\">\t\t\tfor(int j=colStart; j&lt;values.n + colStart; j++) {</span>\r\n<span class=\"nc\" id=\"L391\">\t\t\t\tA.entries[i][j] = values.entries[i-rowStart][j-colStart];</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L395\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets a specified slice of this matrix to the values stored in the &lt;code&gt;values&lt;/code&gt; matrix. Together\r\n\t * the parameters &lt;code&gt;rowStart&lt;/code&gt; and &lt;code&gt;colStart&lt;/code&gt; define the upper left corner of the \r\n\t * slice to set.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * If the values matrix does not fit within this matrix, an error will be thrown.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * If you do not want to adjust this matrix instance see {@link #setSliceCopy(int, int, Matrix) setSliceCopy(Matrix values, int rowStart, int colStart)}\r\n\t * @param rowStart - Row on original matrix to place top row of values matrix\r\n\t * @param colStart - Column on original matrix to place left-most column of values matrix\r\n\t * @param values - New values to set within specified slice.\r\n\t */\r\n\t default void setSlice(int rowStart, int colStart, Matrix values) {\r\n<span class=\"nc\" id=\"L412\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L414\" title=\"All 4 branches missed.\">\t\tif(values.m + rowStart &gt; A.m || values.n + colStart &gt; A.n) {</span>\r\n<span class=\"nc\" id=\"L415\">\t\t\tthrow new IllegalArgumentException(&quot;Values do not fit in matrix. Attempting to set values of shape &quot; + values.shape +</span>\r\n\t\t\t\t\t&quot; with offset of (&quot; + rowStart + &quot;, &quot; + colStart + &quot;) in a matrix of shape &quot; + A.shape + &quot;.&quot;);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L419\" title=\"All 2 branches missed.\">\t\tfor(int i=rowStart; i&lt;values.m + rowStart; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L420\" title=\"All 2 branches missed.\">\t\t\tfor(int j=colStart; j&lt;values.n + colStart; j++) {</span>\r\n<span class=\"nc\" id=\"L421\">\t\t\t\tA.entries[i][j] = values.entries[i-rowStart][j-colStart];</span>\r\n\t\t\t}\r\n\t\t}\r\n<span class=\"nc\" id=\"L424\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Removes specified single row from matrix.\r\n\t * \r\n\t * To remove more than one row at a time\r\n\t * see {@link #removeRows(int...) removeRows(int... rowIndices)}.\r\n\t * \r\n\t * @param rowIndex - Index of row to remove.\r\n\t * @return Matrix with the specified row removed.\r\n\t */\r\n\t default Matrix removeRow(int rowIndex) {\r\n<span class=\"nc\" id=\"L437\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L438\">\t\treturn A.removeRows(rowIndex);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Removes specified rows from matrix. If k row indices are specified for \r\n\t * a mxn matrix, the resulting matrix will have shape (m-k)xn. \r\n\t * \r\n\t * Also see {@link #removeRow(int) removeRow(int rowIndex)}.\r\n\t * \r\n\t * @param rowIndices - list of row indices to remove from matrix.\r\n\t * @return Matrix with specified rows removed\r\n\t */\r\n\t default Matrix removeRows(int... rowIndices) {\r\n<span class=\"nc\" id=\"L452\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L453\">\t\tMatrix result = new Matrix(A.m-(rowIndices.length), A.n);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L455\">\t\tint newi = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L457\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L458\" title=\"All 2 branches missed.\">\t\t\tif(!LinAlgArrayUtils.contains(rowIndices, i)) {</span>\r\n<span class=\"nc bnc\" id=\"L459\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L460\">\t\t\t\t\tresult.entries[newi][j] = A.entries[i][j];</span>\r\n\t\t\t\t}\r\n<span class=\"nc\" id=\"L462\">\t\t\t\tnewi++;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L466\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Removes specified single column from matrix.\r\n\t * \r\n\t * To remove more than one column at a time\r\n\t * see {@link #removeCols(int...) removeCols(int... colIndices)}.\r\n\t * \r\n\t * @param colIndex - Index of column to remove.\r\n\t * @return Matrix with the specified column removed.\r\n\t */\r\n\t default Matrix removeCol(int colIndex) {\r\n<span class=\"nc\" id=\"L480\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L481\">\t\treturn A.removeCols(colIndex);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Removes specified columns from matrix. If k column indices are specified for \r\n\t * a mxn matrix, the resulting matrix will have shape m-by-(n-k).\r\n\t *\r\n\t * Also see {@link #removeCol(int) removeCol(int colIndex)}\r\n\t * \r\n\t * @param colIndices - list of column indices to remove from matrix.\r\n\t * @return Matrix with specified columns removed\r\n\t */\r\n\t default Matrix removeCols(int... colIndices) {\r\n<span class=\"nc\" id=\"L495\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L496\">\t\tMatrix result = new Matrix(A.m, A.n-(colIndices.length));</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L498\">\t\tint newj = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L500\" title=\"All 2 branches missed.\">\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L501\" title=\"All 2 branches missed.\">\t\t\tif(!LinAlgArrayUtils.contains(colIndices, j)) {</span>\r\n<span class=\"nc bnc\" id=\"L502\" title=\"All 2 branches missed.\">\t\t\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L503\">\t\t\t\t\tresult.entries[i][newj] = A.entries[i][j];</span>\r\n\t\t\t\t}\r\n<span class=\"nc\" id=\"L505\">\t\t\t\tnewj++;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L509\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Generates lower triangle of Matrix. That is, all values above the middle\r\n\t * diagonal will be zeroed.\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #tril(int) tril(int k)}&lt;/code&gt;\r\n\t * \r\n\t * @return Lower triangle of Matrix.\r\n\t */\r\n\t default Matrix tril() {\r\n<span class=\"nc\" id=\"L522\">\t\treturn this.tril(0);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Generates lower triangle of Matrix. That is, all values above the kth\r\n\t * diagonal will be zeroed.\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #tril(int) tril()}&lt;/code&gt;\r\n\t * \r\n\t * @param k - diagonal above which to zero. k=0 whould be middile diagonal, k=-1 would be \r\n\t * \tthe diagonal to the left of the middle diagonal, and k=1 would be the diagonal to the right\r\n\t * \tof the middle diagonal.\r\n\t * @return Lower triangle of Matrix.\r\n\t */\r\n\t default Matrix tril(int k) {\r\n<span class=\"nc\" id=\"L538\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L539\">\t\tMatrix lower = Matrix.zeros(A.m, A.n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L541\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; lower.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L542\" title=\"All 4 branches missed.\">\t\t\tfor(int j = 0; j&lt;=(i+k) &amp;&amp; j &lt; lower.n; j++) {</span>\r\n<span class=\"nc\" id=\"L543\">\t\t\t\tlower.entries[i][j] = A.entries[i][j];</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L547\">\t\treturn lower;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Generates upper triangle of Matrix. That is, all values above the middle\r\n\t * diagonal will be zeroed.\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #triu(int) triu(int k)}&lt;/code&gt;\r\n\t * \r\n\t * @return upper triangle of Matrix.\r\n\t */\r\n\t default Matrix triu() {\r\n<span class=\"nc\" id=\"L560\">\t\treturn this.triu(0);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Generates upper triangle of Matrix. That is, all values below the kth\r\n\t * diagonal will be zeroed.\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #triu(int) triu()}&lt;/code&gt;\r\n\t * \r\n\t * @param k - diagonal above which to zero. k=0 would be middle diagonal, k=-1 would be \r\n\t * \tthe diagonal to the left of the middle diagonal, and k=1 would be the diagonal to the right\r\n\t * \tof the middle diagonal.\r\n\t * @return upper triangle of Matrix.\r\n\t */\r\n\t default Matrix triu(int k) {\r\n<span class=\"nc\" id=\"L576\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L577\">\t\tMatrix upper = Matrix.zeros(A.m, A.n);</span>\r\n<span class=\"nc\" id=\"L578\">\t\tint jstart = 0;</span>\r\n\t\t\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L581\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; upper.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L582\" title=\"All 2 branches missed.\">\t\t\tif(i+k &lt;= 0) {jstart = 0;}</span>\r\n<span class=\"nc\" id=\"L583\">\t\t\telse {jstart = i+k;}</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L585\" title=\"All 4 branches missed.\">\t\t\tfor(int j = jstart; j-k&gt;=(i) &amp;&amp; j &lt; upper.n; j++) {</span>\r\n<span class=\"nc\" id=\"L586\">\t\t\t\tupper.entries[i][j] = A.entries[i][j];</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L590\">\t\treturn upper;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Extracts diagonal elements from matrix.\r\n\t * \r\n\t * @return Returns an equivalently sized matrix containing only the diagonal elements of this matrix.\r\n\t */\r\n\t default Matrix diag() {\r\n<span class=\"nc\" id=\"L600\">\t\treturn this.triu(0).tril(0);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets elements from list as diagonal elements of a zero matrix.\r\n\t * \r\n\t * @return Returns an equivalently sized matrix containing only the diagonal elements of this matrix.\r\n\t */\r\n\t static Matrix toDiag(CNumber... entries) {\r\n<span class=\"nc\" id=\"L610\">\t\tMatrix A = new Matrix(entries.length);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L612\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;entries.length; i++) {</span>\r\n<span class=\"nc\" id=\"L613\">\t\t\tA.entries[i][i] = entries[i];</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L616\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Extracts diagonal elements form matrix and stores in vector.\r\n\t * \r\n\t * @return Column vector containing diagonal elements of this matrix.\r\n\t */\r\n\t default Vector diagAsVector() {\r\n<span class=\"nc\" id=\"L626\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L627\">\t\tVector diag = new Vector(Math.min(A.m, A.n));</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L629\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;diag.m; i++) {</span>\r\n<span class=\"nc\" id=\"L630\">\t\t\tdiag.entries[i][0] = A.entries[i][i];</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L633\">\t\treturn diag;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Converts a matrix similar to this matrix that is in upper Hessenburg form. A matrix is in upper Hessenburg form if all entries below the first subdiagonal are\r\n\t * zero. Two n-by-n matrices A and B are similar if there exists an invertible n-by-n matrix P, such that B=P&lt;sup&gt;-1&lt;/sup&gt;AP. Similar matrices share many \r\n\t * properties including the same eigenvalues.\r\n\t * \r\n\t * @return A matrix similar to this matrix which is in upper Hessenburg form.\r\n\t */\r\n\t default Matrix hessu() {\r\n<span class=\"nc\" id=\"L645\">\t\tMatrix H = ((Matrix) this).copy();</span>\r\n<span class=\"nc\" id=\"L646\">\t\tMatrix x, v = new Matrix(H.m, H.m);</span>\r\n<span class=\"nc\" id=\"L647\">\t\tCNumber two = new CNumber(2), eps = new CNumber(Float.MIN_VALUE);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L649\" title=\"All 2 branches missed.\">\t\tif(!H.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L650\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + H.shape);</span>\r\n\t\t}\r\n\t\t\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L654\" title=\"All 2 branches missed.\">\t\tfor(int k=0; k&lt;H.m-2; k++) {\t</span>\r\n<span class=\"nc bnc\" id=\"L655\" title=\"All 2 branches missed.\">\t\t\tif(!H.getSlice(k+1, H.m, k, k+1).equals(new Matrix(H.m-(k+1), 1))) { // Then we need a Householder reflector. Otherwise, the column is already in the correct form so we don't need to apply a reflector.</span>\r\n<span class=\"nc\" id=\"L656\">\t\t\t\tx = H.getSlice(k+1, H.m, k, k+1);</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L658\">\t\t\t\tv.setSlice(0, k, \t</span>\r\n<span class=\"nc\" id=\"L659\">\t\t\t\t\t\tMatrix.I(H.m-(k+1), 1).scalMult(</span>\r\n<span class=\"nc\" id=\"L660\">\t\t\t\t\t\tCNumber.multiply(</span>\r\n<span class=\"nc\" id=\"L661\">\t\t\t\t\t\t\tCNumber.addInv(CNumber.sign(CNumber.add(x.entries[0][0], eps))), </span>\r\n<span class=\"nc\" id=\"L662\">\t\t\t\t\t\t\tx.norm()</span>\r\n<span class=\"nc\" id=\"L663\">\t\t\t\t\t\t)).sub(x)</span>\r\n\t\t\t\t);\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L666\">\t\t\t\tv.setSlice(0, k, v.getSlice(0, H.m-(k+1), k, k+1).scalDiv(v.getSlice(0, H.m-(k+1), k, k+1).norm()));</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L668\">\t\t\t\tH.setSlice(k+1, k, </span>\r\n<span class=\"nc\" id=\"L669\">\t\t\t\t\t\tH.getSlice(k+1, H.m, k, H.m).sub(v.getSlice(0, H.m-(k+1), k, k+1).mult(</span>\r\n<span class=\"nc\" id=\"L670\">\t\t\t\t\t\tv.getSlice(0, H.m-(k+1), k, k+1).H().mult(H.getSlice(k+1, H.m, k, H.m))).scalMult(two))</span>\r\n\t\t\t\t);\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L673\">\t\t\t\tH.setSlice(0, k+1, </span>\r\n<span class=\"nc\" id=\"L674\">\t\t\t\t\t\tH.getSlice(0, H.m, k+1, H.m).sub(H.getSlice(0, H.m, k+1, H.m).mult(</span>\r\n<span class=\"nc\" id=\"L675\">\t\t\t\t\t\tv.getSlice(0, H.m-(k+1), k, k+1)).mult(v.getSlice(0, H.m-(k+1), k, k+1).H()).scalMult(two))</span>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L680\">\t\tH.roundToZero(10);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L682\">\t\treturn H;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Converts a matrix similar to this matrix that is in upper Hessenburg form. A matrix is in upper Hessenburg form if all entries below the first subdiagonal are\r\n\t * zero. Two n-by-n matrices A and B are similar if there exists an invertible n-by-n matrix P, such that B=P&lt;sup&gt;-1&lt;/sup&gt;AP. Similar matrices share many \r\n\t * properties including the same eigenvalues.\r\n\t * \r\n\t * @return A matrix similar to this matrix which is in upper Hessenburg form.\r\n\t */\r\n\t default Matrix[] hessuV() {\r\n<span class=\"nc\" id=\"L694\">\t\tMatrix H = ((Matrix) this).copy();</span>\r\n<span class=\"nc\" id=\"L695\">\t\tMatrix x, v = new Matrix(H.m, H.m);</span>\r\n<span class=\"nc\" id=\"L696\">\t\tCNumber two = new CNumber(2), eps = new CNumber(Float.MIN_VALUE);</span>\r\n<span class=\"nc\" id=\"L697\">\t\tMatrix[] result = new Matrix[2];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L699\" title=\"All 2 branches missed.\">\t\tif(!H.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L700\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + H.shape);</span>\r\n\t\t}\r\n\t\t\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L704\" title=\"All 2 branches missed.\">\t\tfor(int k=0; k&lt;H.m-2; k++) {\t</span>\r\n<span class=\"nc\" id=\"L705\">\t\t\tx = H.getSlice(k+1, H.m, k, k+1);</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L707\">\t\t\tv.setSlice(0, k, \t</span>\r\n<span class=\"nc\" id=\"L708\">\t\t\t\t\tMatrix.I(H.m-(k+1), 1).scalMult(</span>\r\n<span class=\"nc\" id=\"L709\">\t\t\t\t\tCNumber.multiply(</span>\r\n<span class=\"nc\" id=\"L710\">\t\t\t\t\t\tCNumber.addInv(CNumber.sign(CNumber.add(x.entries[0][0], eps))), </span>\r\n<span class=\"nc\" id=\"L711\">\t\t\t\t\t\tx.norm()</span>\r\n<span class=\"nc\" id=\"L712\">\t\t\t\t\t)).sub(x)</span>\r\n\t\t\t);\r\n\t\t\t\r\n<span class=\"nc\" id=\"L715\">\t\t\tv.setSlice(0, k, v.getSlice(0, H.m-(k+1), k, k+1).scalDiv(v.getSlice(0, H.m-(k+1), k, k+1).norm()));</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L717\">\t\t\tH.setSlice(k+1, k, </span>\r\n<span class=\"nc\" id=\"L718\">\t\t\t\t\tH.getSlice(k+1, H.m, k, H.m).sub(v.getSlice(0, H.m-(k+1), k, k+1).mult(</span>\r\n<span class=\"nc\" id=\"L719\">\t\t\t\t\tv.getSlice(0, H.m-(k+1), k, k+1).H().mult(H.getSlice(k+1, H.m, k, H.m))).scalMult(two))</span>\r\n\t\t\t);\r\n\t\t\t\r\n<span class=\"nc\" id=\"L722\">\t\t\tH.setSlice(0, k+1, </span>\r\n<span class=\"nc\" id=\"L723\">\t\t\t\t\tH.getSlice(0, H.m, k+1, H.m).sub(H.getSlice(0, H.m, k+1, H.m).mult(</span>\r\n<span class=\"nc\" id=\"L724\">\t\t\t\t\tv.getSlice(0, H.m-(k+1), k, k+1)).mult(v.getSlice(0, H.m-(k+1), k, k+1).H()).scalMult(two))</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L728\">\t\tH.roundToZero(10);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L730\">\t\tresult[0] = H;</span>\r\n<span class=\"nc\" id=\"L731\">\t\tresult[1] = v;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L733\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Swaps two rows in a matrix.\r\n\t * \r\n\t * @param rowIndex1 - Index of first row to be swapped.\r\n\t * @param rowIndex2 - Index of second row to be swapped.\r\n\t * @return Matrix with specified rows swapped.\r\n\t */\r\n\t default Matrix swapRows(int rowIndex1, int rowIndex2) {\r\n<span class=\"nc\" id=\"L745\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L746\">\t\tMatrix result = A.copy();</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L748\">\t\tCNumber[] row1 = A.entries[rowIndex1];</span>\r\n<span class=\"nc\" id=\"L749\">\t\tCNumber[] row2 = A.entries[rowIndex2];</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L751\">\t\tresult.entries[rowIndex1] = row2;</span>\r\n<span class=\"nc\" id=\"L752\">\t\tresult.entries[rowIndex2] = row1;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L754\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Swaps two columns in a matrix.\r\n\t * \r\n\t * @param colIndex1 - Index of first column to be swapped.\r\n\t * @param colIndex2 - Index of second column to be swapped.\r\n\t * @return Matrix with specified columns swapped.\r\n\t */\r\n\t default Matrix swapCols(int colIndex1, int colIndex2) {\r\n<span class=\"nc\" id=\"L766\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L767\">\t\tMatrix result = A.copy();</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L769\">\t\tCNumber[] col1 = A.getCol(colIndex1);</span>\r\n<span class=\"nc\" id=\"L770\">\t\tCNumber[] col2 = A.getCol(colIndex2);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L772\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L773\">\t\t\tresult.entries[i][colIndex1] = col2[i];</span>\r\n<span class=\"nc\" id=\"L774\">\t\t\tresult.entries[i][colIndex2] = col1[i];</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L777\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Multiplies a specified row by a constant value.\r\n\t * \r\n\t * @param factor - number to multiply row by.\r\n\t * @return Matrix with specified row multiplied by the factor.\r\n\t */\r\n\t default Matrix multRow(int rowIndex, CNumber factor) {\r\n<span class=\"nc\" id=\"L788\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L789\">\t\tMatrix result = new Matrix(A.m, A.n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L791\" title=\"All 2 branches missed.\">\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L792\">\t\t\tresult.entries[rowIndex][j] = CNumber.multiply(A.entries[rowIndex][j], factor); </span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L795\">\t\treturn result;</span>\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Multiplies a specified row by a constant value.\r\n\t * \r\n\t * @param factor - number to multiply row by.\r\n\t * @return Matrix with specified row multiplied by the factor\r\n\t */\r\n\t default Matrix multRow(int rowIndex, double factor) {\r\n<span class=\"nc\" id=\"L806\">\t\treturn multRow(rowIndex, new CNumber(factor));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Divides a specified row by a constant value.\r\n\t * \r\n\t * @param divisor - number to divide row by.\r\n\t * @return Matrix with specified row divided by the divisor.\r\n\t */\r\n\t default Matrix divRow(int rowIndex, CNumber divisor) {\r\n<span class=\"nc\" id=\"L817\">\t\treturn multRow(rowIndex, CNumber.inv(divisor));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Divides a specified row by a constant value.\r\n\t * \r\n\t * @param divisor - number to divide row by.\r\n\t * @return Matrix with specified row divided by the divisor.\r\n\t */\r\n\t default Matrix divRow(int rowIndex, double divisor) {\r\n<span class=\"nc\" id=\"L828\">\t\treturn multRow(rowIndex, 1 / divisor);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * If possible, converts matrix to a Vector object.&lt;br&gt;&lt;br&gt;\r\n\t * A matrix will be converted to a row vector if it contains only a single row. &lt;br&gt;\r\n\t * A matrix will be converted to a column vector if it contains only a single column. &lt;br&gt;\r\n\t * If a matrix contains only one row and one column or is empty, then it will be converted to a column vector by default.&lt;br&gt;\r\n\t * \r\n\t * @return Vector equivalent of matrix.\r\n\t */\r\n\t default Vector toVector() {\r\n<span class=\"nc\" id=\"L841\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L842\">\t\tVector result = null;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L844\" title=\"All 4 branches missed.\">\t\tif(!A.isVector() &amp;&amp; !A.isEmpty()) {</span>\r\n<span class=\"nc\" id=\"L845\">\t\t\tthrow new IllegalArgumentException(&quot;Can not convert matrix of shape &quot; + A.shape + &quot; to a vector.&quot;);</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L847\">\t\t\tint vectorType = A.vectorType();</span>\r\n\t\t\t\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L850\" title=\"All 2 branches missed.\">\t\t\tif(A.isEmpty()) {</span>\r\n<span class=\"nc\" id=\"L851\">\t\t\t\tresult = new Vector();</span>\r\n\t\t\t}\r\n\t\t\telse { // 1-by-1 matrix or empty matrix will default to a column vector.\r\n<span class=\"nc bnc\" id=\"L854\" title=\"All 2 branches missed.\">\t\t\t\tif(vectorType == 3) {</span>\r\n<span class=\"nc\" id=\"L855\">\t\t\t\t\tvectorType = Vector.COLUMN_VECTOR;</span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L858\">\t\t\t\tresult = new Vector(LinAlgArrayUtils.flatten(A.entries), vectorType);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L862\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Rounds all entries of a matrix. If entry is complex, \r\n\t * both the real and imaginary part will be rounded.\r\n\t *\r\n\t * @param decimals - Number of decimals to round number to.\r\n\t * @return Returns copy of Matrix &lt;code&gt;A&lt;/code&gt; with entries rounded to \r\n\t * \t\tSpecified number of decimal places.  \r\n\t */\r\n\t default Matrix round(int decimals) {\r\n<span class=\"nc\" id=\"L875\">\t\tMatrix rounded = new Matrix((Matrix) this);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L877\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;rounded.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L878\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;rounded.n; j++) {</span>\r\n<span class=\"nc\" id=\"L879\">\t\t\t\trounded.entries[i][j] = CNumber.round(rounded.entries[i][j], decimals);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L883\">\t\treturn rounded;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Rounds values in this matrix within a specified number of decimals of zero to zero.\r\n\t * \r\n\t * @param decimals - Number of decimals \r\n\t */\r\n\t default void roundToZero(int decimals) {\r\n<span class=\"nc\" id=\"L893\">\t\tdouble tolerance = 0.5*Math.pow(10, -decimals);</span>\r\n<span class=\"nc\" id=\"L894\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L896\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L897\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L898\" title=\"All 2 branches missed.\">\t\t\t\tif(Math.abs(A.entries[i][j].mag()) &lt; tolerance) {</span>\r\n<span class=\"nc\" id=\"L899\">\t\t\t\t\tA.entries[i][j] = CNumber.ZERO;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n<span class=\"nc\" id=\"L903\">\t}</span>\r\n\r\n\r\n\t public static void main(String[] args) {\r\n\r\n<span class=\"nc\" id=\"L908\">\t\tdouble[] val = {1, 2, 3, 4};</span>\r\n<span class=\"nc\" id=\"L909\">\t\tVector v = new Vector(val, 1);</span>\r\n\r\n<span class=\"nc\" id=\"L911\">\t\tMatrix.println(v.extend(4));</span>\r\n<span class=\"nc\" id=\"L912\">\t}</span>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixManipulations.java.html b/target/site/jacoco/linalg/MatrixManipulations.java.html
--- a/target/site/jacoco/linalg/MatrixManipulations.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/MatrixManipulations.java.html	(date 1648105701852)
@@ -599,12 +599,12 @@
 	 default Matrix diag() {
 <span class="nc" id="L600">		return this.triu(0).tril(0);</span>
 	}
-	
-	
+
+
 	/**
 	 * Sets elements from list as diagonal elements of a zero matrix.
-	 * 
-	 * @return Returns an equivalently sized matrix containing only the diagonal elements of this matrix.
+	 * @param entries Entries to use for diagonal of matrix.
+	 * @return Returns a diagonal matrix containing the provided entries on the diagonal.
 	 */
 	 static Matrix toDiag(CNumber... entries) {
 <span class="nc" id="L610">		Matrix A = new Matrix(entries.length);</span>
@@ -615,7 +615,21 @@
 		
 <span class="nc" id="L616">		return A;</span>
 	}
-	
+
+	/**
+	 * Sets elements from list as diagonal elements of a zero matrix.
+	 * @param entries Entries to use for diagonal of matrix.
+	 * @return Returns a diagonal matrix containing the provided entries on the diagonal.
+	 */
+	static Matrix toDiag(double... entries) {
+<span class="nc" id="L625">		Matrix A = new Matrix(entries.length);</span>
+
+<span class="nc bnc" id="L627" title="All 2 branches missed.">		for(int i=0; i&lt;entries.length; i++) {</span>
+<span class="nc" id="L628">			A.entries[i][i] = new CNumber(entries[i]);</span>
+		}
+
+<span class="nc" id="L631">		return A;</span>
+	}
 	
 	/**
 	 * Extracts diagonal elements form matrix and stores in vector.
@@ -623,14 +637,14 @@
 	 * @return Column vector containing diagonal elements of this matrix.
 	 */
 	 default Vector diagAsVector() {
-<span class="nc" id="L626">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L627">		Vector diag = new Vector(Math.min(A.m, A.n));</span>
+<span class="nc" id="L640">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L641">		Vector diag = new Vector(Math.min(A.m, A.n));</span>
 		
-<span class="nc bnc" id="L629" title="All 2 branches missed.">		for(int i=0; i&lt;diag.m; i++) {</span>
-<span class="nc" id="L630">			diag.entries[i][0] = A.entries[i][i];</span>
+<span class="nc bnc" id="L643" title="All 2 branches missed.">		for(int i=0; i&lt;diag.m; i++) {</span>
+<span class="nc" id="L644">			diag.entries[i][0] = A.entries[i][i];</span>
 		}
 		
-<span class="nc" id="L633">		return diag;</span>
+<span class="nc" id="L647">		return diag;</span>
 	}
 	
 	
@@ -642,44 +656,44 @@
 	 * @return A matrix similar to this matrix which is in upper Hessenburg form.
 	 */
 	 default Matrix hessu() {
-<span class="nc" id="L645">		Matrix H = ((Matrix) this).copy();</span>
-<span class="nc" id="L646">		Matrix x, v = new Matrix(H.m, H.m);</span>
-<span class="nc" id="L647">		CNumber two = new CNumber(2), eps = new CNumber(Float.MIN_VALUE);</span>
+<span class="nc" id="L659">		Matrix H = ((Matrix) this).copy();</span>
+<span class="nc" id="L660">		Matrix x, v = new Matrix(H.m, H.m);</span>
+<span class="nc" id="L661">		CNumber two = new CNumber(2), eps = new CNumber(Float.MIN_VALUE);</span>
 		
-<span class="nc bnc" id="L649" title="All 2 branches missed.">		if(!H.isSquare()) {</span>
-<span class="nc" id="L650">			throw new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + H.shape);</span>
+<span class="nc bnc" id="L663" title="All 2 branches missed.">		if(!H.isSquare()) {</span>
+<span class="nc" id="L664">			throw new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + H.shape);</span>
 		}
 		
 		
-<span class="nc bnc" id="L654" title="All 2 branches missed.">		for(int k=0; k&lt;H.m-2; k++) {	</span>
-<span class="nc bnc" id="L655" title="All 2 branches missed.">			if(!H.getSlice(k+1, H.m, k, k+1).equals(new Matrix(H.m-(k+1), 1))) { // Then we need a Householder reflector. Otherwise, the column is already in the correct form so we don't need to apply a reflector.</span>
-<span class="nc" id="L656">				x = H.getSlice(k+1, H.m, k, k+1);</span>
+<span class="nc bnc" id="L668" title="All 2 branches missed.">		for(int k=0; k&lt;H.m-2; k++) {	</span>
+<span class="nc bnc" id="L669" title="All 2 branches missed.">			if(!H.getSlice(k+1, H.m, k, k+1).equals(new Matrix(H.m-(k+1), 1))) { // Then we need a Householder reflector. Otherwise, the column is already in the correct form so we don't need to apply a reflector.</span>
+<span class="nc" id="L670">				x = H.getSlice(k+1, H.m, k, k+1);</span>
 				
-<span class="nc" id="L658">				v.setSlice(0, k, 	</span>
-<span class="nc" id="L659">						Matrix.I(H.m-(k+1), 1).scalMult(</span>
-<span class="nc" id="L660">						CNumber.multiply(</span>
-<span class="nc" id="L661">							CNumber.addInv(CNumber.sign(CNumber.add(x.entries[0][0], eps))), </span>
-<span class="nc" id="L662">							x.norm()</span>
-<span class="nc" id="L663">						)).sub(x)</span>
+<span class="nc" id="L672">				v.setSlice(0, k, 	</span>
+<span class="nc" id="L673">						Matrix.I(H.m-(k+1), 1).scalMult(</span>
+<span class="nc" id="L674">						CNumber.multiply(</span>
+<span class="nc" id="L675">							CNumber.addInv(CNumber.sign(CNumber.add(x.entries[0][0], eps))), </span>
+<span class="nc" id="L676">							x.norm()</span>
+<span class="nc" id="L677">						)).sub(x)</span>
 				);
 				
-<span class="nc" id="L666">				v.setSlice(0, k, v.getSlice(0, H.m-(k+1), k, k+1).scalDiv(v.getSlice(0, H.m-(k+1), k, k+1).norm()));</span>
+<span class="nc" id="L680">				v.setSlice(0, k, v.getSlice(0, H.m-(k+1), k, k+1).scalDiv(v.getSlice(0, H.m-(k+1), k, k+1).norm()));</span>
 				
-<span class="nc" id="L668">				H.setSlice(k+1, k, </span>
-<span class="nc" id="L669">						H.getSlice(k+1, H.m, k, H.m).sub(v.getSlice(0, H.m-(k+1), k, k+1).mult(</span>
-<span class="nc" id="L670">						v.getSlice(0, H.m-(k+1), k, k+1).H().mult(H.getSlice(k+1, H.m, k, H.m))).scalMult(two))</span>
+<span class="nc" id="L682">				H.setSlice(k+1, k, </span>
+<span class="nc" id="L683">						H.getSlice(k+1, H.m, k, H.m).sub(v.getSlice(0, H.m-(k+1), k, k+1).mult(</span>
+<span class="nc" id="L684">						v.getSlice(0, H.m-(k+1), k, k+1).H().mult(H.getSlice(k+1, H.m, k, H.m))).scalMult(two))</span>
 				);
 				
-<span class="nc" id="L673">				H.setSlice(0, k+1, </span>
-<span class="nc" id="L674">						H.getSlice(0, H.m, k+1, H.m).sub(H.getSlice(0, H.m, k+1, H.m).mult(</span>
-<span class="nc" id="L675">						v.getSlice(0, H.m-(k+1), k, k+1)).mult(v.getSlice(0, H.m-(k+1), k, k+1).H()).scalMult(two))</span>
+<span class="nc" id="L687">				H.setSlice(0, k+1, </span>
+<span class="nc" id="L688">						H.getSlice(0, H.m, k+1, H.m).sub(H.getSlice(0, H.m, k+1, H.m).mult(</span>
+<span class="nc" id="L689">						v.getSlice(0, H.m-(k+1), k, k+1)).mult(v.getSlice(0, H.m-(k+1), k, k+1).H()).scalMult(two))</span>
 				);
 			}
 		}
 		
-<span class="nc" id="L680">		H.roundToZero(10);</span>
+<span class="nc" id="L694">		H.roundToZero(10);</span>
 		
-<span class="nc" id="L682">		return H;</span>
+<span class="nc" id="L696">		return H;</span>
 	}
 	
 	
@@ -691,46 +705,46 @@
 	 * @return A matrix similar to this matrix which is in upper Hessenburg form.
 	 */
 	 default Matrix[] hessuV() {
-<span class="nc" id="L694">		Matrix H = ((Matrix) this).copy();</span>
-<span class="nc" id="L695">		Matrix x, v = new Matrix(H.m, H.m);</span>
-<span class="nc" id="L696">		CNumber two = new CNumber(2), eps = new CNumber(Float.MIN_VALUE);</span>
-<span class="nc" id="L697">		Matrix[] result = new Matrix[2];</span>
+<span class="nc" id="L708">		Matrix H = ((Matrix) this).copy();</span>
+<span class="nc" id="L709">		Matrix x, v = new Matrix(H.m, H.m);</span>
+<span class="nc" id="L710">		CNumber two = new CNumber(2), eps = new CNumber(Float.MIN_VALUE);</span>
+<span class="nc" id="L711">		Matrix[] result = new Matrix[2];</span>
 		
-<span class="nc bnc" id="L699" title="All 2 branches missed.">		if(!H.isSquare()) {</span>
-<span class="nc" id="L700">			throw new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + H.shape);</span>
+<span class="nc bnc" id="L713" title="All 2 branches missed.">		if(!H.isSquare()) {</span>
+<span class="nc" id="L714">			throw new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + H.shape);</span>
 		}
 		
 		
-<span class="nc bnc" id="L704" title="All 2 branches missed.">		for(int k=0; k&lt;H.m-2; k++) {	</span>
-<span class="nc" id="L705">			x = H.getSlice(k+1, H.m, k, k+1);</span>
+<span class="nc bnc" id="L718" title="All 2 branches missed.">		for(int k=0; k&lt;H.m-2; k++) {	</span>
+<span class="nc" id="L719">			x = H.getSlice(k+1, H.m, k, k+1);</span>
 			
-<span class="nc" id="L707">			v.setSlice(0, k, 	</span>
-<span class="nc" id="L708">					Matrix.I(H.m-(k+1), 1).scalMult(</span>
-<span class="nc" id="L709">					CNumber.multiply(</span>
-<span class="nc" id="L710">						CNumber.addInv(CNumber.sign(CNumber.add(x.entries[0][0], eps))), </span>
-<span class="nc" id="L711">						x.norm()</span>
-<span class="nc" id="L712">					)).sub(x)</span>
+<span class="nc" id="L721">			v.setSlice(0, k, 	</span>
+<span class="nc" id="L722">					Matrix.I(H.m-(k+1), 1).scalMult(</span>
+<span class="nc" id="L723">					CNumber.multiply(</span>
+<span class="nc" id="L724">						CNumber.addInv(CNumber.sign(CNumber.add(x.entries[0][0], eps))), </span>
+<span class="nc" id="L725">						x.norm()</span>
+<span class="nc" id="L726">					)).sub(x)</span>
 			);
 			
-<span class="nc" id="L715">			v.setSlice(0, k, v.getSlice(0, H.m-(k+1), k, k+1).scalDiv(v.getSlice(0, H.m-(k+1), k, k+1).norm()));</span>
+<span class="nc" id="L729">			v.setSlice(0, k, v.getSlice(0, H.m-(k+1), k, k+1).scalDiv(v.getSlice(0, H.m-(k+1), k, k+1).norm()));</span>
 			
-<span class="nc" id="L717">			H.setSlice(k+1, k, </span>
-<span class="nc" id="L718">					H.getSlice(k+1, H.m, k, H.m).sub(v.getSlice(0, H.m-(k+1), k, k+1).mult(</span>
-<span class="nc" id="L719">					v.getSlice(0, H.m-(k+1), k, k+1).H().mult(H.getSlice(k+1, H.m, k, H.m))).scalMult(two))</span>
+<span class="nc" id="L731">			H.setSlice(k+1, k, </span>
+<span class="nc" id="L732">					H.getSlice(k+1, H.m, k, H.m).sub(v.getSlice(0, H.m-(k+1), k, k+1).mult(</span>
+<span class="nc" id="L733">					v.getSlice(0, H.m-(k+1), k, k+1).H().mult(H.getSlice(k+1, H.m, k, H.m))).scalMult(two))</span>
 			);
 			
-<span class="nc" id="L722">			H.setSlice(0, k+1, </span>
-<span class="nc" id="L723">					H.getSlice(0, H.m, k+1, H.m).sub(H.getSlice(0, H.m, k+1, H.m).mult(</span>
-<span class="nc" id="L724">					v.getSlice(0, H.m-(k+1), k, k+1)).mult(v.getSlice(0, H.m-(k+1), k, k+1).H()).scalMult(two))</span>
+<span class="nc" id="L736">			H.setSlice(0, k+1, </span>
+<span class="nc" id="L737">					H.getSlice(0, H.m, k+1, H.m).sub(H.getSlice(0, H.m, k+1, H.m).mult(</span>
+<span class="nc" id="L738">					v.getSlice(0, H.m-(k+1), k, k+1)).mult(v.getSlice(0, H.m-(k+1), k, k+1).H()).scalMult(two))</span>
 			);
 		}
 		
-<span class="nc" id="L728">		H.roundToZero(10);</span>
+<span class="nc" id="L742">		H.roundToZero(10);</span>
 		
-<span class="nc" id="L730">		result[0] = H;</span>
-<span class="nc" id="L731">		result[1] = v;</span>
+<span class="nc" id="L744">		result[0] = H;</span>
+<span class="nc" id="L745">		result[1] = v;</span>
 		
-<span class="nc" id="L733">		return result;</span>
+<span class="nc" id="L747">		return result;</span>
 	}
 	
 	
@@ -742,16 +756,16 @@
 	 * @return Matrix with specified rows swapped.
 	 */
 	 default Matrix swapRows(int rowIndex1, int rowIndex2) {
-<span class="nc" id="L745">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L746">		Matrix result = A.copy();</span>
+<span class="nc" id="L759">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L760">		Matrix result = A.copy();</span>
 		
-<span class="nc" id="L748">		CNumber[] row1 = A.entries[rowIndex1];</span>
-<span class="nc" id="L749">		CNumber[] row2 = A.entries[rowIndex2];</span>
+<span class="nc" id="L762">		CNumber[] row1 = A.entries[rowIndex1];</span>
+<span class="nc" id="L763">		CNumber[] row2 = A.entries[rowIndex2];</span>
 		
-<span class="nc" id="L751">		result.entries[rowIndex1] = row2;</span>
-<span class="nc" id="L752">		result.entries[rowIndex2] = row1;</span>
+<span class="nc" id="L765">		result.entries[rowIndex1] = row2;</span>
+<span class="nc" id="L766">		result.entries[rowIndex2] = row1;</span>
 		
-<span class="nc" id="L754">		return result;</span>
+<span class="nc" id="L768">		return result;</span>
 	}
 	
 	
@@ -763,18 +777,18 @@
 	 * @return Matrix with specified columns swapped.
 	 */
 	 default Matrix swapCols(int colIndex1, int colIndex2) {
-<span class="nc" id="L766">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L767">		Matrix result = A.copy();</span>
+<span class="nc" id="L780">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L781">		Matrix result = A.copy();</span>
 		
-<span class="nc" id="L769">		CNumber[] col1 = A.getCol(colIndex1);</span>
-<span class="nc" id="L770">		CNumber[] col2 = A.getCol(colIndex2);</span>
+<span class="nc" id="L783">		CNumber[] col1 = A.getCol(colIndex1);</span>
+<span class="nc" id="L784">		CNumber[] col2 = A.getCol(colIndex2);</span>
 		
-<span class="nc bnc" id="L772" title="All 2 branches missed.">		for(int i = 0; i&lt;A.m; i++) {</span>
-<span class="nc" id="L773">			result.entries[i][colIndex1] = col2[i];</span>
-<span class="nc" id="L774">			result.entries[i][colIndex2] = col1[i];</span>
+<span class="nc bnc" id="L786" title="All 2 branches missed.">		for(int i = 0; i&lt;A.m; i++) {</span>
+<span class="nc" id="L787">			result.entries[i][colIndex1] = col2[i];</span>
+<span class="nc" id="L788">			result.entries[i][colIndex2] = col1[i];</span>
 		}
 		
-<span class="nc" id="L777">		return result;</span>
+<span class="nc" id="L791">		return result;</span>
 	}
 	
 	
@@ -785,14 +799,14 @@
 	 * @return Matrix with specified row multiplied by the factor.
 	 */
 	 default Matrix multRow(int rowIndex, CNumber factor) {
-<span class="nc" id="L788">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L789">		Matrix result = new Matrix(A.m, A.n);</span>
+<span class="nc" id="L802">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L803">		Matrix result = new Matrix(A.m, A.n);</span>
 		
-<span class="nc bnc" id="L791" title="All 2 branches missed.">		for(int j=0; j&lt;A.n; j++) {</span>
-<span class="nc" id="L792">			result.entries[rowIndex][j] = CNumber.multiply(A.entries[rowIndex][j], factor); </span>
+<span class="nc bnc" id="L805" title="All 2 branches missed.">		for(int j=0; j&lt;A.n; j++) {</span>
+<span class="nc" id="L806">			result.entries[rowIndex][j] = CNumber.multiply(A.entries[rowIndex][j], factor); </span>
 		}
 		
-<span class="nc" id="L795">		return result;</span>
+<span class="nc" id="L809">		return result;</span>
 	}
 
 	
@@ -803,7 +817,7 @@
 	 * @return Matrix with specified row multiplied by the factor
 	 */
 	 default Matrix multRow(int rowIndex, double factor) {
-<span class="nc" id="L806">		return multRow(rowIndex, new CNumber(factor));</span>
+<span class="nc" id="L820">		return multRow(rowIndex, new CNumber(factor));</span>
 	}
 	
 	
@@ -814,7 +828,7 @@
 	 * @return Matrix with specified row divided by the divisor.
 	 */
 	 default Matrix divRow(int rowIndex, CNumber divisor) {
-<span class="nc" id="L817">		return multRow(rowIndex, CNumber.inv(divisor));</span>
+<span class="nc" id="L831">		return multRow(rowIndex, CNumber.inv(divisor));</span>
 	}
 	
 	
@@ -825,7 +839,7 @@
 	 * @return Matrix with specified row divided by the divisor.
 	 */
 	 default Matrix divRow(int rowIndex, double divisor) {
-<span class="nc" id="L828">		return multRow(rowIndex, 1 / divisor);</span>
+<span class="nc" id="L842">		return multRow(rowIndex, 1 / divisor);</span>
 	}
 	
 	
@@ -838,28 +852,28 @@
 	 * @return Vector equivalent of matrix.
 	 */
 	 default Vector toVector() {
-<span class="nc" id="L841">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L842">		Vector result = null;</span>
+<span class="nc" id="L855">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L856">		Vector result = null;</span>
 		
-<span class="nc bnc" id="L844" title="All 4 branches missed.">		if(!A.isVector() &amp;&amp; !A.isEmpty()) {</span>
-<span class="nc" id="L845">			throw new IllegalArgumentException(&quot;Can not convert matrix of shape &quot; + A.shape + &quot; to a vector.&quot;);</span>
+<span class="nc bnc" id="L858" title="All 4 branches missed.">		if(!A.isVector() &amp;&amp; !A.isEmpty()) {</span>
+<span class="nc" id="L859">			throw new IllegalArgumentException(&quot;Can not convert matrix of shape &quot; + A.shape + &quot; to a vector.&quot;);</span>
 		} else {
-<span class="nc" id="L847">			int vectorType = A.vectorType();</span>
+<span class="nc" id="L861">			int vectorType = A.vectorType();</span>
 			
 			
-<span class="nc bnc" id="L850" title="All 2 branches missed.">			if(A.isEmpty()) {</span>
-<span class="nc" id="L851">				result = new Vector();</span>
+<span class="nc bnc" id="L864" title="All 2 branches missed.">			if(A.isEmpty()) {</span>
+<span class="nc" id="L865">				result = new Vector();</span>
 			}
 			else { // 1-by-1 matrix or empty matrix will default to a column vector.
-<span class="nc bnc" id="L854" title="All 2 branches missed.">				if(vectorType == 3) {</span>
-<span class="nc" id="L855">					vectorType = Vector.COLUMN_VECTOR;</span>
+<span class="nc bnc" id="L868" title="All 2 branches missed.">				if(vectorType == 3) {</span>
+<span class="nc" id="L869">					vectorType = Vector.COLUMN_VECTOR;</span>
 				}
 				
-<span class="nc" id="L858">				result = new Vector(LinAlgArrayUtils.flatten(A.entries), vectorType);</span>
+<span class="nc" id="L872">				result = new Vector(LinAlgArrayUtils.flatten(A.entries), vectorType);</span>
 			}
 		}
 		
-<span class="nc" id="L862">		return result;</span>
+<span class="nc" id="L876">		return result;</span>
 	}
 	
 	
@@ -872,15 +886,15 @@
 	 * 		Specified number of decimal places.  
 	 */
 	 default Matrix round(int decimals) {
-<span class="nc" id="L875">		Matrix rounded = new Matrix((Matrix) this);</span>
+<span class="nc" id="L889">		Matrix rounded = new Matrix((Matrix) this);</span>
 		
-<span class="nc bnc" id="L877" title="All 2 branches missed.">		for(int i=0; i&lt;rounded.m; i++) {</span>
-<span class="nc bnc" id="L878" title="All 2 branches missed.">			for(int j=0; j&lt;rounded.n; j++) {</span>
-<span class="nc" id="L879">				rounded.entries[i][j] = CNumber.round(rounded.entries[i][j], decimals);</span>
+<span class="nc bnc" id="L891" title="All 2 branches missed.">		for(int i=0; i&lt;rounded.m; i++) {</span>
+<span class="nc bnc" id="L892" title="All 2 branches missed.">			for(int j=0; j&lt;rounded.n; j++) {</span>
+<span class="nc" id="L893">				rounded.entries[i][j] = CNumber.round(rounded.entries[i][j], decimals);</span>
 			}
 		}
 		
-<span class="nc" id="L883">		return rounded;</span>
+<span class="nc" id="L897">		return rounded;</span>
 	}
 	
 	
@@ -890,26 +904,26 @@
 	 * @param decimals - Number of decimals 
 	 */
 	 default void roundToZero(int decimals) {
-<span class="nc" id="L893">		double tolerance = 0.5*Math.pow(10, -decimals);</span>
-<span class="nc" id="L894">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L907">		double tolerance = 0.5*Math.pow(10, -decimals);</span>
+<span class="nc" id="L908">		Matrix A = (Matrix) this;</span>
 		
-<span class="nc bnc" id="L896" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
-<span class="nc bnc" id="L897" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
-<span class="nc bnc" id="L898" title="All 2 branches missed.">				if(Math.abs(A.entries[i][j].mag()) &lt; tolerance) {</span>
-<span class="nc" id="L899">					A.entries[i][j] = CNumber.ZERO;</span>
+<span class="nc bnc" id="L910" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
+<span class="nc bnc" id="L911" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
+<span class="nc bnc" id="L912" title="All 2 branches missed.">				if(Math.abs(A.entries[i][j].mag()) &lt; tolerance) {</span>
+<span class="nc" id="L913">					A.entries[i][j] = CNumber.ZERO;</span>
 				}
 			}
 		}
-<span class="nc" id="L903">	}</span>
+<span class="nc" id="L917">	}</span>
 
 
 	 public static void main(String[] args) {
 
-<span class="nc" id="L908">		double[] val = {1, 2, 3, 4};</span>
-<span class="nc" id="L909">		Vector v = new Vector(val, 1);</span>
+<span class="nc" id="L922">		double[] val = {1, 2, 3, 4};</span>
+<span class="nc" id="L923">		Vector v = new Vector(val, 1);</span>
 
-<span class="nc" id="L911">		Matrix.println(v.extend(4));</span>
-<span class="nc" id="L912">	}</span>
+<span class="nc" id="L925">		Matrix.println(v.extend(4));</span>
+<span class="nc" id="L926">	}</span>
 }
 
 
Index: target/site/jacoco/linalg/MatrixOperations.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixOperations</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_class\">MatrixOperations</span></div><h1>MatrixOperations</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">2,309 of 2,309</td><td class=\"ctr2\">0%</td><td class=\"bar\">172 of 172</td><td class=\"ctr2\">0%</td><td class=\"ctr1\">127</td><td class=\"ctr2\">127</td><td class=\"ctr1\">284</td><td class=\"ctr2\">284</td><td class=\"ctr1\">41</td><td class=\"ctr2\">41</td></tr></tfoot><tbody><tr><td id=\"a19\"><a href=\"MatrixOperations.java.html#L993\" class=\"el_method\">main(String[])</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"255\" alt=\"255\"/></td><td class=\"ctr2\" id=\"c0\">0%</td><td class=\"bar\" id=\"d25\"/><td class=\"ctr2\" id=\"e25\">n/a</td><td class=\"ctr1\" id=\"f25\">1</td><td class=\"ctr2\" id=\"g25\">1</td><td class=\"ctr1\" id=\"h7\">10</td><td class=\"ctr2\" id=\"i7\">10</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a34\"><a href=\"MatrixOperations.java.html#L510\" class=\"el_method\">stack(Matrix, int)</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"98\" height=\"10\" title=\"210\" alt=\"210\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"109\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e0\">0%</td><td class=\"ctr1\" id=\"f1\">11</td><td class=\"ctr2\" id=\"g1\">11</td><td class=\"ctr1\" id=\"h1\">22</td><td class=\"ctr2\" id=\"i1\">22</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a25\"><a href=\"MatrixOperations.java.html#L678\" class=\"el_method\">rref()</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"85\" height=\"10\" title=\"181\" alt=\"181\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"22\" alt=\"22\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">12</td><td class=\"ctr2\" id=\"g0\">12</td><td class=\"ctr1\" id=\"h0\">30</td><td class=\"ctr2\" id=\"i0\">30</td><td class=\"ctr1\" id=\"j2\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr><tr><td id=\"a10\"><a href=\"MatrixOperations.java.html#L182\" class=\"el_method\">elemDiv(Matrix)</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"81\" height=\"10\" title=\"173\" alt=\"173\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f10\">3</td><td class=\"ctr2\" id=\"g10\">3</td><td class=\"ctr1\" id=\"h11\">8</td><td class=\"ctr2\" id=\"i11\">8</td><td class=\"ctr1\" id=\"j3\">1</td><td class=\"ctr2\" id=\"k3\">1</td></tr><tr><td id=\"a20\"><a href=\"MatrixOperations.java.html#L98\" class=\"el_method\">mult(Matrix)</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"62\" height=\"10\" title=\"132\" alt=\"132\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"43\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f6\">5</td><td class=\"ctr2\" id=\"g6\">5</td><td class=\"ctr1\" id=\"h6\">11</td><td class=\"ctr2\" id=\"i6\">11</td><td class=\"ctr1\" id=\"j4\">1</td><td class=\"ctr2\" id=\"k4\">1</td></tr><tr><td id=\"a24\"><a href=\"MatrixOperations.java.html#L587\" class=\"el_method\">ref()</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"53\" height=\"10\" title=\"114\" alt=\"114\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"65\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f3\">7</td><td class=\"ctr2\" id=\"g3\">7</td><td class=\"ctr1\" id=\"h2\">17</td><td class=\"ctr2\" id=\"i2\">17</td><td class=\"ctr1\" id=\"j5\">1</td><td class=\"ctr2\" id=\"k5\">1</td></tr><tr><td id=\"a11\"><a href=\"MatrixOperations.java.html#L128\" class=\"el_method\">elemMult(Matrix)</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"51\" height=\"10\" title=\"109\" alt=\"109\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f11\">3</td><td class=\"ctr2\" id=\"g11\">3</td><td class=\"ctr1\" id=\"h12\">8</td><td class=\"ctr2\" id=\"i12\">8</td><td class=\"ctr1\" id=\"j6\">1</td><td class=\"ctr2\" id=\"k6\">1</td></tr><tr><td id=\"a27\"><a href=\"MatrixOperations.java.html#L766\" class=\"el_method\">rrefNoPivot()</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"50\" height=\"10\" title=\"108\" alt=\"108\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"76\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f2\">8</td><td class=\"ctr2\" id=\"g2\">8</td><td class=\"ctr1\" id=\"h3\">17</td><td class=\"ctr2\" id=\"i3\">17</td><td class=\"ctr1\" id=\"j7\">1</td><td class=\"ctr2\" id=\"k7\">1</td></tr><tr><td id=\"a8\"><a href=\"MatrixOperations.java.html#L411\" class=\"el_method\">detRec(Matrix)</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"102\" alt=\"102\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"54\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f5\">6</td><td class=\"ctr2\" id=\"g5\">6</td><td class=\"ctr1\" id=\"h4\">16</td><td class=\"ctr2\" id=\"i4\">16</td><td class=\"ctr1\" id=\"j8\">1</td><td class=\"ctr2\" id=\"k8\">1</td></tr><tr><td id=\"a9\"><a href=\"MatrixOperations.java.html#L242\" class=\"el_method\">directSum(Matrix[])</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"42\" height=\"10\" title=\"91\" alt=\"91\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f7\">4</td><td class=\"ctr2\" id=\"g7\">4</td><td class=\"ctr1\" id=\"h5\">16</td><td class=\"ctr2\" id=\"i5\">16</td><td class=\"ctr1\" id=\"j9\">1</td><td class=\"ctr2\" id=\"k9\">1</td></tr><tr><td id=\"a2\"><a href=\"MatrixOperations.java.html#L19\" class=\"el_method\">add(Matrix)</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"77\" alt=\"77\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f12\">3</td><td class=\"ctr2\" id=\"g12\">3</td><td class=\"ctr1\" id=\"h13\">8</td><td class=\"ctr2\" id=\"i13\">8</td><td class=\"ctr1\" id=\"j10\">1</td><td class=\"ctr2\" id=\"k10\">1</td></tr><tr><td id=\"a36\"><a href=\"MatrixOperations.java.html#L62\" class=\"el_method\">sub(Matrix)</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"77\" alt=\"77\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f13\">3</td><td class=\"ctr2\" id=\"g13\">3</td><td class=\"ctr1\" id=\"h14\">8</td><td class=\"ctr2\" id=\"i14\">8</td><td class=\"ctr1\" id=\"j11\">1</td><td class=\"ctr2\" id=\"k11\">1</td></tr><tr><td id=\"a37\"><a href=\"MatrixOperations.java.html#L327\" class=\"el_method\">T()</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"69\" alt=\"69\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"65\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f4\">7</td><td class=\"ctr2\" id=\"g4\">7</td><td class=\"ctr1\" id=\"h10\">9</td><td class=\"ctr2\" id=\"i10\">9</td><td class=\"ctr1\" id=\"j12\">1</td><td class=\"ctr2\" id=\"k12\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixOperations.java.html#L467\" class=\"el_method\">det()</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"28\" height=\"10\" title=\"60\" alt=\"60\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f8\">4</td><td class=\"ctr2\" id=\"g8\">4</td><td class=\"ctr1\" id=\"h8\">10</td><td class=\"ctr2\" id=\"i8\">10</td><td class=\"ctr1\" id=\"j13\">1</td><td class=\"ctr2\" id=\"k13\">1</td></tr><tr><td id=\"a17\"><a href=\"MatrixOperations.java.html#L900\" class=\"el_method\">inverse()</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"27\" height=\"10\" title=\"59\" alt=\"59\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f9\">4</td><td class=\"ctr2\" id=\"g9\">4</td><td class=\"ctr1\" id=\"h9\">10</td><td class=\"ctr2\" id=\"i9\">10</td><td class=\"ctr1\" id=\"j14\">1</td><td class=\"ctr2\" id=\"k14\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixOperations.java.html#L446\" class=\"el_method\">detQR(Matrix)</a></td><td class=\"bar\" id=\"b15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"46\" alt=\"46\"/></td><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e14\">0%</td><td class=\"ctr1\" id=\"f23\">2</td><td class=\"ctr2\" id=\"g23\">2</td><td class=\"ctr1\" id=\"h18\">6</td><td class=\"ctr2\" id=\"i18\">6</td><td class=\"ctr1\" id=\"j15\">1</td><td class=\"ctr2\" id=\"k15\">1</td></tr><tr><td id=\"a1\"><a href=\"MatrixOperations.java.html#L40\" class=\"el_method\">add(double)</a></td><td class=\"bar\" id=\"b16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"45\" alt=\"45\"/></td><td class=\"ctr2\" id=\"c16\">0%</td><td class=\"bar\" id=\"d14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e15\">0%</td><td class=\"ctr1\" id=\"f14\">3</td><td class=\"ctr2\" id=\"g14\">3</td><td class=\"ctr1\" id=\"h19\">6</td><td class=\"ctr2\" id=\"i19\">6</td><td class=\"ctr1\" id=\"j16\">1</td><td class=\"ctr2\" id=\"k16\">1</td></tr><tr><td id=\"a30\"><a href=\"MatrixOperations.java.html#L162\" class=\"el_method\">scalMult(CNumber)</a></td><td class=\"bar\" id=\"b17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"43\" alt=\"43\"/></td><td class=\"ctr2\" id=\"c17\">0%</td><td class=\"bar\" id=\"d15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e16\">0%</td><td class=\"ctr1\" id=\"f15\">3</td><td class=\"ctr2\" id=\"g15\">3</td><td class=\"ctr1\" id=\"h20\">6</td><td class=\"ctr2\" id=\"i20\">6</td><td class=\"ctr1\" id=\"j17\">1</td><td class=\"ctr2\" id=\"k17\">1</td></tr><tr><td id=\"a0\"><a href=\"MatrixOperations.java.html#L297\" class=\"el_method\">abs()</a></td><td class=\"bar\" id=\"b18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"19\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"c18\">0%</td><td class=\"bar\" id=\"d16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e17\">0%</td><td class=\"ctr1\" id=\"f16\">3</td><td class=\"ctr2\" id=\"g16\">3</td><td class=\"ctr1\" id=\"h21\">6</td><td class=\"ctr2\" id=\"i21\">6</td><td class=\"ctr1\" id=\"j18\">1</td><td class=\"ctr2\" id=\"k18\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixOperations.java.html#L354\" class=\"el_method\">conjugate()</a></td><td class=\"bar\" id=\"b19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"19\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"c19\">0%</td><td class=\"bar\" id=\"d17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e18\">0%</td><td class=\"ctr1\" id=\"f17\">3</td><td class=\"ctr2\" id=\"g17\">3</td><td class=\"ctr1\" id=\"h22\">6</td><td class=\"ctr2\" id=\"i22\">6</td><td class=\"ctr1\" id=\"j19\">1</td><td class=\"ctr2\" id=\"k19\">1</td></tr><tr><td id=\"a39\"><a href=\"MatrixOperations.java.html#L825\" class=\"el_method\">trace()</a></td><td class=\"bar\" id=\"b20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c20\">0%</td><td class=\"bar\" id=\"d18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e19\">0%</td><td class=\"ctr1\" id=\"f18\">3</td><td class=\"ctr2\" id=\"g18\">3</td><td class=\"ctr1\" id=\"h15\">7</td><td class=\"ctr2\" id=\"i15\">7</td><td class=\"ctr1\" id=\"j20\">1</td><td class=\"ctr2\" id=\"k20\">1</td></tr><tr><td id=\"a18\"><a href=\"MatrixOperations.java.html#L956\" class=\"el_method\">inverseTriU(Matrix)</a></td><td class=\"bar\" id=\"b21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c21\">0%</td><td class=\"bar\" id=\"d19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e20\">0%</td><td class=\"ctr1\" id=\"f19\">3</td><td class=\"ctr2\" id=\"g19\">3</td><td class=\"ctr1\" id=\"h16\">7</td><td class=\"ctr2\" id=\"i16\">7</td><td class=\"ctr1\" id=\"j21\">1</td><td class=\"ctr2\" id=\"k21\">1</td></tr><tr><td id=\"a23\"><a href=\"MatrixOperations.java.html#L978\" class=\"el_method\">recep()</a></td><td class=\"bar\" id=\"b22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c22\">0%</td><td class=\"bar\" id=\"d20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e21\">0%</td><td class=\"ctr1\" id=\"f20\">3</td><td class=\"ctr2\" id=\"g20\">3</td><td class=\"ctr1\" id=\"h23\">5</td><td class=\"ctr2\" id=\"i23\">5</td><td class=\"ctr1\" id=\"j22\">1</td><td class=\"ctr2\" id=\"k22\">1</td></tr><tr><td id=\"a32\"><a href=\"MatrixOperations.java.html#L277\" class=\"el_method\">sqrt()</a></td><td class=\"bar\" id=\"b23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"35\" alt=\"35\"/></td><td class=\"ctr2\" id=\"c23\">0%</td><td class=\"bar\" id=\"d21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e22\">0%</td><td class=\"ctr1\" id=\"f21\">3</td><td class=\"ctr2\" id=\"g21\">3</td><td class=\"ctr1\" id=\"h24\">5</td><td class=\"ctr2\" id=\"i24\">5</td><td class=\"ctr1\" id=\"j23\">1</td><td class=\"ctr2\" id=\"k23\">1</td></tr><tr><td id=\"a22\"><a href=\"MatrixOperations.java.html#L864\" class=\"el_method\">rank()</a></td><td class=\"bar\" id=\"b24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"26\" alt=\"26\"/></td><td class=\"ctr2\" id=\"c24\">0%</td><td class=\"bar\" id=\"d22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e23\">0%</td><td class=\"ctr1\" id=\"f22\">3</td><td class=\"ctr2\" id=\"g22\">3</td><td class=\"ctr1\" id=\"h17\">7</td><td class=\"ctr2\" id=\"i17\">7</td><td class=\"ctr1\" id=\"j24\">1</td><td class=\"ctr2\" id=\"k24\">1</td></tr><tr><td id=\"a12\"><a href=\"MatrixOperations.java.html#L808\" class=\"el_method\">erref()</a></td><td class=\"bar\" id=\"b25\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"c25\">0%</td><td class=\"bar\" id=\"d26\"/><td class=\"ctr2\" id=\"e26\">n/a</td><td class=\"ctr1\" id=\"f26\">1</td><td class=\"ctr2\" id=\"g26\">1</td><td class=\"ctr1\" id=\"h25\">4</td><td class=\"ctr2\" id=\"i25\">4</td><td class=\"ctr1\" id=\"j25\">1</td><td class=\"ctr2\" id=\"k25\">1</td></tr><tr><td id=\"a29\"><a href=\"MatrixOperations.java.html#L207\" class=\"el_method\">scalDiv(double)</a></td><td class=\"bar\" id=\"b26\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"11\" alt=\"11\"/></td><td class=\"ctr2\" id=\"c26\">0%</td><td class=\"bar\" id=\"d27\"/><td class=\"ctr2\" id=\"e27\">n/a</td><td class=\"ctr1\" id=\"f27\">1</td><td class=\"ctr2\" id=\"g27\">1</td><td class=\"ctr1\" id=\"h26\">2</td><td class=\"ctr2\" id=\"i26\">2</td><td class=\"ctr1\" id=\"j26\">1</td><td class=\"ctr2\" id=\"k26\">1</td></tr><tr><td id=\"a21\"><a href=\"MatrixOperations.java.html#L888\" class=\"el_method\">nullity()</a></td><td class=\"bar\" id=\"b27\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"9\" alt=\"9\"/></td><td class=\"ctr2\" id=\"c27\">0%</td><td class=\"bar\" id=\"d28\"/><td class=\"ctr2\" id=\"e28\">n/a</td><td class=\"ctr1\" id=\"f28\">1</td><td class=\"ctr2\" id=\"g28\">1</td><td class=\"ctr1\" id=\"h27\">2</td><td class=\"ctr2\" id=\"i27\">2</td><td class=\"ctr1\" id=\"j27\">1</td><td class=\"ctr2\" id=\"k27\">1</td></tr><tr><td id=\"a28\"><a href=\"MatrixOperations.java.html#L219\" class=\"el_method\">scalDiv(CNumber)</a></td><td class=\"bar\" id=\"b28\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"c28\">0%</td><td class=\"bar\" id=\"d29\"/><td class=\"ctr2\" id=\"e29\">n/a</td><td class=\"ctr1\" id=\"f29\">1</td><td class=\"ctr2\" id=\"g29\">1</td><td class=\"ctr1\" id=\"h28\">2</td><td class=\"ctr2\" id=\"i28\">2</td><td class=\"ctr1\" id=\"j28\">1</td><td class=\"ctr2\" id=\"k28\">1</td></tr><tr><td id=\"a26\"><a href=\"MatrixOperations.java.html#L652\" class=\"el_method\">rref(boolean)</a></td><td class=\"bar\" id=\"b29\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"c29\">0%</td><td class=\"bar\" id=\"d24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e24\">0%</td><td class=\"ctr1\" id=\"f24\">2</td><td class=\"ctr2\" id=\"g24\">2</td><td class=\"ctr1\" id=\"h29\">2</td><td class=\"ctr2\" id=\"i29\">2</td><td class=\"ctr1\" id=\"j29\">1</td><td class=\"ctr2\" id=\"k29\">1</td></tr><tr><td id=\"a31\"><a href=\"MatrixOperations.java.html#L151\" class=\"el_method\">scalMult(double)</a></td><td class=\"bar\" id=\"b30\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"c30\">0%</td><td class=\"bar\" id=\"d30\"/><td class=\"ctr2\" id=\"e30\">n/a</td><td class=\"ctr1\" id=\"f30\">1</td><td class=\"ctr2\" id=\"g30\">1</td><td class=\"ctr1\" id=\"h30\">1</td><td class=\"ctr2\" id=\"i30\">1</td><td class=\"ctr1\" id=\"j30\">1</td><td class=\"ctr2\" id=\"k30\">1</td></tr><tr><td id=\"a35\"><a href=\"MatrixOperations.java.html#L83\" class=\"el_method\">sub(double)</a></td><td class=\"bar\" id=\"b31\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c31\">0%</td><td class=\"bar\" id=\"d31\"/><td class=\"ctr2\" id=\"e31\">n/a</td><td class=\"ctr1\" id=\"f31\">1</td><td class=\"ctr2\" id=\"g31\">1</td><td class=\"ctr1\" id=\"h31\">1</td><td class=\"ctr2\" id=\"i31\">1</td><td class=\"ctr1\" id=\"j31\">1</td><td class=\"ctr2\" id=\"k31\">1</td></tr><tr><td id=\"a13\"><a href=\"MatrixOperations.java.html#L231\" class=\"el_method\">fip(Matrix)</a></td><td class=\"bar\" id=\"b32\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c32\">0%</td><td class=\"bar\" id=\"d32\"/><td class=\"ctr2\" id=\"e32\">n/a</td><td class=\"ctr1\" id=\"f32\">1</td><td class=\"ctr2\" id=\"g32\">1</td><td class=\"ctr1\" id=\"h32\">1</td><td class=\"ctr2\" id=\"i32\">1</td><td class=\"ctr1\" id=\"j32\">1</td><td class=\"ctr2\" id=\"k32\">1</td></tr><tr><td id=\"a33\"><a href=\"MatrixOperations.java.html#L494\" class=\"el_method\">stack(Matrix)</a></td><td class=\"bar\" id=\"b33\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c33\">0%</td><td class=\"bar\" id=\"d33\"/><td class=\"ctr2\" id=\"e33\">n/a</td><td class=\"ctr1\" id=\"f33\">1</td><td class=\"ctr2\" id=\"g33\">1</td><td class=\"ctr1\" id=\"h33\">1</td><td class=\"ctr2\" id=\"i33\">1</td><td class=\"ctr1\" id=\"j33\">1</td><td class=\"ctr2\" id=\"k33\">1</td></tr><tr><td id=\"a3\"><a href=\"MatrixOperations.java.html#L564\" class=\"el_method\">augment(Matrix)</a></td><td class=\"bar\" id=\"b34\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c34\">0%</td><td class=\"bar\" id=\"d34\"/><td class=\"ctr2\" id=\"e34\">n/a</td><td class=\"ctr1\" id=\"f34\">1</td><td class=\"ctr2\" id=\"g34\">1</td><td class=\"ctr1\" id=\"h34\">1</td><td class=\"ctr2\" id=\"i34\">1</td><td class=\"ctr1\" id=\"j34\">1</td><td class=\"ctr2\" id=\"k34\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixOperations.java.html#L375\" class=\"el_method\">conjT()</a></td><td class=\"bar\" id=\"b35\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c35\">0%</td><td class=\"bar\" id=\"d35\"/><td class=\"ctr2\" id=\"e35\">n/a</td><td class=\"ctr1\" id=\"f35\">1</td><td class=\"ctr2\" id=\"g35\">1</td><td class=\"ctr1\" id=\"h35\">1</td><td class=\"ctr2\" id=\"i35\">1</td><td class=\"ctr1\" id=\"j35\">1</td><td class=\"ctr2\" id=\"k35\">1</td></tr><tr><td id=\"a15\"><a href=\"MatrixOperations.java.html#L387\" class=\"el_method\">hermAdjoint()</a></td><td class=\"bar\" id=\"b36\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c36\">0%</td><td class=\"bar\" id=\"d36\"/><td class=\"ctr2\" id=\"e36\">n/a</td><td class=\"ctr1\" id=\"f36\">1</td><td class=\"ctr2\" id=\"g36\">1</td><td class=\"ctr1\" id=\"h36\">1</td><td class=\"ctr2\" id=\"i36\">1</td><td class=\"ctr1\" id=\"j36\">1</td><td class=\"ctr2\" id=\"k36\">1</td></tr><tr><td id=\"a14\"><a href=\"MatrixOperations.java.html#L399\" class=\"el_method\">H()</a></td><td class=\"bar\" id=\"b37\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c37\">0%</td><td class=\"bar\" id=\"d37\"/><td class=\"ctr2\" id=\"e37\">n/a</td><td class=\"ctr1\" id=\"f37\">1</td><td class=\"ctr2\" id=\"g37\">1</td><td class=\"ctr1\" id=\"h37\">1</td><td class=\"ctr2\" id=\"i37\">1</td><td class=\"ctr1\" id=\"j37\">1</td><td class=\"ctr2\" id=\"k37\">1</td></tr><tr><td id=\"a40\"><a href=\"MatrixOperations.java.html#L316\" class=\"el_method\">transpose()</a></td><td class=\"bar\" id=\"b38\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c38\">0%</td><td class=\"bar\" id=\"d38\"/><td class=\"ctr2\" id=\"e38\">n/a</td><td class=\"ctr1\" id=\"f38\">1</td><td class=\"ctr2\" id=\"g38\">1</td><td class=\"ctr1\" id=\"h38\">1</td><td class=\"ctr2\" id=\"i38\">1</td><td class=\"ctr1\" id=\"j38\">1</td><td class=\"ctr2\" id=\"k38\">1</td></tr><tr><td id=\"a38\"><a href=\"MatrixOperations.java.html#L850\" class=\"el_method\">tr()</a></td><td class=\"bar\" id=\"b39\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c39\">0%</td><td class=\"bar\" id=\"d39\"/><td class=\"ctr2\" id=\"e39\">n/a</td><td class=\"ctr1\" id=\"f39\">1</td><td class=\"ctr2\" id=\"g39\">1</td><td class=\"ctr1\" id=\"h39\">1</td><td class=\"ctr2\" id=\"i39\">1</td><td class=\"ctr1\" id=\"j39\">1</td><td class=\"ctr2\" id=\"k39\">1</td></tr><tr><td id=\"a16\"><a href=\"MatrixOperations.java.html#L937\" class=\"el_method\">inv()</a></td><td class=\"bar\" id=\"b40\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c40\">0%</td><td class=\"bar\" id=\"d40\"/><td class=\"ctr2\" id=\"e40\">n/a</td><td class=\"ctr1\" id=\"f40\">1</td><td class=\"ctr2\" id=\"g40\">1</td><td class=\"ctr1\" id=\"h40\">1</td><td class=\"ctr2\" id=\"i40\">1</td><td class=\"ctr1\" id=\"j40\">1</td><td class=\"ctr2\" id=\"k40\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixOperations.html b/target/site/jacoco/linalg/MatrixOperations.html
--- a/target/site/jacoco/linalg/MatrixOperations.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/MatrixOperations.html	(date 1648105701867)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixOperations</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixOperations</span></div><h1>MatrixOperations</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,309 of 2,309</td><td class="ctr2">0%</td><td class="bar">172 of 172</td><td class="ctr2">0%</td><td class="ctr1">127</td><td class="ctr2">127</td><td class="ctr1">284</td><td class="ctr2">284</td><td class="ctr1">41</td><td class="ctr2">41</td></tr></tfoot><tbody><tr><td id="a19"><a href="MatrixOperations.java.html#L993" class="el_method">main(String[])</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="255" alt="255"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d25"/><td class="ctr2" id="e25">n/a</td><td class="ctr1" id="f25">1</td><td class="ctr2" id="g25">1</td><td class="ctr1" id="h7">10</td><td class="ctr2" id="i7">10</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a34"><a href="MatrixOperations.java.html#L510" class="el_method">stack(Matrix, int)</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="98" height="10" title="210" alt="210"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="109" height="10" title="20" alt="20"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f1">11</td><td class="ctr2" id="g1">11</td><td class="ctr1" id="h1">22</td><td class="ctr2" id="i1">22</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a25"><a href="MatrixOperations.java.html#L678" class="el_method">rref()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="85" height="10" title="181" alt="181"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="22" alt="22"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">12</td><td class="ctr2" id="g0">12</td><td class="ctr1" id="h0">30</td><td class="ctr2" id="i0">30</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a10"><a href="MatrixOperations.java.html#L182" class="el_method">elemDiv(Matrix)</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="81" height="10" title="173" alt="173"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f10">3</td><td class="ctr2" id="g10">3</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a20"><a href="MatrixOperations.java.html#L98" class="el_method">mult(Matrix)</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="62" height="10" title="132" alt="132"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="43" height="10" title="8" alt="8"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g6">5</td><td class="ctr1" id="h6">11</td><td class="ctr2" id="i6">11</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a24"><a href="MatrixOperations.java.html#L587" class="el_method">ref()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="114" alt="114"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f3">7</td><td class="ctr2" id="g3">7</td><td class="ctr1" id="h2">17</td><td class="ctr2" id="i2">17</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a11"><a href="MatrixOperations.java.html#L128" class="el_method">elemMult(Matrix)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="51" height="10" title="109" alt="109"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f11">3</td><td class="ctr2" id="g11">3</td><td class="ctr1" id="h12">8</td><td class="ctr2" id="i12">8</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a27"><a href="MatrixOperations.java.html#L766" class="el_method">rrefNoPivot()</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="50" height="10" title="108" alt="108"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="14" alt="14"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f2">8</td><td class="ctr2" id="g2">8</td><td class="ctr1" id="h3">17</td><td class="ctr2" id="i3">17</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a8"><a href="MatrixOperations.java.html#L411" class="el_method">detRec(Matrix)</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="102" alt="102"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f5">6</td><td class="ctr2" id="g5">6</td><td class="ctr1" id="h4">16</td><td class="ctr2" id="i4">16</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a9"><a href="MatrixOperations.java.html#L242" class="el_method">directSum(Matrix[])</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="42" height="10" title="91" alt="91"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f7">4</td><td class="ctr2" id="g7">4</td><td class="ctr1" id="h5">16</td><td class="ctr2" id="i5">16</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a2"><a href="MatrixOperations.java.html#L19" class="el_method">add(Matrix)</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="77" alt="77"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f12">3</td><td class="ctr2" id="g12">3</td><td class="ctr1" id="h13">8</td><td class="ctr2" id="i13">8</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a36"><a href="MatrixOperations.java.html#L62" class="el_method">sub(Matrix)</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="77" alt="77"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f13">3</td><td class="ctr2" id="g13">3</td><td class="ctr1" id="h14">8</td><td class="ctr2" id="i14">8</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a37"><a href="MatrixOperations.java.html#L327" class="el_method">T()</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="69" alt="69"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f4">7</td><td class="ctr2" id="g4">7</td><td class="ctr1" id="h10">9</td><td class="ctr2" id="i10">9</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a6"><a href="MatrixOperations.java.html#L467" class="el_method">det()</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="60" alt="60"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f8">4</td><td class="ctr2" id="g8">4</td><td class="ctr1" id="h8">10</td><td class="ctr2" id="i8">10</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a17"><a href="MatrixOperations.java.html#L900" class="el_method">inverse()</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="59" alt="59"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f9">4</td><td class="ctr2" id="g9">4</td><td class="ctr1" id="h9">10</td><td class="ctr2" id="i9">10</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a7"><a href="MatrixOperations.java.html#L446" class="el_method">detQR(Matrix)</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="46" alt="46"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f23">2</td><td class="ctr2" id="g23">2</td><td class="ctr1" id="h18">6</td><td class="ctr2" id="i18">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a1"><a href="MatrixOperations.java.html#L40" class="el_method">add(double)</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="45" alt="45"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h19">6</td><td class="ctr2" id="i19">6</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a30"><a href="MatrixOperations.java.html#L162" class="el_method">scalMult(CNumber)</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="43" alt="43"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f15">3</td><td class="ctr2" id="g15">3</td><td class="ctr1" id="h20">6</td><td class="ctr2" id="i20">6</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a0"><a href="MatrixOperations.java.html#L297" class="el_method">abs()</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="19" height="10" title="42" alt="42"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f16">3</td><td class="ctr2" id="g16">3</td><td class="ctr1" id="h21">6</td><td class="ctr2" id="i21">6</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a5"><a href="MatrixOperations.java.html#L354" class="el_method">conjugate()</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="19" height="10" title="42" alt="42"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f17">3</td><td class="ctr2" id="g17">3</td><td class="ctr1" id="h22">6</td><td class="ctr2" id="i22">6</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a39"><a href="MatrixOperations.java.html#L825" class="el_method">trace()</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="39" alt="39"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f18">3</td><td class="ctr2" id="g18">3</td><td class="ctr1" id="h15">7</td><td class="ctr2" id="i15">7</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a18"><a href="MatrixOperations.java.html#L956" class="el_method">inverseTriU(Matrix)</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f19">3</td><td class="ctr2" id="g19">3</td><td class="ctr1" id="h16">7</td><td class="ctr2" id="i16">7</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a23"><a href="MatrixOperations.java.html#L978" class="el_method">recep()</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="38" alt="38"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f20">3</td><td class="ctr2" id="g20">3</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a32"><a href="MatrixOperations.java.html#L277" class="el_method">sqrt()</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="35" alt="35"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a22"><a href="MatrixOperations.java.html#L864" class="el_method">rank()</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="26" alt="26"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a12"><a href="MatrixOperations.java.html#L808" class="el_method">erref()</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="14" alt="14"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d26"/><td class="ctr2" id="e26">n/a</td><td class="ctr1" id="f26">1</td><td class="ctr2" id="g26">1</td><td class="ctr1" id="h25">4</td><td class="ctr2" id="i25">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a29"><a href="MatrixOperations.java.html#L207" class="el_method">scalDiv(double)</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="11" alt="11"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d27"/><td class="ctr2" id="e27">n/a</td><td class="ctr1" id="f27">1</td><td class="ctr2" id="g27">1</td><td class="ctr1" id="h26">2</td><td class="ctr2" id="i26">2</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a21"><a href="MatrixOperations.java.html#L888" class="el_method">nullity()</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="9" alt="9"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d28"/><td class="ctr2" id="e28">n/a</td><td class="ctr1" id="f28">1</td><td class="ctr2" id="g28">1</td><td class="ctr1" id="h27">2</td><td class="ctr2" id="i27">2</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a28"><a href="MatrixOperations.java.html#L219" class="el_method">scalDiv(CNumber)</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="8" alt="8"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d29"/><td class="ctr2" id="e29">n/a</td><td class="ctr1" id="f29">1</td><td class="ctr2" id="g29">1</td><td class="ctr1" id="h28">2</td><td class="ctr2" id="i28">2</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a26"><a href="MatrixOperations.java.html#L652" class="el_method">rref(boolean)</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="8" alt="8"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f24">2</td><td class="ctr2" id="g24">2</td><td class="ctr1" id="h29">2</td><td class="ctr2" id="i29">2</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a31"><a href="MatrixOperations.java.html#L151" class="el_method">scalMult(double)</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="7" alt="7"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d30"/><td class="ctr2" id="e30">n/a</td><td class="ctr1" id="f30">1</td><td class="ctr2" id="g30">1</td><td class="ctr1" id="h30">1</td><td class="ctr2" id="i30">1</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a35"><a href="MatrixOperations.java.html#L83" class="el_method">sub(double)</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d31"/><td class="ctr2" id="e31">n/a</td><td class="ctr1" id="f31">1</td><td class="ctr2" id="g31">1</td><td class="ctr1" id="h31">1</td><td class="ctr2" id="i31">1</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a13"><a href="MatrixOperations.java.html#L231" class="el_method">fip(Matrix)</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d32"/><td class="ctr2" id="e32">n/a</td><td class="ctr1" id="f32">1</td><td class="ctr2" id="g32">1</td><td class="ctr1" id="h32">1</td><td class="ctr2" id="i32">1</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a33"><a href="MatrixOperations.java.html#L494" class="el_method">stack(Matrix)</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d33"/><td class="ctr2" id="e33">n/a</td><td class="ctr1" id="f33">1</td><td class="ctr2" id="g33">1</td><td class="ctr1" id="h33">1</td><td class="ctr2" id="i33">1</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a3"><a href="MatrixOperations.java.html#L564" class="el_method">augment(Matrix)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h34">1</td><td class="ctr2" id="i34">1</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a4"><a href="MatrixOperations.java.html#L375" class="el_method">conjT()</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">1</td><td class="ctr2" id="i35">1</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a15"><a href="MatrixOperations.java.html#L387" class="el_method">hermAdjoint()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">1</td><td class="ctr2" id="i36">1</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a14"><a href="MatrixOperations.java.html#L399" class="el_method">H()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="4" alt="4"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">1</td><td class="ctr2" id="i37">1</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a40"><a href="MatrixOperations.java.html#L316" class="el_method">transpose()</a></td><td class="bar" id="b38"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i38">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a38"><a href="MatrixOperations.java.html#L850" class="el_method">tr()</a></td><td class="bar" id="b39"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i39">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr><tr><td id="a16"><a href="MatrixOperations.java.html#L937" class="el_method">inv()</a></td><td class="bar" id="b40"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c40">0%</td><td class="bar" id="d40"/><td class="ctr2" id="e40">n/a</td><td class="ctr1" id="f40">1</td><td class="ctr2" id="g40">1</td><td class="ctr1" id="h40">1</td><td class="ctr2" id="i40">1</td><td class="ctr1" id="j40">1</td><td class="ctr2" id="k40">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixOperations</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixOperations</span></div><h1>MatrixOperations</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,093 of 2,093</td><td class="ctr2">0%</td><td class="bar">172 of 172</td><td class="ctr2">0%</td><td class="ctr1">127</td><td class="ctr2">127</td><td class="ctr1">282</td><td class="ctr2">282</td><td class="ctr1">41</td><td class="ctr2">41</td></tr></tfoot><tbody><tr><td id="a34"><a href="MatrixOperations.java.html#L510" class="el_method">stack(Matrix, int)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="210" alt="210"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="109" height="10" title="20" alt="20"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f1">11</td><td class="ctr2" id="g1">11</td><td class="ctr1" id="h1">22</td><td class="ctr2" id="i1">22</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a25"><a href="MatrixOperations.java.html#L678" class="el_method">rref()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="103" height="10" title="181" alt="181"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="22" alt="22"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">12</td><td class="ctr2" id="g0">12</td><td class="ctr1" id="h0">30</td><td class="ctr2" id="i0">30</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a10"><a href="MatrixOperations.java.html#L182" class="el_method">elemDiv(Matrix)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="98" height="10" title="173" alt="173"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f10">3</td><td class="ctr2" id="g10">3</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a20"><a href="MatrixOperations.java.html#L98" class="el_method">mult(Matrix)</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="75" height="10" title="132" alt="132"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="43" height="10" title="8" alt="8"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g6">5</td><td class="ctr1" id="h6">11</td><td class="ctr2" id="i6">11</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a24"><a href="MatrixOperations.java.html#L587" class="el_method">ref()</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="114" alt="114"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f3">7</td><td class="ctr2" id="g3">7</td><td class="ctr1" id="h2">17</td><td class="ctr2" id="i2">17</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a11"><a href="MatrixOperations.java.html#L128" class="el_method">elemMult(Matrix)</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="62" height="10" title="109" alt="109"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f11">3</td><td class="ctr2" id="g11">3</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a27"><a href="MatrixOperations.java.html#L766" class="el_method">rrefNoPivot()</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="61" height="10" title="108" alt="108"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="14" alt="14"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f2">8</td><td class="ctr2" id="g2">8</td><td class="ctr1" id="h3">17</td><td class="ctr2" id="i3">17</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a8"><a href="MatrixOperations.java.html#L411" class="el_method">detRec(Matrix)</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="58" height="10" title="102" alt="102"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f5">6</td><td class="ctr2" id="g5">6</td><td class="ctr1" id="h4">16</td><td class="ctr2" id="i4">16</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a9"><a href="MatrixOperations.java.html#L242" class="el_method">directSum(Matrix[])</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="52" height="10" title="91" alt="91"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f7">4</td><td class="ctr2" id="g7">4</td><td class="ctr1" id="h5">16</td><td class="ctr2" id="i5">16</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a2"><a href="MatrixOperations.java.html#L19" class="el_method">add(Matrix)</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="44" height="10" title="77" alt="77"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f12">3</td><td class="ctr2" id="g12">3</td><td class="ctr1" id="h12">8</td><td class="ctr2" id="i12">8</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a36"><a href="MatrixOperations.java.html#L62" class="el_method">sub(Matrix)</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="44" height="10" title="77" alt="77"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f13">3</td><td class="ctr2" id="g13">3</td><td class="ctr1" id="h13">8</td><td class="ctr2" id="i13">8</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a37"><a href="MatrixOperations.java.html#L327" class="el_method">T()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="39" height="10" title="69" alt="69"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f4">7</td><td class="ctr2" id="g4">7</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a6"><a href="MatrixOperations.java.html#L467" class="el_method">det()</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="34" height="10" title="60" alt="60"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f8">4</td><td class="ctr2" id="g8">4</td><td class="ctr1" id="h7">10</td><td class="ctr2" id="i7">10</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a17"><a href="MatrixOperations.java.html#L900" class="el_method">inverse()</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="33" height="10" title="59" alt="59"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f9">4</td><td class="ctr2" id="g9">4</td><td class="ctr1" id="h8">10</td><td class="ctr2" id="i8">10</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a7"><a href="MatrixOperations.java.html#L446" class="el_method">detQR(Matrix)</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="46" alt="46"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f23">2</td><td class="ctr2" id="g23">2</td><td class="ctr1" id="h18">6</td><td class="ctr2" id="i18">6</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a1"><a href="MatrixOperations.java.html#L40" class="el_method">add(double)</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="25" height="10" title="45" alt="45"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h19">6</td><td class="ctr2" id="i19">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a30"><a href="MatrixOperations.java.html#L162" class="el_method">scalMult(CNumber)</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="43" alt="43"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f15">3</td><td class="ctr2" id="g15">3</td><td class="ctr1" id="h20">6</td><td class="ctr2" id="i20">6</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a0"><a href="MatrixOperations.java.html#L297" class="el_method">abs()</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f16">3</td><td class="ctr2" id="g16">3</td><td class="ctr1" id="h21">6</td><td class="ctr2" id="i21">6</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a5"><a href="MatrixOperations.java.html#L354" class="el_method">conjugate()</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f17">3</td><td class="ctr2" id="g17">3</td><td class="ctr1" id="h22">6</td><td class="ctr2" id="i22">6</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a39"><a href="MatrixOperations.java.html#L825" class="el_method">trace()</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="39" alt="39"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f18">3</td><td class="ctr2" id="g18">3</td><td class="ctr1" id="h15">7</td><td class="ctr2" id="i15">7</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a19"><a href="MatrixOperations.java.html#L991" class="el_method">main(String[])</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="39" alt="39"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d25"/><td class="ctr2" id="e25">n/a</td><td class="ctr1" id="f25">1</td><td class="ctr2" id="g25">1</td><td class="ctr1" id="h14">8</td><td class="ctr2" id="i14">8</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a18"><a href="MatrixOperations.java.html#L956" class="el_method">inverseTriU(Matrix)</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="38" alt="38"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f19">3</td><td class="ctr2" id="g19">3</td><td class="ctr1" id="h16">7</td><td class="ctr2" id="i16">7</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a23"><a href="MatrixOperations.java.html#L978" class="el_method">recep()</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="38" alt="38"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f20">3</td><td class="ctr2" id="g20">3</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a32"><a href="MatrixOperations.java.html#L277" class="el_method">sqrt()</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="35" alt="35"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a22"><a href="MatrixOperations.java.html#L864" class="el_method">rank()</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="14" height="10" title="26" alt="26"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a12"><a href="MatrixOperations.java.html#L808" class="el_method">erref()</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="14" alt="14"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d26"/><td class="ctr2" id="e26">n/a</td><td class="ctr1" id="f26">1</td><td class="ctr2" id="g26">1</td><td class="ctr1" id="h25">4</td><td class="ctr2" id="i25">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a29"><a href="MatrixOperations.java.html#L207" class="el_method">scalDiv(double)</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="11" alt="11"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d27"/><td class="ctr2" id="e27">n/a</td><td class="ctr1" id="f27">1</td><td class="ctr2" id="g27">1</td><td class="ctr1" id="h26">2</td><td class="ctr2" id="i26">2</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a21"><a href="MatrixOperations.java.html#L888" class="el_method">nullity()</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="9" alt="9"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d28"/><td class="ctr2" id="e28">n/a</td><td class="ctr1" id="f28">1</td><td class="ctr2" id="g28">1</td><td class="ctr1" id="h27">2</td><td class="ctr2" id="i27">2</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a28"><a href="MatrixOperations.java.html#L219" class="el_method">scalDiv(CNumber)</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d29"/><td class="ctr2" id="e29">n/a</td><td class="ctr1" id="f29">1</td><td class="ctr2" id="g29">1</td><td class="ctr1" id="h28">2</td><td class="ctr2" id="i28">2</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a26"><a href="MatrixOperations.java.html#L652" class="el_method">rref(boolean)</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f24">2</td><td class="ctr2" id="g24">2</td><td class="ctr1" id="h29">2</td><td class="ctr2" id="i29">2</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a31"><a href="MatrixOperations.java.html#L151" class="el_method">scalMult(double)</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="7" alt="7"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d30"/><td class="ctr2" id="e30">n/a</td><td class="ctr1" id="f30">1</td><td class="ctr2" id="g30">1</td><td class="ctr1" id="h30">1</td><td class="ctr2" id="i30">1</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a35"><a href="MatrixOperations.java.html#L83" class="el_method">sub(double)</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d31"/><td class="ctr2" id="e31">n/a</td><td class="ctr1" id="f31">1</td><td class="ctr2" id="g31">1</td><td class="ctr1" id="h31">1</td><td class="ctr2" id="i31">1</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a13"><a href="MatrixOperations.java.html#L231" class="el_method">fip(Matrix)</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d32"/><td class="ctr2" id="e32">n/a</td><td class="ctr1" id="f32">1</td><td class="ctr2" id="g32">1</td><td class="ctr1" id="h32">1</td><td class="ctr2" id="i32">1</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a33"><a href="MatrixOperations.java.html#L494" class="el_method">stack(Matrix)</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d33"/><td class="ctr2" id="e33">n/a</td><td class="ctr1" id="f33">1</td><td class="ctr2" id="g33">1</td><td class="ctr1" id="h33">1</td><td class="ctr2" id="i33">1</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a3"><a href="MatrixOperations.java.html#L564" class="el_method">augment(Matrix)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h34">1</td><td class="ctr2" id="i34">1</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a4"><a href="MatrixOperations.java.html#L375" class="el_method">conjT()</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">1</td><td class="ctr2" id="i35">1</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a15"><a href="MatrixOperations.java.html#L387" class="el_method">hermAdjoint()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">1</td><td class="ctr2" id="i36">1</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a14"><a href="MatrixOperations.java.html#L399" class="el_method">H()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">1</td><td class="ctr2" id="i37">1</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a40"><a href="MatrixOperations.java.html#L316" class="el_method">transpose()</a></td><td class="bar" id="b38"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i38">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a38"><a href="MatrixOperations.java.html#L850" class="el_method">tr()</a></td><td class="bar" id="b39"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i39">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr><tr><td id="a16"><a href="MatrixOperations.java.html#L937" class="el_method">inv()</a></td><td class="bar" id="b40"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c40">0%</td><td class="bar" id="d40"/><td class="ctr2" id="e40">n/a</td><td class="ctr1" id="f40">1</td><td class="ctr2" id="g40">1</td><td class="ctr1" id="h40">1</td><td class="ctr2" id="i40">1</td><td class="ctr1" id="j40">1</td><td class="ctr2" id="k40">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/MatrixOperations.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixOperations.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_source\">MatrixOperations.java</span></div><h1>MatrixOperations.java</h1><pre class=\"source lang-java linenums\">package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\n\r\n/**\r\n * This interface provides several methods useful for matrix operations.\r\n * \r\n * @author Jacob Watters\r\n */\r\ninterface MatrixOperations {\r\n\t\r\n\t/**\r\n\t * Performs matrix addition on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to add to the instance matrix\r\n\t * @return result of matrix addition\r\n\t */\r\n\t default Matrix add(Matrix B) {\r\n<span class=\"nc\" id=\"L19\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L20\">\t\tMatrix C = new Matrix(A.m, A.n);</span>\r\n<span class=\"nc\" id=\"L21\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L23\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L24\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L25\">\t\t\t\tC.entries[i][j].re = A.entries[i][j].re + B.entries[i][j].re;</span>\r\n<span class=\"nc\" id=\"L26\">\t\t\t\tC.entries[i][j].im = A.entries[i][j].im + B.entries[i][j].im;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L30\">\t\treturn C;</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds the value of a to all entries of matrix.\r\n\t * @param a Value to add to matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix add(double a) {\r\n<span class=\"nc\" id=\"L40\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L41\">\t\tMatrix C = new Matrix(A.m, A.n);</span>\r\n\r\n<span class=\"nc bnc\" id=\"L43\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L44\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L45\">\t\t\t\tC.entries[i][j].re = A.entries[i][j].re + a;</span>\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L50\">\t\treturn C;</span>\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs matrix subtraction on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to subtract to the instance matrix\r\n\t * @return result of matrix subtraction\r\n\t */\r\n\t default Matrix sub(Matrix B) {\r\n<span class=\"nc\" id=\"L62\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L63\">\t\tMatrix C = new Matrix(A.m, A.n);</span>\r\n<span class=\"nc\" id=\"L64\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L66\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L67\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L68\">\t\t\t\tC.entries[i][j].re = A.entries[i][j].re - B.entries[i][j].re;</span>\r\n<span class=\"nc\" id=\"L69\">\t\t\t\tC.entries[i][j].im = A.entries[i][j].im - B.entries[i][j].im;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L73\">\t\treturn C;</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Subtracts the value of a from all entries of matrix.\r\n\t * @param a Value to subtract from matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix sub(double a) {\r\n<span class=\"nc\" id=\"L83\">\t\t return this.add(-a);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs matrix multiplication on two matrices. The instance matrix\r\n\t * must have the same number of columns as the rows of B.\r\n\t * \r\n\t * If the instance matrix is a kxm matrix and B is a \r\n\t * m x n matrix then the result will be a k x n matrix.\r\n\t * \r\n\t * @param B - matrix to multiply to the instance matrix\r\n\t * @return result of matrix multiplication\r\n\t */\r\n\t default Matrix mult(Matrix B) {\r\n<span class=\"nc\" id=\"L98\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L100\" title=\"All 2 branches missed.\">\t\tif(!MatrixComparisons.matMultCheck(A, B)) {</span>\r\n<span class=\"nc\" id=\"L101\">\t\t\tthrow new IllegalArgumentException(&quot;Number of columns in first matrix must match \\n&quot;</span>\r\n<span class=\"nc\" id=\"L102\">\t\t\t\t\t+ &quot;number of rows in second matrix but got &quot; + A.shape() + &quot; and &quot; + B.shape() + &quot;.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L105\">\t\tMatrix product = new Matrix(A.m, B.n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L107\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; product.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L108\" title=\"All 2 branches missed.\">\t\t\tfor(int k = 0; k &lt; A.n; k++) {</span>\r\n<span class=\"nc bnc\" id=\"L109\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; product.n; j++) {</span>\r\n<span class=\"nc\" id=\"L110\">\t\t\t\t\tproduct.entries[i][j].re += (A.entries[i][k].re * B.entries[k][j].re - A.entries[i][k].im * B.entries[k][j].im);</span>\r\n<span class=\"nc\" id=\"L111\">\t\t\t\t\tproduct.entries[i][j].im += (A.entries[i][k].re * B.entries[k][j].im + A.entries[i][k].im * B.entries[k][j].re);</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L116\">\t\treturn product;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise multiplication of two matrices.\r\n\t * \r\n\t * @throws IllegalArgumentException If matrices do not have the same dimension.\r\n\t * @param B - matrix to multiply element-wise to this matrix.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemMult(Matrix B) {\r\n<span class=\"nc\" id=\"L128\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L129\">\t\tMatrix C = new Matrix(A.m, A.n);</span>\r\n<span class=\"nc\" id=\"L130\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L132\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L133\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L134\">\t\t\t\tC.entries[i][j].re = A.entries[i][j].re * B.entries[i][j].re - A.entries[i][j].im * B.entries[i][j].im;</span>\r\n<span class=\"nc\" id=\"L135\">\t\t\t\tC.entries[i][j].im = A.entries[i][j].re * B.entries[i][j].im + A.entries[i][j].im * B.entries[i][j].re;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L139\">\t\treturn C;</span>\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply this matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\t default Matrix scalMult(double factor) {\r\n<span class=\"nc\" id=\"L151\">\t\treturn this.scalMult(new CNumber(factor));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\t default Matrix scalMult(CNumber factor) {\r\n<span class=\"nc\" id=\"L162\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L163\">\t\tMatrix result = new Matrix(A.m, A.n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L165\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L166\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt;  A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L167\">\t\t\t\tresult.entries[i][j] = CNumber.multiply(A.entries[i][j], factor);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L171\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise division on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to divide element-wise the instance matrix with.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemDiv(Matrix B) {\r\n<span class=\"nc\" id=\"L182\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L183\">\t\tMatrix C = new Matrix(A.m, A.n);</span>\r\n<span class=\"nc\" id=\"L184\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L186\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L187\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L188\">\t\t\t\tC.entries[i][j].re = \t(A.entries[i][j].re * B.entries[i][j].re + A.entries[i][j].im * B.entries[i][j].im) / </span>\r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re * B.entries[i][j].re + B.entries[i][j].im * B.entries[i][j].im);\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L191\">\t\t\t\tC.entries[i][j].im = \t(A.entries[i][j].im * B.entries[i][j].re - A.entries[i][j].re * B.entries[i][j].im) / </span>\r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re * B.entries[i][j].re + B.entries[i][j].im * B.entries[i][j].im);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L196\">\t\treturn C;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(double divisor) {\r\n<span class=\"nc\" id=\"L207\">\t\tdouble factor = 1/divisor;</span>\r\n<span class=\"nc\" id=\"L208\">\t\treturn this.scalMult(new CNumber(factor));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(CNumber divisor) {\r\n<span class=\"nc\" id=\"L219\">\t\tCNumber factor = CNumber.divide(CNumber.ONE, divisor);</span>\r\n<span class=\"nc\" id=\"L220\">\t\treturn this.scalMult(factor);</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Computes the Frobenius inner product of two matrices A and B, {@code &lt;A, B&gt;}&lt;sub&gt;F&lt;/sub&gt;.\r\n\t * \r\n\t * @param B - Second matrix for the Frobenius inner product.\r\n \t * @return the Frobenius inner product.\r\n\t */\r\n\t default CNumber fip(Matrix B) {\r\n<span class=\"nc\" id=\"L231\">\t\treturn this.mult(B).tr();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix direct sum. That is, a block diagonal matrix containing all matrices from a set of matrices.\r\n\t * \r\n\t * @param matrixList - List of matrices from which to compute the matrix direct sum.\r\n\t * @return The result of direct summing the matrices in matrixList to this matrix.\r\n\t */\r\n\t default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include &quot;this&quot; in the direct sum.\r\n<span class=\"nc\" id=\"L242\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L243\">\t\tint new_m = A.m, new_n = A.n,</span>\r\n<span class=\"nc\" id=\"L244\">\t\t\tcurrent_m = 0, current_n = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L246\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;matrixList.length; i++) {\t\t\t</span>\r\n<span class=\"nc\" id=\"L247\">\t\t\tnew_m += matrixList[i].m;</span>\r\n<span class=\"nc\" id=\"L248\">\t\t\tnew_n += matrixList[i].n;</span>\r\n\t\t}\r\n\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L252\">\t\tMatrix directSum = new Matrix(new_m, new_n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L254\" title=\"All 2 branches missed.\">\t\tfor(int i=-1; i&lt;matrixList.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L255\" title=\"All 2 branches missed.\">\t\t\tif(i==-1) {</span>\r\n<span class=\"nc\" id=\"L256\">\t\t\t\tdirectSum.setSlice(current_m, current_n, A);</span>\r\n<span class=\"nc\" id=\"L257\">\t\t\t\tcurrent_m += A.m;</span>\r\n<span class=\"nc\" id=\"L258\">\t\t\t\tcurrent_n += A.n;</span>\r\n\t\t\t} else {\r\n<span class=\"nc\" id=\"L260\">\t\t\t\tdirectSum.setSlice(current_m, current_n, matrixList[i]);</span>\r\n<span class=\"nc\" id=\"L261\">\t\t\t\tcurrent_m += matrixList[i].m;</span>\r\n<span class=\"nc\" id=\"L262\">\t\t\t\tcurrent_n += matrixList[i].n;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L266\">\t\treturn directSum;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes element wise square root of the matrix. All square roots are the positive root or, in\r\n\t * the case of complex entries, the root with positive real part.\r\n\t * \r\n\t * @return The element-wise square root of this matrix.\r\n\t */\r\n\t default Matrix sqrt() {\r\n<span class=\"nc\" id=\"L277\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L279\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L280\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L281\">\t\t\t\tA.entries[i][j] = CNumber.sqrt(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L285\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes absolute value, element-wise, of a matrix.\r\n\t * If any of the matrix cells are complex, this will result\r\n\t * in the magnitude of that value.\r\n\t * \r\n\t * @return - element-wise absolute value of matrix.\r\n\t */\r\n\t default Matrix abs() {\r\n<span class=\"nc\" id=\"L297\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L298\">\t\tMatrix abs = new Matrix(A.m, A.n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L300\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L301\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L302\">\t\t\t\tabs.entries[i][j] = CNumber.abs(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L306\">\t\treturn abs;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as &lt;code&gt; Matrix.T() &lt;/code&gt;\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix transpose() {\r\n<span class=\"nc\" id=\"L316\">\t\treturn this.T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as &lt;code&gt; Matrix.transpose() &lt;/code&gt;\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix T() {\r\n<span class=\"nc\" id=\"L327\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L328\">\t\tMatrix At = new Matrix(A.n, A.m);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L330\">\t    final int BLOCK_SIZE = 16;</span>\r\n\t    \r\n\t    // Compute transpose using blocked algorithm\r\n<span class=\"nc bnc\" id=\"L333\" title=\"All 2 branches missed.\">\t    for(int i = 0; i &lt; A.m; i += BLOCK_SIZE) {</span>\r\n<span class=\"nc bnc\" id=\"L334\" title=\"All 2 branches missed.\">\t        for (int j = 0; j &lt; A.n; j += BLOCK_SIZE) {</span>\r\n\t            // transpose the block beginning at [i,j]\r\n<span class=\"nc bnc\" id=\"L336\" title=\"All 4 branches missed.\">\t            for (int k = i; k &lt; i + BLOCK_SIZE &amp;&amp; k &lt; A.m; ++k) {</span>\r\n<span class=\"nc bnc\" id=\"L337\" title=\"All 4 branches missed.\">\t                for (int l = j; l &lt; j + BLOCK_SIZE &amp;&amp; l &lt; A.n; ++l) {</span>\r\n<span class=\"nc\" id=\"L338\">\t                    At.entries[l][k] = A.entries[k][l];</span>\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    \r\n<span class=\"nc\" id=\"L344\">\t    return At;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Conjugates a matrix element-wise.\r\n\t * \r\n\t * @return Conjugate of matrix\r\n\t */\r\n\t default Matrix conjugate() {\r\n<span class=\"nc\" id=\"L354\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L355\">\t\tMatrix Ac = new Matrix(A.m, A.n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L357\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; Ac.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L358\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt; Ac.n; j++) {</span>\r\n<span class=\"nc\" id=\"L359\">\t\t\t\tAc.entries[i][j] = CNumber.conjugate(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L363\">\t\treturn Ac;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the conjugate transpose of this matrix. \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}. \r\n\t * \r\n\t * @return The conjugate transpose of this matrix.\r\n\t */\r\n\t default Matrix conjT() {\r\n<span class=\"nc\" id=\"L375\">\t\treturn this.conjugate().T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}. \r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix hermAdjoint() {\r\n<span class=\"nc\" id=\"L387\">\t\treturn this.conjugate().T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #conjT() conjT()} and {@link #hermAdjoint() hermAdjpint()}.\r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix H() {\r\n<span class=\"nc\" id=\"L399\">\t\treturn this.conjugate().T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix using reccurisive definition. This method exists\r\n\t * for computing the determinant of non-real matrices.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detRec(Matrix A) {\r\n<span class=\"nc\" id=\"L411\">\t\tCNumber value = CNumber.ZERO;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L413\" title=\"All 4 branches missed.\">\t\tif(A.m == 1 &amp;&amp; A.n == 1) { // Then we simply have a 1x1 matrix.</span>\r\n<span class=\"nc\" id=\"L414\">\t\t\treturn A.entries[0][0];</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L416\" title=\"All 4 branches missed.\">\t\telse if(A.m == 2 &amp;&amp; A.n == 2) { // Then we have a 2x2 matrix, which is the base case</span>\r\n<span class=\"nc\" id=\"L417\">\t\t\tCNumber a = A.entries[0][0];</span>\r\n<span class=\"nc\" id=\"L418\">\t\t\tCNumber b = A.entries[0][1];</span>\r\n<span class=\"nc\" id=\"L419\">\t\t\tCNumber c = A.entries[1][0];</span>\r\n<span class=\"nc\" id=\"L420\">\t\t\tCNumber d = A.entries[1][1];</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L422\">\t\t\tvalue = CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));</span>\r\n<span class=\"nc\" id=\"L423\">\t\t} </span>\r\n\t\telse {\r\n<span class=\"nc bnc\" id=\"L425\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L426\">\t\t\t\tMatrix newA = A.removeRow(0).removeCol(j);</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L428\">\t\t\t\tCNumber num = new CNumber(Math.pow(-1, j));</span>\r\n<span class=\"nc\" id=\"L429\">\t\t\t\tnum = CNumber.multiply(num, A.entries[0][j]);</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L431\">\t\t\t\tvalue = CNumber.add(value, CNumber.multiply(detRec(newA), num));</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L435\">\t\treturn value;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of real matrix using QR decomposition.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of.\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detQR(Matrix A) {\r\n<span class=\"nc\" id=\"L446\">\t\tCNumber detQ, detR = CNumber.ONE;</span>\r\n<span class=\"nc\" id=\"L447\">\t\tMatrix[] QRh = Decompose.QR(A, true);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L449\">\t\tdetQ = new CNumber(Math.pow(-1, QRh[2].entries[0][0].getReal()));</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L451\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i&lt;QRh[1].n; i++) {</span>\r\n<span class=\"nc\" id=\"L452\">\t\t\tdetR = CNumber.multiply(detR, QRh[1].entries[i][i]);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L455\">\t\treturn CNumber.multiply(detR, detQ);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix. If the matrix has\r\n\t * any complex entries, this may be a complex value.\r\n\t * Note: Currently this method only works for real matirces.\r\n\t * \r\n\t * @return determinant of matrix.\r\n\t */\r\n\t default CNumber det() {\r\n<span class=\"nc\" id=\"L467\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L469\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L470\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L473\" title=\"All 4 branches missed.\">\t\tif(A.m == 2 &amp;&amp; A.n == 2) { // Then we have a 2x2 matrix, which we can directly compute</span>\r\n<span class=\"nc\" id=\"L474\">\t\t\tCNumber a = A.entries[0][0];</span>\r\n<span class=\"nc\" id=\"L475\">\t\t\tCNumber b = A.entries[0][1];</span>\r\n<span class=\"nc\" id=\"L476\">\t\t\tCNumber c = A.entries[1][0];</span>\r\n<span class=\"nc\" id=\"L477\">\t\t\tCNumber d = A.entries[1][1];</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L479\">\t\t\treturn CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L482\">\t\treturn detQR(A);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along rows. Both matrices must have the same number of columns\r\n\t * Also see {@link #stack(Matrix, int) stack(Matrix B, int axis)}\r\n\t * \r\n\t * @param B\r\n\t * @return\r\n\t */\r\n\t default Matrix stack(Matrix B) {\r\n<span class=\"nc\" id=\"L494\">\t\treturn this.stack(B, 0);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along specified axis. Axis 0 will stack matrices along the rows. Axis 1 will\r\n\t * stack matrices along columns.\r\n\t * \r\n\t * Note: To stack matrices along axis 0 they must have the same number of columns.\r\n\t * To stack matrices along axis 1 they must have the same number of rows.\r\n\t * \r\n\t * @param B - Matrix to stack\r\n\t * @param axis - Axis along which to stack matrices.\r\n\t * @return Returns A and B stacked along specified axis.\r\n\t */\r\n\t default Matrix stack(Matrix B, int axis) {\r\n<span class=\"nc\" id=\"L510\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L511\">\t\tMatrix result = null;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L513\" title=\"All 2 branches missed.\">\t\tif(axis == 0) { // Stack on rows</span>\r\n<span class=\"nc bnc\" id=\"L514\" title=\"All 2 branches missed.\">\t\t\tif(A.entries[0].length != B.entries[0].length) { // Ensure matrices have same number or columns</span>\r\n<span class=\"nc\" id=\"L515\">\t\t\t\tthrow new IllegalArgumentException(&quot;Must have same number of columns but &quot;</span>\r\n\t\t\t\t\t\t+ &quot;got &quot; + A.entries[0].length + &quot; and &quot; + B.entries[0].length);\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L519\">\t\t\tresult = new Matrix(A.entries.length+B.entries.length, A.entries[0].length);</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L521\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i &lt; result.entries.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L522\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; result.entries[0].length; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L523\" title=\"All 2 branches missed.\">\t\t\t\t\tif(i &lt; A.entries.length) { // Then copy from A.entries</span>\r\n<span class=\"nc\" id=\"L524\">\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];</span>\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n<span class=\"nc\" id=\"L526\">\t\t\t\t\t\tresult.entries[i][j] = B.entries[i-A.entries.length][j];</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n<span class=\"nc bnc\" id=\"L531\" title=\"All 2 branches missed.\">\t\telse if(axis == 1) { // Stack on cols</span>\r\n<span class=\"nc bnc\" id=\"L532\" title=\"All 2 branches missed.\">\t\t\tif(A.entries.length != B.entries.length) { // Ensure matrices have same number or rows</span>\r\n<span class=\"nc\" id=\"L533\">\t\t\t\tthrow new IllegalArgumentException(&quot;Must have same number of rows but &quot;</span>\r\n\t\t\t\t\t\t+ &quot;got &quot; + A.entries.length + &quot; and &quot; + B.entries.length);\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L537\">\t\t\tresult = new Matrix(A.entries.length, A.entries[0].length + B.entries[0].length);</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L539\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i &lt; result.entries.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L540\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; result.entries[0].length; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L541\" title=\"All 2 branches missed.\">\t\t\t\t\tif(j &lt; A.entries[0].length) { // Then copy from A.entries</span>\r\n<span class=\"nc\" id=\"L542\">\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];</span>\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n<span class=\"nc\" id=\"L544\">\t\t\t\t\t\tresult.entries[i][j] = B.entries[i][j-A.entries[0].length];</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n<span class=\"nc\" id=\"L550\">\t\t\tthrow new IllegalArgumentException(&quot;axis must be 0 or 1 but got &quot; + axis);</span>\r\n\t\t}\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L553\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Augments two matrices. This is the same as {@link #stack(Matrix, int) stack(B, 1)}\r\n\t * \r\n\t * @param B - Matrix to augment to this matrix.\r\n\t * @return The matrix B augmented to this matrix.\r\n\t */\r\n\t default Matrix augment(Matrix B) {\r\n<span class=\"nc\" id=\"L564\">\t\treturn this.stack(B, 1);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes row-echelon form of matrix. This will be an upper-triangular matrix.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in row-echelon form if:\r\n\t *  - The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *  - The pivot of a nonzero row is always strictly to \r\n\t *    the right of the leading coefficient of the row above it.\r\n\t *  - Rows with all zero elements, if any, are below rows having a non-zero element.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row equivalent matrix in row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #rref() rref()}&lt;/code&gt; for reduced row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix\r\n\t */\r\n\t default Matrix ref() {\r\n<span class=\"nc\" id=\"L587\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\tCNumber m, scale;\r\n\t\t\r\n<span class=\"nc\" id=\"L590\">\t\tint pivotRow = 0,</span>\r\n<span class=\"nc\" id=\"L591\">\t\t\tpivotCol = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L593\" title=\"All 4 branches missed.\">\t\twhile(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>\r\n<span class=\"nc bnc\" id=\"L594\" title=\"All 2 branches missed.\">\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) { // Then we can make the pivot one.</span>\r\n<span class=\"nc\" id=\"L595\">\t\t\t\t scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>\r\n\t\t\t\t \r\n<span class=\"nc bnc\" id=\"L597\" title=\"All 2 branches missed.\">\t\t\t\t for(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>\r\n<span class=\"nc\" id=\"L598\">\t\t\t\t\t A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>\r\n\t\t\t\t }\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L602\" title=\"All 2 branches missed.\">\t\t\tfor(int i=pivotRow+1; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L603\">\t\t\t\tm = A.entries[i][pivotCol];</span>\r\n\r\n<span class=\"nc bnc\" id=\"L605\" title=\"All 2 branches missed.\">\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) {</span>\r\n<span class=\"nc\" id=\"L606\">\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], </span>\r\n<span class=\"nc\" id=\"L607\">\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));</span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * This insures the entries to the left of the pivot are zero. \r\n\t\t\t\t * They may be a very small (in absolute value) non-zero value\r\n\t\t\t\t * resulting from errors in floating point arithmetic.\r\n\t\t\t\t */\r\n<span class=\"nc\" id=\"L616\">\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;</span>\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L619\">\t\t\tpivotRow++;</span>\r\n<span class=\"nc\" id=\"L620\">\t\t\tpivotCol++;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L623\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in reduced row-echelon form if:&lt;br&gt;\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * @param partialPivoting - Falg for use of partial pivoting.\r\n\t * &lt;pre&gt;\r\n\t *  - If true then the rref will be computed using partial pivoting.\r\n\t * \t    ~ This is equivalent to the method {@link #rref() rref()}.\r\n\t *  - If false then the rref will be computed WITHOUT using partial pivoting.\r\n\t * &lt;/pre&gt;\r\n\t * @return\r\n\t */\r\n\t default Matrix rref(boolean partialPivoting) {\r\n<span class=\"nc bnc\" id=\"L652\" title=\"All 2 branches missed.\">\t\tif(partialPivoting) return rref();</span>\r\n<span class=\"nc\" id=\"L653\">\t\telse return rrefNoPivot();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. This is done using partial pivoting.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in reduced row-echelon form if:&lt;br&gt;\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #ref() ref()}&lt;/code&gt; for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\t default Matrix rref() {\r\n<span class=\"nc\" id=\"L678\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\tCNumber mult, scale, currentMax;\r\n\t\tint maxIndex;\r\n\t\t\r\n<span class=\"nc\" id=\"L682\">\t\tint pivotRow = 0,</span>\r\n<span class=\"nc\" id=\"L683\">\t\t\tpivotCol = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L685\" title=\"All 4 branches missed.\">\t\twhile(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>\r\n<span class=\"nc\" id=\"L686\">\t\t\tmaxIndex = pivotRow;</span>\r\n<span class=\"nc\" id=\"L687\">\t\t\tcurrentMax = A.entries[pivotRow][pivotCol];</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L689\" title=\"All 2 branches missed.\">\t\t\tfor(int i=pivotRow; i&lt;A.m; i++) { // Find the maximum entry in the pivot column (at or below the pivot ).</span>\r\n<span class=\"nc bnc\" id=\"L690\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][pivotCol].nearZero(1.0E-12)) { </span>\r\n\t\t\t\t\t\r\n\t\t\t\t\t/* \r\n\t\t\t\t\t * If a number is very close to zero, assume it is supposed to be zero.\r\n\t\t\t\t\t * This protects against trying to manipulate a column which\r\n\t\t\t\t\t * is already in the correct form.\r\n\t\t\t\t\t */\r\n<span class=\"nc\" id=\"L697\">\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;</span>\r\n\t\t\t\t}\r\n<span class=\"nc bnc\" id=\"L699\" title=\"All 2 branches missed.\">\t\t\t\telse if(A.entries[i][pivotCol].compareTo(currentMax) &gt; 0) {</span>\r\n<span class=\"nc\" id=\"L700\">\t\t\t\t\tmaxIndex = i;</span>\r\n<span class=\"nc\" id=\"L701\">\t\t\t\t\tcurrentMax = A.entries[i][pivotCol];</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L705\" title=\"All 2 branches missed.\">\t\t\tif(!A.entries[maxIndex][pivotCol].equals(CNumber.ZERO)) { // Check that the maximum absolute value is not zero.</span>\r\n<span class=\"nc bnc\" id=\"L706\" title=\"All 2 branches missed.\">\t\t\t\tif(pivotRow != maxIndex) {</span>\r\n<span class=\"nc\" id=\"L707\">\t\t\t\t\tA = A.swapRows(pivotRow, maxIndex); // Make the row with the largest value in the pivot column the pivot for this row.</span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L710\">\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>\r\n\t\t\t\t \r\n<span class=\"nc bnc\" id=\"L712\" title=\"All 2 branches missed.\">\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row so that the pivot is 1</span>\r\n<span class=\"nc\" id=\"L713\">\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L716\" title=\"All 2 branches missed.\">\t\t\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L717\">\t\t\t\t\tmult = A.entries[i][pivotCol];</span>\r\n\t\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L719\" title=\"All 2 branches missed.\">\t\t\t\t\tif(pivotRow != i) {</span>\r\n<span class=\"nc\" id=\"L720\">\t\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;</span>\r\n\t\t\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L722\" title=\"All 2 branches missed.\">\t\t\t\t\t\tfor(int k=pivotCol+1; k&lt;A.n; k++) {</span>\r\n\t\t\t\t\t\t\t\r\n<span class=\"nc\" id=\"L724\">\t\t\t\t\t\t\tCNumber value = CNumber.subtract(A.entries[i][k], </span>\r\n<span class=\"nc\" id=\"L725\">\t\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], mult));</span>\r\n<span class=\"nc\" id=\"L726\">\t\t\t\t\t\t\tA.entries[i][k] = value;</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L732\">\t\t\t\tpivotRow++;</span>\r\n<span class=\"nc\" id=\"L733\">\t\t\t\tpivotCol++;</span>\r\n\t\t\t}\r\n\t\t\telse { // Then we do not have a pivot for this column (i.e. the column is all zeros).\r\n<span class=\"nc\" id=\"L736\">\t\t\t\tpivotCol++;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L740\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. \r\n\t * This is done WITHOUT using partial pivoting.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in reduced row-echelon form if:&lt;br&gt;\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #ref() ref()}&lt;/code&gt; for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\tdefault Matrix rrefNoPivot() {\r\n<span class=\"nc\" id=\"L766\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\tCNumber m, scale;\r\n\t\t\r\n<span class=\"nc\" id=\"L769\">\t\tint pivotRow = 0,</span>\r\n<span class=\"nc\" id=\"L770\">\t\t\tpivotCol = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L772\" title=\"All 4 branches missed.\">\t\twhile(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>\r\n<span class=\"nc bnc\" id=\"L773\" title=\"All 2 branches missed.\">\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) {</span>\r\n<span class=\"nc\" id=\"L774\">\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>\r\n\t\t\t\t \r\n<span class=\"nc bnc\" id=\"L776\" title=\"All 2 branches missed.\">\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>\r\n<span class=\"nc\" id=\"L777\">\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L781\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L782\">\t\t\t\tm = A.entries[i][pivotCol];</span>\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L784\" title=\"All 2 branches missed.\">\t\t\t\tif(pivotRow != i) {</span>\r\n<span class=\"nc bnc\" id=\"L785\" title=\"All 2 branches missed.\">\t\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) {</span>\r\n<span class=\"nc\" id=\"L786\">\t\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], </span>\r\n<span class=\"nc\" id=\"L787\">\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L792\">\t\t\tpivotRow++;</span>\r\n<span class=\"nc\" id=\"L793\">\t\t\tpivotCol++;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L796\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced extended row-echelon form of matrix. That is, a Matrix with\r\n\t * the same number of rows is {@link #augment(Matrix) augmented} with this matrix and\r\n\t * then this augmented matrix is put into {@link #rref() reduced row-echelon form}.\r\n\t * \r\n\t * @return Returns extended row-echelon form of this matrix.\r\n\t */\r\n\t default Matrix erref() {\r\n<span class=\"nc\" id=\"L808\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L809\">\t\tMatrix I = Matrix.I(A.m);</span>\r\n<span class=\"nc\" id=\"L810\">\t\tMatrix Aug = A.augment(I);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L812\">\t\treturn Aug.rref();</span>\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Computes the trace of square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #tr() tr()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber trace() {\r\n<span class=\"nc\" id=\"L825\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L827\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L828\">\t\t\tthrow new IllegalArgumentException(&quot;Expecting matrix to be square but got &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L831\">\t\tCNumber result = A.entries[0][0];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L833\" title=\"All 2 branches missed.\">\t\tfor(int i = 1; i &lt; A.n; i++) {</span>\r\n<span class=\"nc\" id=\"L834\">\t\t\tresult = CNumber.add(result, A.entries[i][i]);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L837\">\t\treturn result;</span>\r\n\t} \r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the trace of a square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #trace() trace()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber tr() {\r\n<span class=\"nc\" id=\"L850\">\t\treturn this.trace();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space generated (or spanned) by its columns.\r\n\t * This is always an integer.\r\n\t * This corresponds to the maximal number of linearly independent columns of A. \r\n\t * This, in turn, is identical to the dimension of the vector space spanned by its rows\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t// TODO: Should be switched to rank revealing QR decomposition as it is more numerically stable.\r\n\t default int rank() {\r\n<span class=\"nc\" id=\"L864\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L865\">\t\tMatrix rrefA = A.rref();</span>\r\n<span class=\"nc\" id=\"L866\">\t\tint rank = A.m;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L868\" title=\"All 2 branches missed.\">\t\tfor(int i=rrefA.m-1; i&gt;=0; i--) {</span>\r\n<span class=\"nc bnc\" id=\"L869\" title=\"All 2 branches missed.\">\t\t\tif(rrefA.getRowAsVector(i).isZero()) {</span>\r\n<span class=\"nc\" id=\"L870\">\t\t\t\trank--;\t\t\t</span>\r\n\t\t\t} else { \r\n\t\t\t\t// Then we have no more zero rows as rrefA is in reduced row echelon form.\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L877\">\t\treturn rank;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space spanned by the nullspace of this matrix.\r\n\t * The nullify is always an integer.\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t default int nullity() {\r\n<span class=\"nc\" id=\"L888\">\t\tint rank = this.rank();</span>\r\n<span class=\"nc\" id=\"L889\">\t\treturn ((Matrix) this).m - rank;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A&lt;sup&gt;-1&lt;/sup&gt; satisfying AA&lt;sup&gt;-1&lt;/sup&gt;=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inverse() {\r\n<span class=\"nc\" id=\"L900\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L902\" title=\"All 2 branches missed.\">\t\tif(!A.isSingular()) {</span>\r\n<span class=\"nc\" id=\"L903\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix is singular.&quot;);</span>\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L906\">\t\tMatrix[] QR = Decompose.QR(A); // Compute the QR decomposition of A. This will be used to compute the inverse.</span>\r\n<span class=\"nc\" id=\"L907\">\t\tCNumber detR = CNumber.ONE;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L909\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i&lt;QR[1].n; i++) { // Computing the determinant of R</span>\r\n<span class=\"nc\" id=\"L910\">\t\t\tdetR = CNumber.multiply(detR, QR[1].entries[i][i]);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L913\" title=\"All 2 branches missed.\">\t\tif(CNumber.round(detR, 10).re == 0) {</span>\r\n\t\t\t/* Then we know the matrix is singular.\r\n\t\t\t * We know this by exploiting properties of the orthogonal matrix Q and the upper triangular matrix R.\r\n\t\t\t * The determinant of an orthogonal matrix is either -1 or 1. The determinant of an upper triangular matrix R is the product\r\n\t\t\t * of the diagonals. Since A=QR det(A) = det(QR) = det(Q)*det(R). So if the determinant of R is zero, then the matrix A must be singular.\r\n\t\t\t * \r\n\t\t\t * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that, \r\n\t\t\t * so it would be redundant to call the isSingular() method and recompute the QR decomposition again.\r\n\t\t\t */\r\n<span class=\"nc\" id=\"L922\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix is singular, thus can not be inverted.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n\t\t// Here we compute and return A^-1 = (R^-1)*(Q^-1)\r\n<span class=\"nc\" id=\"L926\">\t\treturn inverseTriU(QR[1]).mult(QR[0].H());</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A&lt;sup&gt;-1&lt;/sup&gt; satisfying AA&lt;sup&gt;-1&lt;/sup&gt;=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inv() {\r\n<span class=\"nc\" id=\"L937\">\t\treturn this.inverse();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Helper method to invert an upper triangular matrix. &lt;br&gt;\r\n\t * We can compute the inverse of an n-by-n upper triangular matrix U by solving the n systems...&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Ux=I&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;\r\n\t * \r\n\t * where 1&lt;=i&lt;=n, I is the n-by-n identity matrix, I&lt;sub&gt;i&lt;/sub&gt; is the ith column of I.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Each solution becomes a column in the inverse &lt;sup&gt;-1&lt;/sub&gt;.\r\n\t * Because U is upper triangular, we can solve these n systems using backsolve.\r\n\t * \r\n\t * @param U - U is a square upper triangular matrix\r\n\t * @return Returns the inverse of U, denoted U&lt;sup&gt;-1&lt;/sub&gt;\r\n\t */\r\n\tstatic Matrix inverseTriU(Matrix U) {\r\n<span class=\"nc\" id=\"L956\">\t\tMatrix Uinv = new Matrix(U.m, U.m);</span>\r\n<span class=\"nc\" id=\"L957\">\t\tMatrix I = Matrix.I(U.m);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L959\" title=\"All 2 branches missed.\">\t\tif(!U.isTriU()) {</span>\r\n<span class=\"nc\" id=\"L960\">\t\t\tthrow new IllegalArgumentException(&quot;U must be upper triangular.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L963\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;U.m; i++)  {</span>\r\n\t\t\t// U is upper triangular, so to solve the system we simply need to use backsolve function.\r\n<span class=\"nc\" id=\"L965\">\t\t\tUinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i); </span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L968\">\t\treturn Uinv;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new matrix that contains the reciprocals of this matrix\r\n\t * \r\n\t * @return new matrix that contains the reciprocals of this matrix\r\n\t */\r\n\t default Matrix recep() {\r\n<span class=\"nc\" id=\"L978\">\t\tMatrix A = new Matrix((Matrix) this).copy();</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L980\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L981\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L982\">\t\t\t\tA.entries[i][j] = CNumber.inv(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L986\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t static void main(String[] args) {\r\n\r\n\t\t\r\n<span class=\"nc\" id=\"L993\">\t\tint[][] b = {{1, 3, 3},</span>\r\n\t\t\t\t \t {0, 5, 6},\r\n\t\t\t\t \t {0, 8, 9}};\r\n\t\t\r\n<span class=\"nc\" id=\"L997\">\t\tdouble[][] c = {{ -19.1635403109,        5,               8,               7\t\t},</span>\r\n\t\t\t\t  \t\t{       5,         -19.1635403109,        2,               8\t\t},\r\n\t\t\t\t\t\t{       7,               5,         -15.1635403109,        6\t\t},\r\n\t\t\t\t\t\t{       5,               4,               4,         -13.1635403109 }};\r\n\t\t\r\n<span class=\"nc\" id=\"L1002\">\t\tCNumber[][] bc = {{new CNumber(&quot;2+i&quot;), new CNumber(&quot;3&quot;)},</span>\r\n\t\t\t\t  \t\t  {new CNumber(&quot;1&quot;), new CNumber(&quot;-i&quot;)}};\r\n\r\n<span class=\"nc\" id=\"L1005\">\t\tMatrix A = new Matrix(bc);</span>\r\n<span class=\"nc\" id=\"L1006\">\t\tMatrix B = new Matrix(b);</span>\r\n<span class=\"nc\" id=\"L1007\">\t\tMatrix C = new Matrix(c);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L1009\">\t\tMatrix.print(&quot;C:\\n&quot;, B.sqrt(), &quot;\\n\\n&quot;);</span>\r\n<span class=\"nc\" id=\"L1010\">\t\tMatrix.print(&quot;C:\\n&quot;, B, &quot;\\n\\n&quot;);</span>\r\n\r\n<span class=\"nc\" id=\"L1012\">\t\tMatrix.print(&quot;rref:\\n&quot;, A.directSum(B, C), &quot;\\n\\n&quot;);</span>\r\n<span class=\"nc\" id=\"L1013\">\t}</span>\r\n}\r\n\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixOperations.java.html b/target/site/jacoco/linalg/MatrixOperations.java.html
--- a/target/site/jacoco/linalg/MatrixOperations.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/MatrixOperations.java.html	(date 1648105701861)
@@ -988,29 +988,17 @@
 	
 	
 	 static void main(String[] args) {
+<span class="nc" id="L991">		 Matrix A = Matrix.random(&quot;1000x1000&quot;, -1000, 1000, false);</span>
+<span class="nc" id="L992">		 Matrix B = Matrix.random(&quot;1000x1000&quot;, -1000, 1000, false);</span>
 
-		
-<span class="nc" id="L993">		int[][] b = {{1, 3, 3},</span>
-				 	 {0, 5, 6},
-				 	 {0, 8, 9}};
-		
-<span class="nc" id="L997">		double[][] c = {{ -19.1635403109,        5,               8,               7		},</span>
-				  		{       5,         -19.1635403109,        2,               8		},
-						{       7,               5,         -15.1635403109,        6		},
-						{       5,               4,               4,         -13.1635403109 }};
-		
-<span class="nc" id="L1002">		CNumber[][] bc = {{new CNumber(&quot;2+i&quot;), new CNumber(&quot;3&quot;)},</span>
-				  		  {new CNumber(&quot;1&quot;), new CNumber(&quot;-i&quot;)}};
+<span class="nc" id="L994">		 long s1=System.currentTimeMillis();</span>
+<span class="nc" id="L995">		 A.mult(B);</span>
+<span class="nc" id="L996">		 long e1=System.currentTimeMillis();</span>
 
-<span class="nc" id="L1005">		Matrix A = new Matrix(bc);</span>
-<span class="nc" id="L1006">		Matrix B = new Matrix(b);</span>
-<span class="nc" id="L1007">		Matrix C = new Matrix(c);</span>
-		
-<span class="nc" id="L1009">		Matrix.print(&quot;C:\n&quot;, B.sqrt(), &quot;\n\n&quot;);</span>
-<span class="nc" id="L1010">		Matrix.print(&quot;C:\n&quot;, B, &quot;\n\n&quot;);</span>
+<span class="nc" id="L998">		 long t = e1-s1;</span>
 
-<span class="nc" id="L1012">		Matrix.print(&quot;rref:\n&quot;, A.directSum(B, C), &quot;\n\n&quot;);</span>
-<span class="nc" id="L1013">	}</span>
+<span class="nc" id="L1000">		 System.out.println(&quot;Time: &quot; + t + &quot; ms&quot;);</span>
+<span class="nc" id="L1001">	}</span>
 }
 
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/MatrixProperties.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixProperties</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_class\">MatrixProperties</span></div><h1>MatrixProperties</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">2,330 of 2,348</td><td class=\"ctr2\">0%</td><td class=\"bar\">214 of 214</td><td class=\"ctr2\">0%</td><td class=\"ctr1\">149</td><td class=\"ctr2\">152</td><td class=\"ctr1\">291</td><td class=\"ctr2\">297</td><td class=\"ctr1\">42</td><td class=\"ctr2\">45</td></tr></tfoot><tbody><tr><td id=\"a29\"><a href=\"MatrixProperties.java.html#L1013\" class=\"el_method\">main(String[])</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"858\" alt=\"858\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d25\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e0\">0%</td><td class=\"ctr1\" id=\"f25\">2</td><td class=\"ctr2\" id=\"g25\">2</td><td class=\"ctr1\" id=\"h2\">18</td><td class=\"ctr2\" id=\"i2\">18</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a39\"><a href=\"MatrixProperties.java.html#L735\" class=\"el_method\">nullSpace()</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"156\" alt=\"156\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">11</td><td class=\"ctr2\" id=\"g0\">11</td><td class=\"ctr1\" id=\"h0\">23</td><td class=\"ctr2\" id=\"i0\">23</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixProperties.java.html#L974\" class=\"el_method\">isDiagonalizable()</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"17\" height=\"10\" title=\"128\" alt=\"128\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f1\">9</td><td class=\"ctr2\" id=\"g1\">9</td><td class=\"ctr1\" id=\"h1\">21</td><td class=\"ctr2\" id=\"i1\">21</td><td class=\"ctr1\" id=\"j2\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr><tr><td id=\"a1\"><a href=\"MatrixProperties.java.html#L905\" class=\"el_method\">eig()</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"15\" height=\"10\" title=\"111\" alt=\"111\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f11\">4</td><td class=\"ctr2\" id=\"g11\">4</td><td class=\"ctr1\" id=\"h3\">17</td><td class=\"ctr2\" id=\"i3\">17</td><td class=\"ctr1\" id=\"j3\">1</td><td class=\"ctr2\" id=\"k3\">1</td></tr><tr><td id=\"a42\"><a href=\"MatrixProperties.java.html#L663\" class=\"el_method\">rowSpace()</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"81\" alt=\"81\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"60\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f4\">6</td><td class=\"ctr2\" id=\"g4\">6</td><td class=\"ctr1\" id=\"h4\">11</td><td class=\"ctr2\" id=\"i4\">11</td><td class=\"ctr1\" id=\"j4\">1</td><td class=\"ctr2\" id=\"k4\">1</td></tr><tr><td id=\"a0\"><a href=\"MatrixProperties.java.html#L698\" class=\"el_method\">colSpace()</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"79\" alt=\"79\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"60\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f5\">6</td><td class=\"ctr2\" id=\"g5\">6</td><td class=\"ctr1\" id=\"h5\">11</td><td class=\"ctr2\" id=\"i5\">11</td><td class=\"ctr1\" id=\"j5\">1</td><td class=\"ctr2\" id=\"k5\">1</td></tr><tr><td id=\"a38\"><a href=\"MatrixProperties.java.html#L628\" class=\"el_method\">norm(double, double)</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"9\" height=\"10\" title=\"70\" alt=\"70\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f2\">7</td><td class=\"ctr2\" id=\"g2\">7</td><td class=\"ctr1\" id=\"h7\">9</td><td class=\"ctr2\" id=\"i7\">9</td><td class=\"ctr1\" id=\"j6\">1</td><td class=\"ctr2\" id=\"k6\">1</td></tr><tr><td id=\"a24\"><a href=\"MatrixProperties.java.html#L524\" class=\"el_method\">isTriL()</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"50\" alt=\"50\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f6\">5</td><td class=\"ctr2\" id=\"g6\">5</td><td class=\"ctr1\" id=\"h6\">10</td><td class=\"ctr2\" id=\"i6\">10</td><td class=\"ctr1\" id=\"j7\">1</td><td class=\"ctr2\" id=\"k7\">1</td></tr><tr><td id=\"a13\"><a href=\"MatrixProperties.java.html#L799\" class=\"el_method\">isPos()</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"44\" alt=\"44\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f7\">5</td><td class=\"ctr2\" id=\"g7\">5</td><td class=\"ctr1\" id=\"h10\">8</td><td class=\"ctr2\" id=\"i10\">8</td><td class=\"ctr1\" id=\"j8\">1</td><td class=\"ctr2\" id=\"k8\">1</td></tr><tr><td id=\"a11\"><a href=\"MatrixProperties.java.html#L820\" class=\"el_method\">isNeg()</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"44\" alt=\"44\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f8\">5</td><td class=\"ctr2\" id=\"g8\">5</td><td class=\"ctr1\" id=\"h11\">8</td><td class=\"ctr2\" id=\"i11\">8</td><td class=\"ctr1\" id=\"j9\">1</td><td class=\"ctr2\" id=\"k9\">1</td></tr><tr><td id=\"a35\"><a href=\"MatrixProperties.java.html#L101\" class=\"el_method\">minReal()</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"40\" alt=\"40\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f12\">4</td><td class=\"ctr2\" id=\"g12\">4</td><td class=\"ctr1\" id=\"h17\">7</td><td class=\"ctr2\" id=\"i17\">7</td><td class=\"ctr1\" id=\"j10\">1</td><td class=\"ctr2\" id=\"k10\">1</td></tr><tr><td id=\"a32\"><a href=\"MatrixProperties.java.html#L147\" class=\"el_method\">maxReal()</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"40\" alt=\"40\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f13\">4</td><td class=\"ctr2\" id=\"g13\">4</td><td class=\"ctr1\" id=\"h18\">7</td><td class=\"ctr2\" id=\"i18\">7</td><td class=\"ctr1\" id=\"j11\">1</td><td class=\"ctr2\" id=\"k11\">1</td></tr><tr><td id=\"a25\"><a href=\"MatrixProperties.java.html#L501\" class=\"el_method\">isTriU()</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"40\" alt=\"40\"/></td><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f14\">4</td><td class=\"ctr2\" id=\"g14\">4</td><td class=\"ctr1\" id=\"h12\">8</td><td class=\"ctr2\" id=\"i12\">8</td><td class=\"ctr1\" id=\"j12\">1</td><td class=\"ctr2\" id=\"k12\">1</td></tr><tr><td id=\"a34\"><a href=\"MatrixProperties.java.html#L170\" class=\"el_method\">minComplex()</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c16\">0%</td><td class=\"bar\" id=\"d15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f15\">4</td><td class=\"ctr2\" id=\"g15\">4</td><td class=\"ctr1\" id=\"h19\">7</td><td class=\"ctr2\" id=\"i19\">7</td><td class=\"ctr1\" id=\"j13\">1</td><td class=\"ctr2\" id=\"k13\">1</td></tr><tr><td id=\"a31\"><a href=\"MatrixProperties.java.html#L192\" class=\"el_method\">maxComplex()</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c17\">0%</td><td class=\"bar\" id=\"d16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e14\">0%</td><td class=\"ctr1\" id=\"f16\">4</td><td class=\"ctr2\" id=\"g16\">4</td><td class=\"ctr1\" id=\"h20\">7</td><td class=\"ctr2\" id=\"i20\">7</td><td class=\"ctr1\" id=\"j14\">1</td><td class=\"ctr2\" id=\"k14\">1</td></tr><tr><td id=\"a44\"><a href=\"MatrixProperties.java.html#L277\" class=\"el_method\">vectorType()</a></td><td class=\"bar\" id=\"b15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c18\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"72\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e15\">0%</td><td class=\"ctr1\" id=\"f3\">7</td><td class=\"ctr2\" id=\"g3\">7</td><td class=\"ctr1\" id=\"h8\">9</td><td class=\"ctr2\" id=\"i8\">9</td><td class=\"ctr1\" id=\"j15\">1</td><td class=\"ctr2\" id=\"k15\">1</td></tr><tr><td id=\"a14\"><a href=\"MatrixProperties.java.html#L845\" class=\"el_method\">isPosDef()</a></td><td class=\"bar\" id=\"b16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c19\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e16\">0%</td><td class=\"ctr1\" id=\"f9\">5</td><td class=\"ctr2\" id=\"g9\">5</td><td class=\"ctr1\" id=\"h13\">8</td><td class=\"ctr2\" id=\"i13\">8</td><td class=\"ctr1\" id=\"j16\">1</td><td class=\"ctr2\" id=\"k16\">1</td></tr><tr><td id=\"a15\"><a href=\"MatrixProperties.java.html#L873\" class=\"el_method\">isPosSemidef()</a></td><td class=\"bar\" id=\"b17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c20\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"48\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e17\">0%</td><td class=\"ctr1\" id=\"f10\">5</td><td class=\"ctr2\" id=\"g10\">5</td><td class=\"ctr1\" id=\"h14\">8</td><td class=\"ctr2\" id=\"i14\">8</td><td class=\"ctr1\" id=\"j17\">1</td><td class=\"ctr2\" id=\"k17\">1</td></tr><tr><td id=\"a12\"><a href=\"MatrixProperties.java.html#L419\" class=\"el_method\">isOrthogonal()</a></td><td class=\"bar\" id=\"b18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"36\" alt=\"36\"/></td><td class=\"ctr2\" id=\"c21\">0%</td><td class=\"bar\" id=\"d21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e18\">0%</td><td class=\"ctr1\" id=\"f21\">3</td><td class=\"ctr2\" id=\"g21\">3</td><td class=\"ctr1\" id=\"h21\">7</td><td class=\"ctr2\" id=\"i21\">7</td><td class=\"ctr1\" id=\"j18\">1</td><td class=\"ctr2\" id=\"k18\">1</td></tr><tr><td id=\"a16\"><a href=\"MatrixProperties.java.html#L213\" class=\"el_method\">isReal()</a></td><td class=\"bar\" id=\"b19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"34\" alt=\"34\"/></td><td class=\"ctr2\" id=\"c22\">0%</td><td class=\"bar\" id=\"d17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e19\">0%</td><td class=\"ctr1\" id=\"f17\">4</td><td class=\"ctr2\" id=\"g17\">4</td><td class=\"ctr1\" id=\"h15\">8</td><td class=\"ctr2\" id=\"i15\">8</td><td class=\"ctr1\" id=\"j19\">1</td><td class=\"ctr2\" id=\"k19\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixProperties.java.html#L235\" class=\"el_method\">isComplex()</a></td><td class=\"bar\" id=\"b20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"34\" alt=\"34\"/></td><td class=\"ctr2\" id=\"c23\">0%</td><td class=\"bar\" id=\"d18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e20\">0%</td><td class=\"ctr1\" id=\"f18\">4</td><td class=\"ctr2\" id=\"g18\">4</td><td class=\"ctr1\" id=\"h16\">8</td><td class=\"ctr2\" id=\"i16\">8</td><td class=\"ctr1\" id=\"j20\">1</td><td class=\"ctr2\" id=\"k20\">1</td></tr><tr><td id=\"a26\"><a href=\"MatrixProperties.java.html#L445\" class=\"el_method\">isUnitary()</a></td><td class=\"bar\" id=\"b21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"26\" alt=\"26\"/></td><td class=\"ctr2\" id=\"c24\">0%</td><td class=\"bar\" id=\"d26\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e21\">0%</td><td class=\"ctr1\" id=\"f26\">2</td><td class=\"ctr2\" id=\"g26\">2</td><td class=\"ctr1\" id=\"h23\">5</td><td class=\"ctr2\" id=\"i23\">5</td><td class=\"ctr1\" id=\"j21\">1</td><td class=\"ctr2\" id=\"k21\">1</td></tr><tr><td id=\"a23\"><a href=\"MatrixProperties.java.html#L479\" class=\"el_method\">isTri()</a></td><td class=\"bar\" id=\"b22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"24\" alt=\"24\"/></td><td class=\"ctr2\" id=\"c25\">0%</td><td class=\"bar\" id=\"d19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e22\">0%</td><td class=\"ctr1\" id=\"f19\">4</td><td class=\"ctr2\" id=\"g19\">4</td><td class=\"ctr1\" id=\"h9\">9</td><td class=\"ctr2\" id=\"i9\">9</td><td class=\"ctr1\" id=\"j22\">1</td><td class=\"ctr2\" id=\"k22\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixProperties.java.html#L551\" class=\"el_method\">isDiagonal()</a></td><td class=\"bar\" id=\"b23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"23\" alt=\"23\"/></td><td class=\"ctr2\" id=\"c26\">0%</td><td class=\"bar\" id=\"d20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"36\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e23\">0%</td><td class=\"ctr1\" id=\"f20\">4</td><td class=\"ctr2\" id=\"g20\">4</td><td class=\"ctr1\" id=\"h26\">4</td><td class=\"ctr2\" id=\"i26\">4</td><td class=\"ctr1\" id=\"j23\">1</td><td class=\"ctr2\" id=\"k23\">1</td></tr><tr><td id=\"a22\"><a href=\"MatrixProperties.java.html#L392\" class=\"el_method\">isSymmetric(String)</a></td><td class=\"bar\" id=\"b24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"22\" alt=\"22\"/></td><td class=\"ctr2\" id=\"c27\">0%</td><td class=\"bar\" id=\"d22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e24\">0%</td><td class=\"ctr1\" id=\"f22\">3</td><td class=\"ctr2\" id=\"g22\">3</td><td class=\"ctr1\" id=\"h22\">7</td><td class=\"ctr2\" id=\"i22\">7</td><td class=\"ctr1\" id=\"j24\">1</td><td class=\"ctr2\" id=\"k24\">1</td></tr><tr><td id=\"a19\"><a href=\"MatrixProperties.java.html#L357\" class=\"el_method\">isSkewSymmetric()</a></td><td class=\"bar\" id=\"b25\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"c28\">0%</td><td class=\"bar\" id=\"d27\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e25\">0%</td><td class=\"ctr1\" id=\"f27\">2</td><td class=\"ctr2\" id=\"g27\">2</td><td class=\"ctr1\" id=\"h27\">4</td><td class=\"ctr2\" id=\"i27\">4</td><td class=\"ctr1\" id=\"j25\">1</td><td class=\"ctr2\" id=\"k25\">1</td></tr><tr><td id=\"a21\"><a href=\"MatrixProperties.java.html#L334\" class=\"el_method\">isSymmetric()</a></td><td class=\"bar\" id=\"b26\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"18\" alt=\"18\"/></td><td class=\"ctr2\" id=\"c29\">0%</td><td class=\"bar\" id=\"d28\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e26\">0%</td><td class=\"ctr1\" id=\"f28\">2</td><td class=\"ctr2\" id=\"g28\">2</td><td class=\"ctr1\" id=\"h28\">4</td><td class=\"ctr2\" id=\"i28\">4</td><td class=\"ctr1\" id=\"j26\">1</td><td class=\"ctr2\" id=\"k26\">1</td></tr><tr><td id=\"a27\"><a href=\"MatrixProperties.java.html#L259\" class=\"el_method\">isVector()</a></td><td class=\"bar\" id=\"b27\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"17\" alt=\"17\"/></td><td class=\"ctr2\" id=\"c30\">0%</td><td class=\"bar\" id=\"d23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e27\">0%</td><td class=\"ctr1\" id=\"f23\">3</td><td class=\"ctr2\" id=\"g23\">3</td><td class=\"ctr1\" id=\"h24\">5</td><td class=\"ctr2\" id=\"i24\">5</td><td class=\"ctr1\" id=\"j27\">1</td><td class=\"ctr2\" id=\"k27\">1</td></tr><tr><td id=\"a33\"><a href=\"MatrixProperties.java.html#L81\" class=\"el_method\">min()</a></td><td class=\"bar\" id=\"b28\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"15\" alt=\"15\"/></td><td class=\"ctr2\" id=\"c31\">0%</td><td class=\"bar\" id=\"d29\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e28\">0%</td><td class=\"ctr1\" id=\"f29\">2</td><td class=\"ctr2\" id=\"g29\">2</td><td class=\"ctr1\" id=\"h29\">4</td><td class=\"ctr2\" id=\"i29\">4</td><td class=\"ctr1\" id=\"j28\">1</td><td class=\"ctr2\" id=\"k28\">1</td></tr><tr><td id=\"a30\"><a href=\"MatrixProperties.java.html#L126\" class=\"el_method\">max()</a></td><td class=\"bar\" id=\"b29\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"15\" alt=\"15\"/></td><td class=\"ctr2\" id=\"c32\">0%</td><td class=\"bar\" id=\"d30\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e29\">0%</td><td class=\"ctr1\" id=\"f30\">2</td><td class=\"ctr2\" id=\"g30\">2</td><td class=\"ctr1\" id=\"h30\">4</td><td class=\"ctr2\" id=\"i30\">4</td><td class=\"ctr1\" id=\"j29\">1</td><td class=\"ctr2\" id=\"k29\">1</td></tr><tr><td id=\"a9\"><a href=\"MatrixProperties.java.html#L567\" class=\"el_method\">isFullRank()</a></td><td class=\"bar\" id=\"b30\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"c33\">0%</td><td class=\"bar\" id=\"d31\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e30\">0%</td><td class=\"ctr1\" id=\"f31\">2</td><td class=\"ctr2\" id=\"g31\">2</td><td class=\"ctr1\" id=\"h25\">5</td><td class=\"ctr2\" id=\"i25\">5</td><td class=\"ctr1\" id=\"j30\">1</td><td class=\"ctr2\" id=\"k30\">1</td></tr><tr><td id=\"a8\"><a href=\"MatrixProperties.java.html#L66\" class=\"el_method\">isEmpty()</a></td><td class=\"bar\" id=\"b31\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"13\" alt=\"13\"/></td><td class=\"ctr2\" id=\"c34\">0%</td><td class=\"bar\" id=\"d24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e31\">0%</td><td class=\"ctr1\" id=\"f24\">3</td><td class=\"ctr2\" id=\"g24\">3</td><td class=\"ctr1\" id=\"h33\">2</td><td class=\"ctr2\" id=\"i33\">2</td><td class=\"ctr1\" id=\"j31\">1</td><td class=\"ctr2\" id=\"k31\">1</td></tr><tr><td id=\"a20\"><a href=\"MatrixProperties.java.html#L54\" class=\"el_method\">isSquare()</a></td><td class=\"bar\" id=\"b32\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"c35\">0%</td><td class=\"bar\" id=\"d32\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e32\">0%</td><td class=\"ctr1\" id=\"f32\">2</td><td class=\"ctr2\" id=\"g32\">2</td><td class=\"ctr1\" id=\"h34\">2</td><td class=\"ctr2\" id=\"i34\">2</td><td class=\"ctr1\" id=\"j32\">1</td><td class=\"ctr2\" id=\"k32\">1</td></tr><tr><td id=\"a18\"><a href=\"MatrixProperties.java.html#L580\" class=\"el_method\">isSingular()</a></td><td class=\"bar\" id=\"b33\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"c36\">0%</td><td class=\"bar\" id=\"d34\"/><td class=\"ctr2\" id=\"e34\">n/a</td><td class=\"ctr1\" id=\"f34\">1</td><td class=\"ctr2\" id=\"g34\">1</td><td class=\"ctr1\" id=\"h31\">3</td><td class=\"ctr2\" id=\"i31\">3</td><td class=\"ctr1\" id=\"j33\">1</td><td class=\"ctr2\" id=\"k33\">1</td></tr><tr><td id=\"a37\"><a href=\"MatrixProperties.java.html#L610\" class=\"el_method\">norm(double)</a></td><td class=\"bar\" id=\"b34\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"c37\">0%</td><td class=\"bar\" id=\"d33\"><img src=\"../jacoco-resources/redbar.gif\" width=\"12\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e33\">0%</td><td class=\"ctr1\" id=\"f33\">2</td><td class=\"ctr2\" id=\"g33\">2</td><td class=\"ctr1\" id=\"h32\">3</td><td class=\"ctr2\" id=\"i32\">3</td><td class=\"ctr1\" id=\"j34\">1</td><td class=\"ctr2\" id=\"k34\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixProperties.java.html#L649\" class=\"el_method\">infNorm()</a></td><td class=\"bar\" id=\"b35\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"c38\">0%</td><td class=\"bar\" id=\"d35\"/><td class=\"ctr2\" id=\"e35\">n/a</td><td class=\"ctr1\" id=\"f35\">1</td><td class=\"ctr2\" id=\"g35\">1</td><td class=\"ctr1\" id=\"h35\">2</td><td class=\"ctr2\" id=\"i35\">2</td><td class=\"ctr1\" id=\"j35\">1</td><td class=\"ctr2\" id=\"k35\">1</td></tr><tr><td id=\"a2\"><a href=\"MatrixProperties.java.html#L962\" class=\"el_method\">eigVals()</a></td><td class=\"bar\" id=\"b36\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"9\" alt=\"9\"/></td><td class=\"ctr2\" id=\"c39\">0%</td><td class=\"bar\" id=\"d36\"/><td class=\"ctr2\" id=\"e36\">n/a</td><td class=\"ctr1\" id=\"f36\">1</td><td class=\"ctr2\" id=\"g36\">1</td><td class=\"ctr1\" id=\"h36\">2</td><td class=\"ctr2\" id=\"i36\">2</td><td class=\"ctr1\" id=\"j36\">1</td><td class=\"ctr2\" id=\"k36\">1</td></tr><tr><td id=\"a10\"><a href=\"MatrixProperties.java.html#L316\" class=\"el_method\">isHermation()</a></td><td class=\"bar\" id=\"b37\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"c40\">0%</td><td class=\"bar\" id=\"d37\"/><td class=\"ctr2\" id=\"e37\">n/a</td><td class=\"ctr1\" id=\"f37\">1</td><td class=\"ctr2\" id=\"g37\">1</td><td class=\"ctr1\" id=\"h37\">2</td><td class=\"ctr2\" id=\"i37\">2</td><td class=\"ctr1\" id=\"j37\">1</td><td class=\"ctr2\" id=\"k37\">1</td></tr><tr><td id=\"a36\"><a href=\"MatrixProperties.java.html#L595\" class=\"el_method\">norm()</a></td><td class=\"bar\" id=\"b38\"/><td class=\"ctr2\" id=\"c41\">0%</td><td class=\"bar\" id=\"d38\"/><td class=\"ctr2\" id=\"e38\">n/a</td><td class=\"ctr1\" id=\"f38\">1</td><td class=\"ctr2\" id=\"g38\">1</td><td class=\"ctr1\" id=\"h38\">1</td><td class=\"ctr2\" id=\"i41\">1</td><td class=\"ctr1\" id=\"j38\">1</td><td class=\"ctr2\" id=\"k38\">1</td></tr><tr><td id=\"a28\"><a href=\"MatrixProperties.java.html#L790\" class=\"el_method\">leftNullSpace()</a></td><td class=\"bar\" id=\"b39\"/><td class=\"ctr2\" id=\"c42\">0%</td><td class=\"bar\" id=\"d39\"/><td class=\"ctr2\" id=\"e39\">n/a</td><td class=\"ctr1\" id=\"f39\">1</td><td class=\"ctr2\" id=\"g39\">1</td><td class=\"ctr1\" id=\"h39\">1</td><td class=\"ctr2\" id=\"i42\">1</td><td class=\"ctr1\" id=\"j39\">1</td><td class=\"ctr2\" id=\"k39\">1</td></tr><tr><td id=\"a3\"><a href=\"MatrixProperties.java.html#L948\" class=\"el_method\">eigVecs()</a></td><td class=\"bar\" id=\"b40\"/><td class=\"ctr2\" id=\"c43\">0%</td><td class=\"bar\" id=\"d40\"/><td class=\"ctr2\" id=\"e40\">n/a</td><td class=\"ctr1\" id=\"f40\">1</td><td class=\"ctr2\" id=\"g40\">1</td><td class=\"ctr1\" id=\"h40\">1</td><td class=\"ctr2\" id=\"i43\">1</td><td class=\"ctr1\" id=\"j40\">1</td><td class=\"ctr2\" id=\"k40\">1</td></tr><tr><td id=\"a17\"><a href=\"MatrixProperties.java.html#L303\" class=\"el_method\">isSelfAdjoint()</a></td><td class=\"bar\" id=\"b41\"/><td class=\"ctr2\" id=\"c44\">0%</td><td class=\"bar\" id=\"d41\"/><td class=\"ctr2\" id=\"e41\">n/a</td><td class=\"ctr1\" id=\"f41\">1</td><td class=\"ctr2\" id=\"g41\">1</td><td class=\"ctr1\" id=\"h41\">1</td><td class=\"ctr2\" id=\"i44\">1</td><td class=\"ctr1\" id=\"j41\">1</td><td class=\"ctr2\" id=\"k41\">1</td></tr><tr><td id=\"a40\"><a href=\"MatrixProperties.java.html#L21\" class=\"el_method\">numCols()</a></td><td class=\"bar\" id=\"b42\"/><td class=\"ctr2\" id=\"c0\">100%</td><td class=\"bar\" id=\"d42\"/><td class=\"ctr2\" id=\"e42\">n/a</td><td class=\"ctr1\" id=\"f42\">0</td><td class=\"ctr2\" id=\"g42\">1</td><td class=\"ctr1\" id=\"h42\">0</td><td class=\"ctr2\" id=\"i38\">2</td><td class=\"ctr1\" id=\"j42\">0</td><td class=\"ctr2\" id=\"k42\">1</td></tr><tr><td id=\"a41\"><a href=\"MatrixProperties.java.html#L32\" class=\"el_method\">numRows()</a></td><td class=\"bar\" id=\"b43\"/><td class=\"ctr2\" id=\"c1\">100%</td><td class=\"bar\" id=\"d43\"/><td class=\"ctr2\" id=\"e43\">n/a</td><td class=\"ctr1\" id=\"f43\">0</td><td class=\"ctr2\" id=\"g43\">1</td><td class=\"ctr1\" id=\"h43\">0</td><td class=\"ctr2\" id=\"i39\">2</td><td class=\"ctr1\" id=\"j43\">0</td><td class=\"ctr2\" id=\"k43\">1</td></tr><tr><td id=\"a43\"><a href=\"MatrixProperties.java.html#L43\" class=\"el_method\">shape()</a></td><td class=\"bar\" id=\"b44\"/><td class=\"ctr2\" id=\"c2\">100%</td><td class=\"bar\" id=\"d44\"/><td class=\"ctr2\" id=\"e44\">n/a</td><td class=\"ctr1\" id=\"f44\">0</td><td class=\"ctr2\" id=\"g44\">1</td><td class=\"ctr1\" id=\"h44\">0</td><td class=\"ctr2\" id=\"i40\">2</td><td class=\"ctr1\" id=\"j44\">0</td><td class=\"ctr2\" id=\"k44\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixProperties.html b/target/site/jacoco/linalg/MatrixProperties.html
--- a/target/site/jacoco/linalg/MatrixProperties.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/MatrixProperties.html	(date 1648105701880)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixProperties</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixProperties</span></div><h1>MatrixProperties</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,330 of 2,348</td><td class="ctr2">0%</td><td class="bar">214 of 214</td><td class="ctr2">0%</td><td class="ctr1">149</td><td class="ctr2">152</td><td class="ctr1">291</td><td class="ctr2">297</td><td class="ctr1">42</td><td class="ctr2">45</td></tr></tfoot><tbody><tr><td id="a29"><a href="MatrixProperties.java.html#L1013" class="el_method">main(String[])</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="858" alt="858"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d25"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f25">2</td><td class="ctr2" id="g25">2</td><td class="ctr1" id="h2">18</td><td class="ctr2" id="i2">18</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a39"><a href="MatrixProperties.java.html#L735" class="el_method">nullSpace()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="156" alt="156"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="20" alt="20"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">11</td><td class="ctr2" id="g0">11</td><td class="ctr1" id="h0">23</td><td class="ctr2" id="i0">23</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a7"><a href="MatrixProperties.java.html#L974" class="el_method">isDiagonalizable()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="128" alt="128"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="16" alt="16"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">9</td><td class="ctr2" id="g1">9</td><td class="ctr1" id="h1">21</td><td class="ctr2" id="i1">21</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a1"><a href="MatrixProperties.java.html#L905" class="el_method">eig()</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="15" height="10" title="111" alt="111"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f11">4</td><td class="ctr2" id="g11">4</td><td class="ctr1" id="h3">17</td><td class="ctr2" id="i3">17</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a42"><a href="MatrixProperties.java.html#L663" class="el_method">rowSpace()</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="81" alt="81"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="60" height="10" title="10" alt="10"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f4">6</td><td class="ctr2" id="g4">6</td><td class="ctr1" id="h4">11</td><td class="ctr2" id="i4">11</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a0"><a href="MatrixProperties.java.html#L698" class="el_method">colSpace()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="79" alt="79"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="60" height="10" title="10" alt="10"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f5">6</td><td class="ctr2" id="g5">6</td><td class="ctr1" id="h5">11</td><td class="ctr2" id="i5">11</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a38"><a href="MatrixProperties.java.html#L628" class="el_method">norm(double, double)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="9" height="10" title="70" alt="70"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="12" alt="12"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f2">7</td><td class="ctr2" id="g2">7</td><td class="ctr1" id="h7">9</td><td class="ctr2" id="i7">9</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a24"><a href="MatrixProperties.java.html#L524" class="el_method">isTriL()</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="50" alt="50"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g6">5</td><td class="ctr1" id="h6">10</td><td class="ctr2" id="i6">10</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a13"><a href="MatrixProperties.java.html#L799" class="el_method">isPos()</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="44" alt="44"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f7">5</td><td class="ctr2" id="g7">5</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a11"><a href="MatrixProperties.java.html#L820" class="el_method">isNeg()</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="44" alt="44"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f8">5</td><td class="ctr2" id="g8">5</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a35"><a href="MatrixProperties.java.html#L101" class="el_method">minReal()</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="40" alt="40"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f12">4</td><td class="ctr2" id="g12">4</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a32"><a href="MatrixProperties.java.html#L147" class="el_method">maxReal()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="40" alt="40"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f13">4</td><td class="ctr2" id="g13">4</td><td class="ctr1" id="h18">7</td><td class="ctr2" id="i18">7</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a25"><a href="MatrixProperties.java.html#L501" class="el_method">isTriU()</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="40" alt="40"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f14">4</td><td class="ctr2" id="g14">4</td><td class="ctr1" id="h12">8</td><td class="ctr2" id="i12">8</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a34"><a href="MatrixProperties.java.html#L170" class="el_method">minComplex()</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f15">4</td><td class="ctr2" id="g15">4</td><td class="ctr1" id="h19">7</td><td class="ctr2" id="i19">7</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a31"><a href="MatrixProperties.java.html#L192" class="el_method">maxComplex()</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f16">4</td><td class="ctr2" id="g16">4</td><td class="ctr1" id="h20">7</td><td class="ctr2" id="i20">7</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a44"><a href="MatrixProperties.java.html#L277" class="el_method">vectorType()</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="12" alt="12"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f3">7</td><td class="ctr2" id="g3">7</td><td class="ctr1" id="h8">9</td><td class="ctr2" id="i8">9</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a14"><a href="MatrixProperties.java.html#L845" class="el_method">isPosDef()</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f9">5</td><td class="ctr2" id="g9">5</td><td class="ctr1" id="h13">8</td><td class="ctr2" id="i13">8</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a15"><a href="MatrixProperties.java.html#L873" class="el_method">isPosSemidef()</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f10">5</td><td class="ctr2" id="g10">5</td><td class="ctr1" id="h14">8</td><td class="ctr2" id="i14">8</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a12"><a href="MatrixProperties.java.html#L419" class="el_method">isOrthogonal()</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="36" alt="36"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h21">7</td><td class="ctr2" id="i21">7</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a16"><a href="MatrixProperties.java.html#L213" class="el_method">isReal()</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="34" alt="34"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f17">4</td><td class="ctr2" id="g17">4</td><td class="ctr1" id="h15">8</td><td class="ctr2" id="i15">8</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a5"><a href="MatrixProperties.java.html#L235" class="el_method">isComplex()</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="34" alt="34"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f18">4</td><td class="ctr2" id="g18">4</td><td class="ctr1" id="h16">8</td><td class="ctr2" id="i16">8</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a26"><a href="MatrixProperties.java.html#L445" class="el_method">isUnitary()</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="26" alt="26"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d26"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f26">2</td><td class="ctr2" id="g26">2</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a23"><a href="MatrixProperties.java.html#L479" class="el_method">isTri()</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="24" alt="24"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f19">4</td><td class="ctr2" id="g19">4</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a6"><a href="MatrixProperties.java.html#L551" class="el_method">isDiagonal()</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="23" alt="23"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f20">4</td><td class="ctr2" id="g20">4</td><td class="ctr1" id="h26">4</td><td class="ctr2" id="i26">4</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a22"><a href="MatrixProperties.java.html#L392" class="el_method">isSymmetric(String)</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="22" alt="22"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h22">7</td><td class="ctr2" id="i22">7</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a19"><a href="MatrixProperties.java.html#L357" class="el_method">isSkewSymmetric()</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="20" alt="20"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d27"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e25">0%</td><td class="ctr1" id="f27">2</td><td class="ctr2" id="g27">2</td><td class="ctr1" id="h27">4</td><td class="ctr2" id="i27">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a21"><a href="MatrixProperties.java.html#L334" class="el_method">isSymmetric()</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="18" alt="18"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d28"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e26">0%</td><td class="ctr1" id="f28">2</td><td class="ctr2" id="g28">2</td><td class="ctr1" id="h28">4</td><td class="ctr2" id="i28">4</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a27"><a href="MatrixProperties.java.html#L259" class="el_method">isVector()</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="17" alt="17"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e27">0%</td><td class="ctr1" id="f23">3</td><td class="ctr2" id="g23">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a33"><a href="MatrixProperties.java.html#L81" class="el_method">min()</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="15" alt="15"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d29"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e28">0%</td><td class="ctr1" id="f29">2</td><td class="ctr2" id="g29">2</td><td class="ctr1" id="h29">4</td><td class="ctr2" id="i29">4</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a30"><a href="MatrixProperties.java.html#L126" class="el_method">max()</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="15" alt="15"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d30"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e29">0%</td><td class="ctr1" id="f30">2</td><td class="ctr2" id="g30">2</td><td class="ctr1" id="h30">4</td><td class="ctr2" id="i30">4</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a9"><a href="MatrixProperties.java.html#L567" class="el_method">isFullRank()</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="14" alt="14"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d31"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e30">0%</td><td class="ctr1" id="f31">2</td><td class="ctr2" id="g31">2</td><td class="ctr1" id="h25">5</td><td class="ctr2" id="i25">5</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a8"><a href="MatrixProperties.java.html#L66" class="el_method">isEmpty()</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="13" alt="13"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e31">0%</td><td class="ctr1" id="f24">3</td><td class="ctr2" id="g24">3</td><td class="ctr1" id="h33">2</td><td class="ctr2" id="i33">2</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a20"><a href="MatrixProperties.java.html#L54" class="el_method">isSquare()</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d32"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e32">0%</td><td class="ctr1" id="f32">2</td><td class="ctr2" id="g32">2</td><td class="ctr1" id="h34">2</td><td class="ctr2" id="i34">2</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a18"><a href="MatrixProperties.java.html#L580" class="el_method">isSingular()</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h31">3</td><td class="ctr2" id="i31">3</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a37"><a href="MatrixProperties.java.html#L610" class="el_method">norm(double)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d33"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e33">0%</td><td class="ctr1" id="f33">2</td><td class="ctr2" id="g33">2</td><td class="ctr1" id="h32">3</td><td class="ctr2" id="i32">3</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a4"><a href="MatrixProperties.java.html#L649" class="el_method">infNorm()</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">2</td><td class="ctr2" id="i35">2</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a2"><a href="MatrixProperties.java.html#L962" class="el_method">eigVals()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="9" alt="9"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">2</td><td class="ctr2" id="i36">2</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a10"><a href="MatrixProperties.java.html#L316" class="el_method">isHermation()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="8" alt="8"/></td><td class="ctr2" id="c40">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">2</td><td class="ctr2" id="i37">2</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a36"><a href="MatrixProperties.java.html#L595" class="el_method">norm()</a></td><td class="bar" id="b38"/><td class="ctr2" id="c41">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i41">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a28"><a href="MatrixProperties.java.html#L790" class="el_method">leftNullSpace()</a></td><td class="bar" id="b39"/><td class="ctr2" id="c42">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i42">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr><tr><td id="a3"><a href="MatrixProperties.java.html#L948" class="el_method">eigVecs()</a></td><td class="bar" id="b40"/><td class="ctr2" id="c43">0%</td><td class="bar" id="d40"/><td class="ctr2" id="e40">n/a</td><td class="ctr1" id="f40">1</td><td class="ctr2" id="g40">1</td><td class="ctr1" id="h40">1</td><td class="ctr2" id="i43">1</td><td class="ctr1" id="j40">1</td><td class="ctr2" id="k40">1</td></tr><tr><td id="a17"><a href="MatrixProperties.java.html#L303" class="el_method">isSelfAdjoint()</a></td><td class="bar" id="b41"/><td class="ctr2" id="c44">0%</td><td class="bar" id="d41"/><td class="ctr2" id="e41">n/a</td><td class="ctr1" id="f41">1</td><td class="ctr2" id="g41">1</td><td class="ctr1" id="h41">1</td><td class="ctr2" id="i44">1</td><td class="ctr1" id="j41">1</td><td class="ctr2" id="k41">1</td></tr><tr><td id="a40"><a href="MatrixProperties.java.html#L21" class="el_method">numCols()</a></td><td class="bar" id="b42"/><td class="ctr2" id="c0">100%</td><td class="bar" id="d42"/><td class="ctr2" id="e42">n/a</td><td class="ctr1" id="f42">0</td><td class="ctr2" id="g42">1</td><td class="ctr1" id="h42">0</td><td class="ctr2" id="i38">2</td><td class="ctr1" id="j42">0</td><td class="ctr2" id="k42">1</td></tr><tr><td id="a41"><a href="MatrixProperties.java.html#L32" class="el_method">numRows()</a></td><td class="bar" id="b43"/><td class="ctr2" id="c1">100%</td><td class="bar" id="d43"/><td class="ctr2" id="e43">n/a</td><td class="ctr1" id="f43">0</td><td class="ctr2" id="g43">1</td><td class="ctr1" id="h43">0</td><td class="ctr2" id="i39">2</td><td class="ctr1" id="j43">0</td><td class="ctr2" id="k43">1</td></tr><tr><td id="a43"><a href="MatrixProperties.java.html#L43" class="el_method">shape()</a></td><td class="bar" id="b44"/><td class="ctr2" id="c2">100%</td><td class="bar" id="d44"/><td class="ctr2" id="e44">n/a</td><td class="ctr1" id="f44">0</td><td class="ctr2" id="g44">1</td><td class="ctr1" id="h44">0</td><td class="ctr2" id="i40">2</td><td class="ctr1" id="j44">0</td><td class="ctr2" id="k44">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixProperties</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixProperties</span></div><h1>MatrixProperties</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,330 of 2,348</td><td class="ctr2">0%</td><td class="bar">214 of 214</td><td class="ctr2">0%</td><td class="ctr1">149</td><td class="ctr2">152</td><td class="ctr1">291</td><td class="ctr2">297</td><td class="ctr1">42</td><td class="ctr2">45</td></tr></tfoot><tbody><tr><td id="a29"><a href="MatrixProperties.java.html#L1017" class="el_method">main(String[])</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="858" alt="858"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d25"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f25">2</td><td class="ctr2" id="g25">2</td><td class="ctr1" id="h2">18</td><td class="ctr2" id="i2">18</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a39"><a href="MatrixProperties.java.html#L739" class="el_method">nullSpace()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="156" alt="156"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="20" alt="20"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">11</td><td class="ctr2" id="g0">11</td><td class="ctr1" id="h0">23</td><td class="ctr2" id="i0">23</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a7"><a href="MatrixProperties.java.html#L978" class="el_method">isDiagonalizable()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="17" height="10" title="128" alt="128"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="16" alt="16"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">9</td><td class="ctr2" id="g1">9</td><td class="ctr1" id="h1">21</td><td class="ctr2" id="i1">21</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a1"><a href="MatrixProperties.java.html#L909" class="el_method">eig()</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="15" height="10" title="111" alt="111"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f11">4</td><td class="ctr2" id="g11">4</td><td class="ctr1" id="h3">17</td><td class="ctr2" id="i3">17</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a42"><a href="MatrixProperties.java.html#L667" class="el_method">rowSpace()</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="81" alt="81"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="60" height="10" title="10" alt="10"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f4">6</td><td class="ctr2" id="g4">6</td><td class="ctr1" id="h4">11</td><td class="ctr2" id="i4">11</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a0"><a href="MatrixProperties.java.html#L702" class="el_method">colSpace()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="79" alt="79"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="60" height="10" title="10" alt="10"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f5">6</td><td class="ctr2" id="g5">6</td><td class="ctr1" id="h5">11</td><td class="ctr2" id="i5">11</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a38"><a href="MatrixProperties.java.html#L628" class="el_method">norm(double, double)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="9" height="10" title="70" alt="70"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="12" alt="12"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f2">7</td><td class="ctr2" id="g2">7</td><td class="ctr1" id="h7">9</td><td class="ctr2" id="i7">9</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a24"><a href="MatrixProperties.java.html#L524" class="el_method">isTriL()</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="50" alt="50"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f6">5</td><td class="ctr2" id="g6">5</td><td class="ctr1" id="h6">10</td><td class="ctr2" id="i6">10</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a13"><a href="MatrixProperties.java.html#L803" class="el_method">isPos()</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="44" alt="44"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f7">5</td><td class="ctr2" id="g7">5</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a11"><a href="MatrixProperties.java.html#L824" class="el_method">isNeg()</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="44" alt="44"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f8">5</td><td class="ctr2" id="g8">5</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a35"><a href="MatrixProperties.java.html#L101" class="el_method">minReal()</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="40" alt="40"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f12">4</td><td class="ctr2" id="g12">4</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a32"><a href="MatrixProperties.java.html#L147" class="el_method">maxReal()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="40" alt="40"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f13">4</td><td class="ctr2" id="g13">4</td><td class="ctr1" id="h18">7</td><td class="ctr2" id="i18">7</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a25"><a href="MatrixProperties.java.html#L501" class="el_method">isTriU()</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="40" alt="40"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f14">4</td><td class="ctr2" id="g14">4</td><td class="ctr1" id="h12">8</td><td class="ctr2" id="i12">8</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a34"><a href="MatrixProperties.java.html#L170" class="el_method">minComplex()</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f15">4</td><td class="ctr2" id="g15">4</td><td class="ctr1" id="h19">7</td><td class="ctr2" id="i19">7</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a31"><a href="MatrixProperties.java.html#L192" class="el_method">maxComplex()</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f16">4</td><td class="ctr2" id="g16">4</td><td class="ctr1" id="h20">7</td><td class="ctr2" id="i20">7</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a44"><a href="MatrixProperties.java.html#L277" class="el_method">vectorType()</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="72" height="10" title="12" alt="12"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f3">7</td><td class="ctr2" id="g3">7</td><td class="ctr1" id="h8">9</td><td class="ctr2" id="i8">9</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a14"><a href="MatrixProperties.java.html#L849" class="el_method">isPosDef()</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f9">5</td><td class="ctr2" id="g9">5</td><td class="ctr1" id="h13">8</td><td class="ctr2" id="i13">8</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a15"><a href="MatrixProperties.java.html#L877" class="el_method">isPosSemidef()</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="39" alt="39"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="48" height="10" title="8" alt="8"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f10">5</td><td class="ctr2" id="g10">5</td><td class="ctr1" id="h14">8</td><td class="ctr2" id="i14">8</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a12"><a href="MatrixProperties.java.html#L419" class="el_method">isOrthogonal()</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="36" alt="36"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h21">7</td><td class="ctr2" id="i21">7</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a16"><a href="MatrixProperties.java.html#L213" class="el_method">isReal()</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="34" alt="34"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f17">4</td><td class="ctr2" id="g17">4</td><td class="ctr1" id="h15">8</td><td class="ctr2" id="i15">8</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a5"><a href="MatrixProperties.java.html#L235" class="el_method">isComplex()</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="34" alt="34"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f18">4</td><td class="ctr2" id="g18">4</td><td class="ctr1" id="h16">8</td><td class="ctr2" id="i16">8</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a26"><a href="MatrixProperties.java.html#L445" class="el_method">isUnitary()</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="26" alt="26"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d26"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f26">2</td><td class="ctr2" id="g26">2</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a23"><a href="MatrixProperties.java.html#L479" class="el_method">isTri()</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="24" alt="24"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f19">4</td><td class="ctr2" id="g19">4</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a6"><a href="MatrixProperties.java.html#L551" class="el_method">isDiagonal()</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="23" alt="23"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="36" height="10" title="6" alt="6"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f20">4</td><td class="ctr2" id="g20">4</td><td class="ctr1" id="h26">4</td><td class="ctr2" id="i26">4</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a22"><a href="MatrixProperties.java.html#L392" class="el_method">isSymmetric(String)</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="22" alt="22"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h22">7</td><td class="ctr2" id="i22">7</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a19"><a href="MatrixProperties.java.html#L357" class="el_method">isSkewSymmetric()</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="20" alt="20"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d27"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e25">0%</td><td class="ctr1" id="f27">2</td><td class="ctr2" id="g27">2</td><td class="ctr1" id="h27">4</td><td class="ctr2" id="i27">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a21"><a href="MatrixProperties.java.html#L334" class="el_method">isSymmetric()</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="18" alt="18"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d28"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e26">0%</td><td class="ctr1" id="f28">2</td><td class="ctr2" id="g28">2</td><td class="ctr1" id="h28">4</td><td class="ctr2" id="i28">4</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a27"><a href="MatrixProperties.java.html#L259" class="el_method">isVector()</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="17" alt="17"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e27">0%</td><td class="ctr1" id="f23">3</td><td class="ctr2" id="g23">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a33"><a href="MatrixProperties.java.html#L81" class="el_method">min()</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="15" alt="15"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d29"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e28">0%</td><td class="ctr1" id="f29">2</td><td class="ctr2" id="g29">2</td><td class="ctr1" id="h29">4</td><td class="ctr2" id="i29">4</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a30"><a href="MatrixProperties.java.html#L126" class="el_method">max()</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="15" alt="15"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d30"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e29">0%</td><td class="ctr1" id="f30">2</td><td class="ctr2" id="g30">2</td><td class="ctr1" id="h30">4</td><td class="ctr2" id="i30">4</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a9"><a href="MatrixProperties.java.html#L567" class="el_method">isFullRank()</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="14" alt="14"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d31"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e30">0%</td><td class="ctr1" id="f31">2</td><td class="ctr2" id="g31">2</td><td class="ctr1" id="h25">5</td><td class="ctr2" id="i25">5</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a8"><a href="MatrixProperties.java.html#L66" class="el_method">isEmpty()</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="13" alt="13"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="4" alt="4"/></td><td class="ctr2" id="e31">0%</td><td class="ctr1" id="f24">3</td><td class="ctr2" id="g24">3</td><td class="ctr1" id="h33">2</td><td class="ctr2" id="i33">2</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a20"><a href="MatrixProperties.java.html#L54" class="el_method">isSquare()</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d32"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e32">0%</td><td class="ctr1" id="f32">2</td><td class="ctr2" id="g32">2</td><td class="ctr1" id="h34">2</td><td class="ctr2" id="i34">2</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a18"><a href="MatrixProperties.java.html#L580" class="el_method">isSingular()</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h31">3</td><td class="ctr2" id="i31">3</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a37"><a href="MatrixProperties.java.html#L610" class="el_method">norm(double)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d33"><img src="../jacoco-resources/redbar.gif" width="12" height="10" title="2" alt="2"/></td><td class="ctr2" id="e33">0%</td><td class="ctr1" id="f33">2</td><td class="ctr2" id="g33">2</td><td class="ctr1" id="h32">3</td><td class="ctr2" id="i32">3</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a4"><a href="MatrixProperties.java.html#L653" class="el_method">infNorm()</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="12" alt="12"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">2</td><td class="ctr2" id="i35">2</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a2"><a href="MatrixProperties.java.html#L966" class="el_method">eigVals()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="9" alt="9"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">2</td><td class="ctr2" id="i36">2</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a10"><a href="MatrixProperties.java.html#L316" class="el_method">isHermation()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="8" alt="8"/></td><td class="ctr2" id="c40">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">2</td><td class="ctr2" id="i37">2</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a36"><a href="MatrixProperties.java.html#L595" class="el_method">norm()</a></td><td class="bar" id="b38"/><td class="ctr2" id="c41">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i41">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a28"><a href="MatrixProperties.java.html#L794" class="el_method">leftNullSpace()</a></td><td class="bar" id="b39"/><td class="ctr2" id="c42">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i42">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr><tr><td id="a3"><a href="MatrixProperties.java.html#L952" class="el_method">eigVecs()</a></td><td class="bar" id="b40"/><td class="ctr2" id="c43">0%</td><td class="bar" id="d40"/><td class="ctr2" id="e40">n/a</td><td class="ctr1" id="f40">1</td><td class="ctr2" id="g40">1</td><td class="ctr1" id="h40">1</td><td class="ctr2" id="i43">1</td><td class="ctr1" id="j40">1</td><td class="ctr2" id="k40">1</td></tr><tr><td id="a17"><a href="MatrixProperties.java.html#L303" class="el_method">isSelfAdjoint()</a></td><td class="bar" id="b41"/><td class="ctr2" id="c44">0%</td><td class="bar" id="d41"/><td class="ctr2" id="e41">n/a</td><td class="ctr1" id="f41">1</td><td class="ctr2" id="g41">1</td><td class="ctr1" id="h41">1</td><td class="ctr2" id="i44">1</td><td class="ctr1" id="j41">1</td><td class="ctr2" id="k41">1</td></tr><tr><td id="a40"><a href="MatrixProperties.java.html#L21" class="el_method">numCols()</a></td><td class="bar" id="b42"/><td class="ctr2" id="c0">100%</td><td class="bar" id="d42"/><td class="ctr2" id="e42">n/a</td><td class="ctr1" id="f42">0</td><td class="ctr2" id="g42">1</td><td class="ctr1" id="h42">0</td><td class="ctr2" id="i38">2</td><td class="ctr1" id="j42">0</td><td class="ctr2" id="k42">1</td></tr><tr><td id="a41"><a href="MatrixProperties.java.html#L32" class="el_method">numRows()</a></td><td class="bar" id="b43"/><td class="ctr2" id="c1">100%</td><td class="bar" id="d43"/><td class="ctr2" id="e43">n/a</td><td class="ctr1" id="f43">0</td><td class="ctr2" id="g43">1</td><td class="ctr1" id="h43">0</td><td class="ctr2" id="i39">2</td><td class="ctr1" id="j43">0</td><td class="ctr2" id="k43">1</td></tr><tr><td id="a43"><a href="MatrixProperties.java.html#L43" class="el_method">shape()</a></td><td class="bar" id="b44"/><td class="ctr2" id="c2">100%</td><td class="bar" id="d44"/><td class="ctr2" id="e44">n/a</td><td class="ctr1" id="f44">0</td><td class="ctr2" id="g44">1</td><td class="ctr1" id="h44">0</td><td class="ctr2" id="i40">2</td><td class="ctr1" id="j44">0</td><td class="ctr2" id="k44">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/MatrixProperties.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixProperties.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_source\">MatrixProperties.java</span></div><h1>MatrixProperties.java</h1><pre class=\"source lang-java linenums\">package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\nimport linalg.util.LinAlgArrayUtils;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * This interface contains several methods involving properties of a matrix.\r\n * \r\n * @author Jacob Watters\r\n */\r\ninterface MatrixProperties {\r\n\t\r\n\t/**\r\n\t * Number of columns in this matrix\r\n\t * \r\n\t * @return Number of rows in matrix.\r\n\t */\r\n\tdefault int numCols() { \r\n<span class=\"fc\" id=\"L21\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"fc\" id=\"L22\">\t\treturn A.n;</span>\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Number of rows in this matrix.\r\n\t * \r\n\t * @return Number of columns in matrix.\r\n\t */\r\n\tdefault int numRows() { \r\n<span class=\"fc\" id=\"L32\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"fc\" id=\"L33\">\t\treturn A.m; </span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Shape of this matrix i.e. number of rows and columns.\r\n\t * \r\n\t * @return Returns shape of this matrix shape as String e.g. &quot;m x n&quot;.\r\n\t */\r\n\t default String shape() {\r\n<span class=\"fc\" id=\"L43\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"fc\" id=\"L44\">\t\treturn A.shape;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if the matrix is square. That is, does the matrix have the same number of rows and columns?\r\n\t * \r\n\t * @return True if the matrix is square, false otherwise.\r\n\t */\r\n\t default boolean isSquare() {\r\n<span class=\"nc\" id=\"L54\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc bnc\" id=\"L55\" title=\"All 2 branches missed.\">\t\treturn (A.m==A.n);</span>\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if the matrix is empty. That is, does the matrix have exactly zero entries?\r\n\t * \r\n\t * @return True if the matrix is empty, false otherwise.\r\n\t */\r\n\t default boolean isEmpty() {\r\n<span class=\"nc\" id=\"L66\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc bnc\" id=\"L67\" title=\"All 4 branches missed.\">\t\treturn (A.m==0 &amp;&amp; A.n==0);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds the minimum value in the matrix. If the matrix is complex, the value with the smallest magnitude will be returned.\r\n\t * If the matrix is real, the smallest real number will be returned.&lt;br&gt;\r\n\t * Also see {@link #minReal() minReal()} and {@link #minComplex() minComplex()} \r\n\t * \r\n\t * @return minimum value of this matrix\r\n\t */\r\n\t default CNumber min() {\r\n\t\tCNumber min;\r\n\r\n<span class=\"nc bnc\" id=\"L81\" title=\"All 2 branches missed.\">\t\tif(this.isReal()) {</span>\r\n<span class=\"nc\" id=\"L82\">\t\t\tmin = new CNumber(this.minReal());</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L84\">\t\t\tmin = this.minComplex();</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L87\">\t\treturn min;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds the minimum real value in the matrix.\r\n\t * If the matrix contains non-real values, the imaginary component will be ignored.\r\n\t * &lt;br&gt;\r\n\t * Also see {@link #min() min()} and {@link #minComplex() minComplex()} \r\n\t * \r\n\t * @return Returns minimum real value of this matrix.\r\n\t */\r\n\t// TODO: Complex values should be completely ignored in general.\r\n\t default double minReal() {\r\n<span class=\"nc\" id=\"L101\">\t\tdouble currentMin = Double.MAX_VALUE;</span>\r\n<span class=\"nc\" id=\"L102\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L104\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L105\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L106\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][j].compareToReal(currentMin) &lt; 0) {</span>\r\n<span class=\"nc\" id=\"L107\">\t\t\t\t\tcurrentMin = A.entries[i][j].re;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L112\">\t\treturn currentMin;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds the maximum value in the matrix. If the matrix is complex, the value with the largest magnitude will be returned.\r\n\t * If the matrix is real, the largest real number will be returned.&lt;br&gt;\r\n\t * Also see {@link #maxReal() maxReal()} and {@link #maxComplex() maxComplex()} \r\n\t * \r\n\t * @return Returns maximum value of this matrix.\r\n\t */\r\n\t default CNumber max() {\r\n\t\tCNumber max;\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L126\" title=\"All 2 branches missed.\">\t\tif(this.isReal()) {</span>\r\n<span class=\"nc\" id=\"L127\">\t\t\tmax = new CNumber(this.maxReal());</span>\r\n\t\t}\r\n\t\telse {\r\n<span class=\"nc\" id=\"L130\">\t\t\tmax = this.maxComplex();</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L133\">\t\treturn max;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds the maximum real value in the matrix.\r\n\t * If the matrix contains any non-real entries, the imaginary component will be ignored. \r\n\t * &lt;br&gt;\r\n\t * Also see {@link #max() max()} and {@link #maxComplex() maxComplex()} \r\n\t * \r\n\t * @return Returns maximum real value of this matrix.\r\n\t */\r\n\t// TODO: Complex values should be completely ignored in general.\r\n\t default double maxReal() {\r\n<span class=\"nc\" id=\"L147\">\t\tdouble currentMax = Double.MIN_VALUE;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L149\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L151\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L152\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L153\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][j].compareToReal(currentMax) &gt; 0) {</span>\r\n<span class=\"nc\" id=\"L154\">\t\t\t\t\tcurrentMax = A.entries[i][j].re;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L159\">\t\treturn currentMax;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds value with minimum magnitude.\r\n\t * Also see {@link #min() min()} and {@link #minReal() minReal()} \r\n\t * \r\n\t * @return Returns value with minimum magnitude in this matrix.\r\n\t */\r\n\t default CNumber minComplex() {\r\n<span class=\"nc\" id=\"L170\">\t\tCNumber currentMin = CNumber.MAX_VALUE;</span>\r\n<span class=\"nc\" id=\"L171\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L173\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L174\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L175\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][j].compareToReal(currentMin) &lt; 0) {</span>\r\n<span class=\"nc\" id=\"L176\">\t\t\t\t\tcurrentMin = A.entries[i][j];</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L181\">\t\treturn currentMin;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds value with maximum magnitude.\r\n\t * Also see {@link #max() max()} and {@link #maxReal() maxReal()} \r\n\t * \r\n\t * @return Returns value with maximum magnitude in this matrix.\r\n\t */\r\n\t default CNumber maxComplex() {\r\n<span class=\"nc\" id=\"L192\">\t\tCNumber currentMax = CNumber.MIN_VALUE;</span>\r\n<span class=\"nc\" id=\"L193\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L195\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L196\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L197\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][j].compareTo(currentMax) &gt; 0) {</span>\r\n<span class=\"nc\" id=\"L198\">\t\t\t\t\tcurrentMax = A.entries[i][j];</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L203\">\t\treturn currentMax;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is real. That is, the matrix only has real entries.\r\n\t * \r\n\t * @return True if matrix has no complex entries. Otherwise, false.\r\n\t */\r\n\t default boolean isReal() {\r\n<span class=\"nc\" id=\"L213\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L214\">\t\tboolean result = true;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L216\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L217\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L218\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][j].isComplex()) {</span>\r\n<span class=\"nc\" id=\"L219\">\t\t\t\t\tresult = false;</span>\r\n<span class=\"nc\" id=\"L220\">\t\t\t\t\tbreak;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L225\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix has at least one complex entry.\r\n\t * \r\n\t * @return True if matrix has at least one non-real entry. Otherwise, false.\r\n\t */\r\n\t default boolean isComplex() {\r\n<span class=\"nc\" id=\"L235\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L236\">\t\tboolean result = false;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L238\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L239\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L240\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][j].isComplex()) {</span>\r\n<span class=\"nc\" id=\"L241\">\t\t\t\t\tresult = true;</span>\r\n<span class=\"nc\" id=\"L242\">\t\t\t\t\tbreak;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L247\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a given matrix is a column or row vector. A column vector will be a \r\n\t * a matrix of shape &lt;code&gt;mx1&lt;/code&gt; and a row vector will be a matrix of shape\r\n\t * &lt;code&gt;1xn&lt;/code&gt;\r\n\t * \r\n\t * @return True if matrix is a column or row vector, otherwise returns false.\r\n\t */\r\n\t default boolean isVector() {\r\n<span class=\"nc\" id=\"L259\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L260\">\t\tboolean result = false;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L262\" title=\"All 4 branches missed.\">\t\tif(A.m == 1 || A.n == 1) {</span>\r\n<span class=\"nc\" id=\"L263\">\t\t\tresult = true;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L266\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a matrix is a vector and if so, what kind of vector (i.e row or column vectors).\r\n\t * \r\n\t * @return 0 if the matrix is NOT a vector, 1 if the matrix is a row vector,\r\n\t * 2 if the matrix is a column vector, and 3 if the matrix is of shape 1x1\r\n\t */\r\n\t default int vectorType() {\r\n<span class=\"nc\" id=\"L277\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L278\">\t\tint result = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L280\" title=\"All 4 branches missed.\">\t\tif(A.m == 1 &amp;&amp; A.n &gt; 1) { // then we have a row vector</span>\r\n<span class=\"nc\" id=\"L281\">\t\t\tresult = Vector.ROW_VECTOR;</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L283\" title=\"All 4 branches missed.\">\t\telse if(A.n == 1 &amp;&amp; A.m &gt; 1) { // then we have a column vector</span>\r\n<span class=\"nc\" id=\"L284\">\t\t\tresult = Vector.COLUMN_VECTOR;</span>\r\n\t\t} \r\n<span class=\"nc bnc\" id=\"L286\" title=\"All 4 branches missed.\">\t\telse if(A.m == 1 &amp;&amp; A.n == 1) { // then we have a 1x1 matrix </span>\r\n<span class=\"nc\" id=\"L287\">\t\t\tresult = 3;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L290\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is self-adjoint. That is, if the matrix is equal to its own\r\n\t * conjugate transpose.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Same as {@link #isHermation() isHermation()}.\r\n\t * \r\n\t * @return True if the matrix is self-adjoint. Otherwise, returns false.\r\n\t */\r\n\t default boolean isSelfAdjoint() {\r\n<span class=\"nc\" id=\"L303\">\t\treturn this.isHermation();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is hermation. That is, if the matrix is equal to its own\r\n\t * conjugate transpose.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Same as {@link #isSelfAdjoint() isSelfAdjoint()}.\r\n\t * \r\n\t * @return True if the matrix is hermation. Otherwise, returns false.\r\n\t */\r\n\t default boolean isHermation() {\r\n<span class=\"nc\" id=\"L316\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L317\">\t\treturn A.H().equals(A);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a matrix is symmetric. \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * For an square matrix A, \r\n\t * A is symmetric if and only if &lt;code&gt;A[i][j] = A[j][i]&lt;/code&gt; for all i, j. \r\n\t * That is, if A is equal its own transpose, then it is symmetric.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see {@link #isSkewSymmetric() isSkewSymmetric()} and\r\n\t * {@link #isSymmetric(String) isSymmetric(String skewOption)}\r\n\t * \r\n\t * @return True if this matrix is symmetric, false otherwise. \r\n\t */\r\n\t default boolean isSymmetric() {\r\n<span class=\"nc\" id=\"L334\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L336\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L337\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix Must be square but got size &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L340\">\t\treturn A.equals(A.T());</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a matrix is skew-symmetric. \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * For an square matrix A, \r\n\t * A is skew-symmetric if and only if &lt;code&gt;A[i][j] = -A[j][i]&lt;/code&gt; for all i, j. \r\n\t * That is, if A is equal to the negative of its own transpose, then it is skew-symmetric.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see {@link #isSymmetric() isSymmetric()} and\r\n\t * {@link #isSymmetric(String) isSymmetric(String skewOption)}\r\n\t * \r\n\t * @return True if this matrix is symmetric, false otherwise. \r\n\t */\r\n\t default boolean isSkewSymmetric() {\r\n<span class=\"nc\" id=\"L357\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L359\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L360\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix Must be square but got size &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L363\">\t\treturn (A.equals(A.scalMult(-1).T()));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a matrix is symmetric or skew-symmetric depending on the skewOption.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * - If skewOption is passed &quot;skew&quot;, this method is identical to \r\n\t * {@link #isSkewSymmetric() isSkewSymmetric()}.&lt;br&gt;\r\n\t * \r\n\t * - If skewOption is passed &quot;no-skew&quot;, this method is identical to \r\n\t * {@link #isSymmetric() isSymmetric()}.\r\n\t * \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * For an square matrix A, \r\n\t * A is symmetric if and only if &lt;code&gt;A[i][j] = A[j][i]&lt;/code&gt; for all i, j. \r\n\t * That is, if A is equal to A transpose.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * A is skew-symmetric if and only if &lt;code&gt;A[i][j] = -A[j][i]&lt;/code&gt; for all i, j. \r\n\t * That is, if A is equal to -A transpose.\r\n\t * \r\n\t * \r\n\t * @param skewOption - String to indicate whether to check for symmetry or\r\n\t * \t\tskew-symmetry. Specify skewOption as &quot;skew&quot; to check for skew-symmetry or\r\n\t * \t\t&quot;no-skew&quot; to check for regular symmetry.\r\n\t * \t\t\t\t\t\r\n\t * @return True if the matrix is symmetric/skew-symmetric. Otherwise, returns false.\r\n\t */\r\n\t default boolean isSymmetric(String skewOption) {\r\n<span class=\"nc\" id=\"L392\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L393\">\t\tboolean result = false;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L395\" title=\"All 2 branches missed.\">\t\tif(skewOption.equalsIgnoreCase(&quot;skew&quot;)) {</span>\r\n<span class=\"nc\" id=\"L396\">\t\t\tresult = A.isSkewSymmetric();</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L398\" title=\"All 2 branches missed.\">\t\t} else if(skewOption.equalsIgnoreCase(&quot;no-skew&quot;)) {</span>\r\n<span class=\"nc\" id=\"L399\">\t\t\tresult = A.isSymmetric();</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L402\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if this matrix is orthogonal. A square matrix &lt;code&gt;Q&lt;/code&gt; is\r\n\t * orthogonal if and only if &lt;code&gt;QQ^T = I&lt;/code&gt; where I is the appropriately sized\r\n\t * identity matrix.  \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Please note, this method only checks if &lt;code&gt;QQ^T = I&lt;/code&gt;. If the matrix is complex\r\n\t * you may be looking for {@link #isUnitary() isUnitary()} which checks if a matrix is unitary or &lt;code&gt;QQ^* = I&lt;/code&gt; where\r\n\t * &lt;code&gt;Q^*&lt;/code&gt; is the conjugate transpose of &lt;code&gt;Q&lt;/code&gt;. The &lt;code&gt;isUnitary()&lt;/code&gt; method will behave the same as \r\n\t * this method for real matrices.\r\n\t * \r\n\t * @return True if the matrix is orthogonal. Otherwise, returns false.\r\n\t */\r\n\t default boolean isOrthogonal() {\r\n<span class=\"nc\" id=\"L419\">\t\tMatrix A = ((Matrix) this);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L421\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L422\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L425\" title=\"All 2 branches missed.\">\t\tif(!A.isReal()) {</span>\r\n<span class=\"nc\" id=\"L426\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be real. For complex or real matrices, use isUnitary()&quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L429\">\t\tMatrix AAT = A.mult(A.T()).round(13);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L431\">\t\treturn AAT.equals(Matrix.I(A.m));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if this matrix is unitary. A square matrix &lt;code&gt;Q&lt;/code&gt; is\r\n\t * unitary if and only if &lt;code&gt;QQ^* = I&lt;/code&gt; where &lt;code&gt;I&lt;/code&gt; is the appropriately sized\r\n\t * identity matrix and &lt;code&gt;Q^*&lt;/code&gt; is the conjugate transpose. \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * For real matrices, this method is the same as {@link #isOrthogonal() isOrthogonal()}.\r\n\t * \r\n\t * @return True if the matrix is unitary. Otherwise, returns false.\r\n\t */\r\n\t default boolean isUnitary() {\r\n<span class=\"nc\" id=\"L445\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L447\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L448\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L451\">\t\tMatrix AATC = A.mult(A.conjT()).round(13);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L453\">\t\treturn AATC.equals(Matrix.I(A.m));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a matrix is Triangular.&lt;br&gt;\r\n\t * A triangular matrix has all zeros above and/or\r\n\t * below the principle diagonal.&lt;br&gt;&lt;br&gt;\r\n\t * - Diagonal: A square matrix is diagonal if every element above \r\n\t * and below the principle diagonal is zero.&lt;br&gt;\r\n\t * - Lower Triangular: A square matrix is lower triangular if\r\n\t * every element above the principle diagonal is zero.&lt;br&gt;\r\n\t * - Upper Triangular: A square matrix is upper triangular \r\n\t * if every element below the principle diagonal is zero\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * See &lt;br&gt;\r\n\t * - {@link #isTriU() isTriU()}&lt;br&gt;\r\n\t * - {@link #isTriL() isTriL()}&lt;br&gt;\r\n\t * - {@link #isDiagonal() isDiagonal()}\r\n\t * \r\n\t * @return - 1 if matrix is not triangular. &lt;br&gt;\r\n\t * \t\t- 0 if Matrix is diagonal.&lt;br&gt;\r\n\t * \t\t- 1 if Matrix is lower triangular.&lt;br&gt;\r\n\t * \t\t- 2 if Matrix is upper triangular.\r\n\t */\r\n\t default int isTri() {\r\n<span class=\"nc\" id=\"L479\">\t\tint result = -1;</span>\r\n<span class=\"nc\" id=\"L480\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L482\" title=\"All 2 branches missed.\">\t\tif(A.isDiagonal()) {</span>\r\n<span class=\"nc\" id=\"L483\">\t\t\tresult = 0;</span>\r\n<span class=\"nc bnc\" id=\"L484\" title=\"All 2 branches missed.\">\t\t} else if(A.isTriL()) {</span>\r\n<span class=\"nc\" id=\"L485\">\t\t\tresult = 1;</span>\r\n<span class=\"nc bnc\" id=\"L486\" title=\"All 2 branches missed.\">\t\t} else if(A.isTriU()) {</span>\r\n<span class=\"nc\" id=\"L487\">\t\t\tresult = 1;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L490\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is upper triangular. A square matrix is upper triangular \r\n\t * if every element below the principle diagonal is zero.\r\n\t * \r\n\t * @return True if this matrix is upper triangular. Otherwise, returns false.\r\n\t */\r\n\t default boolean isTriU() {\r\n<span class=\"nc\" id=\"L501\">\t\tboolean result = true;</span>\r\n<span class=\"nc\" id=\"L502\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L504\" title=\"All 2 branches missed.\">\t\tfor(int j=0; j&lt;A.n-1; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L505\" title=\"All 2 branches missed.\">\t\t\tfor(int i=j+1; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L506\" title=\"All 2 branches missed.\">\t\t\t\tif(!A.entries[i][j].equals(CNumber.ZERO)) {</span>\r\n<span class=\"nc\" id=\"L507\">\t\t\t\t\tresult = false;</span>\r\n<span class=\"nc\" id=\"L508\">\t\t\t\t\treturn result;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L513\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is lower triangular. A square matrix is lower triangular if\r\n\t * every element above the principle diagonal is zero.\r\n\t * \r\n\t * @return True if this matrix is lower triangular. Otherwise, returns false.\r\n\t */\r\n\t default boolean isTriL() {\r\n<span class=\"nc\" id=\"L524\">\t\tboolean result = true;</span>\r\n<span class=\"nc\" id=\"L525\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L527\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L528\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L531\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m-1; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L532\" title=\"All 2 branches missed.\">\t\t\tfor(int j=i+1; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L533\" title=\"All 2 branches missed.\">\t\t\t\tif(!A.entries[i][j].equals(CNumber.ZERO)) {</span>\r\n<span class=\"nc\" id=\"L534\">\t\t\t\t\tresult = false;</span>\r\n<span class=\"nc\" id=\"L535\">\t\t\t\t\treturn result;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L540\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if this matrix is diagonal. A matrix is diagonal if every element above \r\n\t * and below the principle diagonal is zero.\r\n\t * \r\n\t * @return True if this matrix is diagonal. Otherwise, returns false.\r\n\t */\r\n\t default boolean isDiagonal() {\r\n<span class=\"nc\" id=\"L551\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L553\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L554\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L557\" title=\"All 4 branches missed.\">\t\treturn (A.isTriL() &amp;&amp; A.isTriU());</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks to see if a matrices rank is the same as its number of rows. \r\n\t * \r\n\t * @return Returns true if matrix is full rank. Otherwise, returns false.\r\n\t */\r\n\t default boolean isFullRank() {\t\r\n<span class=\"nc\" id=\"L567\">\t\tboolean result = false;</span>\r\n<span class=\"nc\" id=\"L568\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L570\" title=\"All 2 branches missed.\">\t\tif(A.rank() == A.m) {</span>\r\n<span class=\"nc\" id=\"L571\">\t\t\treturn true;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L574\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t// TODO: javadoc\r\n\t default boolean isSingular() {\r\n<span class=\"nc\" id=\"L580\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L581\">\t\tint tol = 13; // TODO: make this an optional parameter?</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L583\">\t\treturn CNumber.round(A.det(), tol).equals(CNumber.ZERO);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the 2-norm of a Matrix denoted L&lt;sub&gt;2, 2&lt;/sub&gt; or A&lt;sub&gt;F&lt;/sub&gt; for a matrix A. This is known as the \r\n\t * Frobenius norm or the Hilbert�Schmidt norm.\r\n\t * \r\n\t * @returns Returns the Frobenius norm.\r\n\t */\r\n\t// TODO: Look into other implementations Can be computed using square of singular values or with trace. \r\n\t default CNumber norm() {\r\n<span class=\"nc\" id=\"L595\">\t\treturn norm(2, 2);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the L&lt;sub&gt;p&lt;/sub&gt; norm. This is equivalent to L&lt;sub&gt;p, q&lt;/sub&gt;\r\n\t * where p = q.\r\n\t * &lt;br&gt;\r\n\t * p can be &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;. which will result in\r\n\t * the infinity / max norm being computed.\r\n\t * \r\n\t * @param p - norm parameter\r\n\t * @return\r\n\t */\r\n\t default CNumber norm(double p) {\r\n<span class=\"nc bnc\" id=\"L610\" title=\"All 2 branches missed.\">\t\tif(p == Double.POSITIVE_INFINITY) {</span>\r\n<span class=\"nc\" id=\"L611\">\t\t\treturn infNorm();</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L614\">\t\treturn norm(p, p);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the L&lt;sub&gt;p, q&lt;/sub&gt; norm of this matrix.\r\n\t * \r\n\t * @param p - norm parameter 1\r\n\t * @param q - norm parameter 2\r\n\t * @return Returns L&lt;sub&gt;p, q&lt;/sub&gt; norm of this matrix\r\n\t */\r\n\t// TODO: Look into other implementations Can be computed using square of singular values or with trace. \r\n\t// See https://en.wikipedia.org/wiki/Matrix_norm#L2,1_and_Lp,q_norms\r\n\t default CNumber norm(double p, double q) {\t\r\n<span class=\"nc\" id=\"L628\">\t\tdouble norm = 0;</span>\r\n<span class=\"nc\" id=\"L629\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L631\" title=\"All 8 branches missed.\">\t\tif(p &lt; 1 || q &lt; 1 || Double.isNaN(p) || p == Double.NEGATIVE_INFINITY) {</span>\r\n<span class=\"nc\" id=\"L632\">\t\t\tthrow new IllegalArgumentException(&quot;Expecting arguments to be greater than or equal to 1 but &quot; +</span>\r\n\t\t\t\t\t&quot;got &quot; + p + &quot; and &quot; + q + &quot;.&quot;);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L636\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L637\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L638\">\t\t\t\tnorm += Math.pow(A.entries[i][j].mag(), p);</span>\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L641\">\t\t\tnorm = Math.pow(norm, q/p);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L644\">\t\treturn new CNumber(Math.pow(norm, 1/q));</span>\r\n\t}\r\n\t\r\n\t\r\n\t default CNumber infNorm() {\r\n<span class=\"nc\" id=\"L649\">\t\tCNumber[] values = LinAlgArrayUtils.flatten(((Matrix) this).entries);</span>\r\n<span class=\"nc\" id=\"L650\">\t\treturn new CNumber(CNumber.max(values).mag());</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds an orthonormal basis for the row space of this matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * The row space of a matrix is the span of all column vectors. A orthonormal row space basis is \r\n\t * a linearly independent set of unit vectors which also spans the row space.\r\n\t * \r\n\t * @return A matrix whose rows are row vectors forming an orthonormal basis for the row space of this matrix.\r\n\t */\r\n\t default Matrix rowSpace() {\r\n<span class=\"nc\" id=\"L663\">\t\tMatrix A = (Matrix) this,</span>\r\n<span class=\"nc\" id=\"L664\">\t\t\t   rrefA = A.T().rref(),</span>\r\n<span class=\"nc\" id=\"L665\">\t\t\t   C = new Matrix(rrefA.m, 0), // Orthonormal basis of column space</span>\r\n<span class=\"nc\" id=\"L666\">\t\t       zero = new Vector(rrefA.m);</span>\r\n\t\t\t\r\n\t\t/* Finds any columns which do not contain a pivot. Then indicates the variable is free.\r\n\t\t * The number on non-pivot columns will be the number of eigenvectors for the associated eigenvalue.\r\n\t\t */\r\n<span class=\"nc bnc\" id=\"L671\" title=\"All 2 branches missed.\">\t\tfor(int j=0; j&lt;rrefA.n; j++) { // Iterate over columns</span>\r\n<span class=\"nc bnc\" id=\"L672\" title=\"All 2 branches missed.\">\t\t\tif(!rrefA.getColAsVector(j).equals(zero)) { // Then this column may have a pivot</span>\r\n<span class=\"nc bnc\" id=\"L673\" title=\"All 2 branches missed.\">\t\t\t\tfor(int i=rrefA.m-1; i&gt;-1; i--) {</span>\r\n<span class=\"nc bnc\" id=\"L674\" title=\"All 2 branches missed.\">\t\t\t\t\tif(!rrefA.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>\r\n<span class=\"nc bnc\" id=\"L675\" title=\"All 2 branches missed.\">\t\t\t\t\t\tif(rrefA.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must be a pivot.</span>\r\n<span class=\"nc\" id=\"L676\">\t\t\t\t\t\t\tC = C.augment(A.getColAsVector(j).scalDiv(A.getColAsVector(j).norm()));</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak; // We can move to the next column.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L685\">\t\treturn C.T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finds an orthonormal basis for the column space of this matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * The column space of a matrix is the span of all column vectors. A orthonormal column space basis is \r\n\t * a linearly independent set of unit vectors which also spans the column space.\r\n\t * \r\n\t * @return A matrix whose columns are column vectors forming an orthonormal basis for the columns space of this matrix.\r\n\t */\r\n\t default Matrix colSpace() { // TODO: Return in matrix instead\r\n<span class=\"nc\" id=\"L698\">\t\tMatrix A = (Matrix) this,</span>\r\n<span class=\"nc\" id=\"L699\">\t\t\t   rrefA = A.rref(),</span>\r\n<span class=\"nc\" id=\"L700\">\t\t\t   C = new Matrix(rrefA.m, 0), // Orthonormal basis of column space</span>\r\n<span class=\"nc\" id=\"L701\">\t\t\t   zero = new Vector(rrefA.m);</span>\r\n\t\t\r\n\t\t/* Finds any columns which do not contain a pivot. Then indicates the variable is free.\r\n\t\t * The number on non-pivot columns will be the number of eigenvectors for the associated eigenvalue.\r\n\t\t */\r\n<span class=\"nc bnc\" id=\"L706\" title=\"All 2 branches missed.\">\t\tfor(int j=0; j&lt;rrefA.n; j++) { // Iterate over columns</span>\r\n<span class=\"nc bnc\" id=\"L707\" title=\"All 2 branches missed.\">\t\t\tif(!rrefA.getColAsVector(j).equals(zero)) { // Then this column may have a pivot</span>\r\n<span class=\"nc bnc\" id=\"L708\" title=\"All 2 branches missed.\">\t\t\t\tfor(int i=rrefA.m-1; i&gt;-1; i--) {</span>\r\n<span class=\"nc bnc\" id=\"L709\" title=\"All 2 branches missed.\">\t\t\t\t\tif(!rrefA.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>\r\n<span class=\"nc bnc\" id=\"L710\" title=\"All 2 branches missed.\">\t\t\t\t\t\tif(rrefA.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must be a pivot.</span>\r\n<span class=\"nc\" id=\"L711\">\t\t\t\t\t\t\tC = C.augment(A.getColAsVector(j).scalDiv(A.getColAsVector(j).norm()));</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak; // We can move to the next column.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L724\">\t\treturn C;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes a orthonormal basis for the null space of this matrix. The null space of a matrix A is all vectors x that\r\n\t * satisfy Ax = &lt;bold&gt;0&lt;/bold&gt;.\r\n\t * \r\n\t * @return A matrix whose column vectors from an orthonormal basis for the null space of this matrix.\r\n\t */\r\n\t default Matrix nullSpace() {\r\n<span class=\"nc\" id=\"L735\">\t\tMatrix A = ((Matrix) this).rref(),</span>\r\n\t\t\t   x,\r\n<span class=\"nc\" id=\"L737\">\t\t\t   N = new Matrix(A.m, 0), // Matrix  containing orthonormal nullspace.</span>\r\n<span class=\"nc\" id=\"L738\">\t\t\t   zero = new Vector(A.m); </span>\r\n<span class=\"nc\" id=\"L739\">\t\tArrayList&lt;Integer&gt; nonpivCol = new ArrayList&lt;Integer&gt;();</span>\r\n\t\t\r\n\t\t/* Finds any columns which do not contain a pivot. Then indicates the variable is free.\r\n\t\t * The number on non-pivot columns will be the number of eigenvectors for the associated eigenvalue.\r\n\t\t */\r\n<span class=\"nc bnc\" id=\"L744\" title=\"All 2 branches missed.\">\t\tfor(int j=0; j&lt;A.n; j++) { // columns</span>\r\n<span class=\"nc bnc\" id=\"L745\" title=\"All 2 branches missed.\">\t\t\tif(A.getColAsVector(j).equals(zero)) { // Then this column does not have a pivot</span>\r\n<span class=\"nc\" id=\"L746\">\t\t\t\tnonpivCol.add(j);</span>\r\n\t\t\t} else {\r\n<span class=\"nc bnc\" id=\"L748\" title=\"All 2 branches missed.\">\t\t\t\tfor(int i=A.m-1; i&gt;-1; i--) {</span>\r\n<span class=\"nc bnc\" id=\"L749\" title=\"All 2 branches missed.\">\t\t\t\t\tif(!A.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>\r\n<span class=\"nc bnc\" id=\"L750\" title=\"All 2 branches missed.\">\t\t\t\t\t\tif(!A.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must not a pivot.</span>\r\n<span class=\"nc\" id=\"L751\">\t\t\t\t\t\t\tnonpivCol.add(j); // Add this column to the list of non-pivot columns.</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak; // We can move to the next column now.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L760\" title=\"All 2 branches missed.\">\t\tfor(int j : nonpivCol) {</span>\r\n<span class=\"nc\" id=\"L761\">\t\t\tx = Matrix.zeros(A.m, 1);</span>\r\n<span class=\"nc\" id=\"L762\">\t\t\tx.entries[j][0] = CNumber.ONE; // Set the free variable to one.</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L764\" title=\"All 2 branches missed.\">\t\t\tfor(int h=0; h&lt;A.m; h++) {</span>\r\n<span class=\"nc bnc\" id=\"L765\" title=\"All 2 branches missed.\">\t\t\t\tif(!nonpivCol.contains(h)) { // Ensure the variable is either not free.</span>\r\n\t\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L767\" title=\"All 2 branches missed.\">\t\t\t\t\tfor(int k=0; k&lt;A.m; k++) { // find the pivot row</span>\r\n<span class=\"nc bnc\" id=\"L768\" title=\"All 2 branches missed.\">\t\t\t\t\t\tif(!A.entries[k][h].equals(CNumber.ZERO)) { // then we have found the row of the pivot.</span>\r\n<span class=\"nc\" id=\"L769\">\t\t\t\t\t\t\tx.entries[h][0] = CNumber.addInv(A.entries[k][j]);</span>\r\n<span class=\"nc\" id=\"L770\">\t\t\t\t\t\t\tbreak; // Move on to the next pivot column.</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L776\">\t\t\tN = N.augment(x.scalDiv(x.norm())); // Add x to the list of eigenvectors in V.</span>\r\n<span class=\"nc\" id=\"L777\">\t\t}</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L779\">\t\treturn N;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes an orthonormal basis of the left null space of this matrix. The left null space of a matrix A is all column vectors x\r\n\t * which satisfy x&lt;sup&gt;T&lt;/sup&gt;A=0&lt;sup&gt;T&lt;/sup&gt;. This is equivalent to the the {@link #nullSpace() null space} of A&lt;sup&gt;T&lt;/sup&gt;.\r\n\t * \r\n\t * @return\r\n\t */\r\n\t default Matrix leftNullSpace() {\r\n<span class=\"nc\" id=\"L790\">\t\treturn ((Matrix) this).T().nullSpace();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * \r\n\t * @return True if matrix only contains positive real entries.\r\n\t */\r\n\t default boolean isPos() {\r\n<span class=\"nc\" id=\"L799\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L800\">\t\tboolean result = true;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L802\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L803\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L804\" title=\"All 4 branches missed.\">\t\t\t\tif(!(A.entries[i][j].isReal() &amp;&amp; A.entries[i][j].compareToReal(CNumber.ZERO) &gt; 0)) {</span>\r\n<span class=\"nc\" id=\"L805\">\t\t\t\t\tresult = false;</span>\r\n<span class=\"nc\" id=\"L806\">\t\t\t\t\treturn result; // Then we are done so we can return.</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L811\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * \r\n\t * @return True if matrix only contains negative entries.\r\n\t */\r\n\t default boolean isNeg() {\r\n<span class=\"nc\" id=\"L820\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L821\">\t\tboolean result = true;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L823\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L824\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L825\" title=\"All 4 branches missed.\">\t\t\t\tif(!(A.entries[i][j].isReal() &amp;&amp; A.entries[i][j].compareToReal(CNumber.ZERO) &lt; 0)) {</span>\r\n<span class=\"nc\" id=\"L826\">\t\t\t\t\tresult = false;</span>\r\n<span class=\"nc\" id=\"L827\">\t\t\t\t\treturn result; // Then we are done so we can return.</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L832\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is positive-definite. An m-by-m hermation (or symmetric if real) matrix M is positive-definite if for all non-zero\r\n\t * column vectors z, z&lt;sup&gt;H&lt;/sup&gt;Mz is positive where z&lt;sup&gt;H&lt;/sup&gt; is the conjugate transpose of z.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see {@link #isPosSemidef() positive-semidefinite}.\r\n\t * \r\n\t * @return True if the matrix is positive-definite. Otherwise, returns false.\r\n\t */\r\n\t default boolean isPosDef() {\r\n<span class=\"nc\" id=\"L845\">\t\tboolean result = false;</span>\r\n\t\t\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L848\" title=\"All 2 branches missed.\">\t\tif(this.isHermation()) {</span>\r\n<span class=\"nc\" id=\"L849\">\t\t\tMatrix lam = this.eigVals();</span>\r\n<span class=\"nc\" id=\"L850\">\t\t\tresult = true;</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L852\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;lam.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L853\" title=\"All 4 branches missed.\">\t\t\t\tif(!(lam.entries[i][0].isReal() &amp;&amp; lam.entries[i][0].compareToReal(CNumber.ZERO) &gt; 0)) {</span>\r\n\t\t\t\t\t// Then there is a negative or non-real eigenvalue, thus the matrix is not positive-definite\r\n<span class=\"nc\" id=\"L855\">\t\t\t\t\tresult = false;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // Otherwise, the matrix is not positive-definite\r\n\t\t\r\n<span class=\"nc\" id=\"L860\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if matrix is positive-semidefinite. An m-by-m hermation (or symmetric if real) matrix M is positive-definite if for all non-zero \\\r\n\t * column vector z, z&lt;sup&gt;*&lt;/sup&gt;Mz is non-negative where z&lt;sup&gt;*&lt;/sup&gt; is the conjugate transpose of z.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see {@link #isPosDef() positive-definite}.\r\n\t * \r\n\t * @return True if the matrix is positive-semidefinite. Otherwise, returns false.\r\n\t */\r\n\t default boolean isPosSemidef() {\r\n<span class=\"nc\" id=\"L873\">\t\tboolean result = false;</span>\r\n\t\t\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L876\" title=\"All 2 branches missed.\">\t\tif(this.isHermation()) {</span>\r\n<span class=\"nc\" id=\"L877\">\t\t\tMatrix lam = this.eigVals();</span>\r\n<span class=\"nc\" id=\"L878\">\t\t\tresult = true;</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L880\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;lam.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L881\" title=\"All 4 branches missed.\">\t\t\t\tif(!(lam.entries[i][0].isReal() &amp;&amp; lam.entries[i][0].compareToReal(CNumber.ZERO) &gt;= 0)) {</span>\r\n\t\t\t\t\t// Then there is a negative or non-real eigenvalue, thus the matrix is not positive-semidefinite\r\n<span class=\"nc\" id=\"L883\">\t\t\t\t\tresult = false;</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // Otherwise, the matrix is not positive-semidefinite\r\n\t\t\r\n<span class=\"nc\" id=\"L888\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the eigenvalues and associated eigenvectors for a square matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * - {@link #eigVecs() eigVecs()} to compute just the eigenvectors. &lt;br&gt;\r\n\t * - {@link #eigVals() eigVals()} to compute just the eigenvalues. This is recommended if the eigenvectors are not needed as it will be faster.\r\n\t * \r\n\t * @return Returns an array of two matrices. The first matrix is a row vector which contains the eigenvalues of A (no necessarily ordered but grouped by equality), repeated per there multiplicity.\r\n\t *  The columns of the second matrix are the eigenvectors of A associated with each eigenvalue in the first matrix. For repeated eigenvalues, each associated eigenvector in the second matrix is \r\n\t *  an associated eigenvector.\r\n\t */\r\n\t// TODO: add eigPairs which returns an array of matrices where each matrix is an eigenvector and the eigenvalue.\r\n\t default Matrix[] eig() {\r\n<span class=\"nc\" id=\"L905\">\t\tMatrix[] eigenpairs = new Matrix[2];</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L907\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L908\">\t\tMatrix lam = Decompose.schur(A)[1].diagAsVector().T(); // Get eigenvalues of A using the schur decomposition</span>\r\n<span class=\"nc\" id=\"L909\">\t\tlam = new Vector(LinAlgArrayUtils.group(lam.entries[0])).round(13); // Round eigenvalues to near machine epsilon and group equivalent eigenvalues.</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L911\">\t\tMatrix I = Matrix.I(A.m),</span>\r\n<span class=\"nc\" id=\"L912\">\t\t\t\t   zero = new Matrix(A.m, 1),</span>\r\n<span class=\"nc\" id=\"L913\">\t\t\t\t   x = new Matrix(A.m, 1), // Stores a specific eigenvector</span>\r\n<span class=\"nc\" id=\"L914\">\t\t\t\t   V = new Matrix(A.m, 0); // Stores eigenvectors in its columns</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L916\">\t\tVector b = new Vector(A.m);</span>\r\n<span class=\"nc\" id=\"L917\">\t\tArrayList&lt;Integer&gt; nonpivCol = new ArrayList&lt;Integer&gt;();\t</span>\r\n\r\n<span class=\"nc bnc\" id=\"L919\" title=\"All 2 branches missed.\">\t\tfor(int h=0; h&lt;lam.m; h++) {</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L921\" title=\"All 4 branches missed.\">\t\t\tif(h==0 || !lam.entries[h][0].equals(lam.entries[h-1][0])) { // Only compute eigenvectors for a given eigenvalue once.</span>\r\n<span class=\"nc\" id=\"L922\">\t\t\t\tMatrix rref = A.sub(I.scalMult(lam.entries[h][0]));</span>\r\n\t\t\t\t\r\n\t\t\t\t/* Compute null space of (A-nI) where n is the specified eigenvalue.\r\n\t\t\t\t *  This is equivalent to the eigenspace of A for the eigenvalue n.\r\n\t\t\t\t */\r\n<span class=\"nc\" id=\"L927\">\t\t\t\tV = V.augment(rref.nullSpace());</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L931\">\t\teigenpairs[0] = lam;</span>\r\n<span class=\"nc\" id=\"L932\">\t\teigenpairs[1] = V;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L934\">\t\treturn eigenpairs;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the right eigenvectors of a matrix. This is done by first computing the Schur decomposition.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * - {@link #eig() eig()} to compute both eigenvalues and eigenvectors.&lt;br&gt;\r\n\t * - {@link #eigVals() eigVals()} to compute just the eigenvalues.\r\n\t * \r\n\t * @return Returns a matrix containing the eigenvectors of this matrix as its column vectors.\r\n\t */\r\n\tdefault Matrix eigVecs() {\r\n<span class=\"nc\" id=\"L948\">\t\treturn this.eig()[1];</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the eigenvalues of a matrix. This is done by first computing the Schur decomposition.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * - {@link #eig() eig()} to compute both eigenvalues and eigenvectors.&lt;br&gt;\r\n\t * - {@link #eigVecs() eigVecs()} to compute just the eigenvectors.\r\n\t * \r\n\t * @return Returns a column vector containing the eigenvalues of this matrix.\r\n\t */\r\n\t default Matrix eigVals() {\r\n<span class=\"nc\" id=\"L962\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L963\">\t\treturn Decompose.schur(A)[1].diagAsVector();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if a matrix is diagonalizable. A matrix B is diagonalizable if and only if\r\n\t * the multiplicity for each eigenvalue is equivalent to the eigenspace for that eigenvalue.\r\n\t * \r\n\t * @return True if the matrix is diagonalizable. Otherwise, returns false.\r\n\t */\r\n\t default boolean isDiagonalizable() {\r\n<span class=\"nc\" id=\"L974\">\t\tMatrix A = (Matrix) this,</span>\r\n<span class=\"nc\" id=\"L975\">\t\t\t   I = Matrix.I(A.m); </span>\r\n<span class=\"nc\" id=\"L976\">\t\tboolean result = true;</span>\r\n<span class=\"nc\" id=\"L977\">\t\tint count = 0;</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L979\">\t\tMatrix lam = new Vector(LinAlgArrayUtils.group(A.eigVals().T().entries[0])),</span>\r\n\t\t\t   nullSpace;\r\n<span class=\"nc\" id=\"L981\">\t\tArrayList&lt;Integer&gt; multiplicites = new ArrayList&lt;Integer&gt;(); // Contains multiplicity for each eigenvalue</span>\r\n<span class=\"nc\" id=\"L982\">\t\tArrayList&lt;Integer&gt; eigenDim = new ArrayList&lt;Integer&gt;(); // Contains dimension of each eigenspace for all eigenvalues.</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L984\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;lam.m; i++) { // Find multiplicity for each eigenvalue</span>\r\n<span class=\"nc bnc\" id=\"L985\" title=\"All 6 branches missed.\">\t\t\tif((i!=0 &amp;&amp; !lam.entries[i][0].equals(lam.entries[i-1][0])) || i==0) {</span>\r\n<span class=\"nc\" id=\"L986\">\t\t\t\tcount=0;</span>\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L988\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j=0; j&lt;lam.m; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L989\" title=\"All 2 branches missed.\">\t\t\t\t\tif(lam.entries[j][0].equals(lam.entries[i][0])) {</span>\r\n<span class=\"nc\" id=\"L990\">\t\t\t\t\t\tcount++;</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L994\">\t\t\t\tmultiplicites.add(count);</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L996\">\t\t\t\tnullSpace = A.sub(I.scalMult(lam.entries[i][0])).nullSpace();</span>\r\n<span class=\"nc\" id=\"L997\">\t\t\t\teigenDim.add(nullSpace.n);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L1001\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;eigenDim.size(); i++) {</span>\r\n<span class=\"nc bnc\" id=\"L1002\" title=\"All 2 branches missed.\">\t\t\tif(eigenDim.get(i).equals(multiplicites.get(i))) {</span>\r\n<span class=\"nc\" id=\"L1003\">\t\t\t\tresult = false;</span>\r\n<span class=\"nc\" id=\"L1004\">\t\t\t\tbreak;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L1008\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t static void main(String args[]) {\r\n<span class=\"nc\" id=\"L1013\">\t\tint[][] a = {{0, 1, 0, 0},</span>\r\n\t\t\t\t\t {0, 0, 1, 0},\r\n\t\t\t\t\t {0, 0, 0, 1},\r\n\t\t\t\t\t {1, 0, 0, 0}}; // Schur decomposition will fail here because we have 4 eigenvalues all with magnitude 1.\r\n\t\t\r\n<span class=\"nc\" id=\"L1018\">\t\tdouble[][] \ta1 =  {\t{2, 5, 8, 7},</span>\r\n\t\t  \t\t\t\t\t{5, 2, 2, 8},\r\n\t\t  \t\t\t\t\t{7, 5, 6, 6},\r\n\t\t  \t\t\t\t\t{5, 4, 4, 8} };\r\n\t\t\r\n<span class=\"nc\" id=\"L1023\">\t\tdouble[][] a2 = {{1, -3, 3},</span>\r\n\t\t                 {3, -5, 3},\r\n\t\t                 {6, -6, 4}};\r\n\t\t\r\n<span class=\"nc\" id=\"L1027\">\t\tdouble[][] a3 = {{0,  0,  0, 1},</span>\r\n\t\t\t\t\t\t {0,  0, -1, 0},\r\n\t\t\t\t\t\t {0,  1,  0, 0},\r\n\t\t\t\t\t\t {-1, 0, 0, 0}}; // TODO: Currently fails possibly due to repeated eigenvalues\r\n\t\t\r\n<span class=\"nc\" id=\"L1032\">\t\tCNumber[][] ac = {\t{new CNumber(&quot;2+2i&quot;),\tnew CNumber(&quot;5&quot;), new CNumber(&quot;8&quot;), new CNumber(&quot;7&quot;)},</span>\r\n\t\t\t\t\t\t\t{new CNumber(&quot;5&quot;), \t\tnew CNumber(&quot;i&quot;), new CNumber(&quot;2&quot;), new CNumber(&quot;8&quot;)},\r\n\t\t\t\t\t\t\t{new CNumber(&quot;7&quot;),\t\tnew CNumber(&quot;5&quot;), new CNumber(&quot;6&quot;), new CNumber(&quot;6&quot;)},\r\n\t\t\t\t\t\t\t{new CNumber(&quot;5&quot;), \t\tnew CNumber(&quot;4&quot;), new CNumber(&quot;4&quot;), new CNumber(&quot;8&quot;)} }; // TODO: Currently fails possibly due to complex conjugate eigenvalues\r\n\t\t\r\n<span class=\"nc\" id=\"L1037\">\t\tCNumber[][] ac2 = {\t{new CNumber(&quot;2+2i&quot;),\tnew CNumber(&quot;5&quot;), new CNumber(&quot;8&quot;)},</span>\r\n\t\t\t\t\t\t\t{new CNumber(&quot;5&quot;), \t\tnew CNumber(&quot;i&quot;), new CNumber(&quot;2&quot;)},\r\n\t\t\t\t\t\t\t{new CNumber(&quot;7&quot;),\t\tnew CNumber(&quot;5&quot;), new CNumber(&quot;6&quot;)}};\r\n\t\t\r\n<span class=\"nc\" id=\"L1041\">\t\tdouble[][] test1 = {{1, 0,  1},</span>\r\n\t\t\t\t\t\t\t{0, 1, -2},\r\n\t\t\t\t\t\t\t{0, 0,  0}};\r\n\t\t\r\n<span class=\"nc\" id=\"L1045\">\t\tdouble[][] test2 = {{0, 1, 0, 2},</span>\r\n\t\t\t\t\t\t\t{0, 0, 1, 2},\r\n\t\t\t\t\t\t\t{0, 0, 0, 0},\r\n\t\t\t\t\t\t\t{0, 0, 0, 0}};\r\n\t\t\r\n<span class=\"nc\" id=\"L1050\">\t\tdouble[][] test3 = {{1, 0, -1, 0},</span>\r\n\t\t\t\t\t\t\t{0, 1, -1, 0},\r\n\t\t\t\t\t\t\t{0, 0,  0, 1},\r\n\t\t\t\t\t\t\t{0, 0,  0, 0}};\r\n\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L1056\">\t\tMatrix A = new Matrix(test3);</span>\r\n\t\t\r\n\r\n<span class=\"nc\" id=\"L1059\">\t\tMatrix[] VW = A.eig();</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L1061\">\t\tMatrix.print(&quot;A:\\n&quot;, A, &quot;\\n\\n&quot;);</span>\r\n<span class=\"nc\" id=\"L1062\">\t\tMatrix.print(&quot;lam:\\n&quot;, VW[0], &quot;\\n\\n&quot;);</span>\r\n<span class=\"nc\" id=\"L1063\">\t\tMatrix.print(&quot;V:\\n&quot;, VW[1], &quot;\\n\\n&quot;);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L1065\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;VW[1].n ; i++) { // Ensure vectors are actually eigenvectors.</span>\r\n<span class=\"nc\" id=\"L1066\">\t\t\tSystem.out.println(A.mult(VW[1].getColAsVector(i)).round(10).equals(VW[1].getColAsVector(i).scalMult(VW[0].entries[i][0]).round(10)));</span>\r\n\t\t}\r\n\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L1070\">\t\tA.isDiagonalizable();</span>\r\n\r\n<span class=\"nc\" id=\"L1072\">\t}</span>\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixProperties.java.html b/target/site/jacoco/linalg/MatrixProperties.java.html
--- a/target/site/jacoco/linalg/MatrixProperties.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/MatrixProperties.java.html	(date 1648105701855)
@@ -643,11 +643,15 @@
 		
 <span class="nc" id="L644">		return new CNumber(Math.pow(norm, 1/q));</span>
 	}
-	
-	
+
+
+	/**
+	 * Computes the infinity norm of the matrix. That is, the value with the largest magnitude.
+	 * @return
+	 */
 	 default CNumber infNorm() {
-<span class="nc" id="L649">		CNumber[] values = LinAlgArrayUtils.flatten(((Matrix) this).entries);</span>
-<span class="nc" id="L650">		return new CNumber(CNumber.max(values).mag());</span>
+<span class="nc" id="L653">		CNumber[] values = LinAlgArrayUtils.flatten(((Matrix) this).entries);</span>
+<span class="nc" id="L654">		return new CNumber(CNumber.max(values).mag());</span>
 	}
 	
 	
@@ -660,20 +664,20 @@
 	 * @return A matrix whose rows are row vectors forming an orthonormal basis for the row space of this matrix.
 	 */
 	 default Matrix rowSpace() {
-<span class="nc" id="L663">		Matrix A = (Matrix) this,</span>
-<span class="nc" id="L664">			   rrefA = A.T().rref(),</span>
-<span class="nc" id="L665">			   C = new Matrix(rrefA.m, 0), // Orthonormal basis of column space</span>
-<span class="nc" id="L666">		       zero = new Vector(rrefA.m);</span>
+<span class="nc" id="L667">		Matrix A = (Matrix) this,</span>
+<span class="nc" id="L668">			   rrefA = A.T().rref(),</span>
+<span class="nc" id="L669">			   C = new Matrix(rrefA.m, 0), // Orthonormal basis of column space</span>
+<span class="nc" id="L670">		       zero = new Vector(rrefA.m);</span>
 			
 		/* Finds any columns which do not contain a pivot. Then indicates the variable is free.
 		 * The number on non-pivot columns will be the number of eigenvectors for the associated eigenvalue.
 		 */
-<span class="nc bnc" id="L671" title="All 2 branches missed.">		for(int j=0; j&lt;rrefA.n; j++) { // Iterate over columns</span>
-<span class="nc bnc" id="L672" title="All 2 branches missed.">			if(!rrefA.getColAsVector(j).equals(zero)) { // Then this column may have a pivot</span>
-<span class="nc bnc" id="L673" title="All 2 branches missed.">				for(int i=rrefA.m-1; i&gt;-1; i--) {</span>
-<span class="nc bnc" id="L674" title="All 2 branches missed.">					if(!rrefA.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>
-<span class="nc bnc" id="L675" title="All 2 branches missed.">						if(rrefA.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must be a pivot.</span>
-<span class="nc" id="L676">							C = C.augment(A.getColAsVector(j).scalDiv(A.getColAsVector(j).norm()));</span>
+<span class="nc bnc" id="L675" title="All 2 branches missed.">		for(int j=0; j&lt;rrefA.n; j++) { // Iterate over columns</span>
+<span class="nc bnc" id="L676" title="All 2 branches missed.">			if(!rrefA.getColAsVector(j).equals(zero)) { // Then this column may have a pivot</span>
+<span class="nc bnc" id="L677" title="All 2 branches missed.">				for(int i=rrefA.m-1; i&gt;-1; i--) {</span>
+<span class="nc bnc" id="L678" title="All 2 branches missed.">					if(!rrefA.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>
+<span class="nc bnc" id="L679" title="All 2 branches missed.">						if(rrefA.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must be a pivot.</span>
+<span class="nc" id="L680">							C = C.augment(A.getColAsVector(j).scalDiv(A.getColAsVector(j).norm()));</span>
 						}
 						
 						break; // We can move to the next column.
@@ -682,7 +686,7 @@
 			}
 		}
 		
-<span class="nc" id="L685">		return C.T();</span>
+<span class="nc" id="L689">		return C.T();</span>
 	}
 	
 	
@@ -695,20 +699,20 @@
 	 * @return A matrix whose columns are column vectors forming an orthonormal basis for the columns space of this matrix.
 	 */
 	 default Matrix colSpace() { // TODO: Return in matrix instead
-<span class="nc" id="L698">		Matrix A = (Matrix) this,</span>
-<span class="nc" id="L699">			   rrefA = A.rref(),</span>
-<span class="nc" id="L700">			   C = new Matrix(rrefA.m, 0), // Orthonormal basis of column space</span>
-<span class="nc" id="L701">			   zero = new Vector(rrefA.m);</span>
+<span class="nc" id="L702">		Matrix A = (Matrix) this,</span>
+<span class="nc" id="L703">			   rrefA = A.rref(),</span>
+<span class="nc" id="L704">			   C = new Matrix(rrefA.m, 0), // Orthonormal basis of column space</span>
+<span class="nc" id="L705">			   zero = new Vector(rrefA.m);</span>
 		
 		/* Finds any columns which do not contain a pivot. Then indicates the variable is free.
 		 * The number on non-pivot columns will be the number of eigenvectors for the associated eigenvalue.
 		 */
-<span class="nc bnc" id="L706" title="All 2 branches missed.">		for(int j=0; j&lt;rrefA.n; j++) { // Iterate over columns</span>
-<span class="nc bnc" id="L707" title="All 2 branches missed.">			if(!rrefA.getColAsVector(j).equals(zero)) { // Then this column may have a pivot</span>
-<span class="nc bnc" id="L708" title="All 2 branches missed.">				for(int i=rrefA.m-1; i&gt;-1; i--) {</span>
-<span class="nc bnc" id="L709" title="All 2 branches missed.">					if(!rrefA.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>
-<span class="nc bnc" id="L710" title="All 2 branches missed.">						if(rrefA.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must be a pivot.</span>
-<span class="nc" id="L711">							C = C.augment(A.getColAsVector(j).scalDiv(A.getColAsVector(j).norm()));</span>
+<span class="nc bnc" id="L710" title="All 2 branches missed.">		for(int j=0; j&lt;rrefA.n; j++) { // Iterate over columns</span>
+<span class="nc bnc" id="L711" title="All 2 branches missed.">			if(!rrefA.getColAsVector(j).equals(zero)) { // Then this column may have a pivot</span>
+<span class="nc bnc" id="L712" title="All 2 branches missed.">				for(int i=rrefA.m-1; i&gt;-1; i--) {</span>
+<span class="nc bnc" id="L713" title="All 2 branches missed.">					if(!rrefA.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>
+<span class="nc bnc" id="L714" title="All 2 branches missed.">						if(rrefA.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must be a pivot.</span>
+<span class="nc" id="L715">							C = C.augment(A.getColAsVector(j).scalDiv(A.getColAsVector(j).norm()));</span>
 						}
 						
 						break; // We can move to the next column.
@@ -721,7 +725,7 @@
 		
 		
 		
-<span class="nc" id="L724">		return C;</span>
+<span class="nc" id="L728">		return C;</span>
 	}
 	
 	
@@ -732,23 +736,23 @@
 	 * @return A matrix whose column vectors from an orthonormal basis for the null space of this matrix.
 	 */
 	 default Matrix nullSpace() {
-<span class="nc" id="L735">		Matrix A = ((Matrix) this).rref(),</span>
+<span class="nc" id="L739">		Matrix A = ((Matrix) this).rref(),</span>
 			   x,
-<span class="nc" id="L737">			   N = new Matrix(A.m, 0), // Matrix  containing orthonormal nullspace.</span>
-<span class="nc" id="L738">			   zero = new Vector(A.m); </span>
-<span class="nc" id="L739">		ArrayList&lt;Integer&gt; nonpivCol = new ArrayList&lt;Integer&gt;();</span>
+<span class="nc" id="L741">			   N = new Matrix(A.m, 0), // Matrix  containing orthonormal nullspace.</span>
+<span class="nc" id="L742">			   zero = new Vector(A.m); </span>
+<span class="nc" id="L743">		ArrayList&lt;Integer&gt; nonpivCol = new ArrayList&lt;Integer&gt;();</span>
 		
 		/* Finds any columns which do not contain a pivot. Then indicates the variable is free.
 		 * The number on non-pivot columns will be the number of eigenvectors for the associated eigenvalue.
 		 */
-<span class="nc bnc" id="L744" title="All 2 branches missed.">		for(int j=0; j&lt;A.n; j++) { // columns</span>
-<span class="nc bnc" id="L745" title="All 2 branches missed.">			if(A.getColAsVector(j).equals(zero)) { // Then this column does not have a pivot</span>
-<span class="nc" id="L746">				nonpivCol.add(j);</span>
+<span class="nc bnc" id="L748" title="All 2 branches missed.">		for(int j=0; j&lt;A.n; j++) { // columns</span>
+<span class="nc bnc" id="L749" title="All 2 branches missed.">			if(A.getColAsVector(j).equals(zero)) { // Then this column does not have a pivot</span>
+<span class="nc" id="L750">				nonpivCol.add(j);</span>
 			} else {
-<span class="nc bnc" id="L748" title="All 2 branches missed.">				for(int i=A.m-1; i&gt;-1; i--) {</span>
-<span class="nc bnc" id="L749" title="All 2 branches missed.">					if(!A.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>
-<span class="nc bnc" id="L750" title="All 2 branches missed.">						if(!A.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must not a pivot.</span>
-<span class="nc" id="L751">							nonpivCol.add(j); // Add this column to the list of non-pivot columns.</span>
+<span class="nc bnc" id="L752" title="All 2 branches missed.">				for(int i=A.m-1; i&gt;-1; i--) {</span>
+<span class="nc bnc" id="L753" title="All 2 branches missed.">					if(!A.entries[i][j].equals(CNumber.ZERO)) { // Then this may be a pivot</span>
+<span class="nc bnc" id="L754" title="All 2 branches missed.">						if(!A.getSlice(i, i+1, 0, j).equals(Matrix.zeros(1, j))) { // Then rref[i][j] must not a pivot.</span>
+<span class="nc" id="L755">							nonpivCol.add(j); // Add this column to the list of non-pivot columns.</span>
 						}
 						break; // We can move to the next column now.
 					}
@@ -757,26 +761,26 @@
 		}
 		
 		
-<span class="nc bnc" id="L760" title="All 2 branches missed.">		for(int j : nonpivCol) {</span>
-<span class="nc" id="L761">			x = Matrix.zeros(A.m, 1);</span>
-<span class="nc" id="L762">			x.entries[j][0] = CNumber.ONE; // Set the free variable to one.</span>
+<span class="nc bnc" id="L764" title="All 2 branches missed.">		for(int j : nonpivCol) {</span>
+<span class="nc" id="L765">			x = Matrix.zeros(A.m, 1);</span>
+<span class="nc" id="L766">			x.entries[j][0] = CNumber.ONE; // Set the free variable to one.</span>
 			
-<span class="nc bnc" id="L764" title="All 2 branches missed.">			for(int h=0; h&lt;A.m; h++) {</span>
-<span class="nc bnc" id="L765" title="All 2 branches missed.">				if(!nonpivCol.contains(h)) { // Ensure the variable is either not free.</span>
+<span class="nc bnc" id="L768" title="All 2 branches missed.">			for(int h=0; h&lt;A.m; h++) {</span>
+<span class="nc bnc" id="L769" title="All 2 branches missed.">				if(!nonpivCol.contains(h)) { // Ensure the variable is either not free.</span>
 					
-<span class="nc bnc" id="L767" title="All 2 branches missed.">					for(int k=0; k&lt;A.m; k++) { // find the pivot row</span>
-<span class="nc bnc" id="L768" title="All 2 branches missed.">						if(!A.entries[k][h].equals(CNumber.ZERO)) { // then we have found the row of the pivot.</span>
-<span class="nc" id="L769">							x.entries[h][0] = CNumber.addInv(A.entries[k][j]);</span>
-<span class="nc" id="L770">							break; // Move on to the next pivot column.</span>
+<span class="nc bnc" id="L771" title="All 2 branches missed.">					for(int k=0; k&lt;A.m; k++) { // find the pivot row</span>
+<span class="nc bnc" id="L772" title="All 2 branches missed.">						if(!A.entries[k][h].equals(CNumber.ZERO)) { // then we have found the row of the pivot.</span>
+<span class="nc" id="L773">							x.entries[h][0] = CNumber.addInv(A.entries[k][j]);</span>
+<span class="nc" id="L774">							break; // Move on to the next pivot column.</span>
 						}
 					}
 				}
 			}
 			
-<span class="nc" id="L776">			N = N.augment(x.scalDiv(x.norm())); // Add x to the list of eigenvectors in V.</span>
-<span class="nc" id="L777">		}</span>
+<span class="nc" id="L780">			N = N.augment(x.scalDiv(x.norm())); // Add x to the list of eigenvectors in V.</span>
+<span class="nc" id="L781">		}</span>
 		
-<span class="nc" id="L779">		return N;</span>
+<span class="nc" id="L783">		return N;</span>
 	}
 	
 	
@@ -787,7 +791,7 @@
 	 * @return
 	 */
 	 default Matrix leftNullSpace() {
-<span class="nc" id="L790">		return ((Matrix) this).T().nullSpace();</span>
+<span class="nc" id="L794">		return ((Matrix) this).T().nullSpace();</span>
 	}
 	
 	
@@ -796,19 +800,19 @@
 	 * @return True if matrix only contains positive real entries.
 	 */
 	 default boolean isPos() {
-<span class="nc" id="L799">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L800">		boolean result = true;</span>
+<span class="nc" id="L803">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L804">		boolean result = true;</span>
 		
-<span class="nc bnc" id="L802" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
-<span class="nc bnc" id="L803" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
-<span class="nc bnc" id="L804" title="All 4 branches missed.">				if(!(A.entries[i][j].isReal() &amp;&amp; A.entries[i][j].compareToReal(CNumber.ZERO) &gt; 0)) {</span>
-<span class="nc" id="L805">					result = false;</span>
-<span class="nc" id="L806">					return result; // Then we are done so we can return.</span>
+<span class="nc bnc" id="L806" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
+<span class="nc bnc" id="L807" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
+<span class="nc bnc" id="L808" title="All 4 branches missed.">				if(!(A.entries[i][j].isReal() &amp;&amp; A.entries[i][j].compareToReal(CNumber.ZERO) &gt; 0)) {</span>
+<span class="nc" id="L809">					result = false;</span>
+<span class="nc" id="L810">					return result; // Then we are done so we can return.</span>
 				}
 			}
 		}
 		
-<span class="nc" id="L811">		return result;</span>
+<span class="nc" id="L815">		return result;</span>
 	}
 	
 	
@@ -817,19 +821,19 @@
 	 * @return True if matrix only contains negative entries.
 	 */
 	 default boolean isNeg() {
-<span class="nc" id="L820">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L821">		boolean result = true;</span>
+<span class="nc" id="L824">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L825">		boolean result = true;</span>
 		
-<span class="nc bnc" id="L823" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
-<span class="nc bnc" id="L824" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
-<span class="nc bnc" id="L825" title="All 4 branches missed.">				if(!(A.entries[i][j].isReal() &amp;&amp; A.entries[i][j].compareToReal(CNumber.ZERO) &lt; 0)) {</span>
-<span class="nc" id="L826">					result = false;</span>
-<span class="nc" id="L827">					return result; // Then we are done so we can return.</span>
+<span class="nc bnc" id="L827" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
+<span class="nc bnc" id="L828" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
+<span class="nc bnc" id="L829" title="All 4 branches missed.">				if(!(A.entries[i][j].isReal() &amp;&amp; A.entries[i][j].compareToReal(CNumber.ZERO) &lt; 0)) {</span>
+<span class="nc" id="L830">					result = false;</span>
+<span class="nc" id="L831">					return result; // Then we are done so we can return.</span>
 				}
 			}
 		}
 		
-<span class="nc" id="L832">		return result;</span>
+<span class="nc" id="L836">		return result;</span>
 	}
 	
 	
@@ -842,22 +846,22 @@
 	 * @return True if the matrix is positive-definite. Otherwise, returns false.
 	 */
 	 default boolean isPosDef() {
-<span class="nc" id="L845">		boolean result = false;</span>
+<span class="nc" id="L849">		boolean result = false;</span>
 		
 		
-<span class="nc bnc" id="L848" title="All 2 branches missed.">		if(this.isHermation()) {</span>
-<span class="nc" id="L849">			Matrix lam = this.eigVals();</span>
-<span class="nc" id="L850">			result = true;</span>
+<span class="nc bnc" id="L852" title="All 2 branches missed.">		if(this.isHermation()) {</span>
+<span class="nc" id="L853">			Matrix lam = this.eigVals();</span>
+<span class="nc" id="L854">			result = true;</span>
 			
-<span class="nc bnc" id="L852" title="All 2 branches missed.">			for(int i=0; i&lt;lam.m; i++) {</span>
-<span class="nc bnc" id="L853" title="All 4 branches missed.">				if(!(lam.entries[i][0].isReal() &amp;&amp; lam.entries[i][0].compareToReal(CNumber.ZERO) &gt; 0)) {</span>
+<span class="nc bnc" id="L856" title="All 2 branches missed.">			for(int i=0; i&lt;lam.m; i++) {</span>
+<span class="nc bnc" id="L857" title="All 4 branches missed.">				if(!(lam.entries[i][0].isReal() &amp;&amp; lam.entries[i][0].compareToReal(CNumber.ZERO) &gt; 0)) {</span>
 					// Then there is a negative or non-real eigenvalue, thus the matrix is not positive-definite
-<span class="nc" id="L855">					result = false;</span>
+<span class="nc" id="L859">					result = false;</span>
 				}
 			}
 		} // Otherwise, the matrix is not positive-definite
 		
-<span class="nc" id="L860">		return result;</span>
+<span class="nc" id="L864">		return result;</span>
 	}
 	
 	
@@ -870,22 +874,22 @@
 	 * @return True if the matrix is positive-semidefinite. Otherwise, returns false.
 	 */
 	 default boolean isPosSemidef() {
-<span class="nc" id="L873">		boolean result = false;</span>
+<span class="nc" id="L877">		boolean result = false;</span>
 		
 		
-<span class="nc bnc" id="L876" title="All 2 branches missed.">		if(this.isHermation()) {</span>
-<span class="nc" id="L877">			Matrix lam = this.eigVals();</span>
-<span class="nc" id="L878">			result = true;</span>
+<span class="nc bnc" id="L880" title="All 2 branches missed.">		if(this.isHermation()) {</span>
+<span class="nc" id="L881">			Matrix lam = this.eigVals();</span>
+<span class="nc" id="L882">			result = true;</span>
 			
-<span class="nc bnc" id="L880" title="All 2 branches missed.">			for(int i=0; i&lt;lam.m; i++) {</span>
-<span class="nc bnc" id="L881" title="All 4 branches missed.">				if(!(lam.entries[i][0].isReal() &amp;&amp; lam.entries[i][0].compareToReal(CNumber.ZERO) &gt;= 0)) {</span>
+<span class="nc bnc" id="L884" title="All 2 branches missed.">			for(int i=0; i&lt;lam.m; i++) {</span>
+<span class="nc bnc" id="L885" title="All 4 branches missed.">				if(!(lam.entries[i][0].isReal() &amp;&amp; lam.entries[i][0].compareToReal(CNumber.ZERO) &gt;= 0)) {</span>
 					// Then there is a negative or non-real eigenvalue, thus the matrix is not positive-semidefinite
-<span class="nc" id="L883">					result = false;</span>
+<span class="nc" id="L887">					result = false;</span>
 				}
 			}
 		} // Otherwise, the matrix is not positive-semidefinite
 		
-<span class="nc" id="L888">		return result;</span>
+<span class="nc" id="L892">		return result;</span>
 	}
 	
 	
@@ -902,36 +906,36 @@
 	 */
 	// TODO: add eigPairs which returns an array of matrices where each matrix is an eigenvector and the eigenvalue.
 	 default Matrix[] eig() {
-<span class="nc" id="L905">		Matrix[] eigenpairs = new Matrix[2];</span>
+<span class="nc" id="L909">		Matrix[] eigenpairs = new Matrix[2];</span>
 		
-<span class="nc" id="L907">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L908">		Matrix lam = Decompose.schur(A)[1].diagAsVector().T(); // Get eigenvalues of A using the schur decomposition</span>
-<span class="nc" id="L909">		lam = new Vector(LinAlgArrayUtils.group(lam.entries[0])).round(13); // Round eigenvalues to near machine epsilon and group equivalent eigenvalues.</span>
+<span class="nc" id="L911">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L912">		Matrix lam = Decompose.schur(A)[1].diagAsVector().T(); // Get eigenvalues of A using the schur decomposition</span>
+<span class="nc" id="L913">		lam = new Vector(LinAlgArrayUtils.group(lam.entries[0])).round(13); // Round eigenvalues to near machine epsilon and group equivalent eigenvalues.</span>
 		
-<span class="nc" id="L911">		Matrix I = Matrix.I(A.m),</span>
-<span class="nc" id="L912">				   zero = new Matrix(A.m, 1),</span>
-<span class="nc" id="L913">				   x = new Matrix(A.m, 1), // Stores a specific eigenvector</span>
-<span class="nc" id="L914">				   V = new Matrix(A.m, 0); // Stores eigenvectors in its columns</span>
+<span class="nc" id="L915">		Matrix I = Matrix.I(A.m),</span>
+<span class="nc" id="L916">				   zero = new Matrix(A.m, 1),</span>
+<span class="nc" id="L917">				   x = new Matrix(A.m, 1), // Stores a specific eigenvector</span>
+<span class="nc" id="L918">				   V = new Matrix(A.m, 0); // Stores eigenvectors in its columns</span>
 			
-<span class="nc" id="L916">		Vector b = new Vector(A.m);</span>
-<span class="nc" id="L917">		ArrayList&lt;Integer&gt; nonpivCol = new ArrayList&lt;Integer&gt;();	</span>
+<span class="nc" id="L920">		Vector b = new Vector(A.m);</span>
+<span class="nc" id="L921">		ArrayList&lt;Integer&gt; nonpivCol = new ArrayList&lt;Integer&gt;();	</span>
 
-<span class="nc bnc" id="L919" title="All 2 branches missed.">		for(int h=0; h&lt;lam.m; h++) {</span>
+<span class="nc bnc" id="L923" title="All 2 branches missed.">		for(int h=0; h&lt;lam.m; h++) {</span>
 			
-<span class="nc bnc" id="L921" title="All 4 branches missed.">			if(h==0 || !lam.entries[h][0].equals(lam.entries[h-1][0])) { // Only compute eigenvectors for a given eigenvalue once.</span>
-<span class="nc" id="L922">				Matrix rref = A.sub(I.scalMult(lam.entries[h][0]));</span>
+<span class="nc bnc" id="L925" title="All 4 branches missed.">			if(h==0 || !lam.entries[h][0].equals(lam.entries[h-1][0])) { // Only compute eigenvectors for a given eigenvalue once.</span>
+<span class="nc" id="L926">				Matrix rref = A.sub(I.scalMult(lam.entries[h][0]));</span>
 				
 				/* Compute null space of (A-nI) where n is the specified eigenvalue.
 				 *  This is equivalent to the eigenspace of A for the eigenvalue n.
 				 */
-<span class="nc" id="L927">				V = V.augment(rref.nullSpace());</span>
+<span class="nc" id="L931">				V = V.augment(rref.nullSpace());</span>
 			}
 		}
 		
-<span class="nc" id="L931">		eigenpairs[0] = lam;</span>
-<span class="nc" id="L932">		eigenpairs[1] = V;</span>
+<span class="nc" id="L935">		eigenpairs[0] = lam;</span>
+<span class="nc" id="L936">		eigenpairs[1] = V;</span>
 		
-<span class="nc" id="L934">		return eigenpairs;</span>
+<span class="nc" id="L938">		return eigenpairs;</span>
 	}
 	
 	
@@ -945,7 +949,7 @@
 	 * @return Returns a matrix containing the eigenvectors of this matrix as its column vectors.
 	 */
 	default Matrix eigVecs() {
-<span class="nc" id="L948">		return this.eig()[1];</span>
+<span class="nc" id="L952">		return this.eig()[1];</span>
 	}
 	
 	
@@ -959,8 +963,8 @@
 	 * @return Returns a column vector containing the eigenvalues of this matrix.
 	 */
 	 default Matrix eigVals() {
-<span class="nc" id="L962">		Matrix A = (Matrix) this;</span>
-<span class="nc" id="L963">		return Decompose.schur(A)[1].diagAsVector();</span>
+<span class="nc" id="L966">		Matrix A = (Matrix) this;</span>
+<span class="nc" id="L967">		return Decompose.schur(A)[1].diagAsVector();</span>
 	}
 	
 	
@@ -971,104 +975,104 @@
 	 * @return True if the matrix is diagonalizable. Otherwise, returns false.
 	 */
 	 default boolean isDiagonalizable() {
-<span class="nc" id="L974">		Matrix A = (Matrix) this,</span>
-<span class="nc" id="L975">			   I = Matrix.I(A.m); </span>
-<span class="nc" id="L976">		boolean result = true;</span>
-<span class="nc" id="L977">		int count = 0;</span>
+<span class="nc" id="L978">		Matrix A = (Matrix) this,</span>
+<span class="nc" id="L979">			   I = Matrix.I(A.m); </span>
+<span class="nc" id="L980">		boolean result = true;</span>
+<span class="nc" id="L981">		int count = 0;</span>
 		
-<span class="nc" id="L979">		Matrix lam = new Vector(LinAlgArrayUtils.group(A.eigVals().T().entries[0])),</span>
+<span class="nc" id="L983">		Matrix lam = new Vector(LinAlgArrayUtils.group(A.eigVals().T().entries[0])),</span>
 			   nullSpace;
-<span class="nc" id="L981">		ArrayList&lt;Integer&gt; multiplicites = new ArrayList&lt;Integer&gt;(); // Contains multiplicity for each eigenvalue</span>
-<span class="nc" id="L982">		ArrayList&lt;Integer&gt; eigenDim = new ArrayList&lt;Integer&gt;(); // Contains dimension of each eigenspace for all eigenvalues.</span>
+<span class="nc" id="L985">		ArrayList&lt;Integer&gt; multiplicites = new ArrayList&lt;Integer&gt;(); // Contains multiplicity for each eigenvalue</span>
+<span class="nc" id="L986">		ArrayList&lt;Integer&gt; eigenDim = new ArrayList&lt;Integer&gt;(); // Contains dimension of each eigenspace for all eigenvalues.</span>
 		
-<span class="nc bnc" id="L984" title="All 2 branches missed.">		for(int i=0; i&lt;lam.m; i++) { // Find multiplicity for each eigenvalue</span>
-<span class="nc bnc" id="L985" title="All 6 branches missed.">			if((i!=0 &amp;&amp; !lam.entries[i][0].equals(lam.entries[i-1][0])) || i==0) {</span>
-<span class="nc" id="L986">				count=0;</span>
+<span class="nc bnc" id="L988" title="All 2 branches missed.">		for(int i=0; i&lt;lam.m; i++) { // Find multiplicity for each eigenvalue</span>
+<span class="nc bnc" id="L989" title="All 6 branches missed.">			if((i!=0 &amp;&amp; !lam.entries[i][0].equals(lam.entries[i-1][0])) || i==0) {</span>
+<span class="nc" id="L990">				count=0;</span>
 				
-<span class="nc bnc" id="L988" title="All 2 branches missed.">				for(int j=0; j&lt;lam.m; j++) {</span>
-<span class="nc bnc" id="L989" title="All 2 branches missed.">					if(lam.entries[j][0].equals(lam.entries[i][0])) {</span>
-<span class="nc" id="L990">						count++;</span>
+<span class="nc bnc" id="L992" title="All 2 branches missed.">				for(int j=0; j&lt;lam.m; j++) {</span>
+<span class="nc bnc" id="L993" title="All 2 branches missed.">					if(lam.entries[j][0].equals(lam.entries[i][0])) {</span>
+<span class="nc" id="L994">						count++;</span>
 					}
 				}
 				
-<span class="nc" id="L994">				multiplicites.add(count);</span>
+<span class="nc" id="L998">				multiplicites.add(count);</span>
 				
-<span class="nc" id="L996">				nullSpace = A.sub(I.scalMult(lam.entries[i][0])).nullSpace();</span>
-<span class="nc" id="L997">				eigenDim.add(nullSpace.n);</span>
+<span class="nc" id="L1000">				nullSpace = A.sub(I.scalMult(lam.entries[i][0])).nullSpace();</span>
+<span class="nc" id="L1001">				eigenDim.add(nullSpace.n);</span>
 			}
 		}
 		
-<span class="nc bnc" id="L1001" title="All 2 branches missed.">		for(int i=0; i&lt;eigenDim.size(); i++) {</span>
-<span class="nc bnc" id="L1002" title="All 2 branches missed.">			if(eigenDim.get(i).equals(multiplicites.get(i))) {</span>
-<span class="nc" id="L1003">				result = false;</span>
-<span class="nc" id="L1004">				break;</span>
+<span class="nc bnc" id="L1005" title="All 2 branches missed.">		for(int i=0; i&lt;eigenDim.size(); i++) {</span>
+<span class="nc bnc" id="L1006" title="All 2 branches missed.">			if(eigenDim.get(i).equals(multiplicites.get(i))) {</span>
+<span class="nc" id="L1007">				result = false;</span>
+<span class="nc" id="L1008">				break;</span>
 			}
 		}
 		
-<span class="nc" id="L1008">		return result;</span>
+<span class="nc" id="L1012">		return result;</span>
 	}
 	
 	
 	 static void main(String args[]) {
-<span class="nc" id="L1013">		int[][] a = {{0, 1, 0, 0},</span>
+<span class="nc" id="L1017">		int[][] a = {{0, 1, 0, 0},</span>
 					 {0, 0, 1, 0},
 					 {0, 0, 0, 1},
 					 {1, 0, 0, 0}}; // Schur decomposition will fail here because we have 4 eigenvalues all with magnitude 1.
 		
-<span class="nc" id="L1018">		double[][] 	a1 =  {	{2, 5, 8, 7},</span>
+<span class="nc" id="L1022">		double[][] 	a1 =  {	{2, 5, 8, 7},</span>
 		  					{5, 2, 2, 8},
 		  					{7, 5, 6, 6},
 		  					{5, 4, 4, 8} };
 		
-<span class="nc" id="L1023">		double[][] a2 = {{1, -3, 3},</span>
+<span class="nc" id="L1027">		double[][] a2 = {{1, -3, 3},</span>
 		                 {3, -5, 3},
 		                 {6, -6, 4}};
 		
-<span class="nc" id="L1027">		double[][] a3 = {{0,  0,  0, 1},</span>
+<span class="nc" id="L1031">		double[][] a3 = {{0,  0,  0, 1},</span>
 						 {0,  0, -1, 0},
 						 {0,  1,  0, 0},
 						 {-1, 0, 0, 0}}; // TODO: Currently fails possibly due to repeated eigenvalues
 		
-<span class="nc" id="L1032">		CNumber[][] ac = {	{new CNumber(&quot;2+2i&quot;),	new CNumber(&quot;5&quot;), new CNumber(&quot;8&quot;), new CNumber(&quot;7&quot;)},</span>
+<span class="nc" id="L1036">		CNumber[][] ac = {	{new CNumber(&quot;2+2i&quot;),	new CNumber(&quot;5&quot;), new CNumber(&quot;8&quot;), new CNumber(&quot;7&quot;)},</span>
 							{new CNumber(&quot;5&quot;), 		new CNumber(&quot;i&quot;), new CNumber(&quot;2&quot;), new CNumber(&quot;8&quot;)},
 							{new CNumber(&quot;7&quot;),		new CNumber(&quot;5&quot;), new CNumber(&quot;6&quot;), new CNumber(&quot;6&quot;)},
 							{new CNumber(&quot;5&quot;), 		new CNumber(&quot;4&quot;), new CNumber(&quot;4&quot;), new CNumber(&quot;8&quot;)} }; // TODO: Currently fails possibly due to complex conjugate eigenvalues
 		
-<span class="nc" id="L1037">		CNumber[][] ac2 = {	{new CNumber(&quot;2+2i&quot;),	new CNumber(&quot;5&quot;), new CNumber(&quot;8&quot;)},</span>
+<span class="nc" id="L1041">		CNumber[][] ac2 = {	{new CNumber(&quot;2+2i&quot;),	new CNumber(&quot;5&quot;), new CNumber(&quot;8&quot;)},</span>
 							{new CNumber(&quot;5&quot;), 		new CNumber(&quot;i&quot;), new CNumber(&quot;2&quot;)},
 							{new CNumber(&quot;7&quot;),		new CNumber(&quot;5&quot;), new CNumber(&quot;6&quot;)}};
 		
-<span class="nc" id="L1041">		double[][] test1 = {{1, 0,  1},</span>
+<span class="nc" id="L1045">		double[][] test1 = {{1, 0,  1},</span>
 							{0, 1, -2},
 							{0, 0,  0}};
 		
-<span class="nc" id="L1045">		double[][] test2 = {{0, 1, 0, 2},</span>
+<span class="nc" id="L1049">		double[][] test2 = {{0, 1, 0, 2},</span>
 							{0, 0, 1, 2},
 							{0, 0, 0, 0},
 							{0, 0, 0, 0}};
 		
-<span class="nc" id="L1050">		double[][] test3 = {{1, 0, -1, 0},</span>
+<span class="nc" id="L1054">		double[][] test3 = {{1, 0, -1, 0},</span>
 							{0, 1, -1, 0},
 							{0, 0,  0, 1},
 							{0, 0,  0, 0}};
 		
 		
-<span class="nc" id="L1056">		Matrix A = new Matrix(test3);</span>
+<span class="nc" id="L1060">		Matrix A = new Matrix(test3);</span>
 		
 
-<span class="nc" id="L1059">		Matrix[] VW = A.eig();</span>
+<span class="nc" id="L1063">		Matrix[] VW = A.eig();</span>
 		
-<span class="nc" id="L1061">		Matrix.print(&quot;A:\n&quot;, A, &quot;\n\n&quot;);</span>
-<span class="nc" id="L1062">		Matrix.print(&quot;lam:\n&quot;, VW[0], &quot;\n\n&quot;);</span>
-<span class="nc" id="L1063">		Matrix.print(&quot;V:\n&quot;, VW[1], &quot;\n\n&quot;);</span>
+<span class="nc" id="L1065">		Matrix.print(&quot;A:\n&quot;, A, &quot;\n\n&quot;);</span>
+<span class="nc" id="L1066">		Matrix.print(&quot;lam:\n&quot;, VW[0], &quot;\n\n&quot;);</span>
+<span class="nc" id="L1067">		Matrix.print(&quot;V:\n&quot;, VW[1], &quot;\n\n&quot;);</span>
 		
-<span class="nc bnc" id="L1065" title="All 2 branches missed.">		for(int i=0; i&lt;VW[1].n ; i++) { // Ensure vectors are actually eigenvectors.</span>
-<span class="nc" id="L1066">			System.out.println(A.mult(VW[1].getColAsVector(i)).round(10).equals(VW[1].getColAsVector(i).scalMult(VW[0].entries[i][0]).round(10)));</span>
+<span class="nc bnc" id="L1069" title="All 2 branches missed.">		for(int i=0; i&lt;VW[1].n ; i++) { // Ensure vectors are actually eigenvectors.</span>
+<span class="nc" id="L1070">			System.out.println(A.mult(VW[1].getColAsVector(i)).round(10).equals(VW[1].getColAsVector(i).scalMult(VW[0].entries[i][0]).round(10)));</span>
 		}
 		
 		
-<span class="nc" id="L1070">		A.isDiagonalizable();</span>
+<span class="nc" id="L1074">		A.isDiagonalizable();</span>
 
-<span class="nc" id="L1072">	}</span>
+<span class="nc" id="L1076">	}</span>
 }
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/PrintOptions.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>PrintOptions</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_class\">PrintOptions</span></div><h1>PrintOptions</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">16 of 16</td><td class=\"ctr2\">0%</td><td class=\"bar\">0 of 0</td><td class=\"ctr2\">n/a</td><td class=\"ctr1\">2</td><td class=\"ctr2\">2</td><td class=\"ctr1\">6</td><td class=\"ctr2\">6</td><td class=\"ctr1\">2</td><td class=\"ctr2\">2</td></tr></tfoot><tbody><tr><td id=\"a1\"><a href=\"PrintOptions.java.html#L26\" class=\"el_method\">static {...}</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"9\" alt=\"9\"/></td><td class=\"ctr2\" id=\"c0\">0%</td><td class=\"bar\" id=\"d0\"/><td class=\"ctr2\" id=\"e0\">n/a</td><td class=\"ctr1\" id=\"f0\">1</td><td class=\"ctr2\" id=\"g0\">1</td><td class=\"ctr1\" id=\"h0\">4</td><td class=\"ctr2\" id=\"i0\">4</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a0\"><a href=\"PrintOptions.java.html#L17\" class=\"el_method\">PrintOptions()</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"93\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d1\"/><td class=\"ctr2\" id=\"e1\">n/a</td><td class=\"ctr1\" id=\"f1\">1</td><td class=\"ctr2\" id=\"g1\">1</td><td class=\"ctr1\" id=\"h1\">2</td><td class=\"ctr2\" id=\"i1\">2</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/PrintOptions.html b/target/site/jacoco/linalg/PrintOptions.html
--- a/target/site/jacoco/linalg/PrintOptions.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/PrintOptions.html	(date 1648105701871)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>PrintOptions</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">PrintOptions</span></div><h1>PrintOptions</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">16 of 16</td><td class="ctr2">0%</td><td class="bar">0 of 0</td><td class="ctr2">n/a</td><td class="ctr1">2</td><td class="ctr2">2</td><td class="ctr1">6</td><td class="ctr2">6</td><td class="ctr1">2</td><td class="ctr2">2</td></tr></tfoot><tbody><tr><td id="a1"><a href="PrintOptions.java.html#L26" class="el_method">static {...}</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="9" alt="9"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d0"/><td class="ctr2" id="e0">n/a</td><td class="ctr1" id="f0">1</td><td class="ctr2" id="g0">1</td><td class="ctr1" id="h0">4</td><td class="ctr2" id="i0">4</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a0"><a href="PrintOptions.java.html#L17" class="el_method">PrintOptions()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="93" height="10" title="7" alt="7"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d1"/><td class="ctr2" id="e1">n/a</td><td class="ctr1" id="f1">1</td><td class="ctr2" id="g1">1</td><td class="ctr1" id="h1">2</td><td class="ctr2" id="i1">2</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>PrintOptions</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">PrintOptions</span></div><h1>PrintOptions</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">7 of 16</td><td class="ctr2">56%</td><td class="bar">0 of 0</td><td class="ctr2">n/a</td><td class="ctr1">1</td><td class="ctr2">2</td><td class="ctr1">2</td><td class="ctr2">6</td><td class="ctr1">1</td><td class="ctr2">2</td></tr></tfoot><tbody><tr><td id="a0"><a href="PrintOptions.java.html#L17" class="el_method">PrintOptions()</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="93" height="10" title="7" alt="7"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d0"/><td class="ctr2" id="e0">n/a</td><td class="ctr1" id="f0">1</td><td class="ctr2" id="g0">1</td><td class="ctr1" id="h0">2</td><td class="ctr2" id="i1">2</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a1"><a href="PrintOptions.java.html#L26" class="el_method">static {...}</a></td><td class="bar" id="b1"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="9" alt="9"/></td><td class="ctr2" id="c0">100%</td><td class="bar" id="d1"/><td class="ctr2" id="e1">n/a</td><td class="ctr1" id="f1">0</td><td class="ctr2" id="g1">1</td><td class="ctr1" id="h1">0</td><td class="ctr2" id="i0">4</td><td class="ctr1" id="j1">0</td><td class="ctr2" id="k1">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/PrintOptions.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>PrintOptions.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_source\">PrintOptions.java</span></div><h1>PrintOptions.java</h1><pre class=\"source lang-java linenums\">package linalg;\r\n\r\n/**\r\n * A place to define various print options for Matrices and vectors.&lt;br&gt;\r\n * &lt;pre&gt;\r\n *     Supported Print Options:\r\n *     \t\t- {@link #PADDING}\r\n *     \t\t- {@link #MAX_ROWS}\r\n *     \t\t- {@link #MAX_COLUMNS}\r\n * &lt;/pre&gt;\r\n * \r\n * @author Jacob Watters\r\n */\r\npublic class PrintOptions {\r\n\r\n\t// Hide public constructor for the utility class.\r\n<span class=\"nc\" id=\"L17\">\tprivate PrintOptions() {</span>\r\n<span class=\"nc\" id=\"L18\">\t\tthrow new IllegalStateException(&quot;This utility class can not be instantiated.&quot;);</span>\r\n\t}\r\n\r\n\t/**\r\n\t * Padding between each element of matrix.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Default Value: 2\r\n\t */\r\n<span class=\"nc\" id=\"L26\">\tpublic static int PADDING = 2;</span>\r\n\t\r\n\t/**\r\n\t * Maximum number of rows to print from a matrix.\r\n\t * If a matrix has more rows than this value, rows with\r\n\t * indices larger than this value, except for the last row, \r\n\t * will not be printed.\r\n\t * \r\n\t * The last row is always printed&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Default Value: 10\r\n\t */\r\n<span class=\"nc\" id=\"L38\">\tpublic static int MAX_ROWS = 10;</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Maximum number of columns to print from a matrix.\r\n\t * If a matrix has more columns than this value, columns with\r\n\t * indices larger than this value, except for the last column, \r\n\t * will not be printed. &lt;br&gt;\r\n\t *\r\n\t * The last column is always printed.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Default Value: 10\r\n\t */\r\n<span class=\"nc\" id=\"L51\">\tpublic static int MAX_COLUMNS = 10;</span>\r\n\r\n\r\n\t/**\r\n\t * Precision of the printed matrix values. i.e. the number of decimal places printed. &lt;br&gt;&lt;br&gt;\r\n\t *\r\n\t * Default Value: 20.\r\n\t */\r\n<span class=\"nc\" id=\"L59\">\tpublic static int PRECISION = 20; // Todo: implement this in the Matrix.toString() using Matrix.round(PRECISION) </span>\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/PrintOptions.java.html b/target/site/jacoco/linalg/PrintOptions.java.html
--- a/target/site/jacoco/linalg/PrintOptions.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/PrintOptions.java.html	(date 1648105701844)
@@ -23,7 +23,7 @@
 	 * 
 	 * Default Value: 2
 	 */
-<span class="nc" id="L26">	public static int PADDING = 2;</span>
+<span class="fc" id="L26">	public static int PADDING = 2;</span>
 	
 	/**
 	 * Maximum number of rows to print from a matrix.
@@ -35,7 +35,7 @@
 	 * 
 	 * Default Value: 10
 	 */
-<span class="nc" id="L38">	public static int MAX_ROWS = 10;</span>
+<span class="fc" id="L38">	public static int MAX_ROWS = 10;</span>
 	
 	
 	/**
@@ -48,7 +48,7 @@
 	 * 
 	 * Default Value: 10
 	 */
-<span class="nc" id="L51">	public static int MAX_COLUMNS = 10;</span>
+<span class="fc" id="L51">	public static int MAX_COLUMNS = 10;</span>
 
 
 	/**
@@ -56,6 +56,6 @@
 	 *
 	 * Default Value: 20.
 	 */
-<span class="nc" id="L59">	public static int PRECISION = 20; // Todo: implement this in the Matrix.toString() using Matrix.round(PRECISION) </span>
+<span class="fc" id="L59">	public static int PRECISION = 20; // Todo: implement this in the Matrix.toString() using Matrix.round(PRECISION) </span>
 }
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/Vector.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>Vector.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_source\">Vector.java</span></div><h1>Vector.java</h1><pre class=\"source lang-java linenums\">package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\nimport linalg.util.LinAlgArrayUtils;\r\n\r\n\r\n/**\r\n * This class supports the creation, manipulations, and operations of Vectors.\r\n */\r\npublic class Vector extends Matrix {\r\n\tpublic static final int COLUMN_VECTOR = 0,\r\n\t\t\t\t\t\t\t\tROW_VECTOR = 1;\r\n\r\n\tprivate static final String INVALID_TYPE_ERR = &quot;Type must be either &quot; + COLUMN_VECTOR + &quot; or &quot;\r\n\t\t\t+ ROW_VECTOR + &quot; but got &quot;;\r\n\tprotected int type;\r\n\tprotected int length;\r\n\t\r\n\t/**\r\n\t * Creates an empty column vector.\r\n\t */\r\n<span class=\"nc\" id=\"L22\">\tpublic Vector() {</span>\r\n<span class=\"nc\" id=\"L23\">\t\tthis.entries = new Matrix().getValues();</span>\r\n<span class=\"nc\" id=\"L24\">\t\tthis.m = 0;</span>\r\n<span class=\"nc\" id=\"L25\">\t\tthis.n = 0;</span>\r\n<span class=\"nc\" id=\"L26\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L27\">\t\tthis.type = COLUMN_VECTOR;</span>\r\n<span class=\"nc\" id=\"L28\">\t\tthis.length = 0;</span>\r\n<span class=\"nc\" id=\"L29\">\t}</span>\r\n\t\r\n\t/**\r\n\t * Creates a column vector of specified size filled with zeros.\r\n\t * @param size - size of the column vector\r\n\t */\r\n<span class=\"nc\" id=\"L35\">\tpublic Vector(int size) {</span>\r\n<span class=\"nc\" id=\"L36\">\t\tthis.entries = new Matrix(size, 1).getValues();</span>\r\n<span class=\"nc\" id=\"L37\">\t\tthis.m = size;</span>\r\n<span class=\"nc\" id=\"L38\">\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L39\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L40\">\t\tthis.type = COLUMN_VECTOR;</span>\r\n<span class=\"nc\" id=\"L41\">\t\tthis.length = size;</span>\r\n<span class=\"nc\" id=\"L42\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a row/column vector of specified size filled with zeros.\r\n\t * \r\n\t * @param size - Size of the vector.\r\n\t * @param type - Specifies the type of vector. Pass a 0 for a column vector\r\n\t * \t\tor a 1 for a row vector. \r\n\t */\r\n<span class=\"nc\" id=\"L52\">\tpublic Vector(int size, int type) {</span>\r\n<span class=\"nc bnc\" id=\"L53\" title=\"All 2 branches missed.\">\t\tif(type == ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L54\">\t\t\tthis.entries = new Matrix(1, size).getValues();</span>\r\n<span class=\"nc\" id=\"L55\">\t\t\tthis.m = 1;</span>\r\n<span class=\"nc\" id=\"L56\">\t\t\tthis.n = size;</span>\r\n<span class=\"nc bnc\" id=\"L57\" title=\"All 2 branches missed.\">\t\t} else if(type == COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L58\">\t\t\tthis.entries = new Matrix(size, 1).getValues();</span>\r\n<span class=\"nc\" id=\"L59\">\t\t\tthis.m = size;</span>\r\n<span class=\"nc\" id=\"L60\">\t\t\tthis.n = 1;</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L62\">\t\t\tthrow new IllegalArgumentException(INVALID_TYPE_ERR + type + &quot;.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L65\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L66\">\t\tthis.type = type;</span>\r\n<span class=\"nc\" id=\"L67\">\t\tthis.length = size;</span>\r\n<span class=\"nc\" id=\"L68\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a column vector from the entries array.\r\n\t * \r\n\t * @param entries - entries of the column vector.\r\n\t */\r\n<span class=\"nc\" id=\"L76\">\tpublic Vector(int[] entries) {</span>\r\n<span class=\"nc\" id=\"L77\">\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 1);</span>\r\n<span class=\"nc\" id=\"L78\">\t\tthis.m = entries.length;</span>\r\n<span class=\"nc\" id=\"L79\">\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L80\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L81\">\t\tthis.type = COLUMN_VECTOR;</span>\r\n<span class=\"nc\" id=\"L82\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L83\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a row/column vector depending on the value passed to &lt;code&gt;type&lt;/code&gt;.\r\n\t * \r\n\t * @param entries - entries of the vector.\r\n\t * @param type - Specifies the type of vector. Pass a 0 for a column vector\r\n\t * \t\tor a 1 for a row vector. \r\n\t */\r\n<span class=\"nc\" id=\"L93\">\tpublic Vector(int[] entries, int type) {</span>\r\n<span class=\"nc bnc\" id=\"L94\" title=\"All 2 branches missed.\">\t\tif(type == ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L95\">\t\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 0);</span>\r\n<span class=\"nc\" id=\"L96\">\t\t\tthis.n = entries.length;</span>\r\n<span class=\"nc\" id=\"L97\">\t\t\tthis.m = 1;</span>\r\n<span class=\"nc\" id=\"L98\">\t\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L99\">\t\t\tthis.type = ROW_VECTOR;</span>\r\n<span class=\"nc bnc\" id=\"L100\" title=\"All 2 branches missed.\">\t\t} else if(type == COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L101\">\t\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 1);</span>\r\n<span class=\"nc\" id=\"L102\">\t\t\tthis.m = entries.length;</span>\r\n<span class=\"nc\" id=\"L103\">\t\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L104\">\t\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L105\">\t\t\tthis.type = COLUMN_VECTOR;</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L107\">\t\t\tthrow new IllegalArgumentException(INVALID_TYPE_ERR + type + &quot;.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L110\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L111\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a column vector from the entries array.\r\n\t * \r\n\t * @param entries - entries of the column vector.\r\n\t */\r\n<span class=\"nc\" id=\"L119\">\tpublic Vector(double[] entries) {</span>\r\n<span class=\"nc\" id=\"L120\">\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 1);</span>\r\n<span class=\"nc\" id=\"L121\">\t\tthis.m = entries.length;</span>\r\n<span class=\"nc\" id=\"L122\">\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L123\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L124\">\t\tthis.type = COLUMN_VECTOR;</span>\r\n<span class=\"nc\" id=\"L125\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L126\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a row/column vector depending on the value passed to &lt;code&gt;type&lt;/code&gt;.\r\n\t * \r\n\t * @param entries - entries of the vector.\r\n\t * @param type - Specifies the type of vector. Pass a 0 for a column vector\r\n\t * \t\tor a 1 for a row vector. \r\n\t */\r\n<span class=\"nc\" id=\"L136\">\tpublic Vector(double[] entries, int type) {</span>\r\n<span class=\"nc bnc\" id=\"L137\" title=\"All 2 branches missed.\">\t\tif(type == ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L138\">\t\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 0);</span>\r\n<span class=\"nc\" id=\"L139\">\t\t\tthis.n = entries.length;</span>\r\n<span class=\"nc\" id=\"L140\">\t\t\tthis.m = 1;</span>\r\n<span class=\"nc\" id=\"L141\">\t\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L142\">\t\t\tthis.type = ROW_VECTOR;</span>\r\n<span class=\"nc bnc\" id=\"L143\" title=\"All 2 branches missed.\">\t\t} else if(type == COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L144\">\t\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 1);</span>\r\n<span class=\"nc\" id=\"L145\">\t\t\tthis.m = entries.length;</span>\r\n<span class=\"nc\" id=\"L146\">\t\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L147\">\t\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L148\">\t\t\tthis.type = COLUMN_VECTOR;</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L150\">\t\t\tthrow new IllegalArgumentException(INVALID_TYPE_ERR + type + &quot;.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L153\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L154\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a column vector from the entries array.\r\n\t * \r\n\t * @param entries - entries of the column vector.\r\n\t */\r\n<span class=\"nc\" id=\"L162\">\tpublic Vector(CNumber[] entries) {</span>\r\n<span class=\"nc\" id=\"L163\">\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 1);</span>\r\n<span class=\"nc\" id=\"L164\">\t\tthis.m = entries.length;</span>\r\n<span class=\"nc\" id=\"L165\">\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L166\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L167\">\t\tthis.type = COLUMN_VECTOR;</span>\r\n<span class=\"nc\" id=\"L168\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L169\">\t}</span>\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a row/column vector depending on the value passed to &lt;code&gt;type&lt;/code&gt;.\r\n\t * \r\n\t * @param entries - entries of the vector.\r\n\t * @param type - Specifies the type of vector. Pass a 0 for a column vector\r\n\t * \t\tor a 1 for a row vector. \r\n\t */\r\n<span class=\"nc\" id=\"L179\">\tpublic Vector(CNumber[] entries, int type) {</span>\r\n<span class=\"nc bnc\" id=\"L180\" title=\"All 2 branches missed.\">\t\tif(type == ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L181\">\t\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 0);</span>\r\n<span class=\"nc\" id=\"L182\">\t\t\tthis.n = entries.length;</span>\r\n<span class=\"nc\" id=\"L183\">\t\t\tthis.m = 1;</span>\r\n<span class=\"nc\" id=\"L184\">\t\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L185\">\t\t\tthis.type = ROW_VECTOR;</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L187\" title=\"All 2 branches missed.\">\t\t} else if(type == COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L188\">\t\t\tthis.entries = LinAlgArrayUtils.extend2D(entries, 1);</span>\r\n<span class=\"nc\" id=\"L189\">\t\t\tthis.m = entries.length;</span>\r\n<span class=\"nc\" id=\"L190\">\t\t\tthis.n = 1;</span>\r\n<span class=\"nc\" id=\"L191\">\t\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L192\">\t\t\tthis.type = COLUMN_VECTOR;</span>\r\n\t\t\t\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L195\">\t\t\tthrow new IllegalArgumentException(INVALID_TYPE_ERR + type + &quot;.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L198\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L199\">\t}</span>\r\n\r\n\t\r\n<span class=\"nc\" id=\"L202\">\tpublic Vector(Vector a) {</span>\r\n<span class=\"nc\" id=\"L203\">\t\tthis.entries = a.entries;</span>\r\n<span class=\"nc\" id=\"L204\">\t\tthis.m = a.m;</span>\r\n<span class=\"nc\" id=\"L205\">\t\tthis.n = a.n;</span>\r\n<span class=\"nc\" id=\"L206\">\t\tthis.shape = m + &quot;x&quot; + n;</span>\r\n<span class=\"nc\" id=\"L207\">\t\tthis.type = a.vectorType();</span>\r\n<span class=\"nc\" id=\"L208\">\t\tthis.length = entries.length;</span>\r\n<span class=\"nc\" id=\"L209\">\t}</span>\r\n\t\r\n\r\n\t/**\r\n\t * Converts a vector to a matrix.\r\n\t * \r\n\t * @param v - vector to convert to matrix\r\n\t * @return Matrix of vector. If the vector is a row vector the matrix will have one row and the\r\n\t * \t\tsame number of columns as entries in the vector. If the vector is a column vector the matrix will have one column and\r\n\t * \t\tthe same number of rows as entries in the vector.\r\n\t */\r\n\tpublic static Matrix toMatrix(Vector v) {\r\n<span class=\"nc\" id=\"L221\">\t\treturn new Matrix(v.entries);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Converts Vector to a row vector. \r\n\t * \r\n\t * @return If the vector is already a row vector, then the same vector is returned.\r\n\t * \t \tIf the vector is a column vecctor, then a new row vector with identical entires\r\n\t * \t\tto the column vector is returned.\r\n\t */\r\n\tpublic Vector toRowVector() {\r\n<span class=\"nc bnc\" id=\"L233\" title=\"All 2 branches missed.\">\t\tif(this.type == ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L234\">\t\t\treturn this;</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L236\">\t\t\treturn this.T().getRowAsVector(0);</span>\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Converts Vector to a column vector. \r\n\t * \r\n\t * @return If the vector is already a column vector, then the same vector is returned.\r\n\t * \t \tIf the vector is a row vecctor, then a new column vector with identical entires\r\n\t * \t\tto the row vector is returned.\r\n\t */\r\n\tpublic Vector toColVector() {\r\n<span class=\"nc bnc\" id=\"L249\" title=\"All 2 branches missed.\">\t\tif(this.type == COLUMN_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L250\">\t\t\treturn this;</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L252\">\t\t\treturn this.T().getColAsVector(0);</span>\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the type of this vector\r\n\t * \r\n\t * @return Returns 0 for a column vector, 1 for a row vector.\r\n\t */\r\n\tpublic int vectorType() {\r\n<span class=\"nc\" id=\"L263\">\t\treturn type;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes inner product of two vectors. Note, vectors do not have to\r\n\t * be the same type. That is, any mixture of row and column vectors is fine\r\n\t * as long as they have the same number of entries. \r\n\t * \r\n\t * @param b - Vector to compute inner product with.\r\n\t * @return Inner product of this vector with b.\r\n\t */\r\n\tpublic CNumber innerProduct(Vector b) {\r\n<span class=\"nc bnc\" id=\"L276\" title=\"All 2 branches missed.\">\t\tif(this.length != b.length) {</span>\r\n<span class=\"nc\" id=\"L277\">\t\t\tthrow new IllegalArgumentException(&quot;Vectors must have same size but got &quot; + this.length + &quot; and &quot;</span>\r\n\t\t\t\t\t+ b.length + &quot;.&quot;);\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L281\">\t\tCNumber result = CNumber.ZERO;</span>\r\n\t\tCNumber[][] bNew;\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L284\" title=\"All 2 branches missed.\">\t\tif(this.type != b.type) {</span>\r\n<span class=\"nc\" id=\"L285\">\t\t\tbNew = b.T().entries;</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L287\">\t\t\tbNew = b.entries;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L290\" title=\"All 2 branches missed.\">\t\tif(this.type == ROW_VECTOR) {</span>\r\n<span class=\"nc bnc\" id=\"L291\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i&lt;this.length; i++) {</span>\r\n<span class=\"nc\" id=\"L292\">\t\t\t\tresult = CNumber.add(result, </span>\r\n<span class=\"nc\" id=\"L293\">\t\t\t\t\t\tCNumber.multiply(this.entries[0][i], </span>\r\n<span class=\"nc\" id=\"L294\">\t\t\t\t\t\t\t\tCNumber.conjugate(bNew[0][i])));</span>\r\n\t\t\t}\r\n\t\t} else {\r\n<span class=\"nc bnc\" id=\"L297\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i&lt;this.length; i++) {</span>\r\n<span class=\"nc\" id=\"L298\">\t\t\t\tresult = CNumber.add(result, </span>\r\n<span class=\"nc\" id=\"L299\">\t\t\t\t\t\tCNumber.multiply(this.entries[i][0], </span>\r\n<span class=\"nc\" id=\"L300\">\t\t\t\t\t\t\t\tCNumber.conjugate(bNew[i][0])));</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L304\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes outer product of two vectors. The result of vector outer \r\n\t * products is a matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Vectors must be of oposite types. That is, exactly \r\n\t * one of the two vectors must be a row vector and exactly \r\n\t * one of the two vectors must be a column vector.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * In this method, vectors are treated as matrices with\r\n\t * 1 row or 1 column depending on the vector type. Then,\r\n\t * {@link #mult(Matrix) Matrix.mult(Matrix B)} is used.\r\n\t * \r\n\t * @param b - Vector to compute outer product with.\r\n\t * @return Outer product of this vector with b.\r\n\t */\r\n\tpublic Matrix outerProduct(Vector b) {\r\n<span class=\"nc\" id=\"L324\">\t\treturn this.mult(b);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes 2-norm (Euclidian norm) of vector.&lt;br&gt;&lt;br&gt;\r\n\t * Also see &lt;br&gt;\r\n\t *  - {@link #norm(double) norm(double p)}&lt;br&gt;\r\n\t *  - {@link #infNorm() infNorm()}\r\n\t *  \r\n\t * @return 2-norm of this vector. This will be a real value.\r\n\t */\r\n\tpublic CNumber norm() {\r\n<span class=\"nc\" id=\"L337\">\t\treturn norm(2);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the p-norm of a vector. If p=1, this is called the Taxicab norm or Manhattan norm.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * If p=2, this is equivalent to {@link #norm() norm()}&lt;br&gt; which is the euclidian norm.\r\n\t * If p is &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; this is equivalent to \r\n\t * \r\n\t * @param p - norm value. Must satisfy p &gt;= 1 and can be &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;. \r\n\t * @return\r\n\t */\r\n\tpublic CNumber norm(double p) {\r\n<span class=\"nc bnc\" id=\"L351\" title=\"All 6 branches missed.\">\t\tif(p &lt; 1 || Double.isNaN(p) || p == Double.NEGATIVE_INFINITY) {</span>\r\n<span class=\"nc\" id=\"L352\">\t\t\tthrow new IllegalArgumentException(&quot;Value must greater than or equal to 1 but got &quot; + p);</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L354\" title=\"All 2 branches missed.\">\t\telse if(p == Double.POSITIVE_INFINITY) { // Then we compute the infinity norm</span>\r\n<span class=\"nc\" id=\"L355\">\t\t\treturn this.infNorm();</span>\r\n\t\t}\r\n\t\telse {\r\n<span class=\"nc\" id=\"L358\">\t\t\tCNumber[] values = LinAlgArrayUtils.flatten(this.entries);</span>\r\n<span class=\"nc\" id=\"L359\">\t\t\tdouble result = 0;</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L361\" title=\"All 2 branches missed.\">\t\t\tfor(CNumber val : values) { // Compute the standard p-norm</span>\r\n<span class=\"nc\" id=\"L362\">\t\t\t\tresult += Math.pow(val.mag(), p);</span>\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L365\">\t\t\treturn new CNumber(Math.pow(result, 1/p));</span>\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the infinity or maximum norm. That is, the value with the maximum magnitude.\r\n\t * If the vector is real this is equivalent to the maximum absolute value.\r\n\t *  \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * Also see&lt;br&gt;\r\n\t * \t\t- {@link #norm(double) norm(double p)}&lt;br&gt;\r\n\t * \t\t- {@link #norm() norm(double)}\r\n\t * \r\n\t * @return The infinity or maximum norm of this vector.\r\n\t */\r\n\tpublic CNumber infNorm() {\r\n<span class=\"nc\" id=\"L382\">\t\tCNumber[] values = LinAlgArrayUtils.flatten(this.entries);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L384\">\t\treturn new CNumber(CNumber.max(values).mag());</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * \r\n\t * @return\r\n\t */\r\n\tpublic CNumber[] getEntries() {\r\n<span class=\"nc bnc\" id=\"L393\" title=\"All 2 branches missed.\">\t\tif(this.type == ROW_VECTOR) {</span>\r\n<span class=\"nc\" id=\"L394\">\t\t\treturn this.entries[0];</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L396\">\t\t\treturn this.T().entries[0];</span>\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Adds two vectors element-wise and stores in a new vector. Vectors must be of the same type.\r\n\t * \r\n\t * @param b - Vector to add to this vector\r\n\t * @return Result of vector addition.\r\n\t */\r\n\tpublic Vector add(Vector b) {\r\n<span class=\"nc\" id=\"L408\">\t\treturn new Vector(LinAlgArrayUtils.flatten(super.add(b).entries), b.type);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * subtracts two vectors element-wise and stores in a new vector. Vectors must be of the same type.\r\n\t * \r\n\t * @param b - Vector to subtract \r\n\t * @return Result of vector subtraction.\r\n\t */\r\n\tpublic Vector sub(Vector b) {\r\n<span class=\"nc\" id=\"L419\">\t\treturn new Vector(LinAlgArrayUtils.flatten(super.sub(b).entries), b.type);</span>\r\n\t}\r\n\t\r\n\t\r\n\tpublic Vector scalDiv(CNumber value) {\r\n<span class=\"nc\" id=\"L424\">\t\treturn new Vector(LinAlgArrayUtils.flatten(super.scalDiv(value).entries), this.type);</span>\r\n\t}\r\n\t\r\n\tpublic Vector scalDiv(double value) {\r\n<span class=\"nc\" id=\"L428\">\t\treturn scalDiv(new CNumber(value));</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a vector to a like matrix object\r\n\t * @return\r\n\t */\r\n\tpublic Matrix toMatrix() {\r\n<span class=\"nc\" id=\"L437\">\t\tMatrix m = new Matrix(this.m, this.n);</span>\r\n\r\n<span class=\"nc bnc\" id=\"L439\" title=\"All 2 branches missed.\">\t\tif(this.type == ROW_VECTOR) {</span>\r\n<span class=\"nc bnc\" id=\"L440\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;this.n; j++) {</span>\r\n<span class=\"nc\" id=\"L441\">\t\t\t\tm.entries[0][j] = this.entries[0][j];</span>\r\n\t\t\t}\r\n\r\n<span class=\"nc bnc\" id=\"L444\" title=\"All 2 branches missed.\">\t\t} else if(this.type == COLUMN_VECTOR) {</span>\r\n<span class=\"nc bnc\" id=\"L445\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;this.m; i++) {</span>\r\n<span class=\"nc\" id=\"L446\">\t\t\t\tm.entries[i][0] = this.entries[i][0];</span>\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L450\">\t\t\tthrow new IllegalArgumentException(&quot;Vector is of unknown type.&quot;);</span>\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L453\">\t\treturn m;</span>\r\n\t}\r\n\t\r\n\t/**\r\n\t * Formats vector as a string.\r\n\t * \r\n\t * @return This vector formated as a string\r\n\t */\r\n\tpublic String toString() {\r\n<span class=\"nc\" id=\"L462\">\t\tString vectorString = super.toString();</span>\r\n<span class=\"nc\" id=\"L463\">\t\treturn &quot; &quot; + vectorString.substring(1, vectorString.length()-1);</span>\r\n\t}\r\n}\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/Vector.java.html b/target/site/jacoco/linalg/Vector.java.html
--- a/target/site/jacoco/linalg/Vector.java.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/Vector.java.html	(date 1648105701858)
@@ -344,7 +344,7 @@
 	 * If p=2, this is equivalent to {@link #norm() norm()}&lt;br&gt; which is the euclidian norm.
 	 * If p is &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; this is equivalent to 
 	 * 
-	 * @param p - norm value. Must satisfy p &gt;= 1 and can be &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;. 
+	 * @param p Norm value. Must satisfy p &gt;= 1 and can be &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;.
 	 * @return
 	 */
 	public CNumber norm(double p) {
Index: target/site/jacoco/linalg/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>linalg</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"index.source.html\" class=\"el_source\">Source Files</a><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_package\">linalg</span></div><h1>linalg</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">12,017 of 12,204</td><td class=\"ctr2\">1%</td><td class=\"bar\">869 of 883</td><td class=\"ctr2\">1%</td><td class=\"ctr1\">685</td><td class=\"ctr2\">698</td><td class=\"ctr1\">1,686</td><td class=\"ctr2\">1,734</td><td class=\"ctr1\">246</td><td class=\"ctr2\">255</td><td class=\"ctr1\">14</td><td class=\"ctr2\">16</td></tr></tfoot><tbody><tr><td id=\"a8\"><a href=\"MatrixProperties.html\" class=\"el_class\">MatrixProperties</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"119\" height=\"10\" title=\"2,330\" alt=\"2,330\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"214\" alt=\"214\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">149</td><td class=\"ctr2\" id=\"g0\">152</td><td class=\"ctr1\" id=\"h0\">291</td><td class=\"ctr2\" id=\"i0\">297</td><td class=\"ctr1\" id=\"j1\">42</td><td class=\"ctr2\" id=\"k1\">45</td><td class=\"ctr1\" id=\"l14\">0</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixOperations.html\" class=\"el_class\">MatrixOperations</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"118\" height=\"10\" title=\"2,309\" alt=\"2,309\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"172\" alt=\"172\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f1\">127</td><td class=\"ctr2\" id=\"g1\">127</td><td class=\"ctr1\" id=\"h1\">284</td><td class=\"ctr2\" id=\"i2\">284</td><td class=\"ctr1\" id=\"j2\">41</td><td class=\"ctr2\" id=\"k2\">41</td><td class=\"ctr1\" id=\"l0\">1</td><td class=\"ctr2\" id=\"m1\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixManipulations.html\" class=\"el_class\">MatrixManipulations</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"94\" height=\"10\" title=\"1,856\" alt=\"1,856\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"81\" height=\"10\" title=\"146\" alt=\"146\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f2\">113</td><td class=\"ctr2\" id=\"g3\">113</td><td class=\"ctr1\" id=\"h2\">268</td><td class=\"ctr2\" id=\"i3\">268</td><td class=\"ctr1\" id=\"j3\">40</td><td class=\"ctr2\" id=\"k3\">40</td><td class=\"ctr1\" id=\"l1\">1</td><td class=\"ctr2\" id=\"m2\">1</td></tr><tr><td id=\"a3\"><a href=\"Matrix.html\" class=\"el_class\">Matrix</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"77\" height=\"10\" title=\"1,517\" alt=\"1,517\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"169\" alt=\"169\"/></td><td class=\"ctr2\" id=\"c0\">10%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"66\" height=\"10\" title=\"118\" alt=\"118\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"7\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e0\">10%</td><td class=\"ctr1\" id=\"f3\">107</td><td class=\"ctr2\" id=\"g2\">117</td><td class=\"ctr1\" id=\"h3\">251</td><td class=\"ctr2\" id=\"i1\">293</td><td class=\"ctr1\" id=\"j0\">45</td><td class=\"ctr2\" id=\"k0\">51</td><td class=\"ctr1\" id=\"l15\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a10\"><a href=\"QRDecomposition.html\" class=\"el_class\">QRDecomposition</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"53\" height=\"10\" title=\"1,049\" alt=\"1,049\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"18\" alt=\"18\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f9\">14</td><td class=\"ctr2\" id=\"g9\">14</td><td class=\"ctr1\" id=\"h6\">79</td><td class=\"ctr2\" id=\"i6\">79</td><td class=\"ctr1\" id=\"j9\">5</td><td class=\"ctr2\" id=\"k9\">5</td><td class=\"ctr1\" id=\"l2\">1</td><td class=\"ctr2\" id=\"m4\">1</td></tr><tr><td id=\"a15\"><a href=\"Vector.html\" class=\"el_class\">Vector</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"38\" height=\"10\" title=\"751\" alt=\"751\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"28\" height=\"10\" title=\"50\" alt=\"50\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f4\">51</td><td class=\"ctr2\" id=\"g4\">51</td><td class=\"ctr1\" id=\"h4\">165</td><td class=\"ctr2\" id=\"i4\">165</td><td class=\"ctr1\" id=\"j4\">26</td><td class=\"ctr2\" id=\"k4\">26</td><td class=\"ctr1\" id=\"l3\">1</td><td class=\"ctr2\" id=\"m5\">1</td></tr><tr><td id=\"a2\"><a href=\"LUDecomposition.html\" class=\"el_class\">LUDecomposition</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"27\" height=\"10\" title=\"544\" alt=\"544\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"37\" alt=\"37\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f5\">28</td><td class=\"ctr2\" id=\"g5\">28</td><td class=\"ctr1\" id=\"h5\">98</td><td class=\"ctr2\" id=\"i5\">98</td><td class=\"ctr1\" id=\"j6\">8</td><td class=\"ctr2\" id=\"k6\">8</td><td class=\"ctr1\" id=\"l4\">1</td><td class=\"ctr2\" id=\"m6\">1</td></tr><tr><td id=\"a13\"><a href=\"SingularValueDecomposition.html\" class=\"el_class\">SingularValueDecomposition</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"371\" alt=\"371\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d14\"/><td class=\"ctr2\" id=\"e14\">n/a</td><td class=\"ctr1\" id=\"f14\">3</td><td class=\"ctr2\" id=\"g14\">3</td><td class=\"ctr1\" id=\"h11\">24</td><td class=\"ctr2\" id=\"i11\">24</td><td class=\"ctr1\" id=\"j10\">3</td><td class=\"ctr2\" id=\"k10\">3</td><td class=\"ctr1\" id=\"l5\">1</td><td class=\"ctr2\" id=\"m7\">1</td></tr><tr><td id=\"a11\"><a href=\"SchurDecomposition.html\" class=\"el_class\">SchurDecomposition</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"368\" alt=\"368\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f10\">8</td><td class=\"ctr2\" id=\"g10\">8</td><td class=\"ctr1\" id=\"h7\">55</td><td class=\"ctr2\" id=\"i7\">55</td><td class=\"ctr1\" id=\"j11\">2</td><td class=\"ctr2\" id=\"k11\">2</td><td class=\"ctr1\" id=\"l6\">1</td><td class=\"ctr2\" id=\"m8\">1</td></tr><tr><td id=\"a14\"><a href=\"Solvers.html\" class=\"el_class\">Solvers</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"332\" alt=\"332\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f8\">18</td><td class=\"ctr2\" id=\"g8\">18</td><td class=\"ctr1\" id=\"h8\">52</td><td class=\"ctr2\" id=\"i8\">52</td><td class=\"ctr1\" id=\"j7\">8</td><td class=\"ctr2\" id=\"k7\">8</td><td class=\"ctr1\" id=\"l7\">1</td><td class=\"ctr2\" id=\"m9\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixComparisons.html\" class=\"el_class\">MatrixComparisons</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"206\" alt=\"206\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f6\">28</td><td class=\"ctr2\" id=\"g6\">28</td><td class=\"ctr1\" id=\"h9\">46</td><td class=\"ctr2\" id=\"i9\">46</td><td class=\"ctr1\" id=\"j8\">7</td><td class=\"ctr2\" id=\"k8\">7</td><td class=\"ctr1\" id=\"l8\">1</td><td class=\"ctr2\" id=\"m10\">1</td></tr><tr><td id=\"a1\"><a href=\"Decompose.html\" class=\"el_class\">Decompose</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"127\" alt=\"127\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f7\">19</td><td class=\"ctr2\" id=\"g7\">19</td><td class=\"ctr1\" id=\"h10\">28</td><td class=\"ctr2\" id=\"i10\">28</td><td class=\"ctr1\" id=\"j5\">11</td><td class=\"ctr2\" id=\"k5\">11</td><td class=\"ctr1\" id=\"l9\">1</td><td class=\"ctr2\" id=\"m11\">1</td></tr><tr><td id=\"a0\"><a href=\"CholeskyDecomposition.html\" class=\"el_class\">CholeskyDecomposition</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"123\" alt=\"123\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f11\">7</td><td class=\"ctr2\" id=\"g11\">7</td><td class=\"ctr1\" id=\"h12\">18</td><td class=\"ctr2\" id=\"i12\">18</td><td class=\"ctr1\" id=\"j12\">2</td><td class=\"ctr2\" id=\"k12\">2</td><td class=\"ctr1\" id=\"l10\">1</td><td class=\"ctr2\" id=\"m12\">1</td></tr><tr><td id=\"a12\"><a href=\"SimpleMatrix.html\" class=\"el_class\">SimpleMatrix</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"71\" alt=\"71\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f13\">5</td><td class=\"ctr2\" id=\"g13\">5</td><td class=\"ctr1\" id=\"h14\">9</td><td class=\"ctr2\" id=\"i14\">9</td><td class=\"ctr1\" id=\"j13\">2</td><td class=\"ctr2\" id=\"k13\">2</td><td class=\"ctr1\" id=\"l11\">1</td><td class=\"ctr2\" id=\"m13\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixChecks.html\" class=\"el_class\">MatrixChecks</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"47\" alt=\"47\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f12\">6</td><td class=\"ctr2\" id=\"g12\">6</td><td class=\"ctr1\" id=\"h13\">12</td><td class=\"ctr2\" id=\"i13\">12</td><td class=\"ctr1\" id=\"j14\">2</td><td class=\"ctr2\" id=\"k14\">2</td><td class=\"ctr1\" id=\"l12\">1</td><td class=\"ctr2\" id=\"m14\">1</td></tr><tr><td id=\"a9\"><a href=\"PrintOptions.html\" class=\"el_class\">PrintOptions</a></td><td class=\"bar\" id=\"b15\"/><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d15\"/><td class=\"ctr2\" id=\"e15\">n/a</td><td class=\"ctr1\" id=\"f15\">2</td><td class=\"ctr2\" id=\"g15\">2</td><td class=\"ctr1\" id=\"h15\">6</td><td class=\"ctr2\" id=\"i15\">6</td><td class=\"ctr1\" id=\"j15\">2</td><td class=\"ctr2\" id=\"k15\">2</td><td class=\"ctr1\" id=\"l13\">1</td><td class=\"ctr2\" id=\"m15\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/index.html b/target/site/jacoco/linalg/index.html
--- a/target/site/jacoco/linalg/index.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/index.html	(date 1648105701881)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.source.html" class="el_source">Source Files</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">12,017 of 12,204</td><td class="ctr2">1%</td><td class="bar">869 of 883</td><td class="ctr2">1%</td><td class="ctr1">685</td><td class="ctr2">698</td><td class="ctr1">1,686</td><td class="ctr2">1,734</td><td class="ctr1">246</td><td class="ctr2">255</td><td class="ctr1">14</td><td class="ctr2">16</td></tr></tfoot><tbody><tr><td id="a8"><a href="MatrixProperties.html" class="el_class">MatrixProperties</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a7"><a href="MatrixOperations.html" class="el_class">MatrixOperations</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="118" height="10" title="2,309" alt="2,309"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="172" alt="172"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">127</td><td class="ctr1" id="h1">284</td><td class="ctr2" id="i2">284</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.html" class="el_class">MatrixManipulations</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="94" height="10" title="1,856" alt="1,856"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="81" height="10" title="146" alt="146"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">113</td><td class="ctr2" id="g3">113</td><td class="ctr1" id="h2">268</td><td class="ctr2" id="i3">268</td><td class="ctr1" id="j3">40</td><td class="ctr2" id="k3">40</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.html" class="el_class">Matrix</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c0">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l15">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a10"><a href="QRDecomposition.html" class="el_class">QRDecomposition</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a15"><a href="Vector.html" class="el_class">Vector</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.html" class="el_class">LUDecomposition</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a13"><a href="SingularValueDecomposition.html" class="el_class">SingularValueDecomposition</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a11"><a href="SchurDecomposition.html" class="el_class">SchurDecomposition</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j11">2</td><td class="ctr2" id="k11">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a14"><a href="Solvers.html" class="el_class">Solvers</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.html" class="el_class">MatrixComparisons</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="206" alt="206"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">46</td><td class="ctr2" id="i9">46</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a1"><a href="Decompose.html" class="el_class">Decompose</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.html" class="el_class">CholeskyDecomposition</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a12"><a href="SimpleMatrix.html" class="el_class">SimpleMatrix</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="71" alt="71"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f13">5</td><td class="ctr2" id="g13">5</td><td class="ctr1" id="h14">9</td><td class="ctr2" id="i14">9</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a4"><a href="MatrixChecks.html" class="el_class">MatrixChecks</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j14">2</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l12">1</td><td class="ctr2" id="m14">1</td></tr><tr><td id="a9"><a href="PrintOptions.html" class="el_class">PrintOptions</a></td><td class="bar" id="b15"/><td class="ctr2" id="c15">0%</td><td class="bar" id="d15"/><td class="ctr2" id="e15">n/a</td><td class="ctr1" id="f15">2</td><td class="ctr2" id="g15">2</td><td class="ctr1" id="h15">6</td><td class="ctr2" id="i15">6</td><td class="ctr1" id="j15">2</td><td class="ctr2" id="k15">2</td><td class="ctr1" id="l13">1</td><td class="ctr2" id="m15">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.source.html" class="el_source">Source Files</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">11,749 of 11,945</td><td class="ctr2">1%</td><td class="bar">865 of 879</td><td class="ctr2">1%</td><td class="ctr1">681</td><td class="ctr2">695</td><td class="ctr1">1,675</td><td class="ctr2">1,727</td><td class="ctr1">244</td><td class="ctr2">254</td><td class="ctr1">12</td><td class="ctr2">15</td></tr></tfoot><tbody><tr><td id="a8"><a href="MatrixProperties.html" class="el_class">MatrixProperties</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l12">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a7"><a href="MatrixOperations.html" class="el_class">MatrixOperations</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="106" height="10" title="2,093" alt="2,093"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="172" alt="172"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">127</td><td class="ctr1" id="h1">282</td><td class="ctr2" id="i2">282</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.html" class="el_class">MatrixManipulations</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="1,884" alt="1,884"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="82" height="10" title="148" alt="148"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">115</td><td class="ctr2" id="g3">115</td><td class="ctr1" id="h2">272</td><td class="ctr2" id="i3">272</td><td class="ctr1" id="j3">41</td><td class="ctr2" id="k3">41</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.html" class="el_class">Matrix</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l13">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a10"><a href="QRDecomposition.html" class="el_class">QRDecomposition</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a14"><a href="Vector.html" class="el_class">Vector</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.html" class="el_class">LUDecomposition</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a12"><a href="SingularValueDecomposition.html" class="el_class">SingularValueDecomposition</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d13"/><td class="ctr2" id="e13">n/a</td><td class="ctr1" id="f13">3</td><td class="ctr2" id="g13">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a11"><a href="SchurDecomposition.html" class="el_class">SchurDecomposition</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j11">2</td><td class="ctr2" id="k11">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a13"><a href="Solvers.html" class="el_class">Solvers</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.html" class="el_class">MatrixComparisons</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="206" alt="206"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">46</td><td class="ctr2" id="i9">46</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a1"><a href="Decompose.html" class="el_class">Decompose</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.html" class="el_class">CholeskyDecomposition</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a4"><a href="MatrixChecks.html" class="el_class">MatrixChecks</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a9"><a href="PrintOptions.html" class="el_class">PrintOptions</a></td><td class="bar" id="b14"/><td class="ctr2" id="c0">56%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">1</td><td class="ctr2" id="g14">2</td><td class="ctr1" id="h14">2</td><td class="ctr2" id="i14">6</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m14">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/index.source.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>linalg</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"index.html\" class=\"el_class\">Classes</a><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_package\">linalg</span></div><h1>linalg</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">12,017 of 12,204</td><td class=\"ctr2\">1%</td><td class=\"bar\">869 of 883</td><td class=\"ctr2\">1%</td><td class=\"ctr1\">685</td><td class=\"ctr2\">698</td><td class=\"ctr1\">1,686</td><td class=\"ctr2\">1,734</td><td class=\"ctr1\">246</td><td class=\"ctr2\">255</td><td class=\"ctr1\">14</td><td class=\"ctr2\">16</td></tr></tfoot><tbody><tr><td id=\"a8\"><a href=\"MatrixProperties.java.html\" class=\"el_source\">MatrixProperties.java</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"119\" height=\"10\" title=\"2,330\" alt=\"2,330\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"214\" alt=\"214\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">149</td><td class=\"ctr2\" id=\"g0\">152</td><td class=\"ctr1\" id=\"h0\">291</td><td class=\"ctr2\" id=\"i0\">297</td><td class=\"ctr1\" id=\"j1\">42</td><td class=\"ctr2\" id=\"k1\">45</td><td class=\"ctr1\" id=\"l14\">0</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixOperations.java.html\" class=\"el_source\">MatrixOperations.java</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"118\" height=\"10\" title=\"2,309\" alt=\"2,309\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"172\" alt=\"172\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f1\">127</td><td class=\"ctr2\" id=\"g1\">127</td><td class=\"ctr1\" id=\"h1\">284</td><td class=\"ctr2\" id=\"i2\">284</td><td class=\"ctr1\" id=\"j2\">41</td><td class=\"ctr2\" id=\"k2\">41</td><td class=\"ctr1\" id=\"l0\">1</td><td class=\"ctr2\" id=\"m1\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixManipulations.java.html\" class=\"el_source\">MatrixManipulations.java</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"94\" height=\"10\" title=\"1,856\" alt=\"1,856\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"81\" height=\"10\" title=\"146\" alt=\"146\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f2\">113</td><td class=\"ctr2\" id=\"g3\">113</td><td class=\"ctr1\" id=\"h2\">268</td><td class=\"ctr2\" id=\"i3\">268</td><td class=\"ctr1\" id=\"j3\">40</td><td class=\"ctr2\" id=\"k3\">40</td><td class=\"ctr1\" id=\"l1\">1</td><td class=\"ctr2\" id=\"m2\">1</td></tr><tr><td id=\"a3\"><a href=\"Matrix.java.html\" class=\"el_source\">Matrix.java</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"77\" height=\"10\" title=\"1,517\" alt=\"1,517\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"169\" alt=\"169\"/></td><td class=\"ctr2\" id=\"c0\">10%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"66\" height=\"10\" title=\"118\" alt=\"118\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"7\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e0\">10%</td><td class=\"ctr1\" id=\"f3\">107</td><td class=\"ctr2\" id=\"g2\">117</td><td class=\"ctr1\" id=\"h3\">251</td><td class=\"ctr2\" id=\"i1\">293</td><td class=\"ctr1\" id=\"j0\">45</td><td class=\"ctr2\" id=\"k0\">51</td><td class=\"ctr1\" id=\"l15\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a10\"><a href=\"QRDecomposition.java.html\" class=\"el_source\">QRDecomposition.java</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"53\" height=\"10\" title=\"1,049\" alt=\"1,049\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"18\" alt=\"18\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f9\">14</td><td class=\"ctr2\" id=\"g9\">14</td><td class=\"ctr1\" id=\"h6\">79</td><td class=\"ctr2\" id=\"i6\">79</td><td class=\"ctr1\" id=\"j9\">5</td><td class=\"ctr2\" id=\"k9\">5</td><td class=\"ctr1\" id=\"l2\">1</td><td class=\"ctr2\" id=\"m4\">1</td></tr><tr><td id=\"a15\"><a href=\"Vector.java.html\" class=\"el_source\">Vector.java</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"38\" height=\"10\" title=\"751\" alt=\"751\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"28\" height=\"10\" title=\"50\" alt=\"50\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f4\">51</td><td class=\"ctr2\" id=\"g4\">51</td><td class=\"ctr1\" id=\"h4\">165</td><td class=\"ctr2\" id=\"i4\">165</td><td class=\"ctr1\" id=\"j4\">26</td><td class=\"ctr2\" id=\"k4\">26</td><td class=\"ctr1\" id=\"l3\">1</td><td class=\"ctr2\" id=\"m5\">1</td></tr><tr><td id=\"a2\"><a href=\"LUDecomposition.java.html\" class=\"el_source\">LUDecomposition.java</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"27\" height=\"10\" title=\"544\" alt=\"544\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"37\" alt=\"37\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f5\">28</td><td class=\"ctr2\" id=\"g5\">28</td><td class=\"ctr1\" id=\"h5\">98</td><td class=\"ctr2\" id=\"i5\">98</td><td class=\"ctr1\" id=\"j6\">8</td><td class=\"ctr2\" id=\"k6\">8</td><td class=\"ctr1\" id=\"l4\">1</td><td class=\"ctr2\" id=\"m6\">1</td></tr><tr><td id=\"a13\"><a href=\"SingularValueDecomposition.java.html\" class=\"el_source\">SingularValueDecomposition.java</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"371\" alt=\"371\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d14\"/><td class=\"ctr2\" id=\"e14\">n/a</td><td class=\"ctr1\" id=\"f14\">3</td><td class=\"ctr2\" id=\"g14\">3</td><td class=\"ctr1\" id=\"h11\">24</td><td class=\"ctr2\" id=\"i11\">24</td><td class=\"ctr1\" id=\"j10\">3</td><td class=\"ctr2\" id=\"k10\">3</td><td class=\"ctr1\" id=\"l5\">1</td><td class=\"ctr2\" id=\"m7\">1</td></tr><tr><td id=\"a11\"><a href=\"SchurDecomposition.java.html\" class=\"el_source\">SchurDecomposition.java</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"368\" alt=\"368\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f10\">8</td><td class=\"ctr2\" id=\"g10\">8</td><td class=\"ctr1\" id=\"h7\">55</td><td class=\"ctr2\" id=\"i7\">55</td><td class=\"ctr1\" id=\"j11\">2</td><td class=\"ctr2\" id=\"k11\">2</td><td class=\"ctr1\" id=\"l6\">1</td><td class=\"ctr2\" id=\"m8\">1</td></tr><tr><td id=\"a14\"><a href=\"Solvers.java.html\" class=\"el_source\">Solvers.java</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"332\" alt=\"332\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f8\">18</td><td class=\"ctr2\" id=\"g8\">18</td><td class=\"ctr1\" id=\"h8\">52</td><td class=\"ctr2\" id=\"i8\">52</td><td class=\"ctr1\" id=\"j7\">8</td><td class=\"ctr2\" id=\"k7\">8</td><td class=\"ctr1\" id=\"l7\">1</td><td class=\"ctr2\" id=\"m9\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixComparisons.java.html\" class=\"el_source\">MatrixComparisons.java</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"206\" alt=\"206\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f6\">28</td><td class=\"ctr2\" id=\"g6\">28</td><td class=\"ctr1\" id=\"h9\">46</td><td class=\"ctr2\" id=\"i9\">46</td><td class=\"ctr1\" id=\"j8\">7</td><td class=\"ctr2\" id=\"k8\">7</td><td class=\"ctr1\" id=\"l8\">1</td><td class=\"ctr2\" id=\"m10\">1</td></tr><tr><td id=\"a1\"><a href=\"Decompose.java.html\" class=\"el_source\">Decompose.java</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"127\" alt=\"127\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f7\">19</td><td class=\"ctr2\" id=\"g7\">19</td><td class=\"ctr1\" id=\"h10\">28</td><td class=\"ctr2\" id=\"i10\">28</td><td class=\"ctr1\" id=\"j5\">11</td><td class=\"ctr2\" id=\"k5\">11</td><td class=\"ctr1\" id=\"l9\">1</td><td class=\"ctr2\" id=\"m11\">1</td></tr><tr><td id=\"a0\"><a href=\"CholeskyDecomposition.java.html\" class=\"el_source\">CholeskyDecomposition.java</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"123\" alt=\"123\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f11\">7</td><td class=\"ctr2\" id=\"g11\">7</td><td class=\"ctr1\" id=\"h12\">18</td><td class=\"ctr2\" id=\"i12\">18</td><td class=\"ctr1\" id=\"j12\">2</td><td class=\"ctr2\" id=\"k12\">2</td><td class=\"ctr1\" id=\"l10\">1</td><td class=\"ctr2\" id=\"m12\">1</td></tr><tr><td id=\"a12\"><a href=\"SimpleMatrix.java.html\" class=\"el_source\">SimpleMatrix.java</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"71\" alt=\"71\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f13\">5</td><td class=\"ctr2\" id=\"g13\">5</td><td class=\"ctr1\" id=\"h14\">9</td><td class=\"ctr2\" id=\"i14\">9</td><td class=\"ctr1\" id=\"j13\">2</td><td class=\"ctr2\" id=\"k13\">2</td><td class=\"ctr1\" id=\"l11\">1</td><td class=\"ctr2\" id=\"m13\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixChecks.java.html\" class=\"el_source\">MatrixChecks.java</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"47\" alt=\"47\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f12\">6</td><td class=\"ctr2\" id=\"g12\">6</td><td class=\"ctr1\" id=\"h13\">12</td><td class=\"ctr2\" id=\"i13\">12</td><td class=\"ctr1\" id=\"j14\">2</td><td class=\"ctr2\" id=\"k14\">2</td><td class=\"ctr1\" id=\"l12\">1</td><td class=\"ctr2\" id=\"m14\">1</td></tr><tr><td id=\"a9\"><a href=\"PrintOptions.java.html\" class=\"el_source\">PrintOptions.java</a></td><td class=\"bar\" id=\"b15\"/><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d15\"/><td class=\"ctr2\" id=\"e15\">n/a</td><td class=\"ctr1\" id=\"f15\">2</td><td class=\"ctr2\" id=\"g15\">2</td><td class=\"ctr1\" id=\"h15\">6</td><td class=\"ctr2\" id=\"i15\">6</td><td class=\"ctr1\" id=\"j15\">2</td><td class=\"ctr2\" id=\"k15\">2</td><td class=\"ctr1\" id=\"l13\">1</td><td class=\"ctr2\" id=\"m15\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/index.source.html b/target/site/jacoco/linalg/index.source.html
--- a/target/site/jacoco/linalg/index.source.html	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/linalg/index.source.html	(date 1648105701863)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.html" class="el_class">Classes</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">12,017 of 12,204</td><td class="ctr2">1%</td><td class="bar">869 of 883</td><td class="ctr2">1%</td><td class="ctr1">685</td><td class="ctr2">698</td><td class="ctr1">1,686</td><td class="ctr2">1,734</td><td class="ctr1">246</td><td class="ctr2">255</td><td class="ctr1">14</td><td class="ctr2">16</td></tr></tfoot><tbody><tr><td id="a8"><a href="MatrixProperties.java.html" class="el_source">MatrixProperties.java</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a7"><a href="MatrixOperations.java.html" class="el_source">MatrixOperations.java</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="118" height="10" title="2,309" alt="2,309"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="172" alt="172"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">127</td><td class="ctr1" id="h1">284</td><td class="ctr2" id="i2">284</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.java.html" class="el_source">MatrixManipulations.java</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="94" height="10" title="1,856" alt="1,856"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="81" height="10" title="146" alt="146"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">113</td><td class="ctr2" id="g3">113</td><td class="ctr1" id="h2">268</td><td class="ctr2" id="i3">268</td><td class="ctr1" id="j3">40</td><td class="ctr2" id="k3">40</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.java.html" class="el_source">Matrix.java</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c0">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l15">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a10"><a href="QRDecomposition.java.html" class="el_source">QRDecomposition.java</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a15"><a href="Vector.java.html" class="el_source">Vector.java</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.java.html" class="el_source">LUDecomposition.java</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a13"><a href="SingularValueDecomposition.java.html" class="el_source">SingularValueDecomposition.java</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a11"><a href="SchurDecomposition.java.html" class="el_source">SchurDecomposition.java</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j11">2</td><td class="ctr2" id="k11">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a14"><a href="Solvers.java.html" class="el_source">Solvers.java</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.java.html" class="el_source">MatrixComparisons.java</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="206" alt="206"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">46</td><td class="ctr2" id="i9">46</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a1"><a href="Decompose.java.html" class="el_source">Decompose.java</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.java.html" class="el_source">CholeskyDecomposition.java</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a12"><a href="SimpleMatrix.java.html" class="el_source">SimpleMatrix.java</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="71" alt="71"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f13">5</td><td class="ctr2" id="g13">5</td><td class="ctr1" id="h14">9</td><td class="ctr2" id="i14">9</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a4"><a href="MatrixChecks.java.html" class="el_source">MatrixChecks.java</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j14">2</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l12">1</td><td class="ctr2" id="m14">1</td></tr><tr><td id="a9"><a href="PrintOptions.java.html" class="el_source">PrintOptions.java</a></td><td class="bar" id="b15"/><td class="ctr2" id="c15">0%</td><td class="bar" id="d15"/><td class="ctr2" id="e15">n/a</td><td class="ctr1" id="f15">2</td><td class="ctr2" id="g15">2</td><td class="ctr1" id="h15">6</td><td class="ctr2" id="i15">6</td><td class="ctr1" id="j15">2</td><td class="ctr2" id="k15">2</td><td class="ctr1" id="l13">1</td><td class="ctr2" id="m15">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.html" class="el_class">Classes</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">11,749 of 11,945</td><td class="ctr2">1%</td><td class="bar">865 of 879</td><td class="ctr2">1%</td><td class="ctr1">681</td><td class="ctr2">695</td><td class="ctr1">1,675</td><td class="ctr2">1,727</td><td class="ctr1">244</td><td class="ctr2">254</td><td class="ctr1">12</td><td class="ctr2">15</td></tr></tfoot><tbody><tr><td id="a8"><a href="MatrixProperties.java.html" class="el_source">MatrixProperties.java</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l12">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a7"><a href="MatrixOperations.java.html" class="el_source">MatrixOperations.java</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="106" height="10" title="2,093" alt="2,093"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="172" alt="172"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">127</td><td class="ctr1" id="h1">282</td><td class="ctr2" id="i2">282</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.java.html" class="el_source">MatrixManipulations.java</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="1,884" alt="1,884"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="82" height="10" title="148" alt="148"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">115</td><td class="ctr2" id="g3">115</td><td class="ctr1" id="h2">272</td><td class="ctr2" id="i3">272</td><td class="ctr1" id="j3">41</td><td class="ctr2" id="k3">41</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.java.html" class="el_source">Matrix.java</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l13">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a10"><a href="QRDecomposition.java.html" class="el_source">QRDecomposition.java</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a14"><a href="Vector.java.html" class="el_source">Vector.java</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.java.html" class="el_source">LUDecomposition.java</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a12"><a href="SingularValueDecomposition.java.html" class="el_source">SingularValueDecomposition.java</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d13"/><td class="ctr2" id="e13">n/a</td><td class="ctr1" id="f13">3</td><td class="ctr2" id="g13">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a11"><a href="SchurDecomposition.java.html" class="el_source">SchurDecomposition.java</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j11">2</td><td class="ctr2" id="k11">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a13"><a href="Solvers.java.html" class="el_source">Solvers.java</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.java.html" class="el_source">MatrixComparisons.java</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="206" alt="206"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">46</td><td class="ctr2" id="i9">46</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a1"><a href="Decompose.java.html" class="el_source">Decompose.java</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.java.html" class="el_source">CholeskyDecomposition.java</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a4"><a href="MatrixChecks.java.html" class="el_source">MatrixChecks.java</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a9"><a href="PrintOptions.java.html" class="el_source">PrintOptions.java</a></td><td class="bar" id="b14"/><td class="ctr2" id="c0">56%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">1</td><td class="ctr2" id="g14">2</td><td class="ctr1" id="h14">2</td><td class="ctr2" id="i14">6</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m14">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd\" version=\"3.0\" name=\"linalg.matrix.MatrixConstructorTest\" time=\"0.237\" tests=\"6\" errors=\"0\" skipped=\"0\" failures=\"0\">\r\n  <properties>\r\n    <property name=\"java.specification.version\" value=\"16\"/>\r\n    <property name=\"sun.jnu.encoding\" value=\"UTF-8\"/>\r\n    <property name=\"java.class.path\" value=\"/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/test-classes:/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/classes:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-surefire-provider/1.1.0/junit-platform-surefire-provider-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-launcher/1.1.0/junit-platform-launcher-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/surefire-api/2.19.1/surefire-api-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.1.0/junit-jupiter-engine-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-engine/1.1.0/junit-platform-engine-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/jacoco-maven-plugin/0.8.7/jacoco-maven-plugin-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-plugin-api/3.0/maven-plugin-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model/3.0/maven-model-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact/3.0/maven-artifact-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/1.4.2/sisu-inject-plexus-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-core/3.0/maven-core-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings/3.0/maven-settings-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings-builder/3.0/maven-settings-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-repository-metadata/3.0/maven-repository-metadata-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model-builder/3.0/maven-model-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-aether-provider/3.0/maven-aether-provider-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-impl/1.7/aether-impl-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-spi/1.7/aether-spi-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-api/1.7/aether-api-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.3/plexus-classworlds-2.2.3.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.2/maven-artifact-manager-2.0.2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-6/wagon-provider-api-1.0-alpha-6.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9/plexus-container-default-1.0-alpha-9.jar:/Users/jacobwatters/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/jacobwatters/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0/doxia-sink-api-1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.core/0.8.7/org.jacoco.core-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-commons/9.1/asm-commons-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-analysis/9.1/asm-analysis-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-tree/9.1/asm-tree-9.1.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.report/0.8.7/org.jacoco.report-0.8.7.jar:\"/>\r\n    <property name=\"java.vm.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"sun.arch.data.model\" value=\"64\"/>\r\n    <property name=\"java.vendor.url\" value=\"https://java.oracle.com/\"/>\r\n    <property name=\"os.name\" value=\"Mac OS X\"/>\r\n    <property name=\"java.vm.specification.version\" value=\"16\"/>\r\n    <property name=\"sun.java.launcher\" value=\"SUN_STANDARD\"/>\r\n    <property name=\"user.country\" value=\"US\"/>\r\n    <property name=\"sun.boot.library.path\" value=\"/Library/Java/JavaVirtualMachines/jdk-16.0.2.jdk/Contents/Home/lib\"/>\r\n    <property name=\"sun.java.command\" value=\"/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/surefire/surefirebooter16607992258091873161.jar /Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/surefire 2021-10-21T11-15-52_392-jvmRun1 surefire14350706504916952757tmp surefire_018402294196260911259tmp\"/>\r\n    <property name=\"http.nonProxyHosts\" value=\"local|*.local|169.254/16|*.169.254/16\"/>\r\n    <property name=\"jdk.debug\" value=\"release\"/>\r\n    <property name=\"surefire.test.class.path\" value=\"/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/test-classes:/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/classes:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-surefire-provider/1.1.0/junit-platform-surefire-provider-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-launcher/1.1.0/junit-platform-launcher-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/surefire-api/2.19.1/surefire-api-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.1.0/junit-jupiter-engine-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-engine/1.1.0/junit-platform-engine-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/jacoco-maven-plugin/0.8.7/jacoco-maven-plugin-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-plugin-api/3.0/maven-plugin-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model/3.0/maven-model-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact/3.0/maven-artifact-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/1.4.2/sisu-inject-plexus-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-core/3.0/maven-core-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings/3.0/maven-settings-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings-builder/3.0/maven-settings-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-repository-metadata/3.0/maven-repository-metadata-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model-builder/3.0/maven-model-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-aether-provider/3.0/maven-aether-provider-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-impl/1.7/aether-impl-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-spi/1.7/aether-spi-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-api/1.7/aether-api-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.3/plexus-classworlds-2.2.3.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.2/maven-artifact-manager-2.0.2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-6/wagon-provider-api-1.0-alpha-6.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9/plexus-container-default-1.0-alpha-9.jar:/Users/jacobwatters/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/jacobwatters/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0/doxia-sink-api-1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.core/0.8.7/org.jacoco.core-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-commons/9.1/asm-commons-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-analysis/9.1/asm-analysis-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-tree/9.1/asm-tree-9.1.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.report/0.8.7/org.jacoco.report-0.8.7.jar:\"/>\r\n    <property name=\"sun.cpu.endian\" value=\"little\"/>\r\n    <property name=\"user.home\" value=\"/Users/jacobwatters\"/>\r\n    <property name=\"user.language\" value=\"en\"/>\r\n    <property name=\"java.specification.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"java.version.date\" value=\"2021-07-20\"/>\r\n    <property name=\"java.home\" value=\"/Library/Java/JavaVirtualMachines/jdk-16.0.2.jdk/Contents/Home\"/>\r\n    <property name=\"file.separator\" value=\"/\"/>\r\n    <property name=\"basedir\" value=\"/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra\"/>\r\n    <property name=\"java.vm.compressedOopsMode\" value=\"Zero based\"/>\r\n    <property name=\"line.separator\" value=\"&#10;\"/>\r\n    <property name=\"java.specification.name\" value=\"Java Platform API Specification\"/>\r\n    <property name=\"java.vm.specification.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"surefire.real.class.path\" value=\"/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/surefire/surefirebooter16607992258091873161.jar\"/>\r\n    <property name=\"sun.management.compiler\" value=\"HotSpot 64-Bit Tiered Compilers\"/>\r\n    <property name=\"ftp.nonProxyHosts\" value=\"local|*.local|169.254/16|*.169.254/16\"/>\r\n    <property name=\"java.runtime.version\" value=\"16.0.2+7-67\"/>\r\n    <property name=\"user.name\" value=\"jacobwatters\"/>\r\n    <property name=\"path.separator\" value=\":\"/>\r\n    <property name=\"os.version\" value=\"11.5\"/>\r\n    <property name=\"java.runtime.name\" value=\"Java(TM) SE Runtime Environment\"/>\r\n    <property name=\"file.encoding\" value=\"UTF-8\"/>\r\n    <property name=\"java.vm.name\" value=\"Java HotSpot(TM) 64-Bit Server VM\"/>\r\n    <property name=\"localRepository\" value=\"/Users/jacobwatters/.m2/repository\"/>\r\n    <property name=\"java.vendor.url.bug\" value=\"https://bugreport.java.com/bugreport/\"/>\r\n    <property name=\"java.io.tmpdir\" value=\"/var/folders/v3/r52t54_9019_25w4sjdhbl680000gn/T/\"/>\r\n    <property name=\"idea.version\" value=\"2021.2.1\"/>\r\n    <property name=\"java.version\" value=\"16.0.2\"/>\r\n    <property name=\"user.dir\" value=\"/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra\"/>\r\n    <property name=\"os.arch\" value=\"x86_64\"/>\r\n    <property name=\"java.vm.specification.name\" value=\"Java Virtual Machine Specification\"/>\r\n    <property name=\"java.library.path\" value=\"/Users/jacobwatters/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\"/>\r\n    <property name=\"java.vm.info\" value=\"mixed mode, sharing\"/>\r\n    <property name=\"java.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"java.vm.version\" value=\"16.0.2+7-67\"/>\r\n    <property name=\"sun.io.unicode.encoding\" value=\"UnicodeBig\"/>\r\n    <property name=\"socksNonProxyHosts\" value=\"local|*.local|169.254/16|*.169.254/16\"/>\r\n    <property name=\"java.class.version\" value=\"60.0\"/>\r\n  </properties>\r\n  <testcase name=\"rowsColsConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.174\"/>\r\n  <testcase name=\"defaultConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.001\"/>\r\n  <testcase name=\"rowsColsValueConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.026\"/>\r\n  <testcase name=\"sizeValueConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.002\"/>\r\n  <testcase name=\"sizeConstructorFirstTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.001\"/>\r\n  <testcase name=\"sizeConstructorSecondTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.001\"/>\r\n</testsuite>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml b/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml
--- a/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml	(date 1648105701605)
@@ -1,63 +1,66 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="linalg.matrix.MatrixConstructorTest" time="0.237" tests="6" errors="0" skipped="0" failures="0">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="linalg.matrix.MatrixConstructorTest" time="0.05" tests="6" errors="0" skipped="0" failures="0">
   <properties>
     <property name="java.specification.version" value="16"/>
-    <property name="sun.jnu.encoding" value="UTF-8"/>
-    <property name="java.class.path" value="/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/test-classes:/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/classes:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-surefire-provider/1.1.0/junit-platform-surefire-provider-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-launcher/1.1.0/junit-platform-launcher-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/surefire-api/2.19.1/surefire-api-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.1.0/junit-jupiter-engine-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-engine/1.1.0/junit-platform-engine-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/jacoco-maven-plugin/0.8.7/jacoco-maven-plugin-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-plugin-api/3.0/maven-plugin-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model/3.0/maven-model-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact/3.0/maven-artifact-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/1.4.2/sisu-inject-plexus-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-core/3.0/maven-core-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings/3.0/maven-settings-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings-builder/3.0/maven-settings-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-repository-metadata/3.0/maven-repository-metadata-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model-builder/3.0/maven-model-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-aether-provider/3.0/maven-aether-provider-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-impl/1.7/aether-impl-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-spi/1.7/aether-spi-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-api/1.7/aether-api-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.3/plexus-classworlds-2.2.3.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.2/maven-artifact-manager-2.0.2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-6/wagon-provider-api-1.0-alpha-6.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9/plexus-container-default-1.0-alpha-9.jar:/Users/jacobwatters/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/jacobwatters/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0/doxia-sink-api-1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.core/0.8.7/org.jacoco.core-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-commons/9.1/asm-commons-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-analysis/9.1/asm-analysis-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-tree/9.1/asm-tree-9.1.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.report/0.8.7/org.jacoco.report-0.8.7.jar:"/>
-    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\target\test-classes;C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\target\classes;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-surefire-provider\1.1.0\junit-platform-surefire-provider-1.1.0.jar;C:\Users\jacob\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-launcher\1.1.0\junit-platform-launcher-1.1.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\surefire\surefire-api\2.19.1\surefire-api-2.19.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\surefire\common-java5\2.19.1\common-java5-2.19.1.jar;C:\Users\jacob\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.1.0\junit-jupiter-engine-5.1.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-engine\1.1.0\junit-platform-engine-1.1.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-commons\1.1.0\junit-platform-commons-1.1.0.jar;C:\Users\jacob\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\jacob\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.1.0\junit-jupiter-api-5.1.0.jar;C:\Users\jacob\.m2\repository\org\jacoco\jacoco-maven-plugin\0.8.7\jacoco-maven-plugin-0.8.7.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\jacob\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\jacob\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\jacob\.m2\repository\org\apache\maven\shared\file-management\1.2.1\file-management-1.2.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\shared\maven-shared-io\1.1\maven-shared-io-1.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-artifact-manager\2.0.2\maven-artifact-manager-2.0.2.jar;C:\Users\jacob\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-alpha-6\wagon-provider-api-1.0-alpha-6.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\jacob\.m2\repository\junit\junit\3.8.1\junit-3.8.1.jar;C:\Users\jacob\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\jacob\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.0\doxia-sink-api-1.0.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.agent\0.8.7\org.jacoco.agent-0.8.7-runtime.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.core\0.8.7\org.jacoco.core-0.8.7.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-commons\9.1\asm-commons-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-analysis\9.1\asm-analysis-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-tree\9.1\asm-tree-9.1.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.report\0.8.7\org.jacoco.report-0.8.7.jar;"/>
+    <property name="java.vm.vendor" value="Amazon.com Inc."/>
     <property name="sun.arch.data.model" value="64"/>
-    <property name="java.vendor.url" value="https://java.oracle.com/"/>
-    <property name="os.name" value="Mac OS X"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
+    <property name="user.timezone" value="America/Denver"/>
+    <property name="os.name" value="Windows 10"/>
     <property name="java.vm.specification.version" value="16"/>
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
     <property name="user.country" value="US"/>
-    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-16.0.2.jdk/Contents/Home/lib"/>
-    <property name="sun.java.command" value="/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/surefire/surefirebooter16607992258091873161.jar /Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/surefire 2021-10-21T11-15-52_392-jvmRun1 surefire14350706504916952757tmp surefire_018402294196260911259tmp"/>
-    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
+    <property name="sun.boot.library.path" value="C:\Users\jacob\.jdks\corretto-16.0.2\bin"/>
+    <property name="sun.java.command" value="C:\Users\jacob\AppData\Local\Temp\surefire582648585926312103\surefirebooter14715908063239068823.jar C:\Users\jacob\AppData\Local\Temp\surefire582648585926312103 2022-03-24T01-08-20_894-jvmRun1 surefire14036468955914101646tmp surefire_03357635447598842798tmp"/>
     <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/test-classes:/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/classes:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-surefire-provider/1.1.0/junit-platform-surefire-provider-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-launcher/1.1.0/junit-platform-launcher-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/surefire-api/2.19.1/surefire-api-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.1.0/junit-jupiter-engine-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-engine/1.1.0/junit-platform-engine-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/Users/jacobwatters/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/jacobwatters/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/jacoco-maven-plugin/0.8.7/jacoco-maven-plugin-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-plugin-api/3.0/maven-plugin-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model/3.0/maven-model-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact/3.0/maven-artifact-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/1.4.2/sisu-inject-plexus-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar:/Users/jacobwatters/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-core/3.0/maven-core-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings/3.0/maven-settings-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-settings-builder/3.0/maven-settings-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-repository-metadata/3.0/maven-repository-metadata-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-model-builder/3.0/maven-model-builder-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-aether-provider/3.0/maven-aether-provider-3.0.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-impl/1.7/aether-impl-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-spi/1.7/aether-spi-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-api/1.7/aether-api-1.7.jar:/Users/jacobwatters/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.3/plexus-classworlds-2.2.3.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar:/Users/jacobwatters/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.2/maven-artifact-manager-2.0.2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-6/wagon-provider-api-1.0-alpha-6.jar:/Users/jacobwatters/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9/plexus-container-default-1.0-alpha-9.jar:/Users/jacobwatters/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/jacobwatters/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar:/Users/jacobwatters/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0/doxia-sink-api-1.0.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.core/0.8.7/org.jacoco.core-0.8.7.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-commons/9.1/asm-commons-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-analysis/9.1/asm-analysis-9.1.jar:/Users/jacobwatters/.m2/repository/org/ow2/asm/asm-tree/9.1/asm-tree-9.1.jar:/Users/jacobwatters/.m2/repository/org/jacoco/org.jacoco.report/0.8.7/org.jacoco.report-0.8.7.jar:"/>
+    <property name="surefire.test.class.path" value="C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\target\test-classes;C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\target\classes;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-surefire-provider\1.1.0\junit-platform-surefire-provider-1.1.0.jar;C:\Users\jacob\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-launcher\1.1.0\junit-platform-launcher-1.1.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\surefire\surefire-api\2.19.1\surefire-api-2.19.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\surefire\common-java5\2.19.1\common-java5-2.19.1.jar;C:\Users\jacob\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.1.0\junit-jupiter-engine-5.1.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-engine\1.1.0\junit-platform-engine-1.1.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-commons\1.1.0\junit-platform-commons-1.1.0.jar;C:\Users\jacob\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\jacob\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.1.0\junit-jupiter-api-5.1.0.jar;C:\Users\jacob\.m2\repository\org\jacoco\jacoco-maven-plugin\0.8.7\jacoco-maven-plugin-0.8.7.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\jacob\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\jacob\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\jacob\.m2\repository\org\apache\maven\shared\file-management\1.2.1\file-management-1.2.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\shared\maven-shared-io\1.1\maven-shared-io-1.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-artifact-manager\2.0.2\maven-artifact-manager-2.0.2.jar;C:\Users\jacob\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-alpha-6\wagon-provider-api-1.0-alpha-6.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\jacob\.m2\repository\junit\junit\3.8.1\junit-3.8.1.jar;C:\Users\jacob\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\jacob\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.0\doxia-sink-api-1.0.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.agent\0.8.7\org.jacoco.agent-0.8.7-runtime.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.core\0.8.7\org.jacoco.core-0.8.7.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-commons\9.1\asm-commons-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-analysis\9.1\asm-analysis-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-tree\9.1\asm-tree-9.1.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.report\0.8.7\org.jacoco.report-0.8.7.jar;"/>
     <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="/Users/jacobwatters"/>
+    <property name="user.home" value="C:\Users\jacob"/>
     <property name="user.language" value="en"/>
     <property name="java.specification.vendor" value="Oracle Corporation"/>
     <property name="java.version.date" value="2021-07-20"/>
-    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-16.0.2.jdk/Contents/Home"/>
-    <property name="file.separator" value="/"/>
-    <property name="basedir" value="/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra"/>
+    <property name="java.home" value="C:\Users\jacob\.jdks\corretto-16.0.2"/>
+    <property name="file.separator" value="\"/>
+    <property name="basedir" value="C:\Users\jacob\IdeaProjects\Java-Linear-Algebra"/>
     <property name="java.vm.compressedOopsMode" value="Zero based"/>
     <property name="line.separator" value="&#10;"/>
-    <property name="java.specification.name" value="Java Platform API Specification"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
-    <property name="surefire.real.class.path" value="/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra/target/surefire/surefirebooter16607992258091873161.jar"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="surefire.real.class.path" value="C:\Users\jacob\AppData\Local\Temp\surefire582648585926312103\surefirebooter14715908063239068823.jar"/>
+    <property name="user.script" value=""/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
-    <property name="java.runtime.version" value="16.0.2+7-67"/>
-    <property name="user.name" value="jacobwatters"/>
-    <property name="path.separator" value=":"/>
-    <property name="os.version" value="11.5"/>
-    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
-    <property name="file.encoding" value="UTF-8"/>
-    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
-    <property name="localRepository" value="/Users/jacobwatters/.m2/repository"/>
-    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
-    <property name="java.io.tmpdir" value="/var/folders/v3/r52t54_9019_25w4sjdhbl680000gn/T/"/>
-    <property name="idea.version" value="2021.2.1"/>
+    <property name="java.runtime.version" value="16.0.2+7"/>
+    <property name="user.name" value="jacob"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
+    <property name="java.vendor.version" value="Corretto-16.0.2.7.1"/>
+    <property name="localRepository" value="C:\Users\jacob\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-jdk/issues/"/>
+    <property name="java.io.tmpdir" value="C:\Users\jacob\AppData\Local\Temp\"/>
+    <property name="idea.version" value="2021.3.2"/>
     <property name="java.version" value="16.0.2"/>
-    <property name="user.dir" value="/Users/jacobwatters/IdeaProjects/Java-Linear-Algebra"/>
-    <property name="os.arch" value="x86_64"/>
+    <property name="user.dir" value="C:\Users\jacob\IdeaProjects\Java-Linear-Algebra"/>
+    <property name="os.arch" value="amd64"/>
     <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
-    <property name="java.library.path" value="/Users/jacobwatters/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Users\jacob\.jdks\corretto-16.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Microsoft\jdk-11.0.12.7-hotspot\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\libnvvp;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\Nsight Compute 2022.1.1\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\NVIDIA\CUDNN\v8.3\bin;C:\Program Files\Git\cmd;C:\Users\jacob\AppData\Local\Microsoft\WindowsApps;;."/>
     <property name="java.vm.info" value="mixed mode, sharing"/>
-    <property name="java.vendor" value="Oracle Corporation"/>
-    <property name="java.vm.version" value="16.0.2+7-67"/>
-    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
-    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
+    <property name="java.vendor" value="Amazon.com Inc."/>
+    <property name="java.vm.version" value="16.0.2+7"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
     <property name="java.class.version" value="60.0"/>
   </properties>
-  <testcase name="rowsColsConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.174"/>
+  <testcase name="rowsColsConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.038"/>
   <testcase name="defaultConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.001"/>
-  <testcase name="rowsColsValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.026"/>
-  <testcase name="sizeValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.002"/>
-  <testcase name="sizeConstructorFirstTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.001"/>
-  <testcase name="sizeConstructorSecondTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.001"/>
+  <testcase name="rowsColsValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.002"/>
+  <testcase name="sizeValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0"/>
+  <testcase name="sizeConstructorFirstTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0"/>
+  <testcase name="sizeConstructorSecondTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0"/>
 </testsuite>
\ No newline at end of file
Index: target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-------------------------------------------------------------------------------\r\nTest set: linalg.matrix.MatrixConstructorTest\r\n-------------------------------------------------------------------------------\r\nTests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.237 s - in linalg.matrix.MatrixConstructorTest\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt b/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt
--- a/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt	(date 1648105701600)
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: linalg.matrix.MatrixConstructorTest
 -------------------------------------------------------------------------------
-Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.237 s - in linalg.matrix.MatrixConstructorTest
+Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 s - in linalg.matrix.MatrixConstructorTest
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1648105535628)
+++ b/.idea/uiDesigner.xml	(date 1648105535628)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: target/site/jacoco/jacoco.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>GROUP,PACKAGE,CLASS,INSTRUCTION_MISSED,INSTRUCTION_COVERED,BRANCH_MISSED,BRANCH_COVERED,LINE_MISSED,LINE_COVERED,COMPLEXITY_MISSED,COMPLEXITY_COVERED,METHOD_MISSED,METHOD_COVERED\r\nJava-Linear-Algebra,linalg.complex_number,CNumber,893,106,107,3,160,28,103,5,48,5\r\nJava-Linear-Algebra,linalg.util,StringUtils,9,48,2,6,3,9,3,4,1,2\r\nJava-Linear-Algebra,linalg.util,MathUtil,15,0,0,0,3,0,3,0,3,0\r\nJava-Linear-Algebra,linalg.util,Token,24,43,3,5,6,10,5,7,2,6\r\nJava-Linear-Algebra,linalg.util,ShapeLexer,129,0,30,0,37,0,18,0,3,0\r\nJava-Linear-Algebra,linalg.util,LinAlgArrayUtils,573,29,68,4,97,5,52,3,18,1\r\nJava-Linear-Algebra,linalg.util,NumberLexer,133,142,33,29,34,39,24,10,1,2\r\nJava-Linear-Algebra,linalg.util,ExampleMatrices,900,0,0,0,19,0,2,0,2,0\r\nJava-Linear-Algebra,linalg.util,Parser,128,90,11,7,29,23,10,2,2,1\r\nJava-Linear-Algebra,linalg.util,Lexer,13,49,1,7,5,11,3,7,2,4\r\nJava-Linear-Algebra,linalg.util,FileManager,247,0,16,0,49,0,12,0,4,0\r\nJava-Linear-Algebra,linalg,QRDecomposition,1049,0,18,0,79,0,14,0,5,0\r\nJava-Linear-Algebra,linalg,SchurDecomposition,610,0,12,0,59,0,9,0,3,0\r\nJava-Linear-Algebra,linalg,MatrixOperations,2309,0,172,0,284,0,127,0,41,0\r\nJava-Linear-Algebra,linalg,MatrixManipulations,1856,0,146,0,268,0,113,0,40,0\r\nJava-Linear-Algebra,linalg,LUDecomposition,544,0,37,0,98,0,28,0,8,0\r\nJava-Linear-Algebra,linalg,PrintOptions,7,9,0,0,2,4,1,1,1,1\r\nJava-Linear-Algebra,linalg,SingularValueDecomposition,371,0,0,0,24,0,3,0,3,0\r\nJava-Linear-Algebra,linalg,MatrixChecks,47,0,8,0,12,0,6,0,2,0\r\nJava-Linear-Algebra,linalg,Solvers,332,0,20,0,52,0,18,0,8,0\r\nJava-Linear-Algebra,linalg,Matrix,1517,169,118,14,251,42,107,10,45,6\r\nJava-Linear-Algebra,linalg,Vector,751,0,50,0,165,0,51,0,26,0\r\nJava-Linear-Algebra,linalg,CholeskyDecomposition,123,0,10,0,18,0,7,0,2,0\r\nJava-Linear-Algebra,linalg,MatrixComparisons,206,0,42,0,46,0,28,0,7,0\r\nJava-Linear-Algebra,linalg,MatrixProperties,2330,18,214,0,291,6,149,3,42,3\r\nJava-Linear-Algebra,linalg,Decompose,127,0,16,0,28,0,19,0,11,0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/jacoco.csv b/target/site/jacoco/jacoco.csv
--- a/target/site/jacoco/jacoco.csv	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/target/site/jacoco/jacoco.csv	(date 1648105701898)
@@ -1,20 +1,19 @@
 GROUP,PACKAGE,CLASS,INSTRUCTION_MISSED,INSTRUCTION_COVERED,BRANCH_MISSED,BRANCH_COVERED,LINE_MISSED,LINE_COVERED,COMPLEXITY_MISSED,COMPLEXITY_COVERED,METHOD_MISSED,METHOD_COVERED
 Java-Linear-Algebra,linalg.complex_number,CNumber,893,106,107,3,160,28,103,5,48,5
 Java-Linear-Algebra,linalg.util,StringUtils,9,48,2,6,3,9,3,4,1,2
-Java-Linear-Algebra,linalg.util,MathUtil,15,0,0,0,3,0,3,0,3,0
 Java-Linear-Algebra,linalg.util,Token,24,43,3,5,6,10,5,7,2,6
 Java-Linear-Algebra,linalg.util,ShapeLexer,129,0,30,0,37,0,18,0,3,0
 Java-Linear-Algebra,linalg.util,LinAlgArrayUtils,573,29,68,4,97,5,52,3,18,1
-Java-Linear-Algebra,linalg.util,NumberLexer,133,142,33,29,34,39,24,10,1,2
+Java-Linear-Algebra,linalg.util,NumberLexer,113,142,31,29,29,39,22,10,0,2
 Java-Linear-Algebra,linalg.util,ExampleMatrices,900,0,0,0,19,0,2,0,2,0
 Java-Linear-Algebra,linalg.util,Parser,128,90,11,7,29,23,10,2,2,1
-Java-Linear-Algebra,linalg.util,Lexer,13,49,1,7,5,11,3,7,2,4
 Java-Linear-Algebra,linalg.util,FileManager,247,0,16,0,49,0,12,0,4,0
+Java-Linear-Algebra,linalg.util,Lexer,13,49,1,7,5,11,3,7,2,4
 Java-Linear-Algebra,linalg,QRDecomposition,1049,0,18,0,79,0,14,0,5,0
-Java-Linear-Algebra,linalg,SchurDecomposition,610,0,12,0,59,0,9,0,3,0
-Java-Linear-Algebra,linalg,MatrixOperations,2309,0,172,0,284,0,127,0,41,0
-Java-Linear-Algebra,linalg,MatrixManipulations,1856,0,146,0,268,0,113,0,40,0
+Java-Linear-Algebra,linalg,SchurDecomposition,368,0,12,0,55,0,8,0,2,0
+Java-Linear-Algebra,linalg,MatrixOperations,2093,0,172,0,282,0,127,0,41,0
 Java-Linear-Algebra,linalg,LUDecomposition,544,0,37,0,98,0,28,0,8,0
+Java-Linear-Algebra,linalg,MatrixManipulations,1884,0,148,0,272,0,115,0,41,0
 Java-Linear-Algebra,linalg,PrintOptions,7,9,0,0,2,4,1,1,1,1
 Java-Linear-Algebra,linalg,SingularValueDecomposition,371,0,0,0,24,0,3,0,3,0
 Java-Linear-Algebra,linalg,MatrixChecks,47,0,8,0,12,0,6,0,2,0
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"Java-Linear-Algebra-v0.0.1-beta:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7072a60c-bdbe-44dc-912a-0b1b7f9f3af3\" name=\"Changes\" comment=\"Added extend method to MatrixManipulations\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/MatrixProperties.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/linalg/MatrixProperties.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/Vector.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/linalg/Vector.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenRunner\">\r\n    <option name=\"delegateBuildToMaven\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1yc8grbYeBrYoZturjsTdZ94eiV\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Artifacts\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15280464\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.1743421\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.maven.runner\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.SchurDecomposition\">\r\n    <configuration name=\"MatrixManipulations\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"linalg.MatrixManipulations\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"linalg.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SchurDecomposition\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"linalg.SchurDecomposition\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"linalg.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Temp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Temp\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Run All Tests\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\" sample_coverage=\"false\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"linalg\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <dir value=\"$PROJECT_DIR$/../JML/src/test/java\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SchurDecomposition\" />\r\n        <item itemvalue=\"Application.Temp\" />\r\n        <item itemvalue=\"Application.MatrixManipulations\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7072a60c-bdbe-44dc-912a-0b1b7f9f3af3\" name=\"Changes\" comment=\"\" />\r\n      <created>1632539632382</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1632539632382</updated>\r\n      <workItem from=\"1632539633669\" duration=\"66000\" />\r\n      <workItem from=\"1632539702223\" duration=\"1530000\" />\r\n      <workItem from=\"1632796311477\" duration=\"1142000\" />\r\n      <workItem from=\"1632804621813\" duration=\"1949000\" />\r\n      <workItem from=\"1632853984296\" duration=\"604000\" />\r\n      <workItem from=\"1633560686654\" duration=\"1378000\" />\r\n      <workItem from=\"1633619129483\" duration=\"15000\" />\r\n      <workItem from=\"1633814089150\" duration=\"618000\" />\r\n      <workItem from=\"1634341044636\" duration=\"1183000\" />\r\n      <workItem from=\"1634342400536\" duration=\"264000\" />\r\n      <workItem from=\"1634604329967\" duration=\"4002000\" />\r\n      <workItem from=\"1634926319012\" duration=\"15000\" />\r\n      <workItem from=\"1635100619572\" duration=\"7340000\" />\r\n      <workItem from=\"1635280770365\" duration=\"1759000\" />\r\n      <workItem from=\"1635283112110\" duration=\"877000\" />\r\n      <workItem from=\"1637537007419\" duration=\"158000\" />\r\n      <workItem from=\"1637705135001\" duration=\"600000\" />\r\n      <workItem from=\"1637769778469\" duration=\"2208000\" />\r\n      <workItem from=\"1637876727416\" duration=\"750000\" />\r\n      <workItem from=\"1637963874808\" duration=\"16000\" />\r\n      <workItem from=\"1640365654234\" duration=\"1264000\" />\r\n      <workItem from=\"1640565431424\" duration=\"849000\" />\r\n      <workItem from=\"1640751458485\" duration=\"3619000\" />\r\n      <workItem from=\"1642820072823\" duration=\"991000\" />\r\n      <workItem from=\"1643323926454\" duration=\"4059000\" />\r\n      <workItem from=\"1643419483786\" duration=\"9000\" />\r\n      <workItem from=\"1643423209754\" duration=\"118000\" />\r\n      <workItem from=\"1643426565017\" duration=\"119000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Add Jar for Release\">\r\n      <created>1632540231649</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1632540231649</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Add Jar for Release\">\r\n      <created>1632540703641</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1632540703641</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Bug Fixes. Added matrix constructor tests.\">\r\n      <created>1632804759524</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1632804759524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Bug Fixes.\">\r\n      <created>1633561427757</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1633561427757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Bug Fixes.\">\r\n      <created>1633562184555</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1633562184555</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Bug Fixes.\">\r\n      <created>1633619134302</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1633619134302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634342155258</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634342155258</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634342642017</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634342642017</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634604808227</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634604808227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634604904987</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634604904987</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1635104552927</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1635104552927</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1635282493022</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1635282493022</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1635282526609</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1635282526609</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1640565882552</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640565882552</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1640565891492</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640565891492</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Add Jar for Release\" />\r\n    <MESSAGE value=\"Bug Fixes. Added matrix constructor tests.\" />\r\n    <MESSAGE value=\"Bug Fixes. New Javadoc.\" />\r\n    <MESSAGE value=\"Bug Fixes.\" />\r\n    <MESSAGE value=\"Added extend method to MatrixManipulations\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added extend method to MatrixManipulations\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Java_Linear_Algebra$Run_All_Tests.ic\" NAME=\"Run All Tests Coverage Results\" MODIFIED=\"1632796824493\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"true\" />\r\n    <SUITE FILE_PATH=\"coverage/Java_Linear_Algebra$Run_All_Tests.exec\" NAME=\"Run All Tests Coverage Results\" MODIFIED=\"1632796540094\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"jacoco\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f8b8ff5038c018fd8f4e4775c8c9678097249cd7)
+++ b/.idea/workspace.xml	(date 1648105708242)
@@ -10,9 +10,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="7072a60c-bdbe-44dc-912a-0b1b7f9f3af3" name="Changes" comment="Added extend method to MatrixManipulations">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/MatrixProperties.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/MatrixProperties.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/Vector.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/Vector.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/MatrixOperations.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/MatrixOperations.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -43,12 +41,13 @@
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
     <property name="project.structure.last.edited" value="Artifacts" />
     <property name="project.structure.proportion" value="0.15280464" />
     <property name="project.structure.side.proportion" value="0.1743421" />
     <property name="settings.editor.selected.configurable" value="reference.settings.project.maven.runner" />
   </component>
-  <component name="RunManager" selected="Application.SchurDecomposition">
+  <component name="RunManager" selected="Application.MatrixOperations">
     <configuration name="MatrixManipulations" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="linalg.MatrixManipulations" />
       <module name="Java-Linear-Algebra" />
@@ -62,6 +61,19 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="MatrixOperations" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="linalg.MatrixOperations" />
+      <module name="Java-Linear-Algebra" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="linalg.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="SchurDecomposition" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="linalg.SchurDecomposition" />
       <module name="Java-Linear-Algebra" />
@@ -96,6 +108,7 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.MatrixOperations" />
         <item itemvalue="Application.SchurDecomposition" />
         <item itemvalue="Application.Temp" />
         <item itemvalue="Application.MatrixManipulations" />
@@ -260,7 +273,6 @@
         </entry>
       </map>
     </option>
-    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Add Jar for Release" />
@@ -271,7 +283,7 @@
     <option name="LAST_COMMIT_MESSAGE" value="Added extend method to MatrixManipulations" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/Java_Linear_Algebra$Run_All_Tests.exec" NAME="Run All Tests Coverage Results" MODIFIED="1632796540094" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="jacoco" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="true" />
     <SUITE FILE_PATH="coverage/Java_Linear_Algebra$Run_All_Tests.ic" NAME="Run All Tests Coverage Results" MODIFIED="1632796824493" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="true" />
-    <SUITE FILE_PATH="coverage/Java_Linear_Algebra$Run_All_Tests.exec" NAME="Run All Tests Coverage Results" MODIFIED="1632796540094" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="jacoco" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="true" />
   </component>
 </project>
\ No newline at end of file
