Index: src/main/java/linalg/MatrixOperations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\nimport linalg.concurrent.ConcurrentMatrixAddition;\r\n\r\n/**\r\n * This interface provides several methods useful for matrix operations.\r\n * \r\n * @author Jacob Watters\r\n */\r\ninterface MatrixOperations {\r\n\r\n\r\n\t/**\r\n\t * Performs matrix addition on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to add to the instance matrix\r\n\t * @return result of matrix addition\r\n\t */\r\n\t default Matrix add(Matrix B) {\r\n\t\t Matrix A = (Matrix) this;\r\n\t\t Matrix sum;\r\n\r\n\t\t CNumber[][] C = new CNumber[A.m][A.n];\r\n\t\t MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\r\n\t\t if((A.m > 1200 && A.n > 1200) || A.m > 80000 || A.n > 80000) {\r\n\r\n\t\t\t // Use concurrent algorithm.\r\n\t\t\t ConcurrentMatrixAddition adder = new ConcurrentMatrixAddition(A, B);\r\n\t\t\t sum = adder.add();\r\n\r\n\t\t } else {\r\n\r\n\t\t\t // Use standard algorithm\r\n\t\t\t for(int i=0; i<A.m; i++) {\r\n\t\t\t\t for(int j=0; j<A.n; j++) {\r\n\t\t\t\t\t if(A.entries[i][j].isReal() && B.entries[i][j].isReal()) {\r\n\t\t\t\t\t\t C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,\r\n\t\t\t\t\t\t\t\t 0);\r\n\t\t\t\t\t } else {\r\n\t\t\t\t\t\t C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,\r\n\t\t\t\t\t\t\t\t A.entries[i][j].im + B.entries[i][j].im);\r\n\t\t\t\t\t }\r\n\t\t\t\t }\r\n\t\t\t }\r\n\r\n\t\t\t sum = new Matrix(C);\r\n\t\t }\r\n\r\n\t\t return sum;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds the value of a to all entries of matrix.\r\n\t * @param a Value to add to matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix add(double a) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] C = new CNumber[A.m][A.n];\r\n\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC[i][j] = new CNumber(A.entries[i][j].re + a, A.entries[i][j].im);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Matrix(C);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Performs matrix subtraction on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to subtract to the instance matrix\r\n\t * @return result of matrix subtraction\r\n\t */\r\n\t default Matrix sub(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] C = new CNumber[A.m][A.n];\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC[i][j] = new CNumber(A.entries[i][j].re - B.entries[i][j].re,\r\n\t\t\t\t\t\tA.entries[i][j].im - B.entries[i][j].im);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(C);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Subtracts the value of a from all entries of matrix.\r\n\t * @param a Value to subtract from matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix sub(double a) {\r\n\t\t return this.add(-a);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs matrix multiplication on two matrices. The instance matrix\r\n\t * must have the same number of columns as the rows of B.\r\n\t * \r\n\t * If the instance matrix is a kxm matrix and B is a \r\n\t * m x n matrix then the result will be a k x n matrix.\r\n\t * \r\n\t * @param B - matrix to multiply to the instance matrix\r\n\t * @return result of matrix multiplication\r\n\t */\r\n\t default Matrix mult(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\r\n\t\tif(!MatrixComparisons.matMultCheck(A, B)) {\r\n\t\t\tthrow new IllegalArgumentException(\"Number of columns in first matrix must match \\n\"\r\n\t\t\t\t\t+ \"number of rows in second matrix but got \" + A.shape() + \" and \" + B.shape() + \".\");\r\n\t\t}\r\n\r\n\t\tMatrix product;\r\n\r\n\t\tif(A.n >= 250 && A.m >= 250 || A.m >= 1000 || A.n >= 1000) {\r\n\t\t\tproduct = MatrixMultiplicationAlgorithms.concurrent(A, B);\r\n\t\t} else {\r\n\t\t\tproduct = MatrixMultiplicationAlgorithms.standard(A, B);\r\n\t\t}\r\n\r\n\t\treturn product;\r\n\t}\r\n\r\n\r\n\t// TODO: Add method for Matrix vector multiplication i.e. mult(Vector b) to compute the matrix multiplication of a\r\n\t//\t\tmatrix A and a column vector b.\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise multiplication of two matrices.\r\n\t * \r\n\t * @throws IllegalArgumentException If matrices do not have the same dimension.\r\n\t * @param B - matrix to multiply element-wise to this matrix.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemMult(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] C = new CNumber[A.m][A.n];\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\r\n\t\t\t\tC[i][j] = new CNumber(A.entries[i][j].re*B.entries[i][j].re - A.entries[i][j].im*B.entries[i][j].im,\r\n\t\t\t\t\t\tA.entries[i][j].re*B.entries[i][j].im + A.entries[i][j].im*B.entries[i][j].re);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(C);\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply this matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\tdefault Matrix scalMult(double factor) {\r\n\t\treturn this.scalMult(new CNumber(factor));\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\t default Matrix scalMult(CNumber factor) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] result = new CNumber[A.m][A.n];\r\n\t\t\r\n\t\tfor(int i = 0; i < A.m; i++) {\r\n\t\t\tfor(int j = 0; j <  A.n; j++) {\r\n\t\t\t\tresult[i][j] = new CNumber(A.entries[i][j].re*factor.re - A.entries[i][j].im*factor.im,\r\n\t\t\t\t\t\tA.entries[i][j].re*factor.im + A.entries[i][j].im*factor.re);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(result);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise division on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to divide element-wise the instance matrix with.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemDiv(Matrix B) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] C = new CNumber[A.m][A.n];\r\n\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tC[i][j] = new CNumber((A.entries[i][j].re*B.entries[i][j].re + A.entries[i][j].im*B.entries[i][j].im) /\r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im),\r\n\r\n\t\t\t\t\t\t\t\t(A.entries[i][j].im*B.entries[i][j].re - A.entries[i][j].re*B.entries[i][j].im) /\r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im)\r\n\t\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(C);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(double divisor) {\r\n\t\tdouble factor = 1/divisor;\r\n\t\treturn this.scalMult(new CNumber(factor));\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(CNumber divisor) {\r\n\t\tCNumber factor = CNumber.divide(CNumber.ONE, divisor);\r\n\t\treturn this.scalMult(factor);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Computes the Frobenius inner product of two matrices A and B, {@code <A, B>}<sub>F</sub>.\r\n\t * \r\n\t * @param B - Second matrix for the Frobenius inner product.\r\n \t * @return the Frobenius inner product.\r\n\t */\r\n\t default CNumber fip(Matrix B) {\r\n\t\treturn this.mult(B).tr();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix direct sum. That is, a block diagonal matrix containing all matrices from a set of matrices.\r\n\t * \r\n\t * @param matrixList - List of matrices from which to compute the matrix direct sum.\r\n\t * @return The result of direct summing the matrices in matrixList to this matrix.\r\n\t */\r\n\t default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include \"this\" in the direct sum.\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tint new_m = A.m, new_n = A.n,\r\n\t\t\tcurrent_m = 0, current_n = 0;\r\n\t\t\r\n\t\tfor(int i=0; i<matrixList.length; i++) {\t\t\t\r\n\t\t\tnew_m += matrixList[i].m;\r\n\t\t\tnew_n += matrixList[i].n;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tMatrix directSum = new Matrix(new_m, new_n);\r\n\t\t\r\n\t\tfor(int i=-1; i<matrixList.length; i++) {\r\n\t\t\tif(i==-1) {\r\n\t\t\t\tdirectSum.setSlice(current_m, current_n, A);\r\n\t\t\t\tcurrent_m += A.m;\r\n\t\t\t\tcurrent_n += A.n;\r\n\t\t\t} else {\r\n\t\t\t\tdirectSum.setSlice(current_m, current_n, matrixList[i]);\r\n\t\t\t\tcurrent_m += matrixList[i].m;\r\n\t\t\t\tcurrent_n += matrixList[i].n;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn directSum;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes element wise square root of the matrix. All square roots are the positive root or, in\r\n\t * the case of complex entries, the root with positive real part.\r\n\t * \r\n\t * @return The element-wise square root of this matrix.\r\n\t */\r\n\t default Matrix sqrt() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] root = new CNumber[A.m][A.n];\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\troot[i][j] = CNumber.sqrt(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(root);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes absolute value, element-wise, of a matrix.\r\n\t * If any of the matrix cells are complex, this will result\r\n\t * in the magnitude of that value.\r\n\t * \r\n\t * @return - element-wise absolute value of matrix.\r\n\t */\r\n\t default Matrix abs() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] abs = new CNumber[A.m][A.n];\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tabs[i][j] = CNumber.abs(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(abs);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as <code> Matrix.T() </code>\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix transpose() {\r\n\t\treturn this.T();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as <code> Matrix.transpose() </code>\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix T() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] At = new CNumber[A.n][A.m];\r\n\t\t\r\n\t    final int BLOCK_SIZE = 16;\r\n\t    \r\n\t    // Compute transpose using blocked algorithm\r\n\t    for(int i = 0; i < A.m; i += BLOCK_SIZE) {\r\n\t        for (int j = 0; j < A.n; j += BLOCK_SIZE) {\r\n\t            // transpose the block beginning at [i,j]\r\n\t            for (int k = i; k < i + BLOCK_SIZE && k < A.m; ++k) {\r\n\t                for (int l = j; l < j + BLOCK_SIZE && l < A.n; ++l) {\r\n\t                    At[l][k] = A.entries[k][l];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    return new Matrix(At);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Conjugates a matrix element-wise.\r\n\t * \r\n\t * @return Conjugate of matrix\r\n\t */\r\n\t default Matrix conjugate() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tCNumber[][] Ac = new CNumber[A.m][A.n];\r\n\t\t\r\n\t\tfor(int i = 0; i < A.m; i++) {\r\n\t\t\tfor(int j = 0; j < A.n; j++) {\r\n\t\t\t\tAc[i][j] = CNumber.conjugate(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn new Matrix(Ac);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the conjugate transpose of this matrix. \r\n\t * <br><br>\r\n\t * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}. \r\n\t * \r\n\t * @return The conjugate transpose of this matrix.\r\n\t */\r\n\t default Matrix conjT() {\r\n\t\treturn this.conjugate().T();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}. \r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix hermAdjoint() {\r\n\t\treturn this.conjugate().T();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #conjT() conjT()} and {@link #hermAdjoint() hermAdjpint()}.\r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix H() {\r\n\t\treturn this.conjugate().T();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix using reccurisive definition. This method exists\r\n\t * for computing the determinant of non-real matrices.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detRec(Matrix A) {\r\n\t\tCNumber value = CNumber.ZERO;\r\n\t\t\r\n\t\tif(A.m == 1 && A.n == 1) { // Then we simply have a 1x1 matrix.\r\n\t\t\treturn A.entries[0][0];\r\n\t\t}\r\n\t\telse if(A.m == 2 && A.n == 2) { // Then we have a 2x2 matrix, which is the base case\r\n\t\t\tCNumber a = A.entries[0][0];\r\n\t\t\tCNumber b = A.entries[0][1];\r\n\t\t\tCNumber c = A.entries[1][0];\r\n\t\t\tCNumber d = A.entries[1][1];\r\n\t\t\t\r\n\t\t\tvalue = CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));\r\n\t\t} \r\n\t\telse {\r\n\t\t\tfor(int j = 0; j < A.n; j++) {\r\n\t\t\t\tMatrix newA = A.removeRow(0).removeCol(j);\r\n\t\t\t\t\r\n\t\t\t\tCNumber num = new CNumber(Math.pow(-1, j));\r\n\t\t\t\tnum = CNumber.multiply(num, A.entries[0][j]);\r\n\t\t\t\t\r\n\t\t\t\tvalue = CNumber.add(value, CNumber.multiply(detRec(newA), num));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of real matrix using QR decomposition.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of.\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detQR(Matrix A) {\r\n\t\tCNumber detQ, detR = CNumber.ONE;\r\n\t\tMatrix[] QRh = Decompose.QR(A, true);\r\n\t\t\r\n\t\tdetQ = new CNumber(Math.pow(-1, QRh[2].entries[0][0].getReal()));\r\n\t\t\r\n\t\tfor(int i = 0; i<QRh[1].n; i++) {\r\n\t\t\tdetR = CNumber.multiply(detR, QRh[1].entries[i][i]);\r\n\t\t}\r\n\t\t\r\n\t\treturn CNumber.multiply(detR, detQ);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix. If the matrix has\r\n\t * any complex entries, this may be a complex value.\r\n\t * Note: Currently this method only works for real matirces.\r\n\t * \r\n\t * @return determinant of matrix.\r\n\t */\r\n\t default CNumber det() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!A.isSquare()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Matrix must be square but got shape \" + A.shape);\r\n\t\t}\r\n\t\t\r\n\t\tif(A.m == 2 && A.n == 2) { // Then we have a 2x2 matrix, which we can directly compute\r\n\t\t\tCNumber a = A.entries[0][0];\r\n\t\t\tCNumber b = A.entries[0][1];\r\n\t\t\tCNumber c = A.entries[1][0];\r\n\t\t\tCNumber d = A.entries[1][1];\r\n\t\t\t\r\n\t\t\treturn CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));\r\n\t\t}\r\n\t\t\r\n\t\treturn detQR(A);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along rows. Both matrices must have the same number of columns\r\n\t * Also see {@link #stack(Matrix, int) stack(Matrix B, int axis)}\r\n\t * \r\n\t * @param B\r\n\t * @return\r\n\t */\r\n\t default Matrix stack(Matrix B) {\r\n\t\treturn this.stack(B, 0);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along specified axis. Axis 0 will stack matrices along the rows. Axis 1 will\r\n\t * stack matrices along columns.\r\n\t * \r\n\t * Note: To stack matrices along axis 0 they must have the same number of columns.\r\n\t * To stack matrices along axis 1 they must have the same number of rows.\r\n\t * \r\n\t * @param B - Matrix to stack\r\n\t * @param axis - Axis along which to stack matrices.\r\n\t * @return Returns A and B stacked along specified axis.\r\n\t */\r\n\t default Matrix stack(Matrix B, int axis) {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix result = null;\r\n\t\t\r\n\t\tif(axis == 0) { // Stack on rows\r\n\t\t\tif(A.entries[0].length != B.entries[0].length) { // Ensure matrices have same number or columns\r\n\t\t\t\tthrow new IllegalArgumentException(\"Must have same number of columns but \"\r\n\t\t\t\t\t\t+ \"got \" + A.entries[0].length + \" and \" + B.entries[0].length);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult = new Matrix(A.entries.length+B.entries.length, A.entries[0].length);\r\n\t\t\t\r\n\t\t\tfor(int i = 0; i < result.entries.length; i++) {\r\n\t\t\t\tfor(int j = 0; j < result.entries[0].length; j++) {\r\n\t\t\t\t\tif(i < A.entries.length) { // Then copy from A.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = B.entries[i-A.entries.length][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t\telse if(axis == 1) { // Stack on cols\r\n\t\t\tif(A.entries.length != B.entries.length) { // Ensure matrices have same number or rows\r\n\t\t\t\tthrow new IllegalArgumentException(\"Must have same number of rows but \"\r\n\t\t\t\t\t\t+ \"got \" + A.entries.length + \" and \" + B.entries.length);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult = new Matrix(A.entries.length, A.entries[0].length + B.entries[0].length);\r\n\t\t\t\r\n\t\t\tfor(int i = 0; i < result.entries.length; i++) {\r\n\t\t\t\tfor(int j = 0; j < result.entries[0].length; j++) {\r\n\t\t\t\t\tif(j < A.entries[0].length) { // Then copy from A.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n\t\t\t\t\t\tresult.entries[i][j] = B.entries[i][j-A.entries[0].length];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new IllegalArgumentException(\"axis must be 0 or 1 but got \" + axis);\r\n\t\t}\t\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Augments two matrices. This is the same as {@link #stack(Matrix, int) stack(B, 1)}\r\n\t * \r\n\t * @param B - Matrix to augment to this matrix.\r\n\t * @return The matrix B augmented to this matrix.\r\n\t */\r\n\t default Matrix augment(Matrix B) {\r\n\t\treturn this.stack(B, 1);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes row-echelon form of matrix. This will be an upper-triangular matrix.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in row-echelon form if:\r\n\t *  - The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *  - The pivot of a nonzero row is always strictly to \r\n\t *    the right of the leading coefficient of the row above it.\r\n\t *  - Rows with all zero elements, if any, are below rows having a non-zero element.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row equivalent matrix in row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * Also see <code>{@link #rref() rref()}</code> for reduced row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix\r\n\t */\r\n\t default Matrix ref() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\tCNumber m, scale;\r\n\t\t\r\n\t\tint pivotRow = 0,\r\n\t\t\tpivotCol = 0;\r\n\t\t\r\n\t\twhile(pivotRow<A.m && pivotCol<A.n) {\r\n\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) { // Then we can make the pivot one.\r\n\t\t\t\t scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);\r\n\t\t\t\t \r\n\t\t\t\t for(int k=pivotCol; k<A.n; k++) { // scale the whole row\r\n\t\t\t\t\t A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);\r\n\t\t\t\t }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(int i=pivotRow+1; i<A.m; i++) {\r\n\t\t\t\tm = A.entries[i][pivotCol];\r\n\r\n\t\t\t\tfor(int k=pivotCol; k<A.n; k++) {\r\n\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], \r\n\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * This insures the entries to the left of the pivot are zero. \r\n\t\t\t\t * They may be a very small (in absolute value) non-zero value\r\n\t\t\t\t * resulting from errors in floating point arithmetic.\r\n\t\t\t\t */\r\n\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpivotRow++;\r\n\t\t\tpivotCol++;\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in reduced row-echelon form if:<br>\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * @param partialPivoting - Falg for use of partial pivoting.\r\n\t * <pre>\r\n\t *  - If true then the rref will be computed using partial pivoting.\r\n\t * \t    ~ This is equivalent to the method {@link #rref() rref()}.\r\n\t *  - If false then the rref will be computed WITHOUT using partial pivoting.\r\n\t * </pre>\r\n\t * @return\r\n\t */\r\n\t default Matrix rref(boolean partialPivoting) {\r\n\t\tif(partialPivoting) return rref();\r\n\t\telse return rrefNoPivot();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. This is done using partial pivoting.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in reduced row-echelon form if:<br>\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * Also see <code>{@link #ref() ref()}</code> for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\t default Matrix rref() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\tCNumber mult, scale, currentMax;\r\n\t\tint maxIndex;\r\n\t\t\r\n\t\tint pivotRow = 0,\r\n\t\t\tpivotCol = 0;\r\n\t\t\r\n\t\twhile(pivotRow<A.m && pivotCol<A.n) {\r\n\t\t\tmaxIndex = pivotRow;\r\n\t\t\tcurrentMax = A.entries[pivotRow][pivotCol];\r\n\t\t\t\r\n\t\t\tfor(int i=pivotRow; i<A.m; i++) { // Find the maximum entry in the pivot column (at or below the pivot ).\r\n\t\t\t\tif(A.entries[i][pivotCol].nearZero(1.0E-12)) { \r\n\t\t\t\t\t\r\n\t\t\t\t\t/* \r\n\t\t\t\t\t * If a number is very close to zero, assume it is supposed to be zero.\r\n\t\t\t\t\t * This protects against trying to manipulate a column which\r\n\t\t\t\t\t * is already in the correct form.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;\r\n\t\t\t\t}\r\n\t\t\t\telse if(A.entries[i][pivotCol].compareTo(currentMax) > 0) {\r\n\t\t\t\t\tmaxIndex = i;\r\n\t\t\t\t\tcurrentMax = A.entries[i][pivotCol];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!A.entries[maxIndex][pivotCol].equals(CNumber.ZERO)) { // Check that the maximum absolute value is not zero.\r\n\t\t\t\tif(pivotRow != maxIndex) {\r\n\t\t\t\t\tA = A.swapRows(pivotRow, maxIndex); // Make the row with the largest value in the pivot column the pivot for this row.\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);\r\n\t\t\t\t \r\n\t\t\t\tfor(int k=pivotCol; k<A.n; k++) { // scale the whole row so that the pivot is 1\r\n\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\t\t\tmult = A.entries[i][pivotCol];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(pivotRow != i) {\r\n\t\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(int k=pivotCol+1; k<A.n; k++) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tCNumber value = CNumber.subtract(A.entries[i][k], \r\n\t\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], mult));\r\n\t\t\t\t\t\t\tA.entries[i][k] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tpivotRow++;\r\n\t\t\t\tpivotCol++;\r\n\t\t\t}\r\n\t\t\telse { // Then we do not have a pivot for this column (i.e. the column is all zeros).\r\n\t\t\t\tpivotCol++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. \r\n\t * This is done WITHOUT using partial pivoting.<br>\r\n\t * \r\n\t * <pre>\r\n\t * A matrix is in reduced row-echelon form if:<br>\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * </pre>\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>\r\n\t * \r\n\t * Also see <code>{@link #ref() ref()}</code> for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\tdefault Matrix rrefNoPivot() {\r\n\t\tMatrix A = ((Matrix) this).copy();\r\n\t\tCNumber m, scale;\r\n\t\t\r\n\t\tint pivotRow = 0,\r\n\t\t\tpivotCol = 0;\r\n\t\t\r\n\t\twhile(pivotRow<A.m && pivotCol<A.n) {\r\n\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) {\r\n\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);\r\n\t\t\t\t \r\n\t\t\t\tfor(int k=pivotCol; k<A.n; k++) { // scale the whole row\r\n\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); \r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\t\tm = A.entries[i][pivotCol];\r\n\t\t\t\t\r\n\t\t\t\tif(pivotRow != i) {\r\n\t\t\t\t\tfor(int k=pivotCol; k<A.n; k++) {\r\n\t\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], \r\n\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpivotRow++;\r\n\t\t\tpivotCol++;\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced extended row-echelon form of matrix. That is, a Matrix with\r\n\t * the same number of rows is {@link #augment(Matrix) augmented} with this matrix and\r\n\t * then this augmented matrix is put into {@link #rref() reduced row-echelon form}.\r\n\t * \r\n\t * @return Returns extended row-echelon form of this matrix.\r\n\t */\r\n\t default Matrix erref() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix I = Matrix.I(A.m);\r\n\t\tMatrix Aug = A.augment(I);\r\n\t\t\r\n\t\treturn Aug.rref();\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Computes the trace of square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #tr() tr()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber trace() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!A.isSquare()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Expecting matrix to be square but got \" + A.shape);\r\n\t\t}\r\n\t\t\r\n\t\tCNumber result = A.entries[0][0];\r\n\t\t\r\n\t\tfor(int i = 1; i < A.n; i++) {\r\n\t\t\tresult = CNumber.add(result, A.entries[i][i]);\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t} \r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the trace of a square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * <br><br>\r\n\t * This method is the same as {@link #trace() trace()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber tr() {\r\n\t\treturn this.trace();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space generated (or spanned) by its columns.\r\n\t * This is always an integer.\r\n\t * This corresponds to the maximal number of linearly independent columns of A. \r\n\t * This, in turn, is identical to the dimension of the vector space spanned by its rows\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t// TODO: Should be switched to rank revealing QR decomposition as it is more numerically stable.\r\n\t default int rank() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\tMatrix rrefA = A.rref();\r\n\t\tint rank = A.m;\r\n\t\t\r\n\t\tfor(int i=rrefA.m-1; i>=0; i--) {\r\n\t\t\tif(rrefA.getRowAsVector(i).isZero()) {\r\n\t\t\t\trank--;\t\t\t\r\n\t\t\t} else { \r\n\t\t\t\t// Then we have no more zero rows as rrefA is in reduced row echelon form.\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn rank;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space spanned by the nullspace of this matrix.\r\n\t * The nullify is always an integer.\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t default int nullity() {\r\n\t\tint rank = this.rank();\r\n\t\treturn ((Matrix) this).m - rank;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A<sup>-1</sup> satisfying AA<sup>-1</sup>=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inverse() {\r\n\t\tMatrix A = (Matrix) this;\r\n\t\t\r\n\t\tif(!A.isSingular()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Matrix is singular.\");\r\n\t\t}\r\n\r\n\t\tMatrix[] QR = Decompose.QR(A); // Compute the QR decomposition of A. This will be used to compute the inverse.\r\n\t\tCNumber detR = CNumber.ONE;\r\n\t\t\r\n\t\tfor(int i = 0; i<QR[1].n; i++) { // Computing the determinant of R\r\n\t\t\tdetR = CNumber.multiply(detR, QR[1].entries[i][i]);\r\n\t\t}\r\n\t\t\r\n\t\tif(CNumber.round(detR, 10).re == 0) {\r\n\t\t\t/* Then we know the matrix is singular.\r\n\t\t\t * We know this by exploiting properties of the orthogonal matrix Q and the upper triangular matrix R.\r\n\t\t\t * The determinant of an orthogonal matrix is either -1 or 1. The determinant of an upper triangular matrix R is the product\r\n\t\t\t * of the diagonals. Since A=QR det(A) = det(QR) = det(Q)*det(R). So if the determinant of R is zero, then the matrix A must be singular.\r\n\t\t\t * \r\n\t\t\t * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that, \r\n\t\t\t * so it would be redundant to call the isSingular() method and recompute the QR decomposition again.\r\n\t\t\t */\r\n\t\t\tthrow new IllegalArgumentException(\"Matrix is singular, thus can not be inverted.\");\r\n\t\t}\r\n\t\t\r\n\t\t// Here we compute and return A^-1 = (R^-1)*(Q^-1)\r\n\t\treturn inverseTriU(QR[1]).mult(QR[0].H());\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A<sup>-1</sup> satisfying AA<sup>-1</sup>=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inv() {\r\n\t\treturn this.inverse();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Helper method to invert an upper triangular matrix. <br>\r\n\t * We can compute the inverse of an n-by-n upper triangular matrix U by solving the n systems...<br><br>\r\n\t * \r\n\t * Ux=I<sub>i</sub><br>\r\n\t * \r\n\t * where 1<=i<=n, I is the n-by-n identity matrix, I<sub>i</sub> is the ith column of I.<br><br>\r\n\t * \r\n\t * Each solution becomes a column in the inverse <sup>-1</sub>.\r\n\t * Because U is upper triangular, we can solve these n systems using backsolve.\r\n\t * \r\n\t * @param U - U is a square upper triangular matrix\r\n\t * @return Returns the inverse of U, denoted U<sup>-1</sub>\r\n\t */\r\n\tstatic Matrix inverseTriU(Matrix U) {\r\n\t\tMatrix Uinv = new Matrix(U.m, U.m);\r\n\t\tMatrix I = Matrix.I(U.m);\r\n\t\t\r\n\t\tif(!U.isTriU()) {\r\n\t\t\tthrow new IllegalArgumentException(\"U must be upper triangular.\");\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i=0; i<U.m; i++)  {\r\n\t\t\t// U is upper triangular, so to solve the system we simply need to use back-solve function.\r\n\t\t\tUinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i); \r\n\t\t}\r\n\t\t\r\n\t\treturn Uinv;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new matrix that contains the reciprocals of this matrix\r\n\t * \r\n\t * @return new matrix that contains the reciprocals of this matrix\r\n\t */\r\n\t default Matrix recep() {\r\n\t\tMatrix A = new Matrix((Matrix) this).copy();\r\n\t\t\r\n\t\tfor(int i=0; i<A.m; i++) {\r\n\t\t\tfor(int j=0; j<A.n; j++) {\r\n\t\t\t\tA.entries[i][j] = CNumber.inv(A.entries[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn A;\r\n\t}\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/linalg/MatrixOperations.java b/src/main/java/linalg/MatrixOperations.java
--- a/src/main/java/linalg/MatrixOperations.java	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/src/main/java/linalg/MatrixOperations.java	(date 1648106372766)
@@ -5,7 +5,7 @@
 
 /**
  * This interface provides several methods useful for matrix operations.
- * 
+ *
  * @author Jacob Watters
  */
 interface MatrixOperations {
@@ -13,42 +13,42 @@
 
 	/**
 	 * Performs matrix addition on two matrices of the same dimensions.
-	 * 
+	 *
 	 * @param B - matrix to add to the instance matrix
 	 * @return result of matrix addition
 	 */
-	 default Matrix add(Matrix B) {
-		 Matrix A = (Matrix) this;
-		 Matrix sum;
+	default Matrix add(Matrix B) {
+		Matrix A = (Matrix) this;
+		Matrix sum;
 
-		 CNumber[][] C = new CNumber[A.m][A.n];
-		 MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);
+		CNumber[][] C = new CNumber[A.m][A.n];
+		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);
 
-		 if((A.m > 1200 && A.n > 1200) || A.m > 80000 || A.n > 80000) {
+		if((A.m > 1200 && A.n > 1200) || A.m > 80000 || A.n > 80000) {
 
-			 // Use concurrent algorithm.
-			 ConcurrentMatrixAddition adder = new ConcurrentMatrixAddition(A, B);
-			 sum = adder.add();
+			// Use concurrent algorithm.
+			ConcurrentMatrixAddition adder = new ConcurrentMatrixAddition(A, B);
+			sum = adder.add();
 
-		 } else {
+		} else {
 
-			 // Use standard algorithm
-			 for(int i=0; i<A.m; i++) {
-				 for(int j=0; j<A.n; j++) {
-					 if(A.entries[i][j].isReal() && B.entries[i][j].isReal()) {
-						 C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,
-								 0);
-					 } else {
-						 C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,
-								 A.entries[i][j].im + B.entries[i][j].im);
-					 }
-				 }
-			 }
+			// Use standard algorithm
+			for(int i=0; i<A.m; i++) {
+				for(int j=0; j<A.n; j++) {
+					if(A.entries[i][j].isReal() && B.entries[i][j].isReal()) {
+						C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,
+								0);
+					} else {
+						C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,
+								A.entries[i][j].im + B.entries[i][j].im);
+					}
+				}
+			}
 
-			 sum = new Matrix(C);
-		 }
+			sum = new Matrix(C);
+		}
 
-		 return sum;
+		return sum;
 	}
 
 
@@ -70,25 +70,25 @@
 		return new Matrix(C);
 	}
 
-	
+
 	/**
 	 * Performs matrix subtraction on two matrices of the same dimensions.
-	 * 
+	 *
 	 * @param B - matrix to subtract to the instance matrix
 	 * @return result of matrix subtraction
 	 */
-	 default Matrix sub(Matrix B) {
+	default Matrix sub(Matrix B) {
 		Matrix A = (Matrix) this;
 		CNumber[][] C = new CNumber[A.m][A.n];
 		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);
-		
+
 		for(int i=0; i<A.m; i++) {
 			for(int j=0; j<A.n; j++) {
 				C[i][j] = new CNumber(A.entries[i][j].re - B.entries[i][j].re,
 						A.entries[i][j].im - B.entries[i][j].im);
 			}
 		}
-		
+
 		return new Matrix(C);
 	}
 
@@ -99,21 +99,21 @@
 	 * @return A new matrix with the value of a added to this matrix.
 	 */
 	default Matrix sub(double a) {
-		 return this.add(-a);
+		return this.add(-a);
 	}
-	
-	
+
+
 	/**
 	 * Performs matrix multiplication on two matrices. The instance matrix
 	 * must have the same number of columns as the rows of B.
-	 * 
-	 * If the instance matrix is a kxm matrix and B is a 
+	 *
+	 * If the instance matrix is a kxm matrix and B is a
 	 * m x n matrix then the result will be a k x n matrix.
-	 * 
+	 *
 	 * @param B - matrix to multiply to the instance matrix
 	 * @return result of matrix multiplication
 	 */
-	 default Matrix mult(Matrix B) {
+	default Matrix mult(Matrix B) {
 		Matrix A = (Matrix) this;
 
 		if(!MatrixComparisons.matMultCheck(A, B)) {
@@ -135,20 +135,20 @@
 
 	// TODO: Add method for Matrix vector multiplication i.e. mult(Vector b) to compute the matrix multiplication of a
 	//		matrix A and a column vector b.
-	
-	
+
+
 	/**
 	 * Performs element-wise multiplication of two matrices.
-	 * 
+	 *
 	 * @throws IllegalArgumentException If matrices do not have the same dimension.
 	 * @param B - matrix to multiply element-wise to this matrix.
 	 * @return result of element-wise matrix multiplication.
 	 */
-	 default Matrix elemMult(Matrix B) {
+	default Matrix elemMult(Matrix B) {
 		Matrix A = (Matrix) this;
 		CNumber[][] C = new CNumber[A.m][A.n];
 		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);
-		
+
 		for(int i=0; i<A.m; i++) {
 			for(int j=0; j<A.n; j++) {
 
@@ -157,89 +157,89 @@
 
 			}
 		}
-		
+
 		return new Matrix(C);
 	}
-	
-	
-	
+
+
+
 	/**
 	 * Performs scalar multiplication of a matrix.
-	 * 
+	 *
 	 * @param factor - value to multiply this matrix by.
 	 * @return The scalar multiplication of the matrix and the factor.
 	 */
 	default Matrix scalMult(double factor) {
 		return this.scalMult(new CNumber(factor));
 	}
-	
-	
+
+
 	/**
 	 * Performs scalar multiplication of a matrix.
-	 * 
+	 *
 	 * @param factor - value to multiply matrix by.
 	 * @return The scalar multiplication of the matrix and the factor.
 	 */
-	 default Matrix scalMult(CNumber factor) {
+	default Matrix scalMult(CNumber factor) {
 		Matrix A = (Matrix) this;
 		CNumber[][] result = new CNumber[A.m][A.n];
-		
+
 		for(int i = 0; i < A.m; i++) {
 			for(int j = 0; j <  A.n; j++) {
 				result[i][j] = new CNumber(A.entries[i][j].re*factor.re - A.entries[i][j].im*factor.im,
 						A.entries[i][j].re*factor.im + A.entries[i][j].im*factor.re);
 			}
 		}
-		
+
 		return new Matrix(result);
 	}
-	
-	
+
+
 	/**
 	 * Performs element-wise division on two matrices of the same dimensions.
-	 * 
+	 *
 	 * @param B - matrix to divide element-wise the instance matrix with.
 	 * @return result of element-wise matrix multiplication.
 	 */
-	 default Matrix elemDiv(Matrix B) {
+	default Matrix elemDiv(Matrix B) {
 		Matrix A = (Matrix) this;
 		CNumber[][] C = new CNumber[A.m][A.n];
 		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);
-		
+
 		for(int i=0; i<A.m; i++) {
 			for(int j=0; j<A.n; j++) {
 				C[i][j] = new CNumber((A.entries[i][j].re*B.entries[i][j].re + A.entries[i][j].im*B.entries[i][j].im) /
-										(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im),
+						(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im),
 
-								(A.entries[i][j].im*B.entries[i][j].re - A.entries[i][j].re*B.entries[i][j].im) /
-										(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im)
-						);
+						(A.entries[i][j].im*B.entries[i][j].re - A.entries[i][j].re*B.entries[i][j].im) /
+								(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im)
+				);
 			}
 		}
-		
+
 		return new Matrix(C);
 	}
-	
-	
+
+
 	/**
 	 * Performs scalar division of this matrix.
-	 * 
+	 *
 	 * @param divisor - value to divide matrix by.
 	 * @return The scalar division of the matrix and the divisor.
 	 */
-	 default Matrix scalDiv(double divisor) {
+	default Matrix scalDiv(double divisor) {
 		double factor = 1/divisor;
 		return this.scalMult(new CNumber(factor));
 	}
-	
-	
+
+
 	/**
 	 * Performs scalar division of this matrix.
-	 * 
+	 *
 	 * @param divisor - value to divide matrix by.
 	 * @return The scalar division of the matrix and the divisor.
 	 */
-	 default Matrix scalDiv(CNumber divisor) {
+	default Matrix scalDiv(CNumber divisor) {
 		CNumber factor = CNumber.divide(CNumber.ONE, divisor);
 		return this.scalMult(factor);
 	}
@@ -247,34 +247,34 @@
 
 	/**
 	 * Computes the Frobenius inner product of two matrices A and B, {@code <A, B>}<sub>F</sub>.
-	 * 
+	 *
 	 * @param B - Second matrix for the Frobenius inner product.
- 	 * @return the Frobenius inner product.
+	 * @return the Frobenius inner product.
 	 */
-	 default CNumber fip(Matrix B) {
+	default CNumber fip(Matrix B) {
 		return this.mult(B).tr();
 	}
-	
-	
+
+
 	/**
 	 * Computes the matrix direct sum. That is, a block diagonal matrix containing all matrices from a set of matrices.
-	 * 
+	 *
 	 * @param matrixList - List of matrices from which to compute the matrix direct sum.
 	 * @return The result of direct summing the matrices in matrixList to this matrix.
 	 */
-	 default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include "this" in the direct sum.
+	default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include "this" in the direct sum.
 		Matrix A = (Matrix) this;
 		int new_m = A.m, new_n = A.n,
-			current_m = 0, current_n = 0;
-		
-		for(int i=0; i<matrixList.length; i++) {			
+				current_m = 0, current_n = 0;
+
+		for(int i=0; i<matrixList.length; i++) {
 			new_m += matrixList[i].m;
 			new_n += matrixList[i].n;
 		}
-		
-		
+
+
 		Matrix directSum = new Matrix(new_m, new_n);
-		
+
 		for(int i=-1; i<matrixList.length; i++) {
 			if(i==-1) {
 				directSum.setSlice(current_m, current_n, A);
@@ -286,155 +286,155 @@
 				current_n += matrixList[i].n;
 			}
 		}
-		
+
 		return directSum;
 	}
-	
-	
+
+
 	/**
 	 * Computes element wise square root of the matrix. All square roots are the positive root or, in
 	 * the case of complex entries, the root with positive real part.
-	 * 
+	 *
 	 * @return The element-wise square root of this matrix.
 	 */
-	 default Matrix sqrt() {
+	default Matrix sqrt() {
 		Matrix A = (Matrix) this;
 		CNumber[][] root = new CNumber[A.m][A.n];
-		
+
 		for(int i=0; i<A.m; i++) {
 			for(int j=0; j<A.n; j++) {
 				root[i][j] = CNumber.sqrt(A.entries[i][j]);
 			}
 		}
-		
+
 		return new Matrix(root);
 	}
-	
-	
+
+
 	/**
 	 * Computes absolute value, element-wise, of a matrix.
 	 * If any of the matrix cells are complex, this will result
 	 * in the magnitude of that value.
-	 * 
+	 *
 	 * @return - element-wise absolute value of matrix.
 	 */
-	 default Matrix abs() {
+	default Matrix abs() {
 		Matrix A = (Matrix) this;
 		CNumber[][] abs = new CNumber[A.m][A.n];
-		
+
 		for(int i=0; i<A.m; i++) {
 			for(int j=0; j<A.n; j++) {
 				abs[i][j] = CNumber.abs(A.entries[i][j]);
 			}
 		}
-		
+
 		return new Matrix(abs);
 	}
-	
-	
+
+
 	/**
 	 * Transposes Matrix. Same as <code> Matrix.T() </code>
-	 * 
+	 *
 	 * @return transpose of matrix
 	 */
-	 default Matrix transpose() {
+	default Matrix transpose() {
 		return this.T();
 	}
-	
-	
-	
+
+
+
 	/**
 	 * Transposes Matrix. Same as <code> Matrix.transpose() </code>
-	 * 
+	 *
 	 * @return transpose of matrix
 	 */
-	 default Matrix T() {
+	default Matrix T() {
 		Matrix A = (Matrix) this;
 		CNumber[][] At = new CNumber[A.n][A.m];
-		
-	    final int BLOCK_SIZE = 16;
-	    
-	    // Compute transpose using blocked algorithm
-	    for(int i = 0; i < A.m; i += BLOCK_SIZE) {
-	        for (int j = 0; j < A.n; j += BLOCK_SIZE) {
-	            // transpose the block beginning at [i,j]
-	            for (int k = i; k < i + BLOCK_SIZE && k < A.m; ++k) {
-	                for (int l = j; l < j + BLOCK_SIZE && l < A.n; ++l) {
-	                    At[l][k] = A.entries[k][l];
-	                }
-	            }
-	        }
-	    }
-	    
-	    return new Matrix(At);
+
+		final int BLOCK_SIZE = 16;
+
+		// Compute transpose using blocked algorithm
+		for(int i = 0; i < A.m; i += BLOCK_SIZE) {
+			for (int j = 0; j < A.n; j += BLOCK_SIZE) {
+				// transpose the block beginning at [i,j]
+				for (int k = i; k < i + BLOCK_SIZE && k < A.m; ++k) {
+					for (int l = j; l < j + BLOCK_SIZE && l < A.n; ++l) {
+						At[l][k] = A.entries[k][l];
+					}
+				}
+			}
+		}
+
+		return new Matrix(At);
 	}
-	
-	
+
+
 	/**
 	 * Conjugates a matrix element-wise.
-	 * 
+	 *
 	 * @return Conjugate of matrix
 	 */
-	 default Matrix conjugate() {
+	default Matrix conjugate() {
 		Matrix A = (Matrix) this;
 		CNumber[][] Ac = new CNumber[A.m][A.n];
-		
+
 		for(int i = 0; i < A.m; i++) {
 			for(int j = 0; j < A.n; j++) {
 				Ac[i][j] = CNumber.conjugate(A.entries[i][j]);
 			}
 		}
-		
+
 		return new Matrix(Ac);
 	}
-	
-	
+
+
 	/**
-	 * Computes the conjugate transpose of this matrix. 
+	 * Computes the conjugate transpose of this matrix.
 	 * <br><br>
-	 * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}. 
-	 * 
+	 * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}.
+	 *
 	 * @return The conjugate transpose of this matrix.
 	 */
-	 default Matrix conjT() {
+	default Matrix conjT() {
 		return this.conjugate().T();
 	}
-	
-	
+
+
 	/**
 	 * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.
 	 * <br><br>
-	 * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}. 
-	 * 
+	 * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}.
+	 *
 	 * @return adjoint of matrix.
 	 */
-	 default Matrix hermAdjoint() {
+	default Matrix hermAdjoint() {
 		return this.conjugate().T();
 	}
-	
-	
+
+
 	/**
 	 * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.
 	 * <br><br>
 	 * This method is the same as {@link #conjT() conjT()} and {@link #hermAdjoint() hermAdjpint()}.
-	 * 
+	 *
 	 * @return adjoint of matrix.
 	 */
-	 default Matrix H() {
+	default Matrix H() {
 		return this.conjugate().T();
 	}
-	
-	
+
+
 	/**
 	 * Computes determinant of matrix using reccurisive definition. This method exists
 	 * for computing the determinant of non-real matrices.
-	 * 
+	 *
 	 * @param A - Matrix to compute determinant of
 	 * @return determinant of matrix A
 	 */
 	static CNumber detRec(Matrix A) {
 		CNumber value = CNumber.ZERO;
-		
+
 		if(A.m == 1 && A.n == 1) { // Then we simply have a 1x1 matrix.
 			return A.entries[0][0];
 		}
@@ -443,106 +443,106 @@
 			CNumber b = A.entries[0][1];
 			CNumber c = A.entries[1][0];
 			CNumber d = A.entries[1][1];
-			
+
 			value = CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));
-		} 
+		}
 		else {
 			for(int j = 0; j < A.n; j++) {
 				Matrix newA = A.removeRow(0).removeCol(j);
-				
+
 				CNumber num = new CNumber(Math.pow(-1, j));
 				num = CNumber.multiply(num, A.entries[0][j]);
-				
+
 				value = CNumber.add(value, CNumber.multiply(detRec(newA), num));
 			}
 		}
-		
+
 		return value;
 	}
-	
-	
+
+
 	/**
 	 * Computes determinant of real matrix using QR decomposition.
-	 * 
+	 *
 	 * @param A - Matrix to compute determinant of.
 	 * @return determinant of matrix A
 	 */
 	static CNumber detQR(Matrix A) {
 		CNumber detQ, detR = CNumber.ONE;
 		Matrix[] QRh = Decompose.QR(A, true);
-		
+
 		detQ = new CNumber(Math.pow(-1, QRh[2].entries[0][0].getReal()));
-		
+
 		for(int i = 0; i<QRh[1].n; i++) {
 			detR = CNumber.multiply(detR, QRh[1].entries[i][i]);
 		}
-		
+
 		return CNumber.multiply(detR, detQ);
 	}
-	
-	
+
+
 	/**
 	 * Computes determinant of matrix. If the matrix has
 	 * any complex entries, this may be a complex value.
 	 * Note: Currently this method only works for real matirces.
-	 * 
+	 *
 	 * @return determinant of matrix.
 	 */
-	 default CNumber det() {
+	default CNumber det() {
 		Matrix A = (Matrix) this;
-		
+
 		if(!A.isSquare()) {
 			throw new IllegalArgumentException("Matrix must be square but got shape " + A.shape);
 		}
-		
+
 		if(A.m == 2 && A.n == 2) { // Then we have a 2x2 matrix, which we can directly compute
 			CNumber a = A.entries[0][0];
 			CNumber b = A.entries[0][1];
 			CNumber c = A.entries[1][0];
 			CNumber d = A.entries[1][1];
-			
+
 			return CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));
 		}
-		
+
 		return detQR(A);
 	}
-	
-	
+
+
 	/**
 	 * Stacks matrices along rows. Both matrices must have the same number of columns
 	 * Also see {@link #stack(Matrix, int) stack(Matrix B, int axis)}
-	 * 
+	 *
 	 * @param B
 	 * @return
 	 */
-	 default Matrix stack(Matrix B) {
+	default Matrix stack(Matrix B) {
 		return this.stack(B, 0);
 	}
-	
-	
+
+
 	/**
 	 * Stacks matrices along specified axis. Axis 0 will stack matrices along the rows. Axis 1 will
 	 * stack matrices along columns.
-	 * 
+	 *
 	 * Note: To stack matrices along axis 0 they must have the same number of columns.
 	 * To stack matrices along axis 1 they must have the same number of rows.
-	 * 
+	 *
 	 * @param B - Matrix to stack
 	 * @param axis - Axis along which to stack matrices.
 	 * @return Returns A and B stacked along specified axis.
 	 */
-	 default Matrix stack(Matrix B, int axis) {
+	default Matrix stack(Matrix B, int axis) {
 		Matrix A = (Matrix) this;
 		Matrix result = null;
-		
+
 		if(axis == 0) { // Stack on rows
 			if(A.entries[0].length != B.entries[0].length) { // Ensure matrices have same number or columns
 				throw new IllegalArgumentException("Must have same number of columns but "
 						+ "got " + A.entries[0].length + " and " + B.entries[0].length);
 			}
-			
+
 			result = new Matrix(A.entries.length+B.entries.length, A.entries[0].length);
-			
+
 			for(int i = 0; i < result.entries.length; i++) {
 				for(int j = 0; j < result.entries[0].length; j++) {
 					if(i < A.entries.length) { // Then copy from A.entries
@@ -552,15 +552,15 @@
 					}
 				}
 			}
-		} 
+		}
 		else if(axis == 1) { // Stack on cols
 			if(A.entries.length != B.entries.length) { // Ensure matrices have same number or rows
 				throw new IllegalArgumentException("Must have same number of rows but "
 						+ "got " + A.entries.length + " and " + B.entries.length);
 			}
-			
+
 			result = new Matrix(A.entries.length, A.entries[0].length + B.entries[0].length);
-			
+
 			for(int i = 0; i < result.entries.length; i++) {
 				for(int j = 0; j < result.entries[0].length; j++) {
 					if(j < A.entries[0].length) { // Then copy from A.entries
@@ -573,98 +573,98 @@
 		}
 		else {
 			throw new IllegalArgumentException("axis must be 0 or 1 but got " + axis);
-		}		
-		
+		}
+
 		return result;
 	}
-	
-	
+
+
 	/**
 	 * Augments two matrices. This is the same as {@link #stack(Matrix, int) stack(B, 1)}
-	 * 
+	 *
 	 * @param B - Matrix to augment to this matrix.
 	 * @return The matrix B augmented to this matrix.
 	 */
-	 default Matrix augment(Matrix B) {
+	default Matrix augment(Matrix B) {
 		return this.stack(B, 1);
 	}
-	
-	
+
+
 	/**
 	 * Computes row-echelon form of matrix. This will be an upper-triangular matrix.<br>
-	 * 
+	 *
 	 * <pre>
 	 * A matrix is in row-echelon form if:
 	 *  - The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *  - The pivot of a nonzero row is always strictly to 
+	 *  - The pivot of a nonzero row is always strictly to
 	 *    the right of the leading coefficient of the row above it.
 	 *  - Rows with all zero elements, if any, are below rows having a non-zero element.
 	 * </pre>
-	 * 
+	 *
 	 * A matrix can be transformed into a row equivalent matrix in row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>
-	 * 
+	 *
 	 * Also see <code>{@link #rref() rref()}</code> for reduced row-echelon form.
-	 * 
+	 *
 	 * @return Row-echelon form of matrix
 	 */
-	 default Matrix ref() {
+	default Matrix ref() {
 		Matrix A = ((Matrix) this).copy();
 		CNumber m, scale;
-		
+
 		int pivotRow = 0,
-			pivotCol = 0;
-		
+				pivotCol = 0;
+
 		while(pivotRow<A.m && pivotCol<A.n) {
 			if(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) { // Then we can make the pivot one.
-				 scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);
-				 
-				 for(int k=pivotCol; k<A.n; k++) { // scale the whole row
-					 A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);
-				 }
+				scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);
+
+				for(int k=pivotCol; k<A.n; k++) { // scale the whole row
+					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);
+				}
 			}
-			
+
 			for(int i=pivotRow+1; i<A.m; i++) {
 				m = A.entries[i][pivotCol];
 
 				for(int k=pivotCol; k<A.n; k++) {
-					A.entries[i][k] = CNumber.subtract(A.entries[i][k], 
+					A.entries[i][k] = CNumber.subtract(A.entries[i][k],
 							CNumber.multiply(A.entries[pivotRow][k], m));
 				}
-				
-				
+
+
 				/*
-				 * This insures the entries to the left of the pivot are zero. 
+				 * This insures the entries to the left of the pivot are zero.
 				 * They may be a very small (in absolute value) non-zero value
 				 * resulting from errors in floating point arithmetic.
 				 */
 				A.entries[i][pivotCol] = CNumber.ZERO;
 			}
-			
+
 			pivotRow++;
 			pivotCol++;
 		}
-		
+
 		return A;
 	}
-	
-	
+
+
 	/**
 	 * Computes reduced row-echelon form of matrix.<br>
-	 * 
+	 *
 	 * <pre>
 	 * A matrix is in reduced row-echelon form if:<br>
 	 *  - It is in row-echelon form. This is,
 	 *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *      ~ The pivot of a nonzero row is always strictly to 
+	 *      ~ The pivot of a nonzero row is always strictly to
 	 *        the right of the leading coefficient of the row above it.
 	 *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>
 	 *  - The pivot in each row is the only non-zero entry in its column.
 	 * </pre>
-	 * 
+	 *
 	 * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>
-	 * 
+	 *
 	 * @param partialPivoting - Falg for use of partial pivoting.
 	 * <pre>
 	 *  - If true then the rref will be computed using partial pivoting.
@@ -673,48 +673,48 @@
 	 * </pre>
 	 * @return
 	 */
-	 default Matrix rref(boolean partialPivoting) {
+	default Matrix rref(boolean partialPivoting) {
 		if(partialPivoting) return rref();
 		else return rrefNoPivot();
 	}
-	
-	
+
+
 	/**
 	 * Computes reduced row-echelon form of matrix. This is done using partial pivoting.<br>
-	 * 
+	 *
 	 * <pre>
 	 * A matrix is in reduced row-echelon form if:<br>
 	 *  - It is in row-echelon form. This is,
 	 *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *      ~ The pivot of a nonzero row is always strictly to 
+	 *      ~ The pivot of a nonzero row is always strictly to
 	 *        the right of the leading coefficient of the row above it.
 	 *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>
 	 *  - The pivot in each row is the only non-zero entry in its column.
 	 * </pre>
-	 * 
+	 *
 	 * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>
-	 * 
+	 *
 	 * Also see <code>{@link #ref() ref()}</code> for row-echelon form.
-	 * 
+	 *
 	 * @return Row-echelon form of matrix.
 	 */
-	 default Matrix rref() {
+	default Matrix rref() {
 		Matrix A = ((Matrix) this).copy();
 		CNumber mult, scale, currentMax;
 		int maxIndex;
-		
+
 		int pivotRow = 0,
-			pivotCol = 0;
-		
+				pivotCol = 0;
+
 		while(pivotRow<A.m && pivotCol<A.n) {
 			maxIndex = pivotRow;
 			currentMax = A.entries[pivotRow][pivotCol];
-			
+
 			for(int i=pivotRow; i<A.m; i++) { // Find the maximum entry in the pivot column (at or below the pivot ).
-				if(A.entries[i][pivotCol].nearZero(1.0E-12)) { 
-					
-					/* 
+				if(A.entries[i][pivotCol].nearZero(1.0E-12)) {
+
+					/*
 					 * If a number is very close to zero, assume it is supposed to be zero.
 					 * This protects against trying to manipulate a column which
 					 * is already in the correct form.
@@ -726,34 +726,34 @@
 					currentMax = A.entries[i][pivotCol];
 				}
 			}
-			
+
 			if(!A.entries[maxIndex][pivotCol].equals(CNumber.ZERO)) { // Check that the maximum absolute value is not zero.
 				if(pivotRow != maxIndex) {
 					A = A.swapRows(pivotRow, maxIndex); // Make the row with the largest value in the pivot column the pivot for this row.
 				}
-				
+
 				scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);
-				 
+
 				for(int k=pivotCol; k<A.n; k++) { // scale the whole row so that the pivot is 1
-					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); 
+					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);
 				}
-				
+
 				for(int i=0; i<A.m; i++) {
 					mult = A.entries[i][pivotCol];
-					
+
 					if(pivotRow != i) {
 						A.entries[i][pivotCol] = CNumber.ZERO;
-						
+
 						for(int k=pivotCol+1; k<A.n; k++) {
-							
-							CNumber value = CNumber.subtract(A.entries[i][k], 
+
+							CNumber value = CNumber.subtract(A.entries[i][k],
 									CNumber.multiply(A.entries[pivotRow][k], mult));
 							A.entries[i][k] = value;
 						}
-						
+
 					}
 				}
-				
+
 				pivotRow++;
 				pivotCol++;
 			}
@@ -761,253 +761,253 @@
 				pivotCol++;
 			}
 		}
-		
+
 		return A;
 	}
-	
-	
+
+
 	/**
-	 * Computes reduced row-echelon form of matrix. 
+	 * Computes reduced row-echelon form of matrix.
 	 * This is done WITHOUT using partial pivoting.<br>
-	 * 
+	 *
 	 * <pre>
 	 * A matrix is in reduced row-echelon form if:<br>
 	 *  - It is in row-echelon form. This is,
 	 *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *      ~ The pivot of a nonzero row is always strictly to 
+	 *      ~ The pivot of a nonzero row is always strictly to
 	 *        the right of the leading coefficient of the row above it.
 	 *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.<br>
 	 *  - The pivot in each row is the only non-zero entry in its column.
 	 * </pre>
-	 * 
+	 *
 	 * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. <br><br>
-	 * 
+	 *
 	 * Also see <code>{@link #ref() ref()}</code> for row-echelon form.
-	 * 
+	 *
 	 * @return Row-echelon form of matrix.
 	 */
 	default Matrix rrefNoPivot() {
 		Matrix A = ((Matrix) this).copy();
 		CNumber m, scale;
-		
+
 		int pivotRow = 0,
-			pivotCol = 0;
-		
+				pivotCol = 0;
+
 		while(pivotRow<A.m && pivotCol<A.n) {
 			if(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) {
 				scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);
-				 
+
 				for(int k=pivotCol; k<A.n; k++) { // scale the whole row
-					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); 
-				}	
+					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);
+				}
 			}
-				
+
 			for(int i=0; i<A.m; i++) {
 				m = A.entries[i][pivotCol];
-				
+
 				if(pivotRow != i) {
 					for(int k=pivotCol; k<A.n; k++) {
-						A.entries[i][k] = CNumber.subtract(A.entries[i][k], 
+						A.entries[i][k] = CNumber.subtract(A.entries[i][k],
 								CNumber.multiply(A.entries[pivotRow][k], m));
 					}
 				}
 			}
-			
+
 			pivotRow++;
 			pivotCol++;
 		}
-		
+
 		return A;
 	}
-	
-	
+
+
 	/**
 	 * Computes reduced extended row-echelon form of matrix. That is, a Matrix with
 	 * the same number of rows is {@link #augment(Matrix) augmented} with this matrix and
 	 * then this augmented matrix is put into {@link #rref() reduced row-echelon form}.
-	 * 
+	 *
 	 * @return Returns extended row-echelon form of this matrix.
 	 */
-	 default Matrix erref() {
+	default Matrix erref() {
 		Matrix A = (Matrix) this;
 		Matrix I = Matrix.I(A.m);
 		Matrix Aug = A.augment(I);
-		
+
 		return Aug.rref();
 	}
 
-	
+
 	/**
-	 * Computes the trace of square matrix. That is, the sum 
+	 * Computes the trace of square matrix. That is, the sum
 	 * of the entries along the principle diagonal.
 	 * <br><br>
 	 * This method is the same as {@link #tr() tr()}.
-	 * 
+	 *
 	 * @return trace of this matrix.
 	 */
-	 default CNumber trace() {
+	default CNumber trace() {
 		Matrix A = (Matrix) this;
-		
+
 		if(!A.isSquare()) {
 			throw new IllegalArgumentException("Expecting matrix to be square but got " + A.shape);
 		}
-		
+
 		CNumber result = A.entries[0][0];
-		
+
 		for(int i = 1; i < A.n; i++) {
 			result = CNumber.add(result, A.entries[i][i]);
 		}
-		
+
 		return result;
-	} 
-	
-	
+	}
+
+
 	/**
-	 * Computes the trace of a square matrix. That is, the sum 
+	 * Computes the trace of a square matrix. That is, the sum
 	 * of the entries along the principle diagonal.
 	 * <br><br>
 	 * This method is the same as {@link #trace() trace()}.
-	 * 
+	 *
 	 * @return trace of this matrix.
 	 */
-	 default CNumber tr() {
+	default CNumber tr() {
 		return this.trace();
 	}
-	
-	
+
+
 	/**
 	 * The rank of a matrix A is the dimension of the vector space generated (or spanned) by its columns.
 	 * This is always an integer.
-	 * This corresponds to the maximal number of linearly independent columns of A. 
+	 * This corresponds to the maximal number of linearly independent columns of A.
 	 * This, in turn, is identical to the dimension of the vector space spanned by its rows
-	 * 
+	 *
 	 * @return Returns the rank of this matrix.
 	 */
 	// TODO: Should be switched to rank revealing QR decomposition as it is more numerically stable.
-	 default int rank() {
+	default int rank() {
 		Matrix A = (Matrix) this;
 		Matrix rrefA = A.rref();
 		int rank = A.m;
-		
+
 		for(int i=rrefA.m-1; i>=0; i--) {
 			if(rrefA.getRowAsVector(i).isZero()) {
-				rank--;			
-			} else { 
+				rank--;
+			} else {
 				// Then we have no more zero rows as rrefA is in reduced row echelon form.
 				break;
 			}
 		}
-		
+
 		return rank;
 	}
-	
-	
+
+
 	/**
 	 * The rank of a matrix A is the dimension of the vector space spanned by the nullspace of this matrix.
 	 * The nullify is always an integer.
-	 * 
+	 *
 	 * @return Returns the rank of this matrix.
 	 */
-	 default int nullity() {
+	default int nullity() {
 		int rank = this.rank();
 		return ((Matrix) this).m - rank;
 	}
-	
-	
+
+
 	/**
 	 * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}
 	 * The inverse of a Matrix A is A<sup>-1</sup> satisfying AA<sup>-1</sup>=I where I is the appropriately sized Identity matrix.
-	 * 
+	 *
 	 * @return The inverse of this matrix.
 	 */
-	 default Matrix inverse() {
+	default Matrix inverse() {
 		Matrix A = (Matrix) this;
-		
+
 		if(!A.isSingular()) {
 			throw new IllegalArgumentException("Matrix is singular.");
 		}
 
 		Matrix[] QR = Decompose.QR(A); // Compute the QR decomposition of A. This will be used to compute the inverse.
 		CNumber detR = CNumber.ONE;
-		
+
 		for(int i = 0; i<QR[1].n; i++) { // Computing the determinant of R
 			detR = CNumber.multiply(detR, QR[1].entries[i][i]);
 		}
-		
+
 		if(CNumber.round(detR, 10).re == 0) {
 			/* Then we know the matrix is singular.
 			 * We know this by exploiting properties of the orthogonal matrix Q and the upper triangular matrix R.
 			 * The determinant of an orthogonal matrix is either -1 or 1. The determinant of an upper triangular matrix R is the product
 			 * of the diagonals. Since A=QR det(A) = det(QR) = det(Q)*det(R). So if the determinant of R is zero, then the matrix A must be singular.
-			 * 
-			 * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that, 
+			 *
+			 * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that,
 			 * so it would be redundant to call the isSingular() method and recompute the QR decomposition again.
 			 */
 			throw new IllegalArgumentException("Matrix is singular, thus can not be inverted.");
 		}
-		
+
 		// Here we compute and return A^-1 = (R^-1)*(Q^-1)
 		return inverseTriU(QR[1]).mult(QR[0].H());
 	}
-	
-	
+
+
 	/**
 	 * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}
 	 * The inverse of a Matrix A is A<sup>-1</sup> satisfying AA<sup>-1</sup>=I where I is the appropriately sized Identity matrix.
-	 * 
+	 *
 	 * @return The inverse of this matrix.
 	 */
-	 default Matrix inv() {
+	default Matrix inv() {
 		return this.inverse();
 	}
-	
-	
+
+
 	/**
 	 * Helper method to invert an upper triangular matrix. <br>
 	 * We can compute the inverse of an n-by-n upper triangular matrix U by solving the n systems...<br><br>
-	 * 
+	 *
 	 * Ux=I<sub>i</sub><br>
-	 * 
+	 *
 	 * where 1<=i<=n, I is the n-by-n identity matrix, I<sub>i</sub> is the ith column of I.<br><br>
-	 * 
+	 *
 	 * Each solution becomes a column in the inverse <sup>-1</sub>.
 	 * Because U is upper triangular, we can solve these n systems using backsolve.
-	 * 
+	 *
 	 * @param U - U is a square upper triangular matrix
 	 * @return Returns the inverse of U, denoted U<sup>-1</sub>
 	 */
 	static Matrix inverseTriU(Matrix U) {
 		Matrix Uinv = new Matrix(U.m, U.m);
 		Matrix I = Matrix.I(U.m);
-		
+
 		if(!U.isTriU()) {
 			throw new IllegalArgumentException("U must be upper triangular.");
 		}
-		
+
 		for(int i=0; i<U.m; i++)  {
 			// U is upper triangular, so to solve the system we simply need to use back-solve function.
-			Uinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i); 
+			Uinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i);
 		}
-		
+
 		return Uinv;
 	}
-	
-	
+
+
 	/**
 	 * Creates a new matrix that contains the reciprocals of this matrix
-	 * 
+	 *
 	 * @return new matrix that contains the reciprocals of this matrix
 	 */
-	 default Matrix recep() {
+	default Matrix recep() {
 		Matrix A = new Matrix((Matrix) this).copy();
-		
+
 		for(int i=0; i<A.m; i++) {
 			for(int j=0; j<A.n; j++) {
 				A.entries[i][j] = CNumber.inv(A.entries[i][j]);
 			}
 		}
-		
+
 		return A;
 	}
 }
Index: target/site/jacoco/jacoco.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><!DOCTYPE report PUBLIC \"-//JACOCO//DTD Report 1.1//EN\" \"report.dtd\"><report name=\"Java-Linear-Algebra\"><sessioninfo id=\"DESKTOP-3F0SSFQ-fe00496a\" start=\"1632785396729\" dump=\"1632785398884\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-9cdf880c\" start=\"1632787027066\" dump=\"1632787028389\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-33e4a7ad\" start=\"1632787824685\" dump=\"1632787826107\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-d759012b\" start=\"1632787898313\" dump=\"1632787899650\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-653be16e\" start=\"1632788590487\" dump=\"1632788591452\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-e4543b44\" start=\"1632788616892\" dump=\"1632788617864\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-4d4af810\" start=\"1632788635046\" dump=\"1632788635903\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-ca0ff9dc\" start=\"1632789177899\" dump=\"1632789179094\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-2b03aa12\" start=\"1632789197815\" dump=\"1632789198970\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-92377961\" start=\"1632789713743\" dump=\"1632789715200\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-f67dcf9d\" start=\"1632791223035\" dump=\"1632791223756\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-3deffdcc\" start=\"1632791225995\" dump=\"1632791227517\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-8370ba74\" start=\"1632791234697\" dump=\"1632791236818\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-e80853d4\" start=\"1632791240963\" dump=\"1632791242073\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-9ee31791\" start=\"1632791253485\" dump=\"1632791254576\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-58a45499\" start=\"1632791643884\" dump=\"1632791645145\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-6b36a7ae\" start=\"1632791710919\" dump=\"1632791711976\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cd238e7f\" start=\"1632792212364\" dump=\"1632792213589\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-32a355ac\" start=\"1632792226532\" dump=\"1632792227738\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cf2ae673\" start=\"1632792263916\" dump=\"1632792265083\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-d8ae4a1d\" start=\"1632792284518\" dump=\"1632792285894\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-590642cc\" start=\"1632792572203\" dump=\"1632792573348\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-c18502e8\" start=\"1632792970189\" dump=\"1632792971270\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-bb68ec51\" start=\"1632793008312\" dump=\"1632793009524\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-dc7eaf97\" start=\"1632794014578\" dump=\"1632794015732\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-4fd69810\" start=\"1632794041217\" dump=\"1632794042229\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-96825214\" start=\"1632794338912\" dump=\"1632794340518\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-89a0fc42\" start=\"1632794376493\" dump=\"1632794377631\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cab82cf0\" start=\"1632794402490\" dump=\"1632794403864\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-c139591e\" start=\"1632796470111\" dump=\"1632796470839\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-82b8fd28\" start=\"1632796538375\" dump=\"1632796539119\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-3bdff75d\" start=\"1632796570427\" dump=\"1632796571185\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-cdb98687\" start=\"1632796751134\" dump=\"1632796751986\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-e6b68394\" start=\"1632796813525\" dump=\"1632796814279\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-9c517ae6\" start=\"1632796822743\" dump=\"1632796823495\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-7849bf85\" start=\"1632805631900\" dump=\"1632805632787\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-8af91b33\" start=\"1634341976579\" dump=\"1634341977263\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-3c496517\" start=\"1634341993197\" dump=\"1634341994053\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-a1df1e07\" start=\"1634342019237\" dump=\"1634342019963\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-aff8a924\" start=\"1634342037885\" dump=\"1634342038662\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-f94da3ae\" start=\"1634342585320\" dump=\"1634342586098\"/><sessioninfo id=\"Jacobs-MacBook-Pro.local-f3f79794\" start=\"1634836555186\" dump=\"1634836564541\"/><sessioninfo id=\"DESKTOP-3F0SSFQ-1c4bcb6b\" start=\"1643427498985\" dump=\"1643427499604\"/><sessioninfo id=\"BLD-5f143199\" start=\"1647898351210\" dump=\"1647898351662\"/><sessioninfo id=\"BLD-d03d1266\" start=\"1647898491358\" dump=\"1647898491794\"/><sessioninfo id=\"BLD-13bcee4f\" start=\"1647898569818\" dump=\"1647898570267\"/><sessioninfo id=\"BLD-73b3ed2a\" start=\"1647898592627\" dump=\"1647898593088\"/><sessioninfo id=\"BLD-9ce2ccfd\" start=\"1647898684168\" dump=\"1647898684603\"/><sessioninfo id=\"BLD-2afa8ef6\" start=\"1647898735356\" dump=\"1647898735807\"/><sessioninfo id=\"BLD-edd601d3\" start=\"1647898881563\" dump=\"1647898882013\"/><sessioninfo id=\"BLD-c28ecaff\" start=\"1647899008302\" dump=\"1647899008717\"/><sessioninfo id=\"BLD-55cd338f\" start=\"1647899075318\" dump=\"1647899075734\"/><sessioninfo id=\"BLD-e4801ee3\" start=\"1647899243059\" dump=\"1647899243476\"/><sessioninfo id=\"BLD-9f351c8a\" start=\"1647899359485\" dump=\"1647899359897\"/><sessioninfo id=\"BLD-9eacc799\" start=\"1647899387049\" dump=\"1647899387474\"/><sessioninfo id=\"BLD-b904ea4e\" start=\"1647899413544\" dump=\"1647899413951\"/><sessioninfo id=\"BLD-644b10e9\" start=\"1647899764441\" dump=\"1647899764877\"/><sessioninfo id=\"BLD-dcf1263f\" start=\"1647899789708\" dump=\"1647899790139\"/><sessioninfo id=\"BLD-c8bba310\" start=\"1647899824720\" dump=\"1647899825142\"/><sessioninfo id=\"BLD-f13f0532\" start=\"1647900114267\" dump=\"1647900114710\"/><sessioninfo id=\"BLD-4d60d8a9\" start=\"1647900249802\" dump=\"1647900250217\"/><sessioninfo id=\"BLD-7c76e99b\" start=\"1647900266246\" dump=\"1647900266662\"/><sessioninfo id=\"BLD-6e4c34ba\" start=\"1647900330699\" dump=\"1647900331108\"/><sessioninfo id=\"BLD-611d5be4\" start=\"1647900412281\" dump=\"1647900412740\"/><sessioninfo id=\"BLD-fbf836d9\" start=\"1647900429127\" dump=\"1647900429548\"/><sessioninfo id=\"BLD-cf666b95\" start=\"1647900528924\" dump=\"1647900529345\"/><sessioninfo id=\"BLD-3ac3eaab\" start=\"1647900559463\" dump=\"1647900559876\"/><sessioninfo id=\"BLD-eb30d151\" start=\"1647900754458\" dump=\"1647900754875\"/><sessioninfo id=\"BLD-4704b508\" start=\"1647900990010\" dump=\"1647900990438\"/><sessioninfo id=\"BLD-a9161df8\" start=\"1647901024091\" dump=\"1647901024523\"/><sessioninfo id=\"BLD-8d1de9c8\" start=\"1647901051302\" dump=\"1647901051745\"/><sessioninfo id=\"BLD-384b8695\" start=\"1647901063007\" dump=\"1647901063422\"/><sessioninfo id=\"BLD-dce664e1\" start=\"1647901440753\" dump=\"1647901441166\"/><sessioninfo id=\"BLD-5871c6dc\" start=\"1647901459647\" dump=\"1647901460070\"/><sessioninfo id=\"BLD-ec3d5b51\" start=\"1647901469720\" dump=\"1647901470113\"/><sessioninfo id=\"BLD-c4a22b0\" start=\"1647901479124\" dump=\"1647901479564\"/><sessioninfo id=\"BLD-e17dbfe3\" start=\"1647901493629\" dump=\"1647901494034\"/><sessioninfo id=\"BLD-6691bb9b\" start=\"1647901503444\" dump=\"1647901503856\"/><sessioninfo id=\"BLD-f402c671\" start=\"1647901559561\" dump=\"1647901559963\"/><sessioninfo id=\"BLD-df63c0c1\" start=\"1647901569760\" dump=\"1647901570152\"/><sessioninfo id=\"BLD-730deef4\" start=\"1647901579008\" dump=\"1647901579401\"/><sessioninfo id=\"BLD-47ae258d\" start=\"1647901657037\" dump=\"1647901657471\"/><sessioninfo id=\"BLD-65f519f5\" start=\"1647901669672\" dump=\"1647901670101\"/><sessioninfo id=\"BLD-69c63fbe\" start=\"1647901680865\" dump=\"1647901681280\"/><sessioninfo id=\"BLD-a715049\" start=\"1647901692073\" dump=\"1647901692469\"/><sessioninfo id=\"BLD-a82e1f3a\" start=\"1647902090352\" dump=\"1647902090777\"/><sessioninfo id=\"BLD-36a12ee0\" start=\"1647902106493\" dump=\"1647902106911\"/><sessioninfo id=\"BLD-575cc61a\" start=\"1647902120045\" dump=\"1647902120457\"/><sessioninfo id=\"BLD-4bb34530\" start=\"1647902136497\" dump=\"1647902136914\"/><sessioninfo id=\"BLD-448d89fb\" start=\"1647902215123\" dump=\"1647902215541\"/><sessioninfo id=\"BLD-9b3ee8d6\" start=\"1647902326225\" dump=\"1647902326643\"/><sessioninfo id=\"BLD-26b02335\" start=\"1647902337997\" dump=\"1647902338413\"/><sessioninfo id=\"BLD-6ca80015\" start=\"1647902463488\" dump=\"1647902463928\"/><sessioninfo id=\"BLD-422a9384\" start=\"1647902551745\" dump=\"1647902552199\"/><sessioninfo id=\"BLD-f789f3a\" start=\"1647903011738\" dump=\"1647903012203\"/><sessioninfo id=\"BLD-80bee3b2\" start=\"1647903119372\" dump=\"1647903119790\"/><sessioninfo id=\"BLD-dbbdfdd8\" start=\"1647903148298\" dump=\"1647903148710\"/><sessioninfo id=\"BLD-5208a62a\" start=\"1647903822790\" dump=\"1647903823195\"/><sessioninfo id=\"BLD-4f2bd873\" start=\"1647903829758\" dump=\"1647903830147\"/><sessioninfo id=\"BLD-87d85318\" start=\"1647903847796\" dump=\"1647903848217\"/><sessioninfo id=\"BLD-7daa79c0\" start=\"1647903893842\" dump=\"1647903894257\"/><sessioninfo id=\"BLD-b0aa7c38\" start=\"1647903928627\" dump=\"1647903929041\"/><sessioninfo id=\"BLD-8225c5c2\" start=\"1647903942898\" dump=\"1647903943306\"/><sessioninfo id=\"BLD-cd5cc3dc\" start=\"1647904008785\" dump=\"1647904009198\"/><sessioninfo id=\"BLD-4e532446\" start=\"1647904023242\" dump=\"1647904023646\"/><sessioninfo id=\"BLD-ccbe17aa\" start=\"1647904193535\" dump=\"1647904193943\"/><sessioninfo id=\"BLD-bd389192\" start=\"1647904222644\" dump=\"1647904223052\"/><sessioninfo id=\"BLD-63813cab\" start=\"1647904519756\" dump=\"1647904520157\"/><sessioninfo id=\"BLD-fee079ee\" start=\"1647904753554\" dump=\"1647904754520\"/><sessioninfo id=\"BLD-d8399d8c\" start=\"1647904823931\" dump=\"1647904824868\"/><sessioninfo id=\"BLD-8c069a1b\" start=\"1647904844863\" dump=\"1647904845258\"/><sessioninfo id=\"BLD-1a4546d0\" start=\"1647904869272\" dump=\"1647904869664\"/><sessioninfo id=\"BLD-158d6146\" start=\"1647904915196\" dump=\"1647904915593\"/><sessioninfo id=\"BLD-df44e80a\" start=\"1647904930191\" dump=\"1647904930604\"/><sessioninfo id=\"BLD-aa032da9\" start=\"1647904941411\" dump=\"1647904941827\"/><sessioninfo id=\"BLD-88e54f0a\" start=\"1647986007052\" dump=\"1647986007524\"/><sessioninfo id=\"BLD-11ef7812\" start=\"1647986028903\" dump=\"1647986029370\"/><sessioninfo id=\"BLD-45f5b741\" start=\"1647986047341\" dump=\"1647986047770\"/><sessioninfo id=\"BLD-d8bc2629\" start=\"1647986066452\" dump=\"1647986066860\"/><sessioninfo id=\"BLD-5c533f79\" start=\"1647986084518\" dump=\"1647986084950\"/><sessioninfo id=\"BLD-16314474\" start=\"1647988531357\" dump=\"1647988531795\"/><sessioninfo id=\"BLD-23250d6e\" start=\"1647988572313\" dump=\"1647988572775\"/><sessioninfo id=\"BLD-9dc70764\" start=\"1647988630338\" dump=\"1647988630773\"/><sessioninfo id=\"BLD-141f0a9c\" start=\"1647988672259\" dump=\"1647988672692\"/><sessioninfo id=\"BLD-a87a5eca\" start=\"1647988683254\" dump=\"1647988683699\"/><sessioninfo id=\"BLD-f07af7a9\" start=\"1647988867333\" dump=\"1647988867765\"/><sessioninfo id=\"BLD-3bc2e0eb\" start=\"1647988897184\" dump=\"1647988897624\"/><sessioninfo id=\"BLD-c52cc34\" start=\"1647989235329\" dump=\"1647989235783\"/><sessioninfo id=\"BLD-915d4cb5\" start=\"1647989407823\" dump=\"1647989408240\"/><sessioninfo id=\"BLD-f0e815ea\" start=\"1647989466375\" dump=\"1647989466790\"/><sessioninfo id=\"BLD-99edb312\" start=\"1647989937405\" dump=\"1647989937863\"/><sessioninfo id=\"BLD-d0e8055a\" start=\"1647990042605\" dump=\"1647990043033\"/><sessioninfo id=\"BLD-918a466\" start=\"1647990128976\" dump=\"1647990129411\"/><sessioninfo id=\"BLD-ced5ae41\" start=\"1647990358314\" dump=\"1647990358782\"/><sessioninfo id=\"BLD-6926cfa5\" start=\"1647990708932\" dump=\"1647990709409\"/><sessioninfo id=\"BLD-40511bbd\" start=\"1647990720573\" dump=\"1647990721063\"/><sessioninfo id=\"BLD-8c00f2a\" start=\"1647991694038\" dump=\"1647991694464\"/><sessioninfo id=\"BLD-c32762a5\" start=\"1648002182658\" dump=\"1648002183162\"/><sessioninfo id=\"BLD-cf6d6f82\" start=\"1648002474782\" dump=\"1648002475312\"/><sessioninfo id=\"BLD-ef04d919\" start=\"1648002502682\" dump=\"1648002503136\"/><sessioninfo id=\"BLD-3a616cd7\" start=\"1648002601296\" dump=\"1648002601764\"/><sessioninfo id=\"BLD-de784c09\" start=\"1648002703785\" dump=\"1648002704238\"/><sessioninfo id=\"BLD-d94dea2c\" start=\"1648002737252\" dump=\"1648002737706\"/><sessioninfo id=\"BLD-58ed1b2f\" start=\"1648003385137\" dump=\"1648003385696\"/><sessioninfo id=\"BLD-d96e8843\" start=\"1648003788776\" dump=\"1648003789254\"/><sessioninfo id=\"BLD-6990374e\" start=\"1648005744106\" dump=\"1648005744559\"/><sessioninfo id=\"BLD-625de177\" start=\"1648006228471\" dump=\"1648006228909\"/><sessioninfo id=\"BLD-90080ce6\" start=\"1648007384220\" dump=\"1648007384784\"/><sessioninfo id=\"BLD-73ed5a2f\" start=\"1648007521911\" dump=\"1648007522617\"/><sessioninfo id=\"BLD-acbe5570\" start=\"1648007616430\" dump=\"1648007617125\"/><sessioninfo id=\"BLD-d51d481d\" start=\"1648007625777\" dump=\"1648007626421\"/><sessioninfo id=\"BLD-9c872883\" start=\"1648008450016\" dump=\"1648008450643\"/><sessioninfo id=\"BLD-26dc340c\" start=\"1648008819880\" dump=\"1648008820461\"/><sessioninfo id=\"BLD-c5819925\" start=\"1648009579527\" dump=\"1648009580096\"/><sessioninfo id=\"BLD-7eb27fed\" start=\"1648009797864\" dump=\"1648009798423\"/><sessioninfo id=\"BLD-7606e998\" start=\"1648009915444\" dump=\"1648009916008\"/><sessioninfo id=\"BLD-62ed1053\" start=\"1648010088076\" dump=\"1648010088754\"/><sessioninfo id=\"BLD-460751bf\" start=\"1648010146279\" dump=\"1648010146785\"/><sessioninfo id=\"BLD-f73a4b\" start=\"1648010170477\" dump=\"1648010170992\"/><sessioninfo id=\"BLD-f4661f3\" start=\"1648010308258\" dump=\"1648010308705\"/><sessioninfo id=\"BLD-8d5346ec\" start=\"1648010354549\" dump=\"1648010355170\"/><sessioninfo id=\"BLD-b6f1896\" start=\"1648011171007\" dump=\"1648011171590\"/><sessioninfo id=\"BLD-fd1fdf91\" start=\"1648011183650\" dump=\"1648011184227\"/><sessioninfo id=\"BLD-5b052c7a\" start=\"1648011197028\" dump=\"1648011197651\"/><sessioninfo id=\"BLD-921c9dce\" start=\"1648011360236\" dump=\"1648011360815\"/><sessioninfo id=\"BLD-be274de6\" start=\"1648011422518\" dump=\"1648011423076\"/><sessioninfo id=\"BLD-ba90ae31\" start=\"1648011517821\" dump=\"1648011518322\"/><sessioninfo id=\"BLD-d241f362\" start=\"1648011546361\" dump=\"1648011546833\"/><sessioninfo id=\"BLD-2cf33207\" start=\"1648011563717\" dump=\"1648011564351\"/><sessioninfo id=\"BLD-34e6cba2\" start=\"1648011621676\" dump=\"1648011622328\"/><sessioninfo id=\"BLD-7c86ea4c\" start=\"1648011631695\" dump=\"1648011632122\"/><sessioninfo id=\"BLD-3dc2f10c\" start=\"1648011647817\" dump=\"1648011648348\"/><sessioninfo id=\"BLD-eb3fc027\" start=\"1648011756000\" dump=\"1648011756716\"/><sessioninfo id=\"BLD-484e37f3\" start=\"1648012727262\" dump=\"1648012727700\"/><sessioninfo id=\"BLD-3dab5fc1\" start=\"1648012733290\" dump=\"1648012733940\"/><sessioninfo id=\"BLD-ac748ad\" start=\"1648012757335\" dump=\"1648012757840\"/><sessioninfo id=\"BLD-febfc0cc\" start=\"1648012768918\" dump=\"1648012769452\"/><sessioninfo id=\"BLD-3f27384d\" start=\"1648012779194\" dump=\"1648012779840\"/><sessioninfo id=\"BLD-7191ed85\" start=\"1648012956343\" dump=\"1648012956908\"/><sessioninfo id=\"BLD-f150a0f1\" start=\"1648012971505\" dump=\"1648012972106\"/><sessioninfo id=\"BLD-7653172c\" start=\"1648012986576\" dump=\"1648012987078\"/><sessioninfo id=\"BLD-4c26638c\" start=\"1648013058549\" dump=\"1648013059245\"/><sessioninfo id=\"BLD-23e80093\" start=\"1648013071856\" dump=\"1648013072506\"/><sessioninfo id=\"BLD-adc94ced\" start=\"1648013088284\" dump=\"1648013088760\"/><sessioninfo id=\"BLD-d808ff09\" start=\"1648013102077\" dump=\"1648013102775\"/><sessioninfo id=\"BLD-73708a74\" start=\"1648013220378\" dump=\"1648013220966\"/><sessioninfo id=\"BLD-3ccdbc0b\" start=\"1648013235723\" dump=\"1648013236203\"/><sessioninfo id=\"BLD-161ad7f7\" start=\"1648013247628\" dump=\"1648013248200\"/><sessioninfo id=\"BLD-51e7d116\" start=\"1648013274854\" dump=\"1648013275480\"/><sessioninfo id=\"BLD-f25abf84\" start=\"1648013291444\" dump=\"1648013292056\"/><sessioninfo id=\"BLD-8f5fcfa1\" start=\"1648013316069\" dump=\"1648013316810\"/><sessioninfo id=\"BLD-722301d4\" start=\"1648013329853\" dump=\"1648013330343\"/><sessioninfo id=\"BLD-8feadfa8\" start=\"1648013343930\" dump=\"1648013344439\"/><sessioninfo id=\"BLD-5cb48547\" start=\"1648013403396\" dump=\"1648013403977\"/><sessioninfo id=\"BLD-62abb693\" start=\"1648013415090\" dump=\"1648013415949\"/><sessioninfo id=\"BLD-9a32bf97\" start=\"1648013454676\" dump=\"1648013455230\"/><sessioninfo id=\"BLD-f07b812e\" start=\"1648013474360\" dump=\"1648013474867\"/><sessioninfo id=\"BLD-c0c73418\" start=\"1648013508949\" dump=\"1648013509514\"/><sessioninfo id=\"BLD-cc37a0bf\" start=\"1648013531518\" dump=\"1648013532141\"/><sessioninfo id=\"BLD-61dea6c2\" start=\"1648013543001\" dump=\"1648013543541\"/><sessioninfo id=\"BLD-7a2c16b9\" start=\"1648013729496\" dump=\"1648013729984\"/><sessioninfo id=\"BLD-5d32d470\" start=\"1648014261504\" dump=\"1648014262138\"/><sessioninfo id=\"BLD-41fe00a9\" start=\"1648014284538\" dump=\"1648014285117\"/><sessioninfo id=\"BLD-6ce46e8e\" start=\"1648014300087\" dump=\"1648014300629\"/><sessioninfo id=\"BLD-155148ba\" start=\"1648014315898\" dump=\"1648014316387\"/><sessioninfo id=\"BLD-cd482c54\" start=\"1648015029341\" dump=\"1648015029991\"/><sessioninfo id=\"BLD-7a74231a\" start=\"1648073778551\" dump=\"1648073779033\"/><sessioninfo id=\"BLD-255dc3dc\" start=\"1648074247903\" dump=\"1648074248325\"/><sessioninfo id=\"BLD-6a0f1015\" start=\"1648075024321\" dump=\"1648075024786\"/><sessioninfo id=\"BLD-3bb3a318\" start=\"1648076968215\" dump=\"1648076968643\"/><sessioninfo id=\"BLD-1a184610\" start=\"1648077643398\" dump=\"1648077643829\"/><sessioninfo id=\"BLD-11464e9a\" start=\"1648077728931\" dump=\"1648077729365\"/><sessioninfo id=\"BLD-b1a6e671\" start=\"1648077761529\" dump=\"1648077761970\"/><sessioninfo id=\"BLD-4b587722\" start=\"1648077821157\" dump=\"1648077821604\"/><sessioninfo id=\"BLD-f5a00201\" start=\"1648077943096\" dump=\"1648077943497\"/><sessioninfo id=\"BLD-cd93d6fc\" start=\"1648078235459\" dump=\"1648078235898\"/><sessioninfo id=\"BLD-80486b65\" start=\"1648078242870\" dump=\"1648078243282\"/><sessioninfo id=\"BLD-aa27378e\" start=\"1648078249578\" dump=\"1648078249989\"/><sessioninfo id=\"BLD-7f11c4a4\" start=\"1648078445484\" dump=\"1648078445955\"/><sessioninfo id=\"BLD-252fe5bb\" start=\"1648079894500\" dump=\"1648079895019\"/><sessioninfo id=\"BLD-a3c67e25\" start=\"1648080309444\" dump=\"1648080309851\"/><sessioninfo id=\"BLD-ecff14b5\" start=\"1648080343326\" dump=\"1648080343712\"/><sessioninfo id=\"BLD-66080afa\" start=\"1648081073924\" dump=\"1648081074343\"/><sessioninfo id=\"BLD-837244bc\" start=\"1648081577593\" dump=\"1648081578023\"/><sessioninfo id=\"BLD-f4ebceb6\" start=\"1648087075933\" dump=\"1648087076354\"/><sessioninfo id=\"BLD-475c3214\" start=\"1648094366721\" dump=\"1648094367181\"/><sessioninfo id=\"BLD-d62db79a\" start=\"1648094571704\" dump=\"1648094572201\"/><sessioninfo id=\"BLD-de804958\" start=\"1648094571907\" dump=\"1648094572408\"/><sessioninfo id=\"BLD-3015d818\" start=\"1648094585759\" dump=\"1648094586186\"/><sessioninfo id=\"BLD-84b52fbf\" start=\"1648094772994\" dump=\"1648094773443\"/><sessioninfo id=\"BLD-dd3b585d\" start=\"1648095359745\" dump=\"1648095360200\"/><sessioninfo id=\"BLD-c3f4558b\" start=\"1648095364884\" dump=\"1648095365277\"/><sessioninfo id=\"BLD-21e4155d\" start=\"1648095379910\" dump=\"1648095380336\"/><sessioninfo id=\"BLD-a7e8aa1a\" start=\"1648095446274\" dump=\"1648095446703\"/><sessioninfo id=\"BLD-d5586b6d\" start=\"1648096283204\" dump=\"1648096283634\"/><sessioninfo id=\"BLD-8675d884\" start=\"1648096631227\" dump=\"1648096631647\"/><sessioninfo id=\"BLD-9a1e6bc\" start=\"1648096712535\" dump=\"1648096712972\"/><sessioninfo id=\"BLD-4b70fac8\" start=\"1648097953067\" dump=\"1648097953511\"/><sessioninfo id=\"BLD-d9fd4f96\" start=\"1648105321713\" dump=\"1648105322174\"/><package name=\"linalg/concurrent\"><class name=\"linalg/concurrent/ThreadTypes\" sourcefilename=\"ThreadTypes.java\"><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"7\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/concurrent/MatrixAdditionWorker\" sourcefilename=\"MatrixAdditionWorker.java\"><method name=\"&lt;init&gt;\" desc=\"(Llinalg/concurrent/ConcurrentMatrixAddition;II)V\" line=\"23\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/concurrent/ConcurrentMatrixAddition;IIII)V\" line=\"42\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"run\" desc=\"()V\" line=\"55\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"105\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/concurrent/ConcurrentMatrixAddition\" sourcefilename=\"ConcurrentMatrixAddition.java\"><method name=\"&lt;init&gt;\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)V\" line=\"30\"><counter type=\"INSTRUCTION\" missed=\"37\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"()Llinalg/Matrix;\" line=\"51\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"allocateThreadsByRows\" desc=\"()V\" line=\"74\"><counter type=\"INSTRUCTION\" missed=\"56\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"15\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"132\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"31\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/concurrent/MatrixMultiplicationWorker\" sourcefilename=\"MatrixMultiplicationWorker.java\"><method name=\"&lt;init&gt;\" desc=\"(Llinalg/concurrent/ConcurrentMatrixMultiplication;II)V\" line=\"9\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"run\" desc=\"()V\" line=\"30\"><counter type=\"INSTRUCTION\" missed=\"160\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"175\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"9\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/concurrent/ConcurrentMatrixMultiplication\" sourcefilename=\"ConcurrentMatrixMultiplication.java\"><method name=\"&lt;init&gt;\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)V\" line=\"30\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"mult\" desc=\"()Llinalg/Matrix;\" line=\"52\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"allocateThreadsByRows\" desc=\"()V\" line=\"70\"><counter type=\"INSTRUCTION\" missed=\"56\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"14\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"139\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"32\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><sourcefile name=\"ConcurrentMatrixMultiplication.java\"><line nr=\"14\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"38\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"56\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"75\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"80\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"139\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"32\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixMultiplicationWorker.java\"><line nr=\"9\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"35\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"38\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"39\" mi=\"12\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"40\" mi=\"12\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"41\" mi=\"51\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"51\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"175\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"9\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"ThreadTypes.java\"><line nr=\"7\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"8\" mi=\"24\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"ConcurrentMatrixAddition.java\"><line nr=\"15\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"37\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"55\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"79\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"84\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"132\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"31\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixAdditionWorker.java\"><line nr=\"23\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"56\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"57\" mi=\"48\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"105\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"578\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"34\" covered=\"0\"/><counter type=\"LINE\" missed=\"99\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"31\" covered=\"0\"/><counter type=\"METHOD\" missed=\"14\" covered=\"0\"/><counter type=\"CLASS\" missed=\"5\" covered=\"0\"/></package><package name=\"linalg/complex_number\"><class name=\"linalg/complex_number/CNumber\" sourcefilename=\"CNumber.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"66\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(D)V\" line=\"71\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(DD)V\" line=\"77\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"83\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"16\"/><counter type=\"LINE\" missed=\"0\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/complex_number/CNumber;)V\" line=\"91\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"11\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"randn\" desc=\"(Z)Llinalg/complex_number/CNumber;\" line=\"106\"><counter type=\"INSTRUCTION\" missed=\"19\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randn\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"125\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"134\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"147\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(DD[Z)Llinalg/complex_number/CNumber;\" line=\"181\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"conjugate\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"212\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"224\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;[Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"238\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"subtract\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"258\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"multiply\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"270\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"divide\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"282\"><counter type=\"INSTRUCTION\" missed=\"74\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"abs\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"309\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"323\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"addInv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"337\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"pow\" desc=\"(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;\" line=\"355\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"pow\" desc=\"(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"387\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"exp\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"408\"><counter type=\"INSTRUCTION\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"exp\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"419\"><counter type=\"INSTRUCTION\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sqrt\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"435\"><counter type=\"INSTRUCTION\" missed=\"62\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"13\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"allSqrt\" desc=\"(Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"468\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sign\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"483\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"equals\" desc=\"(Ljava/lang/Object;)Z\" line=\"498\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"24\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"6\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"equals\" desc=\"(D)Z\" line=\"521\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"round\" desc=\"(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;\" line=\"542\"><counter type=\"INSTRUCTION\" missed=\"30\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"nearZero\" desc=\"(D)Z\" line=\"564\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"compareTo\" desc=\"(Llinalg/complex_number/CNumber;)I\" line=\"578\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"compareToReal\" desc=\"(Llinalg/complex_number/CNumber;)I\" line=\"594\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"compareToReal\" desc=\"(D)I\" line=\"610\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"mag\" desc=\"()D\" line=\"623\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"max\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"638\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"min\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"661\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getReal\" desc=\"()D\" line=\"677\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getImaginary\" desc=\"()D\" line=\"685\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isReal\" desc=\"()Z\" line=\"695\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isComplex\" desc=\"()Z\" line=\"705\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isImaginary\" desc=\"()Z\" line=\"715\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isInt\" desc=\"()Z\" line=\"725\"><counter type=\"INSTRUCTION\" missed=\"21\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"doubleValue\" desc=\"()D\" line=\"742\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"floatValue\" desc=\"()F\" line=\"752\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"intValue\" desc=\"()I\" line=\"762\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"longValue\" desc=\"()J\" line=\"772\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"doubleImaginaryValue\" desc=\"()D\" line=\"780\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"floatImaginaryValue\" desc=\"()F\" line=\"790\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"intImaginaryValue\" desc=\"()I\" line=\"799\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"longImaginaryValue\" desc=\"()J\" line=\"809\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"length\" desc=\"(Llinalg/complex_number/CNumber;)I\" line=\"818\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"823\"><counter type=\"INSTRUCTION\" missed=\"97\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"22\" covered=\"0\"/><counter type=\"LINE\" missed=\"22\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"17\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"46\"/><counter type=\"LINE\" missed=\"0\" covered=\"9\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"893\" covered=\"106\"/><counter type=\"BRANCH\" missed=\"107\" covered=\"3\"/><counter type=\"LINE\" missed=\"160\" covered=\"28\"/><counter type=\"COMPLEXITY\" missed=\"103\" covered=\"5\"/><counter type=\"METHOD\" missed=\"48\" covered=\"5\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><sourcefile name=\"CNumber.java\"><line nr=\"17\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"93\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"110\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"134\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"148\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"155\" mi=\"39\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"160\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"182\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"186\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"190\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"191\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"192\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"196\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"197\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"199\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"212\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"224\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"238\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"239\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"241\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"242\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"243\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"246\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"258\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"270\" mi=\"26\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"282\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"284\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"285\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"286\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"287\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"289\" mi=\"50\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"295\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"309\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"323\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"337\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"355\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"356\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"357\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"358\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"360\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"361\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"364\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"366\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"367\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"370\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"373\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"387\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"389\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"390\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"391\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"392\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"394\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"397\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"408\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"435\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"436\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"437\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"439\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"442\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"444\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"445\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"446\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"447\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"448\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"451\" mi=\"7\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"452\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"456\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"468\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"469\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"470\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"471\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"483\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"484\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"486\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"498\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"500\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"501\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"503\" mi=\"0\" ci=\"12\" mb=\"2\" cb=\"2\"/><line nr=\"504\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"508\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"521\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"523\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"524\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"527\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"542\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"543\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"547\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"548\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"550\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"564\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"578\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"579\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"580\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"594\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"595\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"596\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"610\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"623\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"638\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"640\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"641\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"642\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"646\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"661\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"663\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"664\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"665\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"669\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"677\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"685\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"695\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"705\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"715\" mi=\"14\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"725\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"727\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"728\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"729\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"731\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"734\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"742\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"752\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"762\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"772\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"780\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"790\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"799\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"809\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"818\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"823\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"825\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"827\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"828\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"829\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"831\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"835\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"836\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"837\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"838\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"839\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"840\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"843\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"844\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"845\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"846\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"848\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"852\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"855\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"858\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"859\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"862\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"893\" covered=\"106\"/><counter type=\"BRANCH\" missed=\"107\" covered=\"3\"/><counter type=\"LINE\" missed=\"160\" covered=\"28\"/><counter type=\"COMPLEXITY\" missed=\"103\" covered=\"5\"/><counter type=\"METHOD\" missed=\"48\" covered=\"5\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"893\" covered=\"106\"/><counter type=\"BRANCH\" missed=\"107\" covered=\"3\"/><counter type=\"LINE\" missed=\"160\" covered=\"28\"/><counter type=\"COMPLEXITY\" missed=\"103\" covered=\"5\"/><counter type=\"METHOD\" missed=\"48\" covered=\"5\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></package><package name=\"linalg/util\"><class name=\"linalg/util/StringUtils\" sourcefilename=\"StringUtils.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"4\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"center\" desc=\"(Ljava/lang/String;I)Ljava/lang/String;\" line=\"9\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"5\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"center\" desc=\"(Ljava/lang/String;IC)Ljava/lang/String;\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"2\" covered=\"43\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"1\" covered=\"8\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"48\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"3\" covered=\"9\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"4\"/><counter type=\"METHOD\" missed=\"1\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/Token\" sourcefilename=\"Token.java\"><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;Ljava/lang/String;)V\" line=\"16\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"isKind\" desc=\"(Ljava/lang/String;)Z\" line=\"28\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"5\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getKind\" desc=\"()Ljava/lang/String;\" line=\"36\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getDetails\" desc=\"()Ljava/lang/String;\" line=\"43\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"matches\" desc=\"(Ljava/lang/String;Ljava/lang/String;)Z\" line=\"54\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"14\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"2\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"errorCheck\" desc=\"(Ljava/lang/String;Ljava/lang/String;)V\" line=\"65\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"6\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"2\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"errorCheck\" desc=\"(Ljava/lang/String;)V\" line=\"78\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"6\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"2\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"90\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"43\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"5\"/><counter type=\"LINE\" missed=\"6\" covered=\"10\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/ShapeLexer\" sourcefilename=\"ShapeLexer.java\"><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"10\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getContent\" desc=\"()Ljava/lang/String;\" line=\"18\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getNextToken\" desc=\"()Llinalg/util/Token;\" line=\"29\"><counter type=\"INSTRUCTION\" missed=\"120\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"33\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"16\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"129\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"37\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/util/LinAlgArrayUtils\" sourcefilename=\"LinAlgArrayUtils.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IIDD[Z)[[Llinalg/complex_number/CNumber;\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(II)[[Llinalg/complex_number/CNumber;\" line=\"40\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IID)[[Llinalg/complex_number/CNumber;\" line=\"45\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomComplex\" desc=\"(II)[[Llinalg/complex_number/CNumber;\" line=\"58\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randn\" desc=\"(IIZ)[[Llinalg/complex_number/CNumber;\" line=\"71\"><counter type=\"INSTRUCTION\" missed=\"27\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"printArr\" desc=\"([[Llinalg/complex_number/CNumber;)V\" line=\"84\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"printArr\" desc=\"([Llinalg/complex_number/CNumber;)V\" line=\"94\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getDims\" desc=\"([[Llinalg/complex_number/CNumber;)Ljava/lang/String;\" line=\"101\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(II)[[Llinalg/complex_number/CNumber;\" line=\"106\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"29\"/><counter type=\"BRANCH\" missed=\"0\" covered=\"4\"/><counter type=\"LINE\" missed=\"0\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"abs\" desc=\"([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"119\"><counter type=\"INSTRUCTION\" missed=\"17\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"flatten\" desc=\"([[Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"128\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getSection\" desc=\"([[Llinalg/complex_number/CNumber;IIII)[[Llinalg/complex_number/CNumber;\" line=\"144\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"contains\" desc=\"([II)Z\" line=\"157\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend2D\" desc=\"([Llinalg/complex_number/CNumber;I)[[Llinalg/complex_number/CNumber;\" line=\"189\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend2D\" desc=\"([DI)[[Llinalg/complex_number/CNumber;\" line=\"226\"><counter type=\"INSTRUCTION\" missed=\"63\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend2D\" desc=\"([II)[[Llinalg/complex_number/CNumber;\" line=\"265\"><counter type=\"INSTRUCTION\" missed=\"65\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;\" line=\"291\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"group\" desc=\"([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;\" line=\"304\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"573\" covered=\"29\"/><counter type=\"BRANCH\" missed=\"68\" covered=\"4\"/><counter type=\"LINE\" missed=\"97\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"52\" covered=\"3\"/><counter type=\"METHOD\" missed=\"18\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/NumberLexer\" sourcefilename=\"NumberLexer.java\"><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getNextToken\" desc=\"()Llinalg/util/Token;\" line=\"35\"><counter type=\"INSTRUCTION\" missed=\"113\" covered=\"136\"/><counter type=\"BRANCH\" missed=\"31\" covered=\"29\"/><counter type=\"LINE\" missed=\"29\" covered=\"36\"/><counter type=\"COMPLEXITY\" missed=\"22\" covered=\"9\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"113\" covered=\"142\"/><counter type=\"BRANCH\" missed=\"31\" covered=\"29\"/><counter type=\"LINE\" missed=\"29\" covered=\"39\"/><counter type=\"COMPLEXITY\" missed=\"22\" covered=\"10\"/><counter type=\"METHOD\" missed=\"0\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/ExampleMatrices\" sourcefilename=\"ExampleMatrices.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"27\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"31\"><counter type=\"INSTRUCTION\" missed=\"893\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"900\" covered=\"0\"/><counter type=\"LINE\" missed=\"19\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/util/Parser\" sourcefilename=\"Parser.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"7\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"parseShape\" desc=\"(Ljava/lang/String;)[I\" line=\"16\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"parseNumber\" desc=\"(Ljava/lang/String;)[D\" line=\"46\"><counter type=\"INSTRUCTION\" missed=\"85\" covered=\"90\"/><counter type=\"BRANCH\" missed=\"11\" covered=\"7\"/><counter type=\"LINE\" missed=\"17\" covered=\"23\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"2\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"128\" covered=\"90\"/><counter type=\"BRANCH\" missed=\"11\" covered=\"7\"/><counter type=\"LINE\" missed=\"29\" covered=\"23\"/><counter type=\"COMPLEXITY\" missed=\"10\" covered=\"2\"/><counter type=\"METHOD\" missed=\"2\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/util/FileManager\" sourcefilename=\"FileManager.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"readcsv\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"33\"><counter type=\"INSTRUCTION\" missed=\"118\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"27\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"write2csv\" desc=\"(Llinalg/Matrix;Ljava/lang/String;)V\" line=\"85\"><counter type=\"INSTRUCTION\" missed=\"68\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"15\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"113\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"247\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"49\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/util/Lexer\" sourcefilename=\"Lexer.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"6\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getContent\" desc=\"()Ljava/lang/String;\" line=\"14\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"digit\" desc=\"(I)Z\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"10\"/><counter type=\"BRANCH\" missed=\"0\" covered=\"4\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getNextSymbol\" desc=\"()I\" line=\"33\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"22\"/><counter type=\"BRANCH\" missed=\"0\" covered=\"2\"/><counter type=\"LINE\" missed=\"0\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"2\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"putBackSymbol\" desc=\"(I)V\" line=\"53\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"11\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"1\" covered=\"3\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"error\" desc=\"(Ljava/lang/String;)V\" line=\"69\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"49\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"7\"/><counter type=\"LINE\" missed=\"5\" covered=\"11\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"4\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><sourcefile name=\"FileManager.java\"><line nr=\"21\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"34\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"47\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"65\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"68\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"92\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"93\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"95\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"96\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"37\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"118\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"247\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"49\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"4\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Parser.java\"><line nr=\"7\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"2\"/><line nr=\"57\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"65\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"69\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"76\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"4\" ci=\"4\" mb=\"3\" cb=\"1\"/><line nr=\"86\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"93\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"100\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"110\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"112\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"116\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"128\" covered=\"90\"/><counter type=\"BRANCH\" missed=\"11\" covered=\"7\"/><counter type=\"LINE\" missed=\"29\" covered=\"23\"/><counter type=\"COMPLEXITY\" missed=\"10\" covered=\"2\"/><counter type=\"METHOD\" missed=\"2\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"ShapeLexer.java\"><line nr=\"10\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"11\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"12\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"39\" mi=\"12\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"41\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"44\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"6\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"48\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"61\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"73\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"74\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"77\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"80\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"129\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"37\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"NumberLexer.java\"><line nr=\"22\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"45\" mi=\"0\" ci=\"12\" mb=\"4\" cb=\"4\"/><line nr=\"47\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"50\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"54\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"2\"/><line nr=\"59\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"63\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"68\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"77\" mi=\"12\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"79\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"83\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"92\" mi=\"0\" ci=\"4\" mb=\"1\" cb=\"1\"/><line nr=\"93\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"97\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"106\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"107\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"115\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"116\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"2\"/><line nr=\"127\" mi=\"0\" ci=\"6\" mb=\"1\" cb=\"3\"/><line nr=\"128\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"0\" ci=\"6\" mb=\"1\" cb=\"3\"/><line nr=\"131\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"2\"/><line nr=\"134\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"136\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"137\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"113\" covered=\"142\"/><counter type=\"BRANCH\" missed=\"31\" covered=\"29\"/><counter type=\"LINE\" missed=\"29\" covered=\"39\"/><counter type=\"COMPLEXITY\" missed=\"22\" covered=\"10\"/><counter type=\"METHOD\" missed=\"0\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"ExampleMatrices.java\"><line nr=\"27\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"372\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"136\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"78\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"88\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"118\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"900\" covered=\"0\"/><counter type=\"LINE\" missed=\"19\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"StringUtils.java\"><line nr=\"4\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"5\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"13\" mi=\"0\" ci=\"6\" mb=\"2\" cb=\"2\"/><line nr=\"14\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"17\" mi=\"0\" ci=\"12\" mb=\"0\" cb=\"2\"/><line nr=\"18\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"2\"/><line nr=\"22\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"48\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"3\" covered=\"9\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"4\"/><counter type=\"METHOD\" missed=\"1\" covered=\"2\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"LinAlgArrayUtils.java\"><line nr=\"13\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"25\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"30\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"31\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"47\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"48\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"49\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"61\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"74\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"75\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"85\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"109\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"110\" mi=\"0\" ci=\"9\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"120\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"128\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"133\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"134\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"144\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"146\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"147\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"148\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"159\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"160\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"161\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"190\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"193\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"194\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"196\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"197\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"226\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"227\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"229\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"230\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"232\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"233\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"235\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"236\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"239\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"265\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"266\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"268\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"269\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"271\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"272\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"274\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"275\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"281\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"291\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"293\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"294\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"304\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"306\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"307\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"308\" mi=\"12\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"309\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"310\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"311\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"573\" covered=\"29\"/><counter type=\"BRANCH\" missed=\"68\" covered=\"4\"/><counter type=\"LINE\" missed=\"97\" covered=\"5\"/><counter type=\"COMPLEXITY\" missed=\"52\" covered=\"3\"/><counter type=\"METHOD\" missed=\"18\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"Token.java\"><line nr=\"16\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"17\" mi=\"0\" ci=\"6\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"0\" ci=\"14\" mb=\"1\" cb=\"3\"/><line nr=\"65\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"66\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"0\" ci=\"5\" mb=\"1\" cb=\"1\"/><line nr=\"79\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"43\"/><counter type=\"BRANCH\" missed=\"3\" covered=\"5\"/><counter type=\"LINE\" missed=\"6\" covered=\"10\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"Lexer.java\"><line nr=\"6\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"7\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"0\" ci=\"10\" mb=\"0\" cb=\"4\"/><line nr=\"33\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"0\" ci=\"4\" mb=\"0\" cb=\"2\"/><line nr=\"36\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"0\" ci=\"9\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"0\" ci=\"3\" mb=\"1\" cb=\"1\"/><line nr=\"54\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"49\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"7\"/><counter type=\"LINE\" missed=\"5\" covered=\"11\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"7\"/><counter type=\"METHOD\" missed=\"2\" covered=\"4\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"2136\" covered=\"401\"/><counter type=\"BRANCH\" missed=\"162\" covered=\"58\"/><counter type=\"LINE\" missed=\"274\" covered=\"97\"/><counter type=\"COMPLEXITY\" missed=\"127\" covered=\"33\"/><counter type=\"METHOD\" missed=\"34\" covered=\"16\"/><counter type=\"CLASS\" missed=\"3\" covered=\"6\"/></package><package name=\"linalg\"><class name=\"linalg/QRDecomposition\" sourcefilename=\"QRDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"15\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"execute\" desc=\"(Llinalg/Matrix;I)[Llinalg/Matrix;\" line=\"20\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QR\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"33\"><counter type=\"INSTRUCTION\" missed=\"174\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"29\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QRtemp\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"94\"><counter type=\"INSTRUCTION\" missed=\"237\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"31\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"158\"><counter type=\"INSTRUCTION\" missed=\"622\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"1049\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"79\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"14\" covered=\"0\"/><counter type=\"METHOD\" missed=\"5\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/SchurDecomposition\" sourcefilename=\"SchurDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"8\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schurDecomp\" desc=\"(Llinalg/Matrix;ZZ)[Llinalg/Matrix;\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"361\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"53\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"368\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"55\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixOperations\" sourcefilename=\"MatrixOperations.java\"><method name=\"add\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"141\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"14\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"9\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(D)Llinalg/Matrix;\" line=\"61\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sub\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"81\"><counter type=\"INSTRUCTION\" missed=\"72\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sub\" desc=\"(D)Llinalg/Matrix;\" line=\"102\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"mult\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"117\"><counter type=\"INSTRUCTION\" missed=\"43\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"elemMult\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"148\"><counter type=\"INSTRUCTION\" missed=\"104\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalMult\" desc=\"(D)Llinalg/Matrix;\" line=\"173\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalMult\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"184\"><counter type=\"INSTRUCTION\" missed=\"80\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"elemDiv\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"205\"><counter type=\"INSTRUCTION\" missed=\"168\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(D)Llinalg/Matrix;\" line=\"231\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"243\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"fip\" desc=\"(Llinalg/Matrix;)Llinalg/complex_number/CNumber;\" line=\"255\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"directSum\" desc=\"([Llinalg/Matrix;)Llinalg/Matrix;\" line=\"266\"><counter type=\"INSTRUCTION\" missed=\"91\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sqrt\" desc=\"()Llinalg/Matrix;\" line=\"301\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"abs\" desc=\"()Llinalg/Matrix;\" line=\"322\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"transpose\" desc=\"()Llinalg/Matrix;\" line=\"341\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"T\" desc=\"()Llinalg/Matrix;\" line=\"352\"><counter type=\"INSTRUCTION\" missed=\"69\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"conjugate\" desc=\"()Llinalg/Matrix;\" line=\"379\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"conjT\" desc=\"()Llinalg/Matrix;\" line=\"400\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"hermAdjoint\" desc=\"()Llinalg/Matrix;\" line=\"412\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"H\" desc=\"()Llinalg/Matrix;\" line=\"424\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"detRec\" desc=\"(Llinalg/Matrix;)Llinalg/complex_number/CNumber;\" line=\"436\"><counter type=\"INSTRUCTION\" missed=\"102\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"detQR\" desc=\"(Llinalg/Matrix;)Llinalg/complex_number/CNumber;\" line=\"471\"><counter type=\"INSTRUCTION\" missed=\"46\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"det\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"492\"><counter type=\"INSTRUCTION\" missed=\"60\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"stack\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"519\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"stack\" desc=\"(Llinalg/Matrix;I)Llinalg/Matrix;\" line=\"535\"><counter type=\"INSTRUCTION\" missed=\"210\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"22\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"11\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"augment\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"589\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ref\" desc=\"()Llinalg/Matrix;\" line=\"612\"><counter type=\"INSTRUCTION\" missed=\"114\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rref\" desc=\"(Z)Llinalg/Matrix;\" line=\"677\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rref\" desc=\"()Llinalg/Matrix;\" line=\"703\"><counter type=\"INSTRUCTION\" missed=\"181\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"22\" covered=\"0\"/><counter type=\"LINE\" missed=\"30\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"12\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rrefNoPivot\" desc=\"()Llinalg/Matrix;\" line=\"791\"><counter type=\"INSTRUCTION\" missed=\"108\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"erref\" desc=\"()Llinalg/Matrix;\" line=\"833\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"trace\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"850\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"tr\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"875\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rank\" desc=\"()I\" line=\"889\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"nullity\" desc=\"()I\" line=\"913\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inverse\" desc=\"()Llinalg/Matrix;\" line=\"925\"><counter type=\"INSTRUCTION\" missed=\"59\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inv\" desc=\"()Llinalg/Matrix;\" line=\"962\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"inverseTriU\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"981\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"recep\" desc=\"()Llinalg/Matrix;\" line=\"1003\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"2067\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"186\" covered=\"0\"/><counter type=\"LINE\" missed=\"275\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"133\" covered=\"0\"/><counter type=\"METHOD\" missed=\"40\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixMultiplicationAlgorithms\" sourcefilename=\"MatrixMultiplicationAlgorithms.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"10\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"standard\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;\" line=\"28\"><counter type=\"INSTRUCTION\" missed=\"116\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"concurrent\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;\" line=\"53\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"132\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/LUDecomposition\" sourcefilename=\"LUDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"17\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"execute\" desc=\"(Llinalg/Matrix;I)[Llinalg/Matrix;\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LU\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"53\"><counter type=\"INSTRUCTION\" missed=\"93\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"13\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUPartialPivot\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"85\"><counter type=\"INSTRUCTION\" missed=\"121\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"20\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUFullPivot\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"122\"><counter type=\"INSTRUCTION\" missed=\"152\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"23\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LDUDecomposition\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"163\"><counter type=\"INSTRUCTION\" missed=\"66\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxColIndex\" desc=\"([Llinalg/complex_number/CNumber;I)I\" line=\"186\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxIndex\" desc=\"(Llinalg/Matrix;I)[I\" line=\"201\"><counter type=\"INSTRUCTION\" missed=\"51\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"544\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"37\" covered=\"0\"/><counter type=\"LINE\" missed=\"98\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixManipulations\" sourcefilename=\"MatrixManipulations.java\"><method name=\"reshape\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"18\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"reshape\" desc=\"(II)Llinalg/Matrix;\" line=\"27\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"flatten\" desc=\"()Llinalg/Matrix;\" line=\"56\"><counter type=\"INSTRUCTION\" missed=\"48\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"flatten\" desc=\"(I)Llinalg/Matrix;\" line=\"82\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"14\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"extend\" desc=\"(I)Llinalg/Matrix;\" line=\"121\"><counter type=\"INSTRUCTION\" missed=\"70\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setValues\" desc=\"([[Llinalg/complex_number/CNumber;)V\" line=\"156\"><counter type=\"INSTRUCTION\" missed=\"36\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setValues\" desc=\"([[D)V\" line=\"174\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"set\" desc=\"(Llinalg/complex_number/CNumber;II)V\" line=\"198\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"set\" desc=\"(DII)V\" line=\"213\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setCol\" desc=\"(Llinalg/Vector;I)V\" line=\"232\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setCol\" desc=\"([Llinalg/complex_number/CNumber;I)V\" line=\"259\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setCol\" desc=\"([DI)V\" line=\"282\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setRow\" desc=\"(Llinalg/Vector;I)V\" line=\"307\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setRow\" desc=\"([Llinalg/complex_number/CNumber;I)V\" line=\"334\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setRow\" desc=\"([DI)V\" line=\"358\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setSliceCopy\" desc=\"(IILlinalg/Matrix;)Llinalg/Matrix;\" line=\"382\"><counter type=\"INSTRUCTION\" missed=\"67\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"setSlice\" desc=\"(IILlinalg/Matrix;)V\" line=\"412\"><counter type=\"INSTRUCTION\" missed=\"65\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeRow\" desc=\"(I)Llinalg/Matrix;\" line=\"437\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeRows\" desc=\"([I)Llinalg/Matrix;\" line=\"452\"><counter type=\"INSTRUCTION\" missed=\"51\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeCol\" desc=\"(I)Llinalg/Matrix;\" line=\"480\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"removeCols\" desc=\"([I)Llinalg/Matrix;\" line=\"495\"><counter type=\"INSTRUCTION\" missed=\"51\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"tril\" desc=\"()Llinalg/Matrix;\" line=\"522\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"tril\" desc=\"(I)Llinalg/Matrix;\" line=\"538\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"triu\" desc=\"()Llinalg/Matrix;\" line=\"560\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"triu\" desc=\"(I)Llinalg/Matrix;\" line=\"576\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"diag\" desc=\"()Llinalg/Matrix;\" line=\"600\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toDiag\" desc=\"([Llinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"610\"><counter type=\"INSTRUCTION\" missed=\"25\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toDiag\" desc=\"([D)Llinalg/Matrix;\" line=\"625\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"diagAsVector\" desc=\"()Llinalg/Vector;\" line=\"640\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"hessu\" desc=\"()Llinalg/Matrix;\" line=\"659\"><counter type=\"INSTRUCTION\" missed=\"258\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"23\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"hessuV\" desc=\"()[Llinalg/Matrix;\" line=\"708\"><counter type=\"INSTRUCTION\" missed=\"246\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"25\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"swapRows\" desc=\"(II)Llinalg/Matrix;\" line=\"759\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"swapCols\" desc=\"(II)Llinalg/Matrix;\" line=\"780\"><counter type=\"INSTRUCTION\" missed=\"42\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"multRow\" desc=\"(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"802\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"multRow\" desc=\"(ID)Llinalg/Matrix;\" line=\"820\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"divRow\" desc=\"(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;\" line=\"831\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"divRow\" desc=\"(ID)Llinalg/Matrix;\" line=\"842\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toVector\" desc=\"()Llinalg/Vector;\" line=\"855\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"round\" desc=\"(I)Llinalg/Matrix;\" line=\"889\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"roundToZero\" desc=\"(I)V\" line=\"907\"><counter type=\"INSTRUCTION\" missed=\"46\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"922\"><counter type=\"INSTRUCTION\" missed=\"35\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"1884\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"148\" covered=\"0\"/><counter type=\"LINE\" missed=\"272\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"115\" covered=\"0\"/><counter type=\"METHOD\" missed=\"41\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/PrintOptions\" sourcefilename=\"PrintOptions.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"17\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;clinit&gt;\" desc=\"()V\" line=\"26\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"9\"/><counter type=\"LINE\" missed=\"0\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"9\"/><counter type=\"LINE\" missed=\"2\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"1\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/SingularValueDecomposition\" sourcefilename=\"SingularValueDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"5\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"svd\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"19\"><counter type=\"INSTRUCTION\" missed=\"153\" covered=\"0\"/><counter type=\"LINE\" missed=\"15\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"46\"><counter type=\"INSTRUCTION\" missed=\"211\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"371\" covered=\"0\"/><counter type=\"LINE\" missed=\"24\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixChecks\" sourcefilename=\"MatrixChecks.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"8\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"dimensionCheck\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;I)V\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/Solvers\" sourcefilename=\"Solvers.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"13\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solve\" desc=\"(Llinalg/Matrix;[Llinalg/Vector;)[Llinalg/Vector;\" line=\"26\"><counter type=\"INSTRUCTION\" missed=\"66\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solve\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"55\"><counter type=\"INSTRUCTION\" missed=\"36\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solve\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;\" line=\"77\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solveQR\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"94\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"solveQR\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;\" line=\"115\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"backSolve\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"131\"><counter type=\"INSTRUCTION\" missed=\"97\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"forwardSolve\" desc=\"(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;\" line=\"173\"><counter type=\"INSTRUCTION\" missed=\"74\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"332\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"52\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/Matrix\" sourcefilename=\"Matrix.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"41\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"21\"/><counter type=\"LINE\" missed=\"0\" covered=\"6\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(I)V\" line=\"54\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"25\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"1\"/><counter type=\"LINE\" missed=\"1\" covered=\"7\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(ILlinalg/complex_number/CNumber;)V\" line=\"72\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"48\"/><counter type=\"BRANCH\" missed=\"1\" covered=\"5\"/><counter type=\"LINE\" missed=\"1\" covered=\"10\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(II)V\" line=\"96\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"23\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"2\"/><counter type=\"LINE\" missed=\"1\" covered=\"7\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(IILlinalg/complex_number/CNumber;)V\" line=\"114\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"49\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"6\"/><counter type=\"LINE\" missed=\"1\" covered=\"11\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"3\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"&lt;init&gt;\" desc=\"(IID)V\" line=\"142\"><counter type=\"INSTRUCTION\" missed=\"56\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/Matrix;)V\" line=\"168\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[Ljava/lang/String;)V\" line=\"181\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[Llinalg/complex_number/CNumber;)V\" line=\"200\"><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[D)V\" line=\"217\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([[I)V\" line=\"236\"><counter type=\"INSTRUCTION\" missed=\"58\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;)V\" line=\"255\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;Llinalg/complex_number/CNumber;)V\" line=\"270\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Ljava/lang/String;D)V\" line=\"292\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(I)Llinalg/Matrix;\" line=\"315\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(II)Llinalg/Matrix;\" line=\"329\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"zeros\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"342\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ones\" desc=\"(I)Llinalg/Matrix;\" line=\"357\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ones\" desc=\"(II)Llinalg/Matrix;\" line=\"378\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ones\" desc=\"(Ljava/lang/String;)Llinalg/Matrix;\" line=\"398\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"identity\" desc=\"(I)Llinalg/Matrix;\" line=\"428\"><counter type=\"INSTRUCTION\" missed=\"21\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"I\" desc=\"(I)Llinalg/Matrix;\" line=\"452\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"I\" desc=\"(II)Llinalg/Matrix;\" line=\"465\"><counter type=\"INSTRUCTION\" missed=\"25\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"van\" desc=\"(Llinalg/Vector;I)Llinalg/Matrix;\" line=\"483\"><counter type=\"INSTRUCTION\" missed=\"33\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(Ljava/lang/String;DD[Z)Llinalg/Matrix;\" line=\"514\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IIDD[Z)Llinalg/Matrix;\" line=\"536\"><counter type=\"INSTRUCTION\" missed=\"31\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(Ljava/lang/String;[Z)Llinalg/Matrix;\" line=\"556\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(II[Z)Llinalg/Matrix;\" line=\"575\"><counter type=\"INSTRUCTION\" missed=\"31\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(Ljava/lang/String;D)Llinalg/Matrix;\" line=\"592\"><counter type=\"INSTRUCTION\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"random\" desc=\"(IID)Llinalg/Matrix;\" line=\"609\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randn\" desc=\"(IIZ)Llinalg/Matrix;\" line=\"622\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomComplex\" desc=\"(II)Llinalg/Matrix;\" line=\"634\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomOrthogonal\" desc=\"(I)Llinalg/Matrix;\" line=\"646\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"randomUnitary\" desc=\"(I)Llinalg/Matrix;\" line=\"666\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"6\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"ln\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"685\"><counter type=\"INSTRUCTION\" missed=\"46\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"log\" desc=\"(Llinalg/Matrix;)Llinalg/Matrix;\" line=\"708\"><counter type=\"INSTRUCTION\" missed=\"46\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"log\" desc=\"(Llinalg/Matrix;I)Llinalg/Matrix;\" line=\"732\"><counter type=\"INSTRUCTION\" missed=\"50\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"copy\" desc=\"()Llinalg/Matrix;\" line=\"754\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getValues\" desc=\"()[[Llinalg/complex_number/CNumber;\" line=\"763\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"3\"/><counter type=\"LINE\" missed=\"0\" covered=\"1\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"getValuesAsDouble\" desc=\"()[[D\" line=\"775\"><counter type=\"INSTRUCTION\" missed=\"38\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getRow\" desc=\"(I)[Llinalg/complex_number/CNumber;\" line=\"794\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getRowAsVector\" desc=\"(I)Llinalg/Vector;\" line=\"805\"><counter type=\"INSTRUCTION\" missed=\"22\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getCol\" desc=\"(I)[Llinalg/complex_number/CNumber;\" line=\"820\"><counter type=\"INSTRUCTION\" missed=\"23\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getColAsVector\" desc=\"(I)Llinalg/Vector;\" line=\"837\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getSlice\" desc=\"(IIII)Llinalg/Matrix;\" line=\"857\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"get\" desc=\"(II)Llinalg/complex_number/CNumber;\" line=\"872\"><counter type=\"INSTRUCTION\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getAsDouble\" desc=\"(II)D\" line=\"883\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"print\" desc=\"([Ljava/lang/Object;)V\" line=\"893\"><counter type=\"INSTRUCTION\" missed=\"21\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"println\" desc=\"([Ljava/lang/Object;)V\" line=\"907\"><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"printSep\" desc=\"(Ljava/lang/String;[Ljava/lang/Object;)V\" line=\"925\"><counter type=\"INSTRUCTION\" missed=\"25\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"939\"><counter type=\"INSTRUCTION\" missed=\"201\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"32\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"10\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"1517\" covered=\"169\"/><counter type=\"BRANCH\" missed=\"118\" covered=\"14\"/><counter type=\"LINE\" missed=\"251\" covered=\"42\"/><counter type=\"COMPLEXITY\" missed=\"107\" covered=\"10\"/><counter type=\"METHOD\" missed=\"45\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/Vector\" sourcefilename=\"Vector.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"22\"><counter type=\"INSTRUCTION\" missed=\"28\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(I)V\" line=\"35\"><counter type=\"INSTRUCTION\" missed=\"30\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(II)V\" line=\"52\"><counter type=\"INSTRUCTION\" missed=\"57\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"14\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([I)V\" line=\"76\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([II)V\" line=\"93\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([D)V\" line=\"119\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([DI)V\" line=\"136\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([Llinalg/complex_number/CNumber;)V\" line=\"162\"><counter type=\"INSTRUCTION\" missed=\"29\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"([Llinalg/complex_number/CNumber;I)V\" line=\"179\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"&lt;init&gt;\" desc=\"(Llinalg/Vector;)V\" line=\"202\"><counter type=\"INSTRUCTION\" missed=\"31\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toMatrix\" desc=\"(Llinalg/Vector;)Llinalg/Matrix;\" line=\"221\"><counter type=\"INSTRUCTION\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toRowVector\" desc=\"()Llinalg/Vector;\" line=\"233\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toColVector\" desc=\"()Llinalg/Vector;\" line=\"249\"><counter type=\"INSTRUCTION\" missed=\"10\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"vectorType\" desc=\"()I\" line=\"263\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"innerProduct\" desc=\"(Llinalg/Vector;)Llinalg/complex_number/CNumber;\" line=\"276\"><counter type=\"INSTRUCTION\" missed=\"84\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"outerProduct\" desc=\"(Llinalg/Vector;)Llinalg/Matrix;\" line=\"324\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"337\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"351\"><counter type=\"INSTRUCTION\" missed=\"62\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"infNorm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"382\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"getEntries\" desc=\"()[Llinalg/complex_number/CNumber;\" line=\"393\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"add\" desc=\"(Llinalg/Vector;)Llinalg/Vector;\" line=\"408\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sub\" desc=\"(Llinalg/Vector;)Llinalg/Vector;\" line=\"419\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(Llinalg/complex_number/CNumber;)Llinalg/Vector;\" line=\"424\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"scalDiv\" desc=\"(D)Llinalg/Vector;\" line=\"428\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toMatrix\" desc=\"()Llinalg/Matrix;\" line=\"437\"><counter type=\"INSTRUCTION\" missed=\"64\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"toString\" desc=\"()Ljava/lang/String;\" line=\"462\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"751\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"50\" covered=\"0\"/><counter type=\"LINE\" missed=\"165\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"51\" covered=\"0\"/><counter type=\"METHOD\" missed=\"26\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/CholeskyDecomposition\" sourcefilename=\"CholeskyDecomposition.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"6\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"choleskyDecomp\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"12\"><counter type=\"INSTRUCTION\" missed=\"116\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"16\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"123\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixComparisons\" sourcefilename=\"MatrixComparisons.java\"><method name=\"equals\" desc=\"(Llinalg/Matrix;)Z\" line=\"15\"><counter type=\"INSTRUCTION\" missed=\"54\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sameShape\" desc=\"(Llinalg/Matrix;I)Z\" line=\"50\"><counter type=\"INSTRUCTION\" missed=\"45\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"13\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"sameShape\" desc=\"(Llinalg/Matrix;)Z\" line=\"84\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"matMultCheck\" desc=\"(Llinalg/Matrix;Llinalg/Matrix;)Z\" line=\"97\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isZero\" desc=\"()Z\" line=\"108\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isI\" desc=\"()Z\" line=\"130\"><counter type=\"INSTRUCTION\" missed=\"53\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isInv\" desc=\"(Llinalg/Matrix;)Z\" line=\"165\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"208\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"42\" covered=\"0\"/><counter type=\"LINE\" missed=\"47\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"7\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><class name=\"linalg/MatrixProperties\" sourcefilename=\"MatrixProperties.java\"><method name=\"numCols\" desc=\"()I\" line=\"21\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"numRows\" desc=\"()I\" line=\"32\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"shape\" desc=\"()Ljava/lang/String;\" line=\"43\"><counter type=\"INSTRUCTION\" missed=\"0\" covered=\"6\"/><counter type=\"LINE\" missed=\"0\" covered=\"2\"/><counter type=\"COMPLEXITY\" missed=\"0\" covered=\"1\"/><counter type=\"METHOD\" missed=\"0\" covered=\"1\"/></method><method name=\"isSquare\" desc=\"()Z\" line=\"54\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isEmpty\" desc=\"()Z\" line=\"66\"><counter type=\"INSTRUCTION\" missed=\"13\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"min\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"81\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"minReal\" desc=\"()D\" line=\"101\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"max\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"126\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxReal\" desc=\"()D\" line=\"147\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"minComplex\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"170\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"maxComplex\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"192\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isReal\" desc=\"()Z\" line=\"213\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isComplex\" desc=\"()Z\" line=\"235\"><counter type=\"INSTRUCTION\" missed=\"34\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isVector\" desc=\"()Z\" line=\"259\"><counter type=\"INSTRUCTION\" missed=\"17\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"vectorType\" desc=\"()I\" line=\"277\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSelfAdjoint\" desc=\"()Z\" line=\"303\"><counter type=\"INSTRUCTION\" missed=\"3\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isHermation\" desc=\"()Z\" line=\"316\"><counter type=\"INSTRUCTION\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSymmetric\" desc=\"()Z\" line=\"334\"><counter type=\"INSTRUCTION\" missed=\"18\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSkewSymmetric\" desc=\"()Z\" line=\"357\"><counter type=\"INSTRUCTION\" missed=\"20\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSymmetric\" desc=\"(Ljava/lang/String;)Z\" line=\"392\"><counter type=\"INSTRUCTION\" missed=\"22\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isOrthogonal\" desc=\"()Z\" line=\"419\"><counter type=\"INSTRUCTION\" missed=\"36\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"7\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isUnitary\" desc=\"()Z\" line=\"445\"><counter type=\"INSTRUCTION\" missed=\"26\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isTri\" desc=\"()I\" line=\"479\"><counter type=\"INSTRUCTION\" missed=\"24\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isTriU\" desc=\"()Z\" line=\"501\"><counter type=\"INSTRUCTION\" missed=\"40\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isTriL\" desc=\"()Z\" line=\"524\"><counter type=\"INSTRUCTION\" missed=\"50\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"10\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isDiagonal\" desc=\"()Z\" line=\"551\"><counter type=\"INSTRUCTION\" missed=\"23\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"4\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isFullRank\" desc=\"()Z\" line=\"567\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"5\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isSingular\" desc=\"()Z\" line=\"580\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"595\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"(D)Llinalg/complex_number/CNumber;\" line=\"610\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"norm\" desc=\"(DD)Llinalg/complex_number/CNumber;\" line=\"628\"><counter type=\"INSTRUCTION\" missed=\"70\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"9\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"infNorm\" desc=\"()Llinalg/complex_number/CNumber;\" line=\"653\"><counter type=\"INSTRUCTION\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"rowSpace\" desc=\"()Llinalg/Matrix;\" line=\"667\"><counter type=\"INSTRUCTION\" missed=\"81\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"colSpace\" desc=\"()Llinalg/Matrix;\" line=\"702\"><counter type=\"INSTRUCTION\" missed=\"79\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"nullSpace\" desc=\"()Llinalg/Matrix;\" line=\"739\"><counter type=\"INSTRUCTION\" missed=\"156\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"23\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"11\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"leftNullSpace\" desc=\"()Llinalg/Matrix;\" line=\"794\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isPos\" desc=\"()Z\" line=\"803\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isNeg\" desc=\"()Z\" line=\"824\"><counter type=\"INSTRUCTION\" missed=\"44\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isPosDef\" desc=\"()Z\" line=\"849\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isPosSemidef\" desc=\"()Z\" line=\"877\"><counter type=\"INSTRUCTION\" missed=\"39\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"8\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"5\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"eig\" desc=\"()[Llinalg/Matrix;\" line=\"909\"><counter type=\"INSTRUCTION\" missed=\"111\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"17\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"4\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"eigVecs\" desc=\"()Llinalg/Matrix;\" line=\"952\"><counter type=\"INSTRUCTION\" missed=\"5\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"eigVals\" desc=\"()Llinalg/Matrix;\" line=\"966\"><counter type=\"INSTRUCTION\" missed=\"9\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"isDiagonalizable\" desc=\"()Z\" line=\"978\"><counter type=\"INSTRUCTION\" missed=\"128\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"21\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"9\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"main\" desc=\"([Ljava/lang/String;)V\" line=\"1017\"><counter type=\"INSTRUCTION\" missed=\"858\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"2330\" covered=\"18\"/><counter type=\"BRANCH\" missed=\"214\" covered=\"0\"/><counter type=\"LINE\" missed=\"291\" covered=\"6\"/><counter type=\"COMPLEXITY\" missed=\"149\" covered=\"3\"/><counter type=\"METHOD\" missed=\"42\" covered=\"3\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></class><class name=\"linalg/Decompose\" sourcefilename=\"Decompose.java\"><method name=\"&lt;init&gt;\" desc=\"()V\" line=\"24\"><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"0\"/><counter type=\"LINE\" missed=\"2\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LU\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"45\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUP\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"67\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LUPQ\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"90\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"LDU\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"109\"><counter type=\"INSTRUCTION\" missed=\"14\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QR\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"127\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"QR\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"143\"><counter type=\"INSTRUCTION\" missed=\"4\" covered=\"0\"/><counter type=\"LINE\" missed=\"1\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"cholesky\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"157\"><counter type=\"INSTRUCTION\" missed=\"11\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schur\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"177\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schur\" desc=\"(Llinalg/Matrix;Z)[Llinalg/Matrix;\" line=\"200\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><method name=\"schurReal\" desc=\"(Llinalg/Matrix;)[Llinalg/Matrix;\" line=\"220\"><counter type=\"INSTRUCTION\" missed=\"15\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"2\" covered=\"0\"/><counter type=\"LINE\" missed=\"3\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"2\" covered=\"0\"/><counter type=\"METHOD\" missed=\"1\" covered=\"0\"/></method><counter type=\"INSTRUCTION\" missed=\"127\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"28\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"19\" covered=\"0\"/><counter type=\"METHOD\" missed=\"11\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></class><sourcefile name=\"SingularValueDecomposition.java\"><line nr=\"5\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"6\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"19\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"24\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"45\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"55\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"371\" covered=\"0\"/><counter type=\"LINE\" missed=\"24\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"3\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"LUDecomposition.java\"><line nr=\"17\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"2\" ci=\"0\" mb=\"5\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"58\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"59\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"74\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"89\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"93\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"101\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"104\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"130\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"134\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"136\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"140\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"142\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"143\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"144\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"154\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"155\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"168\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"171\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"172\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"176\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"178\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"180\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"190\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"191\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"196\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"201\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"202\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"205\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"206\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"207\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"208\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"214\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"544\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"37\" covered=\"0\"/><counter type=\"LINE\" missed=\"98\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"PrintOptions.java\"><line nr=\"17\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"7\" covered=\"9\"/><counter type=\"LINE\" missed=\"2\" covered=\"4\"/><counter type=\"COMPLEXITY\" missed=\"1\" covered=\"1\"/><counter type=\"METHOD\" missed=\"1\" covered=\"1\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"MatrixChecks.java\"><line nr=\"8\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"23\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"31\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"32\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"47\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"8\" covered=\"0\"/><counter type=\"LINE\" missed=\"12\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixMultiplicationAlgorithms.java\"><line nr=\"10\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"11\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"32\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"33\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"34\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"132\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"6\" covered=\"0\"/><counter type=\"LINE\" missed=\"11\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"6\" covered=\"0\"/><counter type=\"METHOD\" missed=\"3\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Decompose.java\"><line nr=\"24\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"46\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"49\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"68\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"91\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"110\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"127\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"157\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"158\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"161\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"178\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"201\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"221\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"224\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"127\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"16\" covered=\"0\"/><counter type=\"LINE\" missed=\"28\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"19\" covered=\"0\"/><counter type=\"METHOD\" missed=\"11\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"QRDecomposition.java\"><line nr=\"15\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"33\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"34\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"45\" mi=\"19\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"47\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"12\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"55\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"62\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"78\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"95\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"105\" mi=\"19\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"106\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"108\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"110\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"112\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"113\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"118\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"127\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"134\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"144\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"158\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"167\" mi=\"41\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"203\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"176\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"188\" mi=\"24\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"23\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"190\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"191\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"1049\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"18\" covered=\"0\"/><counter type=\"LINE\" missed=\"79\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"14\" covered=\"0\"/><counter type=\"METHOD\" missed=\"5\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixComparisons.java\"><line nr=\"15\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"19\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"25\" mi=\"14\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"26\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"54\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"55\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"59\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"60\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"64\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"65\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"108\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"109\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"112\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"113\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"115\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"134\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"138\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"139\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"140\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"142\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"147\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"208\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"42\" covered=\"0\"/><counter type=\"LINE\" missed=\"47\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"28\" covered=\"0\"/><counter type=\"METHOD\" missed=\"7\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"SchurDecomposition.java\"><line nr=\"8\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"9\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"13\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"16\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"17\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"19\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"33\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"36\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"49\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"50\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"56\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"21\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"23\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"75\" mi=\"25\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"86\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"90\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"95\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"96\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"368\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"12\" covered=\"0\"/><counter type=\"LINE\" missed=\"55\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"8\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Solvers.java\"><line nr=\"13\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"27\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"36\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"56\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"78\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"116\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"135\" mi=\"27\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"138\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"141\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"160\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"174\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"175\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"177\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"179\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"180\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"183\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"332\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"20\" covered=\"0\"/><counter type=\"LINE\" missed=\"52\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"18\" covered=\"0\"/><counter type=\"METHOD\" missed=\"8\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"Matrix.java\"><line nr=\"41\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"45\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"46\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"0\" ci=\"2\" mb=\"1\" cb=\"1\"/><line nr=\"56\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"63\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"72\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"73\" mi=\"0\" ci=\"2\" mb=\"1\" cb=\"1\"/><line nr=\"74\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"0\" ci=\"8\" mb=\"0\" cb=\"2\"/><line nr=\"83\" mi=\"0\" ci=\"8\" mb=\"0\" cb=\"2\"/><line nr=\"84\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"0\" ci=\"4\" mb=\"2\" cb=\"2\"/><line nr=\"98\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"114\" mi=\"0\" ci=\"2\" mb=\"0\" cb=\"0\"/><line nr=\"115\" mi=\"0\" ci=\"4\" mb=\"2\" cb=\"2\"/><line nr=\"116\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"126\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"2\"/><line nr=\"127\" mi=\"0\" ci=\"7\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"0\" ci=\"5\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"0\" ci=\"1\" mb=\"0\" cb=\"0\"/><line nr=\"142\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"4\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"144\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"148\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"149\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"154\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"155\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"159\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"160\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"168\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"169\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"171\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"172\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"183\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"188\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"189\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"201\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"202\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"206\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"207\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"217\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"218\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"219\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"221\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"223\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"224\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"225\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"228\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"236\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"237\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"238\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"239\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"240\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"243\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"244\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"247\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"255\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"256\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"257\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"258\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"260\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"261\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"270\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"271\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"272\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"273\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"274\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"275\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"276\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"279\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"280\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"283\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"292\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"293\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"294\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"295\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"296\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"298\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"300\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"301\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"302\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"305\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"315\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"329\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"330\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"342\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"343\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"344\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"345\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"346\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"357\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"359\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"360\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"361\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"365\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"378\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"380\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"381\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"382\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"386\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"398\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"399\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"400\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"402\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"404\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"405\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"406\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"410\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"428\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"430\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"431\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"434\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"452\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"465\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"467\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"468\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"471\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"483\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"484\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"487\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"488\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"490\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"491\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"492\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"495\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"514\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"515\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"516\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"518\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"536\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"537\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"540\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"556\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"557\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"558\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"560\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"575\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"576\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"579\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"592\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"593\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"594\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"596\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"609\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"622\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"634\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"646\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"647\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"648\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"650\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"651\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"654\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"666\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"667\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"668\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"670\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"671\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"674\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"685\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"686\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"689\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"691\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"692\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"693\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"697\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"708\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"709\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"712\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"714\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"715\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"716\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"720\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"732\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"733\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"736\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"738\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"739\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"740\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"744\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"754\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"763\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"775\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"777\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"778\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"779\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"783\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"794\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"805\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"807\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"809\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"820\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"822\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"823\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"826\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"837\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"839\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"840\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"843\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"857\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"859\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"860\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"863\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"872\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"883\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"893\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"894\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"896\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"907\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"908\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"911\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"912\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"925\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"926\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"929\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"930\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"939\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"941\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"942\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"943\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"945\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"946\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"948\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"950\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"951\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"954\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"957\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"958\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"959\" mi=\"9\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"960\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"961\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"964\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"966\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"968\" mi=\"9\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"969\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"970\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"971\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"972\" mi=\"23\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"973\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"976\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"977\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"978\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"982\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"984\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"986\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"987\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"989\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"992\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"1517\" covered=\"169\"/><counter type=\"BRANCH\" missed=\"118\" covered=\"14\"/><counter type=\"LINE\" missed=\"251\" covered=\"42\"/><counter type=\"COMPLEXITY\" missed=\"107\" covered=\"10\"/><counter type=\"METHOD\" missed=\"45\" covered=\"6\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"MatrixManipulations.java\"><line nr=\"18\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"19\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"20\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"32\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"37\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"38\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"58\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"63\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"64\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"69\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"71\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"88\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"89\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"91\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"93\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"94\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"106\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"122\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"128\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"129\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"131\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"132\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"133\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"138\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"141\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"156\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"158\" mi=\"16\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"159\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"174\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"176\" mi=\"16\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"177\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"182\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"183\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"186\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"200\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"201\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"213\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"215\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"216\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"232\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"234\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"235\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"237\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"238\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"241\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"242\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"244\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"261\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"262\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"265\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"266\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"268\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"282\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"284\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"285\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"288\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"289\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"291\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"307\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"309\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"310\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"312\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"313\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"317\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"319\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"334\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"336\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"337\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"340\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"341\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"343\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"358\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"360\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"361\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"364\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"365\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"367\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"382\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"384\" mi=\"14\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"385\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"389\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"390\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"391\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"395\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"412\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"414\" mi=\"14\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"415\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"420\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"421\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"424\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"437\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"438\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"452\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"455\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"457\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"458\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"459\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"460\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"462\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"466\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"480\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"481\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"495\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"496\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"498\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"500\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"501\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"502\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"503\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"505\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"509\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"522\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"538\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"539\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"541\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"542\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"543\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"547\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"560\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"576\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"577\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"578\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"581\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"582\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"583\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"585\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"586\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"590\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"600\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"610\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"612\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"613\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"616\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"625\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"627\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"628\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"631\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"640\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"641\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"643\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"644\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"647\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"659\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"660\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"661\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"663\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"664\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"668\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"669\" mi=\"23\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"670\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"672\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"673\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"674\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"675\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"676\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"677\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"680\" mi=\"32\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"682\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"683\" mi=\"29\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"684\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"687\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"688\" mi=\"37\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"689\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"694\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"696\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"708\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"709\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"710\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"711\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"713\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"714\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"718\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"719\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"721\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"722\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"723\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"724\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"725\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"726\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"729\" mi=\"32\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"731\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"732\" mi=\"29\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"733\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"736\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"737\" mi=\"37\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"738\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"742\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"744\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"745\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"747\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"759\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"760\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"762\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"763\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"765\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"766\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"768\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"780\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"781\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"783\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"784\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"786\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"787\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"788\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"791\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"802\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"803\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"805\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"806\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"809\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"820\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"831\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"842\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"855\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"856\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"858\" mi=\"6\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"859\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"861\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"864\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"865\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"868\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"869\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"872\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"876\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"889\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"891\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"892\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"893\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"897\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"907\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"908\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"910\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"911\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"912\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"913\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"917\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"922\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"923\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"925\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"926\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"1884\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"148\" covered=\"0\"/><counter type=\"LINE\" missed=\"272\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"115\" covered=\"0\"/><counter type=\"METHOD\" missed=\"41\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"CholeskyDecomposition.java\"><line nr=\"6\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"7\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"12\" mi=\"19\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"14\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"15\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"16\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"18\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"19\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"21\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"24\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"12\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"28\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"30\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"123\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"10\" covered=\"0\"/><counter type=\"LINE\" missed=\"18\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"7\" covered=\"0\"/><counter type=\"METHOD\" missed=\"2\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixProperties.java\"><line nr=\"21\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"22\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"32\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"43\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"44\" mi=\"0\" ci=\"3\" mb=\"0\" cb=\"0\"/><line nr=\"54\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"66\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"82\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"84\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"87\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"101\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"105\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"106\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"107\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"112\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"127\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"130\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"133\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"149\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"151\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"152\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"153\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"154\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"159\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"170\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"171\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"174\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"175\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"176\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"181\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"193\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"195\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"196\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"197\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"198\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"213\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"214\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"216\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"217\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"218\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"219\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"225\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"235\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"236\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"238\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"239\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"240\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"241\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"242\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"247\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"259\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"260\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"262\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"263\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"266\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"277\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"280\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"281\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"283\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"284\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"286\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"287\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"290\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"303\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"316\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"317\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"334\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"336\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"337\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"340\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"357\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"359\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"360\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"363\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"392\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"393\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"395\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"396\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"398\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"399\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"402\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"421\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"422\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"425\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"426\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"429\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"431\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"445\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"447\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"448\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"451\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"479\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"480\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"482\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"483\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"484\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"485\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"486\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"487\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"490\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"501\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"502\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"504\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"505\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"506\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"507\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"508\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"513\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"524\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"525\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"527\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"528\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"531\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"532\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"533\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"534\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"535\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"540\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"551\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"553\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"554\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"557\" mi=\"10\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"567\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"568\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"570\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"571\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"574\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"580\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"581\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"583\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"595\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"610\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"611\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"614\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"628\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"629\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"631\" mi=\"15\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"632\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"636\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"637\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"638\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"641\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"644\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"653\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"654\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"667\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"668\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"669\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"670\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"675\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"676\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"677\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"678\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"679\" mi=\"13\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"680\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"689\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"702\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"703\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"704\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"705\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"710\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"711\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"712\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"713\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"714\" mi=\"13\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"715\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"728\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"739\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"741\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"742\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"743\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"748\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"749\" mi=\"6\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"750\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"752\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"753\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"754\" mi=\"13\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"755\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"764\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"765\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"766\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"768\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"769\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"771\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"772\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"773\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"774\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"780\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"781\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"783\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"794\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"803\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"804\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"806\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"807\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"808\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"809\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"810\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"815\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"824\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"825\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"827\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"828\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"829\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"830\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"831\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"836\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"849\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"852\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"853\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"854\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"856\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"857\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"859\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"864\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"877\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"880\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"881\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"882\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"884\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"885\" mi=\"17\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"887\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"892\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"909\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"911\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"912\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"913\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"915\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"916\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"917\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"918\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"920\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"921\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"923\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"925\" mi=\"18\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"926\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"931\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"935\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"936\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"938\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"952\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"966\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"967\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"978\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"979\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"980\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"981\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"983\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"985\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"986\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"988\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"989\" mi=\"20\" ci=\"0\" mb=\"6\" cb=\"0\"/><line nr=\"990\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"992\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"993\" mi=\"14\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"994\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"998\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1000\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1001\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1005\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1006\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1007\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1008\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1012\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1017\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1022\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1027\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1031\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1036\" mi=\"135\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1041\" mi=\"81\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1045\" mi=\"54\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1049\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1054\" mi=\"87\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1060\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1063\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1065\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1066\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1067\" mi=\"17\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1069\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1070\" mi=\"28\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1074\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1076\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"2330\" covered=\"18\"/><counter type=\"BRANCH\" missed=\"214\" covered=\"0\"/><counter type=\"LINE\" missed=\"291\" covered=\"6\"/><counter type=\"COMPLEXITY\" missed=\"149\" covered=\"3\"/><counter type=\"METHOD\" missed=\"42\" covered=\"3\"/><counter type=\"CLASS\" missed=\"0\" covered=\"1\"/></sourcefile><sourcefile name=\"Vector.java\"><line nr=\"22\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"23\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"26\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"28\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"29\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"35\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"37\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"38\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"39\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"40\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"41\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"52\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"53\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"54\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"55\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"56\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"57\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"58\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"59\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"60\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"65\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"66\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"67\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"68\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"76\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"77\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"78\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"79\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"80\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"93\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"94\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"95\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"96\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"97\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"98\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"99\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"100\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"101\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"103\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"104\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"105\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"107\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"110\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"111\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"120\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"122\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"123\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"124\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"125\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"136\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"137\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"138\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"139\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"140\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"141\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"142\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"143\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"144\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"145\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"146\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"147\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"148\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"153\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"154\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"162\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"163\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"164\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"165\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"166\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"167\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"168\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"169\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"179\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"180\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"181\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"182\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"183\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"188\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"189\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"190\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"191\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"192\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"195\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"198\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"199\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"202\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"203\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"204\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"205\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"206\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"207\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"208\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"221\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"233\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"234\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"236\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"249\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"250\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"252\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"263\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"276\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"277\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"281\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"284\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"285\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"287\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"290\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"291\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"292\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"293\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"294\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"297\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"298\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"299\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"300\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"304\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"324\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"337\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"351\" mi=\"11\" ci=\"0\" mb=\"6\" cb=\"0\"/><line nr=\"352\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"354\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"355\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"358\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"359\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"361\" mi=\"16\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"362\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"365\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"382\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"384\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"393\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"394\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"396\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"408\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"419\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"424\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"428\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"437\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"439\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"440\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"441\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"444\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"445\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"446\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"450\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"462\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"463\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"751\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"50\" covered=\"0\"/><counter type=\"LINE\" missed=\"165\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"51\" covered=\"0\"/><counter type=\"METHOD\" missed=\"26\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><sourcefile name=\"MatrixOperations.java\"><line nr=\"21\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"24\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"25\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"27\" mi=\"16\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"30\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"31\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"33\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"36\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"37\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"38\" mi=\"16\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"39\" mi=\"25\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"42\" mi=\"38\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"48\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"51\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"61\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"62\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"64\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"65\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"66\" mi=\"24\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"70\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"81\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"82\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"83\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"85\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"86\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"87\" mi=\"38\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"92\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"102\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"117\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"119\" mi=\"4\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"120\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"121\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"126\" mi=\"16\" ci=\"0\" mb=\"8\" cb=\"0\"/><line nr=\"127\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"129\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"132\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"148\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"149\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"150\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"152\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"153\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"155\" mi=\"70\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"161\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"173\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"184\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"185\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"187\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"188\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"189\" mi=\"50\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"194\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"205\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"206\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"207\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"209\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"210\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"211\" mi=\"134\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"220\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"231\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"232\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"243\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"244\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"255\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"266\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"267\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"268\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"270\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"271\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"272\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"276\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"278\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"279\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"280\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"281\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"282\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"284\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"285\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"286\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"290\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"301\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"302\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"304\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"305\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"306\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"310\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"322\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"323\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"325\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"326\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"327\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"331\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"341\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"352\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"353\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"355\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"358\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"359\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"361\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"362\" mi=\"13\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"363\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"369\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"379\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"380\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"382\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"383\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"384\" mi=\"12\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"388\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"400\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"412\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"424\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"436\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"438\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"439\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"441\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"442\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"443\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"444\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"445\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"447\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"448\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"450\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"451\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"453\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"454\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"456\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"460\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"471\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"472\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"474\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"476\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"477\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"480\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"492\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"494\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"495\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"498\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"499\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"500\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"501\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"502\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"504\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"507\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"519\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"535\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"536\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"538\" mi=\"2\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"539\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"540\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"544\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"546\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"547\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"548\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"549\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"551\" mi=\"16\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"556\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"557\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"558\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"562\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"564\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"565\" mi=\"11\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"566\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"567\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"569\" mi=\"18\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"575\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"578\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"589\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"612\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"615\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"616\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"618\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"619\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"620\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"622\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"623\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"627\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"628\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"630\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"631\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"632\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"641\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"644\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"645\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"648\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"677\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"678\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"703\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"707\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"708\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"710\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"711\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"712\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"714\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"715\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"722\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"724\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"725\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"726\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"730\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"731\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"732\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"735\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"737\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"738\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"741\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"742\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"744\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"745\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"747\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"749\" mi=\"15\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"750\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"751\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"757\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"758\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"761\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"765\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"791\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"794\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"795\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"797\" mi=\"8\" ci=\"0\" mb=\"4\" cb=\"0\"/><line nr=\"798\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"799\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"801\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"802\" mi=\"14\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"806\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"807\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"809\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"810\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"811\" mi=\"20\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"812\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"817\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"818\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"821\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"833\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"834\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"835\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"837\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"850\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"852\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"853\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"856\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"858\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"859\" mi=\"9\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"862\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"875\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"889\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"890\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"891\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"893\" mi=\"9\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"894\" mi=\"5\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"895\" mi=\"1\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"902\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"913\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"914\" mi=\"6\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"925\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"927\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"928\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"931\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"932\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"934\" mi=\"10\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"935\" mi=\"11\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"938\" mi=\"7\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"947\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"951\" mi=\"10\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"962\" mi=\"3\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"981\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"982\" mi=\"4\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"984\" mi=\"3\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"985\" mi=\"5\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"988\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"990\" mi=\"8\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"993\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1003\" mi=\"7\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1005\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1006\" mi=\"8\" ci=\"0\" mb=\"2\" cb=\"0\"/><line nr=\"1007\" mi=\"13\" ci=\"0\" mb=\"0\" cb=\"0\"/><line nr=\"1011\" mi=\"2\" ci=\"0\" mb=\"0\" cb=\"0\"/><counter type=\"INSTRUCTION\" missed=\"2067\" covered=\"0\"/><counter type=\"BRANCH\" missed=\"186\" covered=\"0\"/><counter type=\"LINE\" missed=\"275\" covered=\"0\"/><counter type=\"COMPLEXITY\" missed=\"133\" covered=\"0\"/><counter type=\"METHOD\" missed=\"40\" covered=\"0\"/><counter type=\"CLASS\" missed=\"1\" covered=\"0\"/></sourcefile><counter type=\"INSTRUCTION\" missed=\"11857\" covered=\"196\"/><counter type=\"BRANCH\" missed=\"885\" covered=\"14\"/><counter type=\"LINE\" missed=\"1680\" covered=\"52\"/><counter type=\"COMPLEXITY\" missed=\"693\" covered=\"14\"/><counter type=\"METHOD\" missed=\"246\" covered=\"10\"/><counter type=\"CLASS\" missed=\"13\" covered=\"3\"/></package><counter type=\"INSTRUCTION\" missed=\"15464\" covered=\"703\"/><counter type=\"BRANCH\" missed=\"1188\" covered=\"75\"/><counter type=\"LINE\" missed=\"2213\" covered=\"177\"/><counter type=\"COMPLEXITY\" missed=\"954\" covered=\"52\"/><counter type=\"METHOD\" missed=\"342\" covered=\"31\"/><counter type=\"CLASS\" missed=\"21\" covered=\"10\"/></report>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/jacoco.xml b/target/site/jacoco/jacoco.xml
--- a/target/site/jacoco/jacoco.xml	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/jacoco.xml	(date 1648106316673)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Java-Linear-Algebra"><sessioninfo id="DESKTOP-3F0SSFQ-fe00496a" start="1632785396729" dump="1632785398884"/><sessioninfo id="DESKTOP-3F0SSFQ-9cdf880c" start="1632787027066" dump="1632787028389"/><sessioninfo id="DESKTOP-3F0SSFQ-33e4a7ad" start="1632787824685" dump="1632787826107"/><sessioninfo id="DESKTOP-3F0SSFQ-d759012b" start="1632787898313" dump="1632787899650"/><sessioninfo id="DESKTOP-3F0SSFQ-653be16e" start="1632788590487" dump="1632788591452"/><sessioninfo id="DESKTOP-3F0SSFQ-e4543b44" start="1632788616892" dump="1632788617864"/><sessioninfo id="DESKTOP-3F0SSFQ-4d4af810" start="1632788635046" dump="1632788635903"/><sessioninfo id="DESKTOP-3F0SSFQ-ca0ff9dc" start="1632789177899" dump="1632789179094"/><sessioninfo id="DESKTOP-3F0SSFQ-2b03aa12" start="1632789197815" dump="1632789198970"/><sessioninfo id="DESKTOP-3F0SSFQ-92377961" start="1632789713743" dump="1632789715200"/><sessioninfo id="DESKTOP-3F0SSFQ-f67dcf9d" start="1632791223035" dump="1632791223756"/><sessioninfo id="DESKTOP-3F0SSFQ-3deffdcc" start="1632791225995" dump="1632791227517"/><sessioninfo id="DESKTOP-3F0SSFQ-8370ba74" start="1632791234697" dump="1632791236818"/><sessioninfo id="DESKTOP-3F0SSFQ-e80853d4" start="1632791240963" dump="1632791242073"/><sessioninfo id="DESKTOP-3F0SSFQ-9ee31791" start="1632791253485" dump="1632791254576"/><sessioninfo id="DESKTOP-3F0SSFQ-58a45499" start="1632791643884" dump="1632791645145"/><sessioninfo id="DESKTOP-3F0SSFQ-6b36a7ae" start="1632791710919" dump="1632791711976"/><sessioninfo id="DESKTOP-3F0SSFQ-cd238e7f" start="1632792212364" dump="1632792213589"/><sessioninfo id="DESKTOP-3F0SSFQ-32a355ac" start="1632792226532" dump="1632792227738"/><sessioninfo id="DESKTOP-3F0SSFQ-cf2ae673" start="1632792263916" dump="1632792265083"/><sessioninfo id="DESKTOP-3F0SSFQ-d8ae4a1d" start="1632792284518" dump="1632792285894"/><sessioninfo id="DESKTOP-3F0SSFQ-590642cc" start="1632792572203" dump="1632792573348"/><sessioninfo id="DESKTOP-3F0SSFQ-c18502e8" start="1632792970189" dump="1632792971270"/><sessioninfo id="DESKTOP-3F0SSFQ-bb68ec51" start="1632793008312" dump="1632793009524"/><sessioninfo id="DESKTOP-3F0SSFQ-dc7eaf97" start="1632794014578" dump="1632794015732"/><sessioninfo id="DESKTOP-3F0SSFQ-4fd69810" start="1632794041217" dump="1632794042229"/><sessioninfo id="DESKTOP-3F0SSFQ-96825214" start="1632794338912" dump="1632794340518"/><sessioninfo id="DESKTOP-3F0SSFQ-89a0fc42" start="1632794376493" dump="1632794377631"/><sessioninfo id="DESKTOP-3F0SSFQ-cab82cf0" start="1632794402490" dump="1632794403864"/><sessioninfo id="DESKTOP-3F0SSFQ-c139591e" start="1632796470111" dump="1632796470839"/><sessioninfo id="DESKTOP-3F0SSFQ-82b8fd28" start="1632796538375" dump="1632796539119"/><sessioninfo id="DESKTOP-3F0SSFQ-3bdff75d" start="1632796570427" dump="1632796571185"/><sessioninfo id="DESKTOP-3F0SSFQ-cdb98687" start="1632796751134" dump="1632796751986"/><sessioninfo id="DESKTOP-3F0SSFQ-e6b68394" start="1632796813525" dump="1632796814279"/><sessioninfo id="DESKTOP-3F0SSFQ-9c517ae6" start="1632796822743" dump="1632796823495"/><sessioninfo id="DESKTOP-3F0SSFQ-7849bf85" start="1632805631900" dump="1632805632787"/><sessioninfo id="DESKTOP-3F0SSFQ-8af91b33" start="1634341976579" dump="1634341977263"/><sessioninfo id="DESKTOP-3F0SSFQ-3c496517" start="1634341993197" dump="1634341994053"/><sessioninfo id="DESKTOP-3F0SSFQ-a1df1e07" start="1634342019237" dump="1634342019963"/><sessioninfo id="DESKTOP-3F0SSFQ-aff8a924" start="1634342037885" dump="1634342038662"/><sessioninfo id="DESKTOP-3F0SSFQ-f94da3ae" start="1634342585320" dump="1634342586098"/><sessioninfo id="Jacobs-MacBook-Pro.local-f3f79794" start="1634836555186" dump="1634836564541"/><sessioninfo id="DESKTOP-3F0SSFQ-1c4bcb6b" start="1643427498985" dump="1643427499604"/><sessioninfo id="BLD-5f143199" start="1647898351210" dump="1647898351662"/><sessioninfo id="BLD-d03d1266" start="1647898491358" dump="1647898491794"/><sessioninfo id="BLD-13bcee4f" start="1647898569818" dump="1647898570267"/><sessioninfo id="BLD-73b3ed2a" start="1647898592627" dump="1647898593088"/><sessioninfo id="BLD-9ce2ccfd" start="1647898684168" dump="1647898684603"/><sessioninfo id="BLD-2afa8ef6" start="1647898735356" dump="1647898735807"/><sessioninfo id="BLD-edd601d3" start="1647898881563" dump="1647898882013"/><sessioninfo id="BLD-c28ecaff" start="1647899008302" dump="1647899008717"/><sessioninfo id="BLD-55cd338f" start="1647899075318" dump="1647899075734"/><sessioninfo id="BLD-e4801ee3" start="1647899243059" dump="1647899243476"/><sessioninfo id="BLD-9f351c8a" start="1647899359485" dump="1647899359897"/><sessioninfo id="BLD-9eacc799" start="1647899387049" dump="1647899387474"/><sessioninfo id="BLD-b904ea4e" start="1647899413544" dump="1647899413951"/><sessioninfo id="BLD-644b10e9" start="1647899764441" dump="1647899764877"/><sessioninfo id="BLD-dcf1263f" start="1647899789708" dump="1647899790139"/><sessioninfo id="BLD-c8bba310" start="1647899824720" dump="1647899825142"/><sessioninfo id="BLD-f13f0532" start="1647900114267" dump="1647900114710"/><sessioninfo id="BLD-4d60d8a9" start="1647900249802" dump="1647900250217"/><sessioninfo id="BLD-7c76e99b" start="1647900266246" dump="1647900266662"/><sessioninfo id="BLD-6e4c34ba" start="1647900330699" dump="1647900331108"/><sessioninfo id="BLD-611d5be4" start="1647900412281" dump="1647900412740"/><sessioninfo id="BLD-fbf836d9" start="1647900429127" dump="1647900429548"/><sessioninfo id="BLD-cf666b95" start="1647900528924" dump="1647900529345"/><sessioninfo id="BLD-3ac3eaab" start="1647900559463" dump="1647900559876"/><sessioninfo id="BLD-eb30d151" start="1647900754458" dump="1647900754875"/><sessioninfo id="BLD-4704b508" start="1647900990010" dump="1647900990438"/><sessioninfo id="BLD-a9161df8" start="1647901024091" dump="1647901024523"/><sessioninfo id="BLD-8d1de9c8" start="1647901051302" dump="1647901051745"/><sessioninfo id="BLD-384b8695" start="1647901063007" dump="1647901063422"/><sessioninfo id="BLD-dce664e1" start="1647901440753" dump="1647901441166"/><sessioninfo id="BLD-5871c6dc" start="1647901459647" dump="1647901460070"/><sessioninfo id="BLD-ec3d5b51" start="1647901469720" dump="1647901470113"/><sessioninfo id="BLD-c4a22b0" start="1647901479124" dump="1647901479564"/><sessioninfo id="BLD-e17dbfe3" start="1647901493629" dump="1647901494034"/><sessioninfo id="BLD-6691bb9b" start="1647901503444" dump="1647901503856"/><sessioninfo id="BLD-f402c671" start="1647901559561" dump="1647901559963"/><sessioninfo id="BLD-df63c0c1" start="1647901569760" dump="1647901570152"/><sessioninfo id="BLD-730deef4" start="1647901579008" dump="1647901579401"/><sessioninfo id="BLD-47ae258d" start="1647901657037" dump="1647901657471"/><sessioninfo id="BLD-65f519f5" start="1647901669672" dump="1647901670101"/><sessioninfo id="BLD-69c63fbe" start="1647901680865" dump="1647901681280"/><sessioninfo id="BLD-a715049" start="1647901692073" dump="1647901692469"/><sessioninfo id="BLD-a82e1f3a" start="1647902090352" dump="1647902090777"/><sessioninfo id="BLD-36a12ee0" start="1647902106493" dump="1647902106911"/><sessioninfo id="BLD-575cc61a" start="1647902120045" dump="1647902120457"/><sessioninfo id="BLD-4bb34530" start="1647902136497" dump="1647902136914"/><sessioninfo id="BLD-448d89fb" start="1647902215123" dump="1647902215541"/><sessioninfo id="BLD-9b3ee8d6" start="1647902326225" dump="1647902326643"/><sessioninfo id="BLD-26b02335" start="1647902337997" dump="1647902338413"/><sessioninfo id="BLD-6ca80015" start="1647902463488" dump="1647902463928"/><sessioninfo id="BLD-422a9384" start="1647902551745" dump="1647902552199"/><sessioninfo id="BLD-f789f3a" start="1647903011738" dump="1647903012203"/><sessioninfo id="BLD-80bee3b2" start="1647903119372" dump="1647903119790"/><sessioninfo id="BLD-dbbdfdd8" start="1647903148298" dump="1647903148710"/><sessioninfo id="BLD-5208a62a" start="1647903822790" dump="1647903823195"/><sessioninfo id="BLD-4f2bd873" start="1647903829758" dump="1647903830147"/><sessioninfo id="BLD-87d85318" start="1647903847796" dump="1647903848217"/><sessioninfo id="BLD-7daa79c0" start="1647903893842" dump="1647903894257"/><sessioninfo id="BLD-b0aa7c38" start="1647903928627" dump="1647903929041"/><sessioninfo id="BLD-8225c5c2" start="1647903942898" dump="1647903943306"/><sessioninfo id="BLD-cd5cc3dc" start="1647904008785" dump="1647904009198"/><sessioninfo id="BLD-4e532446" start="1647904023242" dump="1647904023646"/><sessioninfo id="BLD-ccbe17aa" start="1647904193535" dump="1647904193943"/><sessioninfo id="BLD-bd389192" start="1647904222644" dump="1647904223052"/><sessioninfo id="BLD-63813cab" start="1647904519756" dump="1647904520157"/><sessioninfo id="BLD-fee079ee" start="1647904753554" dump="1647904754520"/><sessioninfo id="BLD-d8399d8c" start="1647904823931" dump="1647904824868"/><sessioninfo id="BLD-8c069a1b" start="1647904844863" dump="1647904845258"/><sessioninfo id="BLD-1a4546d0" start="1647904869272" dump="1647904869664"/><sessioninfo id="BLD-158d6146" start="1647904915196" dump="1647904915593"/><sessioninfo id="BLD-df44e80a" start="1647904930191" dump="1647904930604"/><sessioninfo id="BLD-aa032da9" start="1647904941411" dump="1647904941827"/><sessioninfo id="BLD-88e54f0a" start="1647986007052" dump="1647986007524"/><sessioninfo id="BLD-11ef7812" start="1647986028903" dump="1647986029370"/><sessioninfo id="BLD-45f5b741" start="1647986047341" dump="1647986047770"/><sessioninfo id="BLD-d8bc2629" start="1647986066452" dump="1647986066860"/><sessioninfo id="BLD-5c533f79" start="1647986084518" dump="1647986084950"/><sessioninfo id="BLD-16314474" start="1647988531357" dump="1647988531795"/><sessioninfo id="BLD-23250d6e" start="1647988572313" dump="1647988572775"/><sessioninfo id="BLD-9dc70764" start="1647988630338" dump="1647988630773"/><sessioninfo id="BLD-141f0a9c" start="1647988672259" dump="1647988672692"/><sessioninfo id="BLD-a87a5eca" start="1647988683254" dump="1647988683699"/><sessioninfo id="BLD-f07af7a9" start="1647988867333" dump="1647988867765"/><sessioninfo id="BLD-3bc2e0eb" start="1647988897184" dump="1647988897624"/><sessioninfo id="BLD-c52cc34" start="1647989235329" dump="1647989235783"/><sessioninfo id="BLD-915d4cb5" start="1647989407823" dump="1647989408240"/><sessioninfo id="BLD-f0e815ea" start="1647989466375" dump="1647989466790"/><sessioninfo id="BLD-99edb312" start="1647989937405" dump="1647989937863"/><sessioninfo id="BLD-d0e8055a" start="1647990042605" dump="1647990043033"/><sessioninfo id="BLD-918a466" start="1647990128976" dump="1647990129411"/><sessioninfo id="BLD-ced5ae41" start="1647990358314" dump="1647990358782"/><sessioninfo id="BLD-6926cfa5" start="1647990708932" dump="1647990709409"/><sessioninfo id="BLD-40511bbd" start="1647990720573" dump="1647990721063"/><sessioninfo id="BLD-8c00f2a" start="1647991694038" dump="1647991694464"/><sessioninfo id="BLD-c32762a5" start="1648002182658" dump="1648002183162"/><sessioninfo id="BLD-cf6d6f82" start="1648002474782" dump="1648002475312"/><sessioninfo id="BLD-ef04d919" start="1648002502682" dump="1648002503136"/><sessioninfo id="BLD-3a616cd7" start="1648002601296" dump="1648002601764"/><sessioninfo id="BLD-de784c09" start="1648002703785" dump="1648002704238"/><sessioninfo id="BLD-d94dea2c" start="1648002737252" dump="1648002737706"/><sessioninfo id="BLD-58ed1b2f" start="1648003385137" dump="1648003385696"/><sessioninfo id="BLD-d96e8843" start="1648003788776" dump="1648003789254"/><sessioninfo id="BLD-6990374e" start="1648005744106" dump="1648005744559"/><sessioninfo id="BLD-625de177" start="1648006228471" dump="1648006228909"/><sessioninfo id="BLD-90080ce6" start="1648007384220" dump="1648007384784"/><sessioninfo id="BLD-73ed5a2f" start="1648007521911" dump="1648007522617"/><sessioninfo id="BLD-acbe5570" start="1648007616430" dump="1648007617125"/><sessioninfo id="BLD-d51d481d" start="1648007625777" dump="1648007626421"/><sessioninfo id="BLD-9c872883" start="1648008450016" dump="1648008450643"/><sessioninfo id="BLD-26dc340c" start="1648008819880" dump="1648008820461"/><sessioninfo id="BLD-c5819925" start="1648009579527" dump="1648009580096"/><sessioninfo id="BLD-7eb27fed" start="1648009797864" dump="1648009798423"/><sessioninfo id="BLD-7606e998" start="1648009915444" dump="1648009916008"/><sessioninfo id="BLD-62ed1053" start="1648010088076" dump="1648010088754"/><sessioninfo id="BLD-460751bf" start="1648010146279" dump="1648010146785"/><sessioninfo id="BLD-f73a4b" start="1648010170477" dump="1648010170992"/><sessioninfo id="BLD-f4661f3" start="1648010308258" dump="1648010308705"/><sessioninfo id="BLD-8d5346ec" start="1648010354549" dump="1648010355170"/><sessioninfo id="BLD-b6f1896" start="1648011171007" dump="1648011171590"/><sessioninfo id="BLD-fd1fdf91" start="1648011183650" dump="1648011184227"/><sessioninfo id="BLD-5b052c7a" start="1648011197028" dump="1648011197651"/><sessioninfo id="BLD-921c9dce" start="1648011360236" dump="1648011360815"/><sessioninfo id="BLD-be274de6" start="1648011422518" dump="1648011423076"/><sessioninfo id="BLD-ba90ae31" start="1648011517821" dump="1648011518322"/><sessioninfo id="BLD-d241f362" start="1648011546361" dump="1648011546833"/><sessioninfo id="BLD-2cf33207" start="1648011563717" dump="1648011564351"/><sessioninfo id="BLD-34e6cba2" start="1648011621676" dump="1648011622328"/><sessioninfo id="BLD-7c86ea4c" start="1648011631695" dump="1648011632122"/><sessioninfo id="BLD-3dc2f10c" start="1648011647817" dump="1648011648348"/><sessioninfo id="BLD-eb3fc027" start="1648011756000" dump="1648011756716"/><sessioninfo id="BLD-484e37f3" start="1648012727262" dump="1648012727700"/><sessioninfo id="BLD-3dab5fc1" start="1648012733290" dump="1648012733940"/><sessioninfo id="BLD-ac748ad" start="1648012757335" dump="1648012757840"/><sessioninfo id="BLD-febfc0cc" start="1648012768918" dump="1648012769452"/><sessioninfo id="BLD-3f27384d" start="1648012779194" dump="1648012779840"/><sessioninfo id="BLD-7191ed85" start="1648012956343" dump="1648012956908"/><sessioninfo id="BLD-f150a0f1" start="1648012971505" dump="1648012972106"/><sessioninfo id="BLD-7653172c" start="1648012986576" dump="1648012987078"/><sessioninfo id="BLD-4c26638c" start="1648013058549" dump="1648013059245"/><sessioninfo id="BLD-23e80093" start="1648013071856" dump="1648013072506"/><sessioninfo id="BLD-adc94ced" start="1648013088284" dump="1648013088760"/><sessioninfo id="BLD-d808ff09" start="1648013102077" dump="1648013102775"/><sessioninfo id="BLD-73708a74" start="1648013220378" dump="1648013220966"/><sessioninfo id="BLD-3ccdbc0b" start="1648013235723" dump="1648013236203"/><sessioninfo id="BLD-161ad7f7" start="1648013247628" dump="1648013248200"/><sessioninfo id="BLD-51e7d116" start="1648013274854" dump="1648013275480"/><sessioninfo id="BLD-f25abf84" start="1648013291444" dump="1648013292056"/><sessioninfo id="BLD-8f5fcfa1" start="1648013316069" dump="1648013316810"/><sessioninfo id="BLD-722301d4" start="1648013329853" dump="1648013330343"/><sessioninfo id="BLD-8feadfa8" start="1648013343930" dump="1648013344439"/><sessioninfo id="BLD-5cb48547" start="1648013403396" dump="1648013403977"/><sessioninfo id="BLD-62abb693" start="1648013415090" dump="1648013415949"/><sessioninfo id="BLD-9a32bf97" start="1648013454676" dump="1648013455230"/><sessioninfo id="BLD-f07b812e" start="1648013474360" dump="1648013474867"/><sessioninfo id="BLD-c0c73418" start="1648013508949" dump="1648013509514"/><sessioninfo id="BLD-cc37a0bf" start="1648013531518" dump="1648013532141"/><sessioninfo id="BLD-61dea6c2" start="1648013543001" dump="1648013543541"/><sessioninfo id="BLD-7a2c16b9" start="1648013729496" dump="1648013729984"/><sessioninfo id="BLD-5d32d470" start="1648014261504" dump="1648014262138"/><sessioninfo id="BLD-41fe00a9" start="1648014284538" dump="1648014285117"/><sessioninfo id="BLD-6ce46e8e" start="1648014300087" dump="1648014300629"/><sessioninfo id="BLD-155148ba" start="1648014315898" dump="1648014316387"/><sessioninfo id="BLD-cd482c54" start="1648015029341" dump="1648015029991"/><sessioninfo id="BLD-7a74231a" start="1648073778551" dump="1648073779033"/><sessioninfo id="BLD-255dc3dc" start="1648074247903" dump="1648074248325"/><sessioninfo id="BLD-6a0f1015" start="1648075024321" dump="1648075024786"/><sessioninfo id="BLD-3bb3a318" start="1648076968215" dump="1648076968643"/><sessioninfo id="BLD-1a184610" start="1648077643398" dump="1648077643829"/><sessioninfo id="BLD-11464e9a" start="1648077728931" dump="1648077729365"/><sessioninfo id="BLD-b1a6e671" start="1648077761529" dump="1648077761970"/><sessioninfo id="BLD-4b587722" start="1648077821157" dump="1648077821604"/><sessioninfo id="BLD-f5a00201" start="1648077943096" dump="1648077943497"/><sessioninfo id="BLD-cd93d6fc" start="1648078235459" dump="1648078235898"/><sessioninfo id="BLD-80486b65" start="1648078242870" dump="1648078243282"/><sessioninfo id="BLD-aa27378e" start="1648078249578" dump="1648078249989"/><sessioninfo id="BLD-7f11c4a4" start="1648078445484" dump="1648078445955"/><sessioninfo id="BLD-252fe5bb" start="1648079894500" dump="1648079895019"/><sessioninfo id="BLD-a3c67e25" start="1648080309444" dump="1648080309851"/><sessioninfo id="BLD-ecff14b5" start="1648080343326" dump="1648080343712"/><sessioninfo id="BLD-66080afa" start="1648081073924" dump="1648081074343"/><sessioninfo id="BLD-837244bc" start="1648081577593" dump="1648081578023"/><sessioninfo id="BLD-f4ebceb6" start="1648087075933" dump="1648087076354"/><sessioninfo id="BLD-475c3214" start="1648094366721" dump="1648094367181"/><sessioninfo id="BLD-d62db79a" start="1648094571704" dump="1648094572201"/><sessioninfo id="BLD-de804958" start="1648094571907" dump="1648094572408"/><sessioninfo id="BLD-3015d818" start="1648094585759" dump="1648094586186"/><sessioninfo id="BLD-84b52fbf" start="1648094772994" dump="1648094773443"/><sessioninfo id="BLD-dd3b585d" start="1648095359745" dump="1648095360200"/><sessioninfo id="BLD-c3f4558b" start="1648095364884" dump="1648095365277"/><sessioninfo id="BLD-21e4155d" start="1648095379910" dump="1648095380336"/><sessioninfo id="BLD-a7e8aa1a" start="1648095446274" dump="1648095446703"/><sessioninfo id="BLD-d5586b6d" start="1648096283204" dump="1648096283634"/><sessioninfo id="BLD-8675d884" start="1648096631227" dump="1648096631647"/><sessioninfo id="BLD-9a1e6bc" start="1648096712535" dump="1648096712972"/><sessioninfo id="BLD-4b70fac8" start="1648097953067" dump="1648097953511"/><sessioninfo id="BLD-d9fd4f96" start="1648105321713" dump="1648105322174"/><package name="linalg/concurrent"><class name="linalg/concurrent/ThreadTypes" sourcefilename="ThreadTypes.java"><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/MatrixAdditionWorker" sourcefilename="MatrixAdditionWorker.java"><method name="&lt;init&gt;" desc="(Llinalg/concurrent/ConcurrentMatrixAddition;II)V" line="23"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/concurrent/ConcurrentMatrixAddition;IIII)V" line="42"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="55"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/ConcurrentMatrixAddition" sourcefilename="ConcurrentMatrixAddition.java"><method name="&lt;init&gt;" desc="(Llinalg/Matrix;Llinalg/Matrix;)V" line="30"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="()Llinalg/Matrix;" line="51"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allocateThreadsByRows" desc="()V" line="74"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/MatrixMultiplicationWorker" sourcefilename="MatrixMultiplicationWorker.java"><method name="&lt;init&gt;" desc="(Llinalg/concurrent/ConcurrentMatrixMultiplication;II)V" line="9"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="30"><counter type="INSTRUCTION" missed="160" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="175" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/ConcurrentMatrixMultiplication" sourcefilename="ConcurrentMatrixMultiplication.java"><method name="&lt;init&gt;" desc="(Llinalg/Matrix;Llinalg/Matrix;)V" line="30"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mult" desc="()Llinalg/Matrix;" line="52"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allocateThreadsByRows" desc="()V" line="70"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ConcurrentMatrixMultiplication.java"><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="2" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="11" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="2" cb="0"/><line nr="75" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixMultiplicationWorker.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="2" cb="0"/><line nr="38" mi="9" ci="0" mb="2" cb="0"/><line nr="39" mi="12" ci="0" mb="4" cb="0"/><line nr="40" mi="12" ci="0" mb="4" cb="0"/><line nr="41" mi="51" ci="0" mb="0" cb="0"/><line nr="43" mi="51" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="175" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ThreadTypes.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="24" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConcurrentMatrixAddition.java"><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="2" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="2" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixAdditionWorker.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="57" mi="48" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="578" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="99" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="linalg/complex_number"><class name="linalg/complex_number/CNumber" sourcefilename="CNumber.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DD)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Llinalg/complex_number/CNumber;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randn" desc="(Z)Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="()Llinalg/complex_number/CNumber;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="()Llinalg/complex_number/CNumber;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(D)Llinalg/complex_number/CNumber;" line="147"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(DD[Z)Llinalg/complex_number/CNumber;" line="181"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="212"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="224"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;[Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="238"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="258"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="270"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="282"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="309"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="323"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addInv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="355"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="387"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(D)Llinalg/complex_number/CNumber;" line="408"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="419"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="435"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allSqrt" desc="(Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="468"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sign" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="483"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="498"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(D)Z" line="521"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="542"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nearZero" desc="(D)Z" line="564"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llinalg/complex_number/CNumber;)I" line="578"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(Llinalg/complex_number/CNumber;)I" line="594"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(D)I" line="610"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mag" desc="()D" line="623"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="638"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="661"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReal" desc="()D" line="677"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImaginary" desc="()D" line="685"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="695"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="705"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isImaginary" desc="()Z" line="715"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInt" desc="()Z" line="725"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleValue" desc="()D" line="742"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatValue" desc="()F" line="752"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intValue" desc="()I" line="762"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longValue" desc="()J" line="772"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleImaginaryValue" desc="()D" line="780"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatImaginaryValue" desc="()F" line="790"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intImaginaryValue" desc="()I" line="799"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longImaginaryValue" desc="()J" line="809"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="(Llinalg/complex_number/CNumber;)I" line="818"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="823"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CNumber.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="155" mi="39" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="4" cb="0"/><line nr="191" mi="8" ci="0" mb="4" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="8" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="0" cb="0"/><line nr="224" mi="14" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="14" ci="0" mb="0" cb="0"/><line nr="270" mi="26" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="8" ci="0" mb="4" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="2" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="50" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="2" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="8" ci="0" mb="2" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="2" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="2" cb="0"/><line nr="390" mi="6" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="2" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="394" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="2" cb="0"/><line nr="436" mi="4" ci="0" mb="2" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="11" ci="0" mb="0" cb="0"/><line nr="442" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="4" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="5" ci="0" mb="0" cb="0"/><line nr="470" mi="8" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="2" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="8" ci="0" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="1" cb="1"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="12" mb="2" cb="2"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="10" ci="0" mb="4" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="2" cb="0"/><line nr="543" mi="6" ci="0" mb="0" cb="0"/><line nr="547" mi="8" ci="0" mb="0" cb="0"/><line nr="548" mi="8" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="9" ci="0" mb="2" cb="0"/><line nr="578" mi="8" ci="0" mb="2" cb="0"/><line nr="579" mi="8" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="8" ci="0" mb="2" cb="0"/><line nr="595" mi="8" ci="0" mb="2" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="7" ci="0" mb="0" cb="0"/><line nr="623" mi="13" ci="0" mb="0" cb="0"/><line nr="638" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="16" ci="0" mb="2" cb="0"/><line nr="641" mi="6" ci="0" mb="2" cb="0"/><line nr="642" mi="2" ci="0" mb="0" cb="0"/><line nr="646" mi="2" ci="0" mb="0" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="663" mi="16" ci="0" mb="2" cb="0"/><line nr="664" mi="6" ci="0" mb="2" cb="0"/><line nr="665" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="695" mi="9" ci="0" mb="2" cb="0"/><line nr="705" mi="9" ci="0" mb="2" cb="0"/><line nr="715" mi="14" ci="0" mb="4" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="2" cb="0"/><line nr="728" mi="3" ci="0" mb="0" cb="0"/><line nr="729" mi="9" ci="0" mb="2" cb="0"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="752" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="4" ci="0" mb="0" cb="0"/><line nr="772" mi="4" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="790" mi="4" ci="0" mb="0" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="818" mi="4" ci="0" mb="0" cb="0"/><line nr="823" mi="2" ci="0" mb="0" cb="0"/><line nr="825" mi="6" ci="0" mb="0" cb="0"/><line nr="827" mi="4" ci="0" mb="2" cb="0"/><line nr="828" mi="6" ci="0" mb="2" cb="0"/><line nr="829" mi="6" ci="0" mb="0" cb="0"/><line nr="831" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="4" ci="0" mb="2" cb="0"/><line nr="836" mi="8" ci="0" mb="4" cb="0"/><line nr="837" mi="3" ci="0" mb="0" cb="0"/><line nr="838" mi="4" ci="0" mb="0" cb="0"/><line nr="839" mi="4" ci="0" mb="2" cb="0"/><line nr="840" mi="3" ci="0" mb="0" cb="0"/><line nr="843" mi="6" ci="0" mb="2" cb="0"/><line nr="844" mi="4" ci="0" mb="2" cb="0"/><line nr="845" mi="4" ci="0" mb="2" cb="0"/><line nr="846" mi="4" ci="0" mb="0" cb="0"/><line nr="848" mi="6" ci="0" mb="0" cb="0"/><line nr="852" mi="4" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="858" mi="8" ci="0" mb="4" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="linalg/util"><class name="linalg/util/StringUtils" sourcefilename="StringUtils.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="center" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="center" desc="(Ljava/lang/String;IC)Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKind" desc="(Ljava/lang/String;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ShapeLexer" sourcefilename="ShapeLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="29"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/LinAlgArrayUtils" sourcefilename="LinAlgArrayUtils.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)[[Llinalg/complex_number/CNumber;" line="21"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II)[[Llinalg/complex_number/CNumber;" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)[[Llinalg/complex_number/CNumber;" line="45"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)[[Llinalg/complex_number/CNumber;" line="58"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)[[Llinalg/complex_number/CNumber;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([[Llinalg/complex_number/CNumber;)V" line="84"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([Llinalg/complex_number/CNumber;)V" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDims" desc="([[Llinalg/complex_number/CNumber;)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)[[Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="([[Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="128"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSection" desc="([[Llinalg/complex_number/CNumber;IIII)[[Llinalg/complex_number/CNumber;" line="144"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="([II)Z" line="157"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([Llinalg/complex_number/CNumber;I)[[Llinalg/complex_number/CNumber;" line="189"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([DI)[[Llinalg/complex_number/CNumber;" line="226"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([II)[[Llinalg/complex_number/CNumber;" line="265"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="291"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="group" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="304"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/NumberLexer" sourcefilename="NumberLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="35"><counter type="INSTRUCTION" missed="113" covered="136"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="36"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="113" covered="142"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="39"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ExampleMatrices" sourcefilename="ExampleMatrices.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="893" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseShape" desc="(Ljava/lang/String;)[I" line="16"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseNumber" desc="(Ljava/lang/String;)[D" line="46"><counter type="INSTRUCTION" missed="85" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="17" covered="23"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/FileManager" sourcefilename="FileManager.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readcsv" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write2csv" desc="(Llinalg/Matrix;Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Lexer" sourcefilename="Lexer.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="digit" desc="(I)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextSymbol" desc="()I" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putBackSymbol" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileManager.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="2" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="2" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="2" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="37" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Parser.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="4" ci="4" mb="3" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="1" cb="1"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="2" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="1"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShapeLexer.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="12" ci="0" mb="8" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="4" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NumberLexer.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="4" cb="4"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="12" ci="0" mb="8" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="1" cb="3"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="1" cb="3"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="113" covered="142"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="39"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleMatrices.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="54" ci="0" mb="0" cb="0"/><line nr="36" mi="372" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="49" mi="54" ci="0" mb="0" cb="0"/><line nr="54" mi="136" ci="0" mb="0" cb="0"/><line nr="60" mi="78" ci="0" mb="0" cb="0"/><line nr="64" mi="54" ci="0" mb="0" cb="0"/><line nr="68" mi="88" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringUtils.java"><line nr="4" mi="2" ci="0" mb="0" cb="0"/><line nr="5" mi="5" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="2" cb="2"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="2"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinAlgArrayUtils.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="2" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="2" cb="0"/><line nr="30" mi="10" ci="0" mb="2" cb="0"/><line nr="31" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="2" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><line nr="85" mi="10" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="2" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="10" ci="0" mb="2" cb="0"/><line nr="148" mi="14" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="16" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="2" cb="0"/><line nr="197" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="230" mi="11" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="2" cb="0"/><line nr="236" mi="11" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="9" ci="0" mb="2" cb="0"/><line nr="269" mi="12" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="9" ci="0" mb="2" cb="0"/><line nr="275" mi="12" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="294" mi="11" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="10" ci="0" mb="2" cb="0"/><line nr="307" mi="10" ci="0" mb="2" cb="0"/><line nr="308" mi="12" ci="0" mb="2" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="1" cb="3"/><line nr="65" mi="0" ci="5" mb="1" cb="1"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Lexer.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="4"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2136" covered="401"/><counter type="BRANCH" missed="162" covered="58"/><counter type="LINE" missed="274" covered="97"/><counter type="COMPLEXITY" missed="127" covered="33"/><counter type="METHOD" missed="34" covered="16"/><counter type="CLASS" missed="3" covered="6"/></package><package name="linalg"><class name="linalg/QRDecomposition" sourcefilename="QRDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="20"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QRtemp" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="94"><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="158"><counter type="INSTRUCTION" missed="622" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/SchurDecomposition" sourcefilename="SchurDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurDecomp" desc="(Llinalg/Matrix;ZZ)[Llinalg/Matrix;" line="13"><counter type="INSTRUCTION" missed="361" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="368" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixOperations" sourcefilename="MatrixOperations.java"><method name="add" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="21"><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Llinalg/Matrix;" line="61"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="81"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(D)Llinalg/Matrix;" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="117"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemMult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="148"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(D)Llinalg/Matrix;" line="173"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="184"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemDiv" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="205"><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Matrix;" line="231"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="243"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fip" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directSum" desc="([Llinalg/Matrix;)Llinalg/Matrix;" line="266"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="()Llinalg/Matrix;" line="301"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Llinalg/Matrix;" line="322"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transpose" desc="()Llinalg/Matrix;" line="341"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="T" desc="()Llinalg/Matrix;" line="352"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="()Llinalg/Matrix;" line="379"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjT" desc="()Llinalg/Matrix;" line="400"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hermAdjoint" desc="()Llinalg/Matrix;" line="412"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="H" desc="()Llinalg/Matrix;" line="424"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detRec" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="436"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detQR" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="471"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="det" desc="()Llinalg/complex_number/CNumber;" line="492"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="519"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="535"><counter type="INSTRUCTION" missed="210" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="augment" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="589"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ref" desc="()Llinalg/Matrix;" line="612"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="(Z)Llinalg/Matrix;" line="677"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="()Llinalg/Matrix;" line="703"><counter type="INSTRUCTION" missed="181" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rrefNoPivot" desc="()Llinalg/Matrix;" line="791"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="erref" desc="()Llinalg/Matrix;" line="833"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="()Llinalg/complex_number/CNumber;" line="850"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tr" desc="()Llinalg/complex_number/CNumber;" line="875"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="889"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullity" desc="()I" line="913"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverse" desc="()Llinalg/Matrix;" line="925"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="()Llinalg/Matrix;" line="962"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseTriU" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="981"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recep" desc="()Llinalg/Matrix;" line="1003"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2067" covered="0"/><counter type="BRANCH" missed="186" covered="0"/><counter type="LINE" missed="275" covered="0"/><counter type="COMPLEXITY" missed="133" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixMultiplicationAlgorithms" sourcefilename="MatrixMultiplicationAlgorithms.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="standard" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="28"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concurrent" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/LUDecomposition" sourcefilename="LUDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="53"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPartialPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="85"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUFullPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="122"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDUDecomposition" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="163"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxColIndex" desc="([Llinalg/complex_number/CNumber;I)I" line="186"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxIndex" desc="(Llinalg/Matrix;I)[I" line="201"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixManipulations" sourcefilename="MatrixManipulations.java"><method name="reshape" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="18"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reshape" desc="(II)Llinalg/Matrix;" line="27"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="()Llinalg/Matrix;" line="56"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(I)Llinalg/Matrix;" line="82"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(I)Llinalg/Matrix;" line="121"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[Llinalg/complex_number/CNumber;)V" line="156"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[D)V" line="174"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Llinalg/complex_number/CNumber;II)V" line="198"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(DII)V" line="213"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="(Llinalg/Vector;I)V" line="232"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([Llinalg/complex_number/CNumber;I)V" line="259"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([DI)V" line="282"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="(Llinalg/Vector;I)V" line="307"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([Llinalg/complex_number/CNumber;I)V" line="334"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([DI)V" line="358"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSliceCopy" desc="(IILlinalg/Matrix;)Llinalg/Matrix;" line="382"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSlice" desc="(IILlinalg/Matrix;)V" line="412"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRow" desc="(I)Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRows" desc="([I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCol" desc="(I)Llinalg/Matrix;" line="480"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCols" desc="([I)Llinalg/Matrix;" line="495"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="()Llinalg/Matrix;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="(I)Llinalg/Matrix;" line="538"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="()Llinalg/Matrix;" line="560"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="(I)Llinalg/Matrix;" line="576"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diag" desc="()Llinalg/Matrix;" line="600"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="610"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([D)Llinalg/Matrix;" line="625"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diagAsVector" desc="()Llinalg/Vector;" line="640"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessu" desc="()Llinalg/Matrix;" line="659"><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessuV" desc="()[Llinalg/Matrix;" line="708"><counter type="INSTRUCTION" missed="246" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapRows" desc="(II)Llinalg/Matrix;" line="759"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapCols" desc="(II)Llinalg/Matrix;" line="780"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="802"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ID)Llinalg/Matrix;" line="820"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="831"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ID)Llinalg/Matrix;" line="842"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVector" desc="()Llinalg/Vector;" line="855"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(I)Llinalg/Matrix;" line="889"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundToZero" desc="(I)V" line="907"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="922"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1884" covered="0"/><counter type="BRANCH" missed="148" covered="0"/><counter type="LINE" missed="272" covered="0"/><counter type="COMPLEXITY" missed="115" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/PrintOptions" sourcefilename="PrintOptions.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/SingularValueDecomposition" sourcefilename="SingularValueDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="svd" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="19"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixChecks" sourcefilename="MatrixChecks.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;I)V" line="22"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Solvers" sourcefilename="Solvers.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;[Llinalg/Vector;)[Llinalg/Vector;" line="26"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="55"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="94"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="115"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="backSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="131"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forwardSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="173"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Matrix" sourcefilename="Matrix.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILlinalg/complex_number/CNumber;)V" line="72"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="96"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILlinalg/complex_number/CNumber;)V" line="114"><counter type="INSTRUCTION" missed="7" covered="49"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IID)V" line="142"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Matrix;)V" line="168"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Ljava/lang/String;)V" line="181"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Llinalg/complex_number/CNumber;)V" line="200"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[D)V" line="217"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[I)V" line="236"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="255"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Llinalg/complex_number/CNumber;)V" line="270"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;D)V" line="292"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(I)Llinalg/Matrix;" line="315"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)Llinalg/Matrix;" line="329"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="342"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(I)Llinalg/Matrix;" line="357"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(II)Llinalg/Matrix;" line="378"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="398"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identity" desc="(I)Llinalg/Matrix;" line="428"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(II)Llinalg/Matrix;" line="465"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="van" desc="(Llinalg/Vector;I)Llinalg/Matrix;" line="483"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;DD[Z)Llinalg/Matrix;" line="514"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)Llinalg/Matrix;" line="536"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;[Z)Llinalg/Matrix;" line="556"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II[Z)Llinalg/Matrix;" line="575"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;D)Llinalg/Matrix;" line="592"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)Llinalg/Matrix;" line="609"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)Llinalg/Matrix;" line="622"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)Llinalg/Matrix;" line="634"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomOrthogonal" desc="(I)Llinalg/Matrix;" line="646"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomUnitary" desc="(I)Llinalg/Matrix;" line="666"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ln" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="685"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="708"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="732"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Llinalg/Matrix;" line="754"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()[[Llinalg/complex_number/CNumber;" line="763"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesAsDouble" desc="()[[D" line="775"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="(I)[Llinalg/complex_number/CNumber;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowAsVector" desc="(I)Llinalg/Vector;" line="805"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCol" desc="(I)[Llinalg/complex_number/CNumber;" line="820"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColAsVector" desc="(I)Llinalg/Vector;" line="837"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSlice" desc="(IIII)Llinalg/Matrix;" line="857"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(II)Llinalg/complex_number/CNumber;" line="872"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(II)D" line="883"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="([Ljava/lang/Object;)V" line="893"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="println" desc="([Ljava/lang/Object;)V" line="907"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printSep" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="925"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="939"><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1517" covered="169"/><counter type="BRANCH" missed="118" covered="14"/><counter type="LINE" missed="251" covered="42"/><counter type="COMPLEXITY" missed="107" covered="10"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Vector" sourcefilename="Vector.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="35"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([I)V" line="76"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([II)V" line="93"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([D)V" line="119"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([DI)V" line="136"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;)V" line="162"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;I)V" line="179"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Vector;)V" line="202"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRowVector" desc="()Llinalg/Vector;" line="233"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toColVector" desc="()Llinalg/Vector;" line="249"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="innerProduct" desc="(Llinalg/Vector;)Llinalg/complex_number/CNumber;" line="276"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outerProduct" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="351"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="382"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntries" desc="()[Llinalg/complex_number/CNumber;" line="393"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/Vector;)Llinalg/Vector;" line="408"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Vector;)Llinalg/Vector;" line="419"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Vector;" line="424"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Vector;" line="428"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="()Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/CholeskyDecomposition" sourcefilename="CholeskyDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="choleskyDecomp" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="12"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixComparisons" sourcefilename="MatrixComparisons.java"><method name="equals" desc="(Llinalg/Matrix;)Z" line="15"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;I)Z" line="50"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;)Z" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matMultCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;)Z" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isZero" desc="()Z" line="108"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isI" desc="()Z" line="130"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInv" desc="(Llinalg/Matrix;)Z" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="208" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixProperties" sourcefilename="MatrixProperties.java"><method name="numCols" desc="()I" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numRows" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSquare" desc="()Z" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Llinalg/complex_number/CNumber;" line="81"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minReal" desc="()D" line="101"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Llinalg/complex_number/CNumber;" line="126"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReal" desc="()D" line="147"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minComplex" desc="()Llinalg/complex_number/CNumber;" line="170"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxComplex" desc="()Llinalg/complex_number/CNumber;" line="192"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="213"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="235"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVector" desc="()Z" line="259"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="277"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSelfAdjoint" desc="()Z" line="303"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHermation" desc="()Z" line="316"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="()Z" line="334"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSkewSymmetric" desc="()Z" line="357"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="(Ljava/lang/String;)Z" line="392"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOrthogonal" desc="()Z" line="419"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnitary" desc="()Z" line="445"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTri" desc="()I" line="479"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriU" desc="()Z" line="501"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriL" desc="()Z" line="524"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonal" desc="()Z" line="551"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFullRank" desc="()Z" line="567"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingular" desc="()Z" line="580"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="610"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(DD)Llinalg/complex_number/CNumber;" line="628"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="653"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rowSpace" desc="()Llinalg/Matrix;" line="667"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="colSpace" desc="()Llinalg/Matrix;" line="702"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullSpace" desc="()Llinalg/Matrix;" line="739"><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftNullSpace" desc="()Llinalg/Matrix;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPos" desc="()Z" line="803"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNeg" desc="()Z" line="824"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosDef" desc="()Z" line="849"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosSemidef" desc="()Z" line="877"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eig" desc="()[Llinalg/Matrix;" line="909"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVecs" desc="()Llinalg/Matrix;" line="952"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVals" desc="()Llinalg/Matrix;" line="966"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonalizable" desc="()Z" line="978"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="1017"><counter type="INSTRUCTION" missed="858" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2330" covered="18"/><counter type="BRANCH" missed="214" covered="0"/><counter type="LINE" missed="291" covered="6"/><counter type="COMPLEXITY" missed="149" covered="3"/><counter type="METHOD" missed="42" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Decompose" sourcefilename="Decompose.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="45"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUP" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="67"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPQ" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="90"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cholesky" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="177"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="200"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurReal" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="220"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SingularValueDecomposition.java"><line nr="5" mi="2" ci="0" mb="0" cb="0"/><line nr="6" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="36" mi="17" ci="0" mb="0" cb="0"/><line nr="37" mi="17" ci="0" mb="0" cb="0"/><line nr="38" mi="24" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="45" ci="0" mb="0" cb="0"/><line nr="49" mi="87" ci="0" mb="0" cb="0"/><line nr="54" mi="55" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="15" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LUDecomposition.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="5" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="2" cb="0"/><line nr="58" mi="10" ci="0" mb="2" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="20" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="101" mi="14" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="20" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="2" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="2" cb="0"/><line nr="140" mi="14" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="20" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="2" cb="0"/><line nr="171" mi="8" ci="0" mb="2" cb="0"/><line nr="172" mi="19" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="8" ci="0" mb="2" cb="0"/><line nr="190" mi="6" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="2" cb="0"/><line nr="205" mi="8" ci="0" mb="2" cb="0"/><line nr="206" mi="7" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrintOptions.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixChecks.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="2" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="7" ci="0" mb="2" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixMultiplicationAlgorithms.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="2" cb="0"/><line nr="32" mi="8" ci="0" mb="2" cb="0"/><line nr="33" mi="8" ci="0" mb="2" cb="0"/><line nr="34" mi="41" ci="0" mb="0" cb="0"/><line nr="35" mi="41" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Decompose.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="2" cb="0"/><line nr="201" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QRDecomposition.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="9" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="19" ci="0" mb="2" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="2" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="19" ci="0" mb="2" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="15" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="0" cb="0"/><line nr="120" mi="15" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="15" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="13" ci="0" mb="0" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="15" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="54" ci="0" mb="0" cb="0"/><line nr="162" mi="87" ci="0" mb="0" cb="0"/><line nr="167" mi="41" ci="0" mb="0" cb="0"/><line nr="170" mi="203" ci="0" mb="0" cb="0"/><line nr="176" mi="87" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="19" ci="0" mb="0" cb="0"/><line nr="186" mi="19" ci="0" mb="0" cb="0"/><line nr="187" mi="17" ci="0" mb="0" cb="0"/><line nr="188" mi="24" ci="0" mb="0" cb="0"/><line nr="189" mi="23" ci="0" mb="0" cb="0"/><line nr="190" mi="16" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixComparisons.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="4" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="24" mi="8" ci="0" mb="2" cb="0"/><line nr="25" mi="14" ci="0" mb="2" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="2" cb="0"/><line nr="112" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="208" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchurDecomposition.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="2" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="17" ci="0" mb="4" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="17" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="18" ci="0" mb="0" cb="0"/><line nr="46" mi="15" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="23" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="25" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="18" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="368" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Solvers.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="2" cb="0"/><line nr="36" mi="16" ci="0" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="39" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="27" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="141" mi="15" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="8" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="2" cb="0"/><line nr="183" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="14" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Matrix.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="2" cb="2"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="2" cb="2"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="4" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="2" cb="0"/><line nr="154" mi="7" ci="0" mb="2" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="189" mi="14" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="2" cb="0"/><line nr="207" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="2" cb="0"/><line nr="224" mi="8" ci="0" mb="2" cb="0"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="8" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="2" cb="0"/><line nr="244" mi="15" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="279" mi="8" ci="0" mb="2" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="8" ci="0" mb="2" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="7" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="2" cb="0"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="2" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="7" ci="0" mb="2" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="10" ci="0" mb="4" cb="0"/><line nr="468" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="3" ci="0" mb="2" cb="0"/><line nr="484" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="7" ci="0" mb="2" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="3" ci="0" mb="0" cb="0"/><line nr="515" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="7" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="2" cb="0"/><line nr="537" mi="17" ci="0" mb="0" cb="0"/><line nr="540" mi="11" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="0" cb="0"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="560" mi="5" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="2" cb="0"/><line nr="576" mi="17" ci="0" mb="0" cb="0"/><line nr="579" mi="11" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="8" ci="0" mb="0" cb="0"/><line nr="622" mi="8" ci="0" mb="0" cb="0"/><line nr="634" mi="7" ci="0" mb="0" cb="0"/><line nr="646" mi="8" ci="0" mb="0" cb="0"/><line nr="647" mi="3" ci="0" mb="0" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="650" mi="8" ci="0" mb="2" cb="0"/><line nr="651" mi="20" ci="0" mb="0" cb="0"/><line nr="654" mi="10" ci="0" mb="0" cb="0"/><line nr="666" mi="8" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="5" ci="0" mb="0" cb="0"/><line nr="670" mi="8" ci="0" mb="2" cb="0"/><line nr="671" mi="20" ci="0" mb="0" cb="0"/><line nr="674" mi="10" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="2" cb="0"/><line nr="686" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="5" ci="0" mb="0" cb="0"/><line nr="691" mi="8" ci="0" mb="2" cb="0"/><line nr="692" mi="8" ci="0" mb="2" cb="0"/><line nr="693" mi="15" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="3" ci="0" mb="2" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="712" mi="5" ci="0" mb="0" cb="0"/><line nr="714" mi="8" ci="0" mb="2" cb="0"/><line nr="715" mi="8" ci="0" mb="2" cb="0"/><line nr="716" mi="15" ci="0" mb="0" cb="0"/><line nr="720" mi="2" ci="0" mb="0" cb="0"/><line nr="732" mi="3" ci="0" mb="2" cb="0"/><line nr="733" mi="5" ci="0" mb="0" cb="0"/><line nr="736" mi="5" ci="0" mb="0" cb="0"/><line nr="738" mi="8" ci="0" mb="2" cb="0"/><line nr="739" mi="8" ci="0" mb="2" cb="0"/><line nr="740" mi="19" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="754" mi="6" ci="0" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="775" mi="6" ci="0" mb="0" cb="0"/><line nr="777" mi="8" ci="0" mb="2" cb="0"/><line nr="778" mi="10" ci="0" mb="2" cb="0"/><line nr="779" mi="12" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="0" cb="0"/><line nr="807" mi="13" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="8" ci="0" mb="2" cb="0"/><line nr="823" mi="9" ci="0" mb="0" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="6" ci="0" mb="0" cb="0"/><line nr="839" mi="8" ci="0" mb="2" cb="0"/><line nr="840" mi="12" ci="0" mb="0" cb="0"/><line nr="843" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="10" ci="0" mb="0" cb="0"/><line nr="859" mi="9" ci="0" mb="2" cb="0"/><line nr="860" mi="18" ci="0" mb="0" cb="0"/><line nr="863" mi="2" ci="0" mb="0" cb="0"/><line nr="872" mi="10" ci="0" mb="0" cb="0"/><line nr="883" mi="8" ci="0" mb="0" cb="0"/><line nr="893" mi="16" ci="0" mb="2" cb="0"/><line nr="894" mi="4" ci="0" mb="0" cb="0"/><line nr="896" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="16" ci="0" mb="2" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="1" ci="0" mb="0" cb="0"/><line nr="925" mi="16" ci="0" mb="2" cb="0"/><line nr="926" mi="6" ci="0" mb="0" cb="0"/><line nr="929" mi="2" ci="0" mb="0" cb="0"/><line nr="930" mi="1" ci="0" mb="0" cb="0"/><line nr="939" mi="2" ci="0" mb="0" cb="0"/><line nr="941" mi="3" ci="0" mb="2" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="943" mi="4" ci="0" mb="0" cb="0"/><line nr="945" mi="8" ci="0" mb="2" cb="0"/><line nr="946" mi="5" ci="0" mb="0" cb="0"/><line nr="948" mi="7" ci="0" mb="0" cb="0"/><line nr="950" mi="3" ci="0" mb="2" cb="0"/><line nr="951" mi="5" ci="0" mb="0" cb="0"/><line nr="954" mi="5" ci="0" mb="0" cb="0"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="958" mi="8" ci="0" mb="2" cb="0"/><line nr="959" mi="9" ci="0" mb="4" cb="0"/><line nr="960" mi="4" ci="0" mb="0" cb="0"/><line nr="961" mi="5" ci="0" mb="0" cb="0"/><line nr="964" mi="4" ci="0" mb="0" cb="0"/><line nr="966" mi="8" ci="0" mb="2" cb="0"/><line nr="968" mi="9" ci="0" mb="4" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="970" mi="14" ci="0" mb="0" cb="0"/><line nr="971" mi="11" ci="0" mb="0" cb="0"/><line nr="972" mi="23" ci="0" mb="0" cb="0"/><line nr="973" mi="1" ci="0" mb="0" cb="0"/><line nr="976" mi="8" ci="0" mb="0" cb="0"/><line nr="977" mi="19" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="3" ci="0" mb="0" cb="0"/><line nr="986" mi="9" ci="0" mb="0" cb="0"/><line nr="987" mi="1" ci="0" mb="0" cb="0"/><line nr="989" mi="3" ci="0" mb="0" cb="0"/><line nr="992" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1517" covered="169"/><counter type="BRANCH" missed="118" covered="14"/><counter type="LINE" missed="251" covered="42"/><counter type="COMPLEXITY" missed="107" covered="10"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixManipulations.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="2" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="15" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="2" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="16" ci="0" mb="4" cb="0"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="16" ci="0" mb="4" cb="0"/><line nr="177" mi="13" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="2" cb="0"/><line nr="182" mi="11" ci="0" mb="2" cb="0"/><line nr="183" mi="14" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="2" cb="0"/><line nr="238" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="10" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="5" ci="0" mb="2" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="265" mi="8" ci="0" mb="2" cb="0"/><line nr="266" mi="12" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="288" mi="8" ci="0" mb="2" cb="0"/><line nr="289" mi="12" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="2" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="2" cb="0"/><line nr="313" mi="9" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="2" cb="0"/><line nr="317" mi="10" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="2" cb="0"/><line nr="337" mi="9" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="2" cb="0"/><line nr="341" mi="12" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="2" cb="0"/><line nr="361" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="8" ci="0" mb="2" cb="0"/><line nr="365" mi="12" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="14" ci="0" mb="4" cb="0"/><line nr="385" mi="11" ci="0" mb="0" cb="0"/><line nr="389" mi="10" ci="0" mb="2" cb="0"/><line nr="390" mi="10" ci="0" mb="2" cb="0"/><line nr="391" mi="16" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="14" ci="0" mb="4" cb="0"/><line nr="415" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="2" cb="0"/><line nr="420" mi="10" ci="0" mb="2" cb="0"/><line nr="421" mi="16" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="9" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="2" cb="0"/><line nr="458" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="8" ci="0" mb="2" cb="0"/><line nr="460" mi="12" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="9" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="11" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="8" ci="0" mb="2" cb="0"/><line nr="501" mi="4" ci="0" mb="2" cb="0"/><line nr="502" mi="8" ci="0" mb="2" cb="0"/><line nr="503" mi="12" ci="0" mb="0" cb="0"/><line nr="505" mi="1" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="8" ci="0" mb="2" cb="0"/><line nr="542" mi="13" ci="0" mb="4" cb="0"/><line nr="543" mi="12" ci="0" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="6" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="8" ci="0" mb="2" cb="0"/><line nr="582" mi="7" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="585" mi="13" ci="0" mb="4" cb="0"/><line nr="586" mi="12" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="8" ci="0" mb="2" cb="0"/><line nr="613" mi="9" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="625" mi="6" ci="0" mb="0" cb="0"/><line nr="627" mi="8" ci="0" mb="2" cb="0"/><line nr="628" mi="12" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="3" ci="0" mb="0" cb="0"/><line nr="641" mi="9" ci="0" mb="0" cb="0"/><line nr="643" mi="8" ci="0" mb="2" cb="0"/><line nr="644" mi="12" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="4" ci="0" mb="0" cb="0"/><line nr="660" mi="8" ci="0" mb="0" cb="0"/><line nr="661" mi="10" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="2" cb="0"/><line nr="664" mi="7" ci="0" mb="0" cb="0"/><line nr="668" mi="10" ci="0" mb="2" cb="0"/><line nr="669" mi="23" ci="0" mb="2" cb="0"/><line nr="670" mi="12" ci="0" mb="0" cb="0"/><line nr="672" mi="11" ci="0" mb="0" cb="0"/><line nr="673" mi="10" ci="0" mb="0" cb="0"/><line nr="674" mi="1" ci="0" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="676" mi="1" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="32" ci="0" mb="0" cb="0"/><line nr="682" mi="15" ci="0" mb="0" cb="0"/><line nr="683" mi="29" ci="0" mb="0" cb="0"/><line nr="684" mi="14" ci="0" mb="0" cb="0"/><line nr="687" mi="15" ci="0" mb="0" cb="0"/><line nr="688" mi="37" ci="0" mb="0" cb="0"/><line nr="689" mi="6" ci="0" mb="0" cb="0"/><line nr="694" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="8" ci="0" mb="0" cb="0"/><line nr="710" mi="10" ci="0" mb="0" cb="0"/><line nr="711" mi="3" ci="0" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="2" cb="0"/><line nr="714" mi="7" ci="0" mb="0" cb="0"/><line nr="718" mi="10" ci="0" mb="2" cb="0"/><line nr="719" mi="12" ci="0" mb="0" cb="0"/><line nr="721" mi="11" ci="0" mb="0" cb="0"/><line nr="722" mi="10" ci="0" mb="0" cb="0"/><line nr="723" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="1" ci="0" mb="0" cb="0"/><line nr="729" mi="32" ci="0" mb="0" cb="0"/><line nr="731" mi="15" ci="0" mb="0" cb="0"/><line nr="732" mi="29" ci="0" mb="0" cb="0"/><line nr="733" mi="14" ci="0" mb="0" cb="0"/><line nr="736" mi="15" ci="0" mb="0" cb="0"/><line nr="737" mi="37" ci="0" mb="0" cb="0"/><line nr="738" mi="6" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="4" ci="0" mb="0" cb="0"/><line nr="745" mi="4" ci="0" mb="0" cb="0"/><line nr="747" mi="2" ci="0" mb="0" cb="0"/><line nr="759" mi="3" ci="0" mb="0" cb="0"/><line nr="760" mi="3" ci="0" mb="0" cb="0"/><line nr="762" mi="5" ci="0" mb="0" cb="0"/><line nr="763" mi="5" ci="0" mb="0" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="5" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="781" mi="3" ci="0" mb="0" cb="0"/><line nr="783" mi="4" ci="0" mb="0" cb="0"/><line nr="784" mi="4" ci="0" mb="0" cb="0"/><line nr="786" mi="8" ci="0" mb="2" cb="0"/><line nr="787" mi="9" ci="0" mb="0" cb="0"/><line nr="788" mi="9" ci="0" mb="0" cb="0"/><line nr="791" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="3" ci="0" mb="0" cb="0"/><line nr="803" mi="8" ci="0" mb="0" cb="0"/><line nr="805" mi="8" ci="0" mb="2" cb="0"/><line nr="806" mi="14" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="8" ci="0" mb="0" cb="0"/><line nr="831" mi="6" ci="0" mb="0" cb="0"/><line nr="842" mi="7" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="858" mi="6" ci="0" mb="4" cb="0"/><line nr="859" mi="7" ci="0" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="2" cb="0"/><line nr="865" mi="5" ci="0" mb="0" cb="0"/><line nr="868" mi="3" ci="0" mb="2" cb="0"/><line nr="869" mi="2" ci="0" mb="0" cb="0"/><line nr="872" mi="8" ci="0" mb="0" cb="0"/><line nr="876" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="6" ci="0" mb="0" cb="0"/><line nr="891" mi="8" ci="0" mb="2" cb="0"/><line nr="892" mi="8" ci="0" mb="2" cb="0"/><line nr="893" mi="14" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="0" cb="0"/><line nr="907" mi="8" ci="0" mb="0" cb="0"/><line nr="908" mi="3" ci="0" mb="0" cb="0"/><line nr="910" mi="8" ci="0" mb="2" cb="0"/><line nr="911" mi="8" ci="0" mb="2" cb="0"/><line nr="912" mi="11" ci="0" mb="2" cb="0"/><line nr="913" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="1" ci="0" mb="0" cb="0"/><line nr="922" mi="19" ci="0" mb="0" cb="0"/><line nr="923" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="9" ci="0" mb="0" cb="0"/><line nr="926" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1884" covered="0"/><counter type="BRANCH" missed="148" covered="0"/><counter type="LINE" missed="272" covered="0"/><counter type="COMPLEXITY" missed="115" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CholeskyDecomposition.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="5" ci="0" mb="0" cb="0"/><line nr="12" mi="19" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="2" cb="0"/><line nr="15" mi="7" ci="0" mb="2" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="7" ci="0" mb="2" cb="0"/><line nr="19" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="14" ci="0" mb="0" cb="0"/><line nr="27" mi="12" ci="0" mb="2" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixProperties.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="4" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="8" ci="0" mb="2" cb="0"/><line nr="106" mi="9" ci="0" mb="2" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="9" ci="0" mb="2" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="2" cb="0"/><line nr="174" mi="8" ci="0" mb="2" cb="0"/><line nr="175" mi="9" ci="0" mb="2" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="2" cb="0"/><line nr="196" mi="8" ci="0" mb="2" cb="0"/><line nr="197" mi="9" ci="0" mb="2" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="8" ci="0" mb="2" cb="0"/><line nr="217" mi="8" ci="0" mb="2" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="8" ci="0" mb="2" cb="0"/><line nr="239" mi="8" ci="0" mb="2" cb="0"/><line nr="240" mi="8" ci="0" mb="2" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="4" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="8" ci="0" mb="4" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="8" ci="0" mb="4" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="8" ci="0" mb="4" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="2" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="7" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="2" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="2" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="2" cb="0"/><line nr="426" mi="7" ci="0" mb="0" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="2" cb="0"/><line nr="448" mi="7" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="2" cb="0"/><line nr="483" mi="3" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="2" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="2" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="10" ci="0" mb="2" cb="0"/><line nr="505" mi="10" ci="0" mb="2" cb="0"/><line nr="506" mi="9" ci="0" mb="2" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="3" ci="0" mb="2" cb="0"/><line nr="528" mi="7" ci="0" mb="0" cb="0"/><line nr="531" mi="10" ci="0" mb="2" cb="0"/><line nr="532" mi="10" ci="0" mb="2" cb="0"/><line nr="533" mi="9" ci="0" mb="2" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="2" cb="0"/><line nr="554" mi="7" ci="0" mb="0" cb="0"/><line nr="557" mi="10" ci="0" mb="4" cb="0"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="2" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="7" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="2" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="631" mi="15" ci="0" mb="8" cb="0"/><line nr="632" mi="7" ci="0" mb="0" cb="0"/><line nr="636" mi="8" ci="0" mb="2" cb="0"/><line nr="637" mi="8" ci="0" mb="2" cb="0"/><line nr="638" mi="12" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="644" mi="9" ci="0" mb="0" cb="0"/><line nr="653" mi="5" ci="0" mb="0" cb="0"/><line nr="654" mi="7" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="4" ci="0" mb="0" cb="0"/><line nr="669" mi="7" ci="0" mb="0" cb="0"/><line nr="670" mi="6" ci="0" mb="0" cb="0"/><line nr="675" mi="8" ci="0" mb="2" cb="0"/><line nr="676" mi="6" ci="0" mb="2" cb="0"/><line nr="677" mi="10" ci="0" mb="2" cb="0"/><line nr="678" mi="9" ci="0" mb="2" cb="0"/><line nr="679" mi="13" ci="0" mb="2" cb="0"/><line nr="680" mi="12" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="702" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="3" ci="0" mb="0" cb="0"/><line nr="704" mi="7" ci="0" mb="0" cb="0"/><line nr="705" mi="6" ci="0" mb="0" cb="0"/><line nr="710" mi="8" ci="0" mb="2" cb="0"/><line nr="711" mi="6" ci="0" mb="2" cb="0"/><line nr="712" mi="10" ci="0" mb="2" cb="0"/><line nr="713" mi="9" ci="0" mb="2" cb="0"/><line nr="714" mi="13" ci="0" mb="2" cb="0"/><line nr="715" mi="12" ci="0" mb="0" cb="0"/><line nr="728" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="741" mi="7" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="743" mi="4" ci="0" mb="0" cb="0"/><line nr="748" mi="8" ci="0" mb="2" cb="0"/><line nr="749" mi="6" ci="0" mb="2" cb="0"/><line nr="750" mi="6" ci="0" mb="0" cb="0"/><line nr="752" mi="10" ci="0" mb="2" cb="0"/><line nr="753" mi="9" ci="0" mb="2" cb="0"/><line nr="754" mi="13" ci="0" mb="2" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="764" mi="11" ci="0" mb="2" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="7" ci="0" mb="0" cb="0"/><line nr="768" mi="8" ci="0" mb="2" cb="0"/><line nr="769" mi="5" ci="0" mb="2" cb="0"/><line nr="771" mi="8" ci="0" mb="2" cb="0"/><line nr="772" mi="9" ci="0" mb="2" cb="0"/><line nr="773" mi="13" ci="0" mb="0" cb="0"/><line nr="774" mi="1" ci="0" mb="0" cb="0"/><line nr="780" mi="7" ci="0" mb="0" cb="0"/><line nr="781" mi="1" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="803" mi="3" ci="0" mb="0" cb="0"/><line nr="804" mi="2" ci="0" mb="0" cb="0"/><line nr="806" mi="8" ci="0" mb="2" cb="0"/><line nr="807" mi="8" ci="0" mb="2" cb="0"/><line nr="808" mi="17" ci="0" mb="4" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="810" mi="2" ci="0" mb="0" cb="0"/><line nr="815" mi="2" ci="0" mb="0" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="2" ci="0" mb="0" cb="0"/><line nr="827" mi="8" ci="0" mb="2" cb="0"/><line nr="828" mi="8" ci="0" mb="2" cb="0"/><line nr="829" mi="17" ci="0" mb="4" cb="0"/><line nr="830" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="2" ci="0" mb="0" cb="0"/><line nr="836" mi="2" ci="0" mb="0" cb="0"/><line nr="849" mi="2" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="2" cb="0"/><line nr="853" mi="3" ci="0" mb="0" cb="0"/><line nr="854" mi="2" ci="0" mb="0" cb="0"/><line nr="856" mi="8" ci="0" mb="2" cb="0"/><line nr="857" mi="17" ci="0" mb="4" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="864" mi="2" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="880" mi="3" ci="0" mb="2" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="0" cb="0"/><line nr="884" mi="8" ci="0" mb="2" cb="0"/><line nr="885" mi="17" ci="0" mb="4" cb="0"/><line nr="887" mi="2" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="0" cb="0"/><line nr="909" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="7" ci="0" mb="0" cb="0"/><line nr="913" mi="11" ci="0" mb="0" cb="0"/><line nr="915" mi="4" ci="0" mb="0" cb="0"/><line nr="916" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="7" ci="0" mb="0" cb="0"/><line nr="918" mi="7" ci="0" mb="0" cb="0"/><line nr="920" mi="6" ci="0" mb="0" cb="0"/><line nr="921" mi="4" ci="0" mb="0" cb="0"/><line nr="923" mi="8" ci="0" mb="2" cb="0"/><line nr="925" mi="18" ci="0" mb="4" cb="0"/><line nr="926" mi="11" ci="0" mb="0" cb="0"/><line nr="931" mi="5" ci="0" mb="0" cb="0"/><line nr="935" mi="4" ci="0" mb="0" cb="0"/><line nr="936" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="2" ci="0" mb="0" cb="0"/><line nr="952" mi="5" ci="0" mb="0" cb="0"/><line nr="966" mi="3" ci="0" mb="0" cb="0"/><line nr="967" mi="6" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="979" mi="4" ci="0" mb="0" cb="0"/><line nr="980" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="2" ci="0" mb="0" cb="0"/><line nr="983" mi="11" ci="0" mb="0" cb="0"/><line nr="985" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="4" ci="0" mb="0" cb="0"/><line nr="988" mi="8" ci="0" mb="2" cb="0"/><line nr="989" mi="20" ci="0" mb="6" cb="0"/><line nr="990" mi="2" ci="0" mb="0" cb="0"/><line nr="992" mi="8" ci="0" mb="2" cb="0"/><line nr="993" mi="14" ci="0" mb="2" cb="0"/><line nr="994" mi="1" ci="0" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="12" ci="0" mb="0" cb="0"/><line nr="1001" mi="6" ci="0" mb="0" cb="0"/><line nr="1005" mi="8" ci="0" mb="2" cb="0"/><line nr="1006" mi="9" ci="0" mb="2" cb="0"/><line nr="1007" mi="2" ci="0" mb="0" cb="0"/><line nr="1008" mi="1" ci="0" mb="0" cb="0"/><line nr="1012" mi="2" ci="0" mb="0" cb="0"/><line nr="1017" mi="87" ci="0" mb="0" cb="0"/><line nr="1022" mi="87" ci="0" mb="0" cb="0"/><line nr="1027" mi="54" ci="0" mb="0" cb="0"/><line nr="1031" mi="87" ci="0" mb="0" cb="0"/><line nr="1036" mi="135" ci="0" mb="0" cb="0"/><line nr="1041" mi="81" ci="0" mb="0" cb="0"/><line nr="1045" mi="54" ci="0" mb="0" cb="0"/><line nr="1049" mi="87" ci="0" mb="0" cb="0"/><line nr="1054" mi="87" ci="0" mb="0" cb="0"/><line nr="1060" mi="5" ci="0" mb="0" cb="0"/><line nr="1063" mi="3" ci="0" mb="0" cb="0"/><line nr="1065" mi="15" ci="0" mb="0" cb="0"/><line nr="1066" mi="17" ci="0" mb="0" cb="0"/><line nr="1067" mi="17" ci="0" mb="0" cb="0"/><line nr="1069" mi="10" ci="0" mb="2" cb="0"/><line nr="1070" mi="28" ci="0" mb="0" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1076" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2330" covered="18"/><counter type="BRANCH" missed="214" covered="0"/><counter type="LINE" missed="291" covered="6"/><counter type="COMPLEXITY" missed="149" covered="3"/><counter type="METHOD" missed="42" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vector.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="7" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="2" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="2" cb="0"/><line nr="277" mi="9" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="9" ci="0" mb="2" cb="0"/><line nr="292" mi="14" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="2" cb="0"/><line nr="298" mi="14" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="11" ci="0" mb="6" cb="0"/><line nr="352" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="2" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="16" ci="0" mb="2" cb="0"/><line nr="362" mi="7" ci="0" mb="0" cb="0"/><line nr="365" mi="9" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="2" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="11" ci="0" mb="0" cb="0"/><line nr="424" mi="11" ci="0" mb="0" cb="0"/><line nr="428" mi="7" ci="0" mb="0" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="2" cb="0"/><line nr="440" mi="9" ci="0" mb="2" cb="0"/><line nr="441" mi="12" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="2" cb="0"/><line nr="445" mi="9" ci="0" mb="2" cb="0"/><line nr="446" mi="12" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixOperations.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="16" ci="0" mb="8" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="16" ci="0" mb="4" cb="0"/><line nr="39" mi="25" ci="0" mb="0" cb="0"/><line nr="42" mi="38" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="2" cb="0"/><line nr="65" mi="8" ci="0" mb="2" cb="0"/><line nr="66" mi="24" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="2" cb="0"/><line nr="87" mi="38" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="16" ci="0" mb="8" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="8" ci="0" mb="2" cb="0"/><line nr="155" mi="70" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="189" mi="50" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="8" ci="0" mb="2" cb="0"/><line nr="210" mi="8" ci="0" mb="2" cb="0"/><line nr="211" mi="134" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="8" ci="0" mb="2" cb="0"/><line nr="271" mi="7" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="279" mi="3" ci="0" mb="2" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="6" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="285" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="7" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="6" ci="0" mb="0" cb="0"/><line nr="304" mi="8" ci="0" mb="2" cb="0"/><line nr="305" mi="8" ci="0" mb="2" cb="0"/><line nr="306" mi="12" ci="0" mb="0" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="8" ci="0" mb="2" cb="0"/><line nr="326" mi="8" ci="0" mb="2" cb="0"/><line nr="327" mi="12" ci="0" mb="0" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="8" ci="0" mb="2" cb="0"/><line nr="359" mi="8" ci="0" mb="2" cb="0"/><line nr="361" mi="13" ci="0" mb="4" cb="0"/><line nr="362" mi="13" ci="0" mb="4" cb="0"/><line nr="363" mi="11" ci="0" mb="0" cb="0"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="8" ci="0" mb="2" cb="0"/><line nr="383" mi="8" ci="0" mb="2" cb="0"/><line nr="384" mi="12" ci="0" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="438" mi="8" ci="0" mb="4" cb="0"/><line nr="439" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="8" ci="0" mb="4" cb="0"/><line nr="442" mi="7" ci="0" mb="0" cb="0"/><line nr="443" mi="7" ci="0" mb="0" cb="0"/><line nr="444" mi="7" ci="0" mb="0" cb="0"/><line nr="445" mi="7" ci="0" mb="0" cb="0"/><line nr="447" mi="8" ci="0" mb="0" cb="0"/><line nr="448" mi="1" ci="0" mb="0" cb="0"/><line nr="450" mi="8" ci="0" mb="2" cb="0"/><line nr="451" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="8" ci="0" mb="0" cb="0"/><line nr="454" mi="9" ci="0" mb="0" cb="0"/><line nr="456" mi="7" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="15" ci="0" mb="0" cb="0"/><line nr="476" mi="10" ci="0" mb="2" cb="0"/><line nr="477" mi="11" ci="0" mb="0" cb="0"/><line nr="480" mi="4" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="3" ci="0" mb="2" cb="0"/><line nr="495" mi="7" ci="0" mb="0" cb="0"/><line nr="498" mi="8" ci="0" mb="4" cb="0"/><line nr="499" mi="7" ci="0" mb="0" cb="0"/><line nr="500" mi="7" ci="0" mb="0" cb="0"/><line nr="501" mi="7" ci="0" mb="0" cb="0"/><line nr="502" mi="7" ci="0" mb="0" cb="0"/><line nr="504" mi="8" ci="0" mb="0" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="5" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="538" mi="2" ci="0" mb="2" cb="0"/><line nr="539" mi="11" ci="0" mb="2" cb="0"/><line nr="540" mi="15" ci="0" mb="0" cb="0"/><line nr="544" mi="16" ci="0" mb="0" cb="0"/><line nr="546" mi="10" ci="0" mb="2" cb="0"/><line nr="547" mi="11" ci="0" mb="2" cb="0"/><line nr="548" mi="5" ci="0" mb="2" cb="0"/><line nr="549" mi="13" ci="0" mb="0" cb="0"/><line nr="551" mi="16" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="2" cb="0"/><line nr="557" mi="7" ci="0" mb="2" cb="0"/><line nr="558" mi="11" ci="0" mb="0" cb="0"/><line nr="562" mi="18" ci="0" mb="0" cb="0"/><line nr="564" mi="10" ci="0" mb="2" cb="0"/><line nr="565" mi="11" ci="0" mb="2" cb="0"/><line nr="566" mi="7" ci="0" mb="2" cb="0"/><line nr="567" mi="13" ci="0" mb="0" cb="0"/><line nr="569" mi="18" ci="0" mb="0" cb="0"/><line nr="575" mi="6" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="589" mi="5" ci="0" mb="0" cb="0"/><line nr="612" mi="4" ci="0" mb="0" cb="0"/><line nr="615" mi="2" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="8" ci="0" mb="4" cb="0"/><line nr="619" mi="9" ci="0" mb="2" cb="0"/><line nr="620" mi="9" ci="0" mb="0" cb="0"/><line nr="622" mi="8" ci="0" mb="2" cb="0"/><line nr="623" mi="14" ci="0" mb="0" cb="0"/><line nr="627" mi="10" ci="0" mb="2" cb="0"/><line nr="628" mi="7" ci="0" mb="0" cb="0"/><line nr="630" mi="8" ci="0" mb="2" cb="0"/><line nr="631" mi="20" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="7" ci="0" mb="0" cb="0"/><line nr="644" mi="1" ci="0" mb="0" cb="0"/><line nr="645" mi="2" ci="0" mb="0" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="677" mi="5" ci="0" mb="2" cb="0"/><line nr="678" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="4" ci="0" mb="0" cb="0"/><line nr="707" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="0" cb="0"/><line nr="710" mi="8" ci="0" mb="4" cb="0"/><line nr="711" mi="2" ci="0" mb="0" cb="0"/><line nr="712" mi="7" ci="0" mb="0" cb="0"/><line nr="714" mi="8" ci="0" mb="2" cb="0"/><line nr="715" mi="9" ci="0" mb="2" cb="0"/><line nr="722" mi="8" ci="0" mb="0" cb="0"/><line nr="724" mi="9" ci="0" mb="2" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><line nr="726" mi="7" ci="0" mb="0" cb="0"/><line nr="730" mi="9" ci="0" mb="2" cb="0"/><line nr="731" mi="3" ci="0" mb="2" cb="0"/><line nr="732" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="9" ci="0" mb="0" cb="0"/><line nr="737" mi="8" ci="0" mb="2" cb="0"/><line nr="738" mi="14" ci="0" mb="0" cb="0"/><line nr="741" mi="8" ci="0" mb="2" cb="0"/><line nr="742" mi="7" ci="0" mb="0" cb="0"/><line nr="744" mi="3" ci="0" mb="2" cb="0"/><line nr="745" mi="7" ci="0" mb="0" cb="0"/><line nr="747" mi="10" ci="0" mb="2" cb="0"/><line nr="749" mi="15" ci="0" mb="0" cb="0"/><line nr="750" mi="1" ci="0" mb="0" cb="0"/><line nr="751" mi="7" ci="0" mb="0" cb="0"/><line nr="757" mi="1" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="2" ci="0" mb="0" cb="0"/><line nr="791" mi="4" ci="0" mb="0" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="795" mi="2" ci="0" mb="0" cb="0"/><line nr="797" mi="8" ci="0" mb="4" cb="0"/><line nr="798" mi="9" ci="0" mb="2" cb="0"/><line nr="799" mi="9" ci="0" mb="0" cb="0"/><line nr="801" mi="8" ci="0" mb="2" cb="0"/><line nr="802" mi="14" ci="0" mb="0" cb="0"/><line nr="806" mi="8" ci="0" mb="2" cb="0"/><line nr="807" mi="7" ci="0" mb="0" cb="0"/><line nr="809" mi="3" ci="0" mb="2" cb="0"/><line nr="810" mi="8" ci="0" mb="2" cb="0"/><line nr="811" mi="20" ci="0" mb="0" cb="0"/><line nr="812" mi="1" ci="0" mb="0" cb="0"/><line nr="817" mi="1" ci="0" mb="0" cb="0"/><line nr="818" mi="2" ci="0" mb="0" cb="0"/><line nr="821" mi="2" ci="0" mb="0" cb="0"/><line nr="833" mi="3" ci="0" mb="0" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="4" ci="0" mb="0" cb="0"/><line nr="837" mi="3" ci="0" mb="0" cb="0"/><line nr="850" mi="3" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="2" cb="0"/><line nr="853" mi="7" ci="0" mb="0" cb="0"/><line nr="856" mi="7" ci="0" mb="0" cb="0"/><line nr="858" mi="8" ci="0" mb="2" cb="0"/><line nr="859" mi="9" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><line nr="875" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="3" ci="0" mb="0" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="9" ci="0" mb="2" cb="0"/><line nr="894" mi="5" ci="0" mb="2" cb="0"/><line nr="895" mi="1" ci="0" mb="0" cb="0"/><line nr="902" mi="2" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="914" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="0" cb="0"/><line nr="927" mi="3" ci="0" mb="2" cb="0"/><line nr="928" mi="5" ci="0" mb="0" cb="0"/><line nr="931" mi="3" ci="0" mb="0" cb="0"/><line nr="932" mi="2" ci="0" mb="0" cb="0"/><line nr="934" mi="10" ci="0" mb="2" cb="0"/><line nr="935" mi="11" ci="0" mb="0" cb="0"/><line nr="938" mi="7" ci="0" mb="2" cb="0"/><line nr="947" mi="5" ci="0" mb="0" cb="0"/><line nr="951" mi="10" ci="0" mb="0" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="981" mi="8" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="3" ci="0" mb="2" cb="0"/><line nr="985" mi="5" ci="0" mb="0" cb="0"/><line nr="988" mi="8" ci="0" mb="2" cb="0"/><line nr="990" mi="8" ci="0" mb="0" cb="0"/><line nr="993" mi="2" ci="0" mb="0" cb="0"/><line nr="1003" mi="7" ci="0" mb="0" cb="0"/><line nr="1005" mi="8" ci="0" mb="2" cb="0"/><line nr="1006" mi="8" ci="0" mb="2" cb="0"/><line nr="1007" mi="13" ci="0" mb="0" cb="0"/><line nr="1011" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2067" covered="0"/><counter type="BRANCH" missed="186" covered="0"/><counter type="LINE" missed="275" covered="0"/><counter type="COMPLEXITY" missed="133" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="11857" covered="196"/><counter type="BRANCH" missed="885" covered="14"/><counter type="LINE" missed="1680" covered="52"/><counter type="COMPLEXITY" missed="693" covered="14"/><counter type="METHOD" missed="246" covered="10"/><counter type="CLASS" missed="13" covered="3"/></package><counter type="INSTRUCTION" missed="15464" covered="703"/><counter type="BRANCH" missed="1188" covered="75"/><counter type="LINE" missed="2213" covered="177"/><counter type="COMPLEXITY" missed="954" covered="52"/><counter type="METHOD" missed="342" covered="31"/><counter type="CLASS" missed="21" covered="10"/></report>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Java-Linear-Algebra"><sessioninfo id="DESKTOP-3F0SSFQ-fe00496a" start="1632785396729" dump="1632785398884"/><sessioninfo id="DESKTOP-3F0SSFQ-9cdf880c" start="1632787027066" dump="1632787028389"/><sessioninfo id="DESKTOP-3F0SSFQ-33e4a7ad" start="1632787824685" dump="1632787826107"/><sessioninfo id="DESKTOP-3F0SSFQ-d759012b" start="1632787898313" dump="1632787899650"/><sessioninfo id="DESKTOP-3F0SSFQ-653be16e" start="1632788590487" dump="1632788591452"/><sessioninfo id="DESKTOP-3F0SSFQ-e4543b44" start="1632788616892" dump="1632788617864"/><sessioninfo id="DESKTOP-3F0SSFQ-4d4af810" start="1632788635046" dump="1632788635903"/><sessioninfo id="DESKTOP-3F0SSFQ-ca0ff9dc" start="1632789177899" dump="1632789179094"/><sessioninfo id="DESKTOP-3F0SSFQ-2b03aa12" start="1632789197815" dump="1632789198970"/><sessioninfo id="DESKTOP-3F0SSFQ-92377961" start="1632789713743" dump="1632789715200"/><sessioninfo id="DESKTOP-3F0SSFQ-f67dcf9d" start="1632791223035" dump="1632791223756"/><sessioninfo id="DESKTOP-3F0SSFQ-3deffdcc" start="1632791225995" dump="1632791227517"/><sessioninfo id="DESKTOP-3F0SSFQ-8370ba74" start="1632791234697" dump="1632791236818"/><sessioninfo id="DESKTOP-3F0SSFQ-e80853d4" start="1632791240963" dump="1632791242073"/><sessioninfo id="DESKTOP-3F0SSFQ-9ee31791" start="1632791253485" dump="1632791254576"/><sessioninfo id="DESKTOP-3F0SSFQ-58a45499" start="1632791643884" dump="1632791645145"/><sessioninfo id="DESKTOP-3F0SSFQ-6b36a7ae" start="1632791710919" dump="1632791711976"/><sessioninfo id="DESKTOP-3F0SSFQ-cd238e7f" start="1632792212364" dump="1632792213589"/><sessioninfo id="DESKTOP-3F0SSFQ-32a355ac" start="1632792226532" dump="1632792227738"/><sessioninfo id="DESKTOP-3F0SSFQ-cf2ae673" start="1632792263916" dump="1632792265083"/><sessioninfo id="DESKTOP-3F0SSFQ-d8ae4a1d" start="1632792284518" dump="1632792285894"/><sessioninfo id="DESKTOP-3F0SSFQ-590642cc" start="1632792572203" dump="1632792573348"/><sessioninfo id="DESKTOP-3F0SSFQ-c18502e8" start="1632792970189" dump="1632792971270"/><sessioninfo id="DESKTOP-3F0SSFQ-bb68ec51" start="1632793008312" dump="1632793009524"/><sessioninfo id="DESKTOP-3F0SSFQ-dc7eaf97" start="1632794014578" dump="1632794015732"/><sessioninfo id="DESKTOP-3F0SSFQ-4fd69810" start="1632794041217" dump="1632794042229"/><sessioninfo id="DESKTOP-3F0SSFQ-96825214" start="1632794338912" dump="1632794340518"/><sessioninfo id="DESKTOP-3F0SSFQ-89a0fc42" start="1632794376493" dump="1632794377631"/><sessioninfo id="DESKTOP-3F0SSFQ-cab82cf0" start="1632794402490" dump="1632794403864"/><sessioninfo id="DESKTOP-3F0SSFQ-c139591e" start="1632796470111" dump="1632796470839"/><sessioninfo id="DESKTOP-3F0SSFQ-82b8fd28" start="1632796538375" dump="1632796539119"/><sessioninfo id="DESKTOP-3F0SSFQ-3bdff75d" start="1632796570427" dump="1632796571185"/><sessioninfo id="DESKTOP-3F0SSFQ-cdb98687" start="1632796751134" dump="1632796751986"/><sessioninfo id="DESKTOP-3F0SSFQ-e6b68394" start="1632796813525" dump="1632796814279"/><sessioninfo id="DESKTOP-3F0SSFQ-9c517ae6" start="1632796822743" dump="1632796823495"/><sessioninfo id="DESKTOP-3F0SSFQ-7849bf85" start="1632805631900" dump="1632805632787"/><sessioninfo id="DESKTOP-3F0SSFQ-8af91b33" start="1634341976579" dump="1634341977263"/><sessioninfo id="DESKTOP-3F0SSFQ-3c496517" start="1634341993197" dump="1634341994053"/><sessioninfo id="DESKTOP-3F0SSFQ-a1df1e07" start="1634342019237" dump="1634342019963"/><sessioninfo id="DESKTOP-3F0SSFQ-aff8a924" start="1634342037885" dump="1634342038662"/><sessioninfo id="DESKTOP-3F0SSFQ-f94da3ae" start="1634342585320" dump="1634342586098"/><sessioninfo id="Jacobs-MacBook-Pro.local-f3f79794" start="1634836555186" dump="1634836564541"/><sessioninfo id="DESKTOP-3F0SSFQ-1c4bcb6b" start="1643427498985" dump="1643427499604"/><sessioninfo id="BLD-e50ef23e" start="1648105673043" dump="1648105673441"/><sessioninfo id="BLD-74c6d6ca" start="1648105701195" dump="1648105701608"/><sessioninfo id="BLD-822e0130" start="1648106315975" dump="1648106316391"/><package name="linalg/concurrent"><class name="linalg/concurrent/ThreadTypes" sourcefilename="ThreadTypes.java"><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/MatrixAdditionWorker" sourcefilename="MatrixAdditionWorker.java"><method name="&lt;init&gt;" desc="(Llinalg/concurrent/ConcurrentMatrixAddition;II)V" line="23"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/concurrent/ConcurrentMatrixAddition;IIII)V" line="42"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="55"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/ConcurrentMatrixAddition" sourcefilename="ConcurrentMatrixAddition.java"><method name="&lt;init&gt;" desc="(Llinalg/Matrix;Llinalg/Matrix;)V" line="30"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="()Llinalg/Matrix;" line="51"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allocateThreadsByRows" desc="()V" line="74"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/MatrixMultiplicationWorker" sourcefilename="MatrixMultiplicationWorker.java"><method name="&lt;init&gt;" desc="(Llinalg/concurrent/ConcurrentMatrixMultiplication;II)V" line="9"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="30"><counter type="INSTRUCTION" missed="160" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="175" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/concurrent/ConcurrentMatrixMultiplication" sourcefilename="ConcurrentMatrixMultiplication.java"><method name="&lt;init&gt;" desc="(Llinalg/Matrix;Llinalg/Matrix;)V" line="30"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mult" desc="()Llinalg/Matrix;" line="52"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allocateThreadsByRows" desc="()V" line="70"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ConcurrentMatrixMultiplication.java"><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="2" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="11" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="2" cb="0"/><line nr="75" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixMultiplicationWorker.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="2" cb="0"/><line nr="38" mi="9" ci="0" mb="2" cb="0"/><line nr="39" mi="12" ci="0" mb="4" cb="0"/><line nr="40" mi="12" ci="0" mb="4" cb="0"/><line nr="41" mi="51" ci="0" mb="0" cb="0"/><line nr="43" mi="51" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="175" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ThreadTypes.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="24" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConcurrentMatrixAddition.java"><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="2" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="2" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixAdditionWorker.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="57" mi="48" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="578" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="99" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="linalg/complex_number"><class name="linalg/complex_number/CNumber" sourcefilename="CNumber.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DD)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Llinalg/complex_number/CNumber;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randn" desc="(Z)Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="()Llinalg/complex_number/CNumber;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="()Llinalg/complex_number/CNumber;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(D)Llinalg/complex_number/CNumber;" line="147"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(DD[Z)Llinalg/complex_number/CNumber;" line="181"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="212"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="224"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;[Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="238"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="258"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="270"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="282"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="309"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="323"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addInv" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="355"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(Llinalg/complex_number/CNumber;Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="387"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(D)Llinalg/complex_number/CNumber;" line="408"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exp" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="419"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="435"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allSqrt" desc="(Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="468"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sign" desc="(Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="483"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="498"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(D)Z" line="521"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Llinalg/complex_number/CNumber;I)Llinalg/complex_number/CNumber;" line="542"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nearZero" desc="(D)Z" line="564"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llinalg/complex_number/CNumber;)I" line="578"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(Llinalg/complex_number/CNumber;)I" line="594"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareToReal" desc="(D)I" line="610"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mag" desc="()D" line="623"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="638"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="661"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReal" desc="()D" line="677"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImaginary" desc="()D" line="685"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="695"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="705"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isImaginary" desc="()Z" line="715"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInt" desc="()Z" line="725"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleValue" desc="()D" line="742"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatValue" desc="()F" line="752"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intValue" desc="()I" line="762"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longValue" desc="()J" line="772"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleImaginaryValue" desc="()D" line="780"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatImaginaryValue" desc="()F" line="790"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intImaginaryValue" desc="()I" line="799"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longImaginaryValue" desc="()J" line="809"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="(Llinalg/complex_number/CNumber;)I" line="818"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="823"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CNumber.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="155" mi="39" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="4" cb="0"/><line nr="191" mi="8" ci="0" mb="4" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="8" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="0" cb="0"/><line nr="224" mi="14" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="14" ci="0" mb="0" cb="0"/><line nr="270" mi="26" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="8" ci="0" mb="4" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="2" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="50" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="2" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="8" ci="0" mb="2" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="2" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="2" cb="0"/><line nr="390" mi="6" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="2" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="394" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="2" cb="0"/><line nr="436" mi="4" ci="0" mb="2" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="11" ci="0" mb="0" cb="0"/><line nr="442" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="4" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="5" ci="0" mb="0" cb="0"/><line nr="470" mi="8" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="2" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="8" ci="0" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="1" cb="1"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="12" mb="2" cb="2"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="10" ci="0" mb="4" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="2" cb="0"/><line nr="543" mi="6" ci="0" mb="0" cb="0"/><line nr="547" mi="8" ci="0" mb="0" cb="0"/><line nr="548" mi="8" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="9" ci="0" mb="2" cb="0"/><line nr="578" mi="8" ci="0" mb="2" cb="0"/><line nr="579" mi="8" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="8" ci="0" mb="2" cb="0"/><line nr="595" mi="8" ci="0" mb="2" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="7" ci="0" mb="0" cb="0"/><line nr="623" mi="13" ci="0" mb="0" cb="0"/><line nr="638" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="16" ci="0" mb="2" cb="0"/><line nr="641" mi="6" ci="0" mb="2" cb="0"/><line nr="642" mi="2" ci="0" mb="0" cb="0"/><line nr="646" mi="2" ci="0" mb="0" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="663" mi="16" ci="0" mb="2" cb="0"/><line nr="664" mi="6" ci="0" mb="2" cb="0"/><line nr="665" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="695" mi="9" ci="0" mb="2" cb="0"/><line nr="705" mi="9" ci="0" mb="2" cb="0"/><line nr="715" mi="14" ci="0" mb="4" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="2" cb="0"/><line nr="728" mi="3" ci="0" mb="0" cb="0"/><line nr="729" mi="9" ci="0" mb="2" cb="0"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="752" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="4" ci="0" mb="0" cb="0"/><line nr="772" mi="4" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="790" mi="4" ci="0" mb="0" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="818" mi="4" ci="0" mb="0" cb="0"/><line nr="823" mi="2" ci="0" mb="0" cb="0"/><line nr="825" mi="6" ci="0" mb="0" cb="0"/><line nr="827" mi="4" ci="0" mb="2" cb="0"/><line nr="828" mi="6" ci="0" mb="2" cb="0"/><line nr="829" mi="6" ci="0" mb="0" cb="0"/><line nr="831" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="4" ci="0" mb="2" cb="0"/><line nr="836" mi="8" ci="0" mb="4" cb="0"/><line nr="837" mi="3" ci="0" mb="0" cb="0"/><line nr="838" mi="4" ci="0" mb="0" cb="0"/><line nr="839" mi="4" ci="0" mb="2" cb="0"/><line nr="840" mi="3" ci="0" mb="0" cb="0"/><line nr="843" mi="6" ci="0" mb="2" cb="0"/><line nr="844" mi="4" ci="0" mb="2" cb="0"/><line nr="845" mi="4" ci="0" mb="2" cb="0"/><line nr="846" mi="4" ci="0" mb="0" cb="0"/><line nr="848" mi="6" ci="0" mb="0" cb="0"/><line nr="852" mi="4" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="858" mi="8" ci="0" mb="4" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="893" covered="106"/><counter type="BRANCH" missed="107" covered="3"/><counter type="LINE" missed="160" covered="28"/><counter type="COMPLEXITY" missed="103" covered="5"/><counter type="METHOD" missed="48" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="linalg/util"><class name="linalg/util/StringUtils" sourcefilename="StringUtils.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="center" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="center" desc="(Ljava/lang/String;IC)Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKind" desc="(Ljava/lang/String;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCheck" desc="(Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ShapeLexer" sourcefilename="ShapeLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="29"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/LinAlgArrayUtils" sourcefilename="LinAlgArrayUtils.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)[[Llinalg/complex_number/CNumber;" line="21"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II)[[Llinalg/complex_number/CNumber;" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)[[Llinalg/complex_number/CNumber;" line="45"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)[[Llinalg/complex_number/CNumber;" line="58"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)[[Llinalg/complex_number/CNumber;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([[Llinalg/complex_number/CNumber;)V" line="84"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printArr" desc="([Llinalg/complex_number/CNumber;)V" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDims" desc="([[Llinalg/complex_number/CNumber;)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)[[Llinalg/complex_number/CNumber;" line="106"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="([[Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="128"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSection" desc="([[Llinalg/complex_number/CNumber;IIII)[[Llinalg/complex_number/CNumber;" line="144"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="([II)Z" line="157"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([Llinalg/complex_number/CNumber;I)[[Llinalg/complex_number/CNumber;" line="189"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([DI)[[Llinalg/complex_number/CNumber;" line="226"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend2D" desc="([II)[[Llinalg/complex_number/CNumber;" line="265"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="([Llinalg/complex_number/CNumber;)Llinalg/complex_number/CNumber;" line="291"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="group" desc="([Llinalg/complex_number/CNumber;)[Llinalg/complex_number/CNumber;" line="304"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/NumberLexer" sourcefilename="NumberLexer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Llinalg/util/Token;" line="35"><counter type="INSTRUCTION" missed="113" covered="136"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="36"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="113" covered="142"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="39"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/ExampleMatrices" sourcefilename="ExampleMatrices.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="893" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseShape" desc="(Ljava/lang/String;)[I" line="16"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseNumber" desc="(Ljava/lang/String;)[D" line="46"><counter type="INSTRUCTION" missed="85" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="17" covered="23"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/util/FileManager" sourcefilename="FileManager.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readcsv" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write2csv" desc="(Llinalg/Matrix;Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/util/Lexer" sourcefilename="Lexer.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="digit" desc="(I)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextSymbol" desc="()I" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putBackSymbol" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileManager.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="2" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="2" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="2" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="37" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="247" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Parser.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="4" ci="4" mb="3" cb="1"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="1" cb="1"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="2" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="1"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="90"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="29" covered="23"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShapeLexer.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="12" ci="0" mb="8" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="4" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NumberLexer.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="4" cb="4"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="12" ci="0" mb="8" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="1" cb="3"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="1" cb="3"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="113" covered="142"/><counter type="BRANCH" missed="31" covered="29"/><counter type="LINE" missed="29" covered="39"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleMatrices.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="54" ci="0" mb="0" cb="0"/><line nr="36" mi="372" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="49" mi="54" ci="0" mb="0" cb="0"/><line nr="54" mi="136" ci="0" mb="0" cb="0"/><line nr="60" mi="78" ci="0" mb="0" cb="0"/><line nr="64" mi="54" ci="0" mb="0" cb="0"/><line nr="68" mi="88" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="900" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringUtils.java"><line nr="4" mi="2" ci="0" mb="0" cb="0"/><line nr="5" mi="5" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="2" cb="2"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="2"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinAlgArrayUtils.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="2" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="2" cb="0"/><line nr="30" mi="10" ci="0" mb="2" cb="0"/><line nr="31" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="2" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><line nr="85" mi="10" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="2" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="10" ci="0" mb="2" cb="0"/><line nr="148" mi="14" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="16" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="2" cb="0"/><line nr="197" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="230" mi="11" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="2" cb="0"/><line nr="236" mi="11" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="9" ci="0" mb="2" cb="0"/><line nr="269" mi="12" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="9" ci="0" mb="2" cb="0"/><line nr="275" mi="12" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="294" mi="11" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="10" ci="0" mb="2" cb="0"/><line nr="307" mi="10" ci="0" mb="2" cb="0"/><line nr="308" mi="12" ci="0" mb="2" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="573" covered="29"/><counter type="BRANCH" missed="68" covered="4"/><counter type="LINE" missed="97" covered="5"/><counter type="COMPLEXITY" missed="52" covered="3"/><counter type="METHOD" missed="18" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="1" cb="3"/><line nr="65" mi="0" ci="5" mb="1" cb="1"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Lexer.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="4"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2136" covered="401"/><counter type="BRANCH" missed="162" covered="58"/><counter type="LINE" missed="274" covered="97"/><counter type="COMPLEXITY" missed="127" covered="33"/><counter type="METHOD" missed="34" covered="16"/><counter type="CLASS" missed="3" covered="6"/></package><package name="linalg"><class name="linalg/QRDecomposition" sourcefilename="QRDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="20"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="33"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QRtemp" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="94"><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="158"><counter type="INSTRUCTION" missed="622" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/SchurDecomposition" sourcefilename="SchurDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurDecomp" desc="(Llinalg/Matrix;ZZ)[Llinalg/Matrix;" line="13"><counter type="INSTRUCTION" missed="361" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="368" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixOperations" sourcefilename="MatrixOperations.java"><method name="add" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="21"><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Llinalg/Matrix;" line="61"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="81"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(D)Llinalg/Matrix;" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="117"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemMult" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="148"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(D)Llinalg/Matrix;" line="173"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalMult" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="184"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elemDiv" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="205"><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Matrix;" line="231"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="243"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fip" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directSum" desc="([Llinalg/Matrix;)Llinalg/Matrix;" line="266"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sqrt" desc="()Llinalg/Matrix;" line="301"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Llinalg/Matrix;" line="322"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transpose" desc="()Llinalg/Matrix;" line="341"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="T" desc="()Llinalg/Matrix;" line="352"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjugate" desc="()Llinalg/Matrix;" line="379"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conjT" desc="()Llinalg/Matrix;" line="400"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hermAdjoint" desc="()Llinalg/Matrix;" line="412"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="H" desc="()Llinalg/Matrix;" line="424"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detRec" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="436"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detQR" desc="(Llinalg/Matrix;)Llinalg/complex_number/CNumber;" line="471"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="det" desc="()Llinalg/complex_number/CNumber;" line="492"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="519"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stack" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="535"><counter type="INSTRUCTION" missed="210" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="augment" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="589"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ref" desc="()Llinalg/Matrix;" line="612"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="(Z)Llinalg/Matrix;" line="677"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rref" desc="()Llinalg/Matrix;" line="703"><counter type="INSTRUCTION" missed="181" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rrefNoPivot" desc="()Llinalg/Matrix;" line="791"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="erref" desc="()Llinalg/Matrix;" line="833"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trace" desc="()Llinalg/complex_number/CNumber;" line="850"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tr" desc="()Llinalg/complex_number/CNumber;" line="875"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="889"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullity" desc="()I" line="913"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverse" desc="()Llinalg/Matrix;" line="925"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inv" desc="()Llinalg/Matrix;" line="962"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseTriU" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="981"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recep" desc="()Llinalg/Matrix;" line="1003"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="1015"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2106" covered="0"/><counter type="BRANCH" missed="186" covered="0"/><counter type="LINE" missed="283" covered="0"/><counter type="COMPLEXITY" missed="134" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixMultiplicationAlgorithms" sourcefilename="MatrixMultiplicationAlgorithms.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="standard" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="28"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concurrent" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/LUDecomposition" sourcefilename="LUDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Llinalg/Matrix;I)[Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="53"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPartialPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="85"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUFullPivot" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="122"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDUDecomposition" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="163"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxColIndex" desc="([Llinalg/complex_number/CNumber;I)I" line="186"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxIndex" desc="(Llinalg/Matrix;I)[I" line="201"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixManipulations" sourcefilename="MatrixManipulations.java"><method name="reshape" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="18"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reshape" desc="(II)Llinalg/Matrix;" line="27"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="()Llinalg/Matrix;" line="56"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(I)Llinalg/Matrix;" line="82"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(I)Llinalg/Matrix;" line="121"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[Llinalg/complex_number/CNumber;)V" line="156"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValues" desc="([[D)V" line="174"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Llinalg/complex_number/CNumber;II)V" line="198"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(DII)V" line="213"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="(Llinalg/Vector;I)V" line="232"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([Llinalg/complex_number/CNumber;I)V" line="259"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCol" desc="([DI)V" line="282"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="(Llinalg/Vector;I)V" line="307"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([Llinalg/complex_number/CNumber;I)V" line="334"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRow" desc="([DI)V" line="358"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSliceCopy" desc="(IILlinalg/Matrix;)Llinalg/Matrix;" line="382"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSlice" desc="(IILlinalg/Matrix;)V" line="412"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRow" desc="(I)Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRows" desc="([I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCol" desc="(I)Llinalg/Matrix;" line="480"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCols" desc="([I)Llinalg/Matrix;" line="495"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="()Llinalg/Matrix;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tril" desc="(I)Llinalg/Matrix;" line="538"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="()Llinalg/Matrix;" line="560"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="triu" desc="(I)Llinalg/Matrix;" line="576"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diag" desc="()Llinalg/Matrix;" line="600"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([Llinalg/complex_number/CNumber;)Llinalg/Matrix;" line="610"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([D)Llinalg/Matrix;" line="625"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diagAsVector" desc="()Llinalg/Vector;" line="640"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessu" desc="()Llinalg/Matrix;" line="659"><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hessuV" desc="()[Llinalg/Matrix;" line="708"><counter type="INSTRUCTION" missed="246" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapRows" desc="(II)Llinalg/Matrix;" line="759"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapCols" desc="(II)Llinalg/Matrix;" line="780"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="802"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multRow" desc="(ID)Llinalg/Matrix;" line="820"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ILlinalg/complex_number/CNumber;)Llinalg/Matrix;" line="831"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divRow" desc="(ID)Llinalg/Matrix;" line="842"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVector" desc="()Llinalg/Vector;" line="855"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(I)Llinalg/Matrix;" line="889"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundToZero" desc="(I)V" line="907"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="922"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1884" covered="0"/><counter type="BRANCH" missed="148" covered="0"/><counter type="LINE" missed="272" covered="0"/><counter type="COMPLEXITY" missed="115" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/PrintOptions" sourcefilename="PrintOptions.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/SingularValueDecomposition" sourcefilename="SingularValueDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="svd" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="19"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixChecks" sourcefilename="MatrixChecks.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;I)V" line="22"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Solvers" sourcefilename="Solvers.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;[Llinalg/Vector;)[Llinalg/Vector;" line="26"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="55"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solve" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="94"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="solveQR" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Vector;" line="115"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="backSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="131"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forwardSolve" desc="(Llinalg/Matrix;Llinalg/Vector;)Llinalg/Vector;" line="173"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/Matrix" sourcefilename="Matrix.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILlinalg/complex_number/CNumber;)V" line="72"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="96"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILlinalg/complex_number/CNumber;)V" line="114"><counter type="INSTRUCTION" missed="7" covered="49"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IID)V" line="142"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Matrix;)V" line="168"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Ljava/lang/String;)V" line="181"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[Llinalg/complex_number/CNumber;)V" line="200"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[D)V" line="217"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([[I)V" line="236"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="255"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Llinalg/complex_number/CNumber;)V" line="270"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;D)V" line="292"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(I)Llinalg/Matrix;" line="315"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(II)Llinalg/Matrix;" line="329"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="342"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(I)Llinalg/Matrix;" line="357"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(II)Llinalg/Matrix;" line="378"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Ljava/lang/String;)Llinalg/Matrix;" line="398"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identity" desc="(I)Llinalg/Matrix;" line="428"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(I)Llinalg/Matrix;" line="452"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="I" desc="(II)Llinalg/Matrix;" line="465"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="van" desc="(Llinalg/Vector;I)Llinalg/Matrix;" line="483"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;DD[Z)Llinalg/Matrix;" line="514"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IIDD[Z)Llinalg/Matrix;" line="536"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;[Z)Llinalg/Matrix;" line="556"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(II[Z)Llinalg/Matrix;" line="575"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Ljava/lang/String;D)Llinalg/Matrix;" line="592"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(IID)Llinalg/Matrix;" line="609"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randn" desc="(IIZ)Llinalg/Matrix;" line="622"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomComplex" desc="(II)Llinalg/Matrix;" line="634"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomOrthogonal" desc="(I)Llinalg/Matrix;" line="646"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randomUnitary" desc="(I)Llinalg/Matrix;" line="666"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ln" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="685"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="708"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log" desc="(Llinalg/Matrix;I)Llinalg/Matrix;" line="732"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Llinalg/Matrix;" line="754"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()[[Llinalg/complex_number/CNumber;" line="763"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesAsDouble" desc="()[[D" line="775"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="(I)[Llinalg/complex_number/CNumber;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowAsVector" desc="(I)Llinalg/Vector;" line="805"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCol" desc="(I)[Llinalg/complex_number/CNumber;" line="820"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColAsVector" desc="(I)Llinalg/Vector;" line="837"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSlice" desc="(IIII)Llinalg/Matrix;" line="857"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(II)Llinalg/complex_number/CNumber;" line="872"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(II)D" line="883"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="([Ljava/lang/Object;)V" line="893"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="println" desc="([Ljava/lang/Object;)V" line="907"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printSep" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="925"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="939"><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1517" covered="169"/><counter type="BRANCH" missed="118" covered="14"/><counter type="LINE" missed="251" covered="42"/><counter type="COMPLEXITY" missed="107" covered="10"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Vector" sourcefilename="Vector.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="35"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([I)V" line="76"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([II)V" line="93"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([D)V" line="119"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([DI)V" line="136"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;)V" line="162"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Llinalg/complex_number/CNumber;I)V" line="179"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Llinalg/Vector;)V" line="202"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRowVector" desc="()Llinalg/Vector;" line="233"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toColVector" desc="()Llinalg/Vector;" line="249"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="innerProduct" desc="(Llinalg/Vector;)Llinalg/complex_number/CNumber;" line="276"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outerProduct" desc="(Llinalg/Vector;)Llinalg/Matrix;" line="324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="351"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="382"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntries" desc="()[Llinalg/complex_number/CNumber;" line="393"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Llinalg/Vector;)Llinalg/Vector;" line="408"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(Llinalg/Vector;)Llinalg/Vector;" line="419"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(Llinalg/complex_number/CNumber;)Llinalg/Vector;" line="424"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalDiv" desc="(D)Llinalg/Vector;" line="428"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMatrix" desc="()Llinalg/Matrix;" line="437"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/CholeskyDecomposition" sourcefilename="CholeskyDecomposition.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="choleskyDecomp" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="12"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixComparisons" sourcefilename="MatrixComparisons.java"><method name="equals" desc="(Llinalg/Matrix;)Z" line="15"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;I)Z" line="50"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameShape" desc="(Llinalg/Matrix;)Z" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matMultCheck" desc="(Llinalg/Matrix;Llinalg/Matrix;)Z" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isZero" desc="()Z" line="108"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isI" desc="()Z" line="130"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInv" desc="(Llinalg/Matrix;)Z" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="208" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="linalg/MatrixProperties" sourcefilename="MatrixProperties.java"><method name="numCols" desc="()I" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numRows" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSquare" desc="()Z" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Llinalg/complex_number/CNumber;" line="81"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minReal" desc="()D" line="101"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Llinalg/complex_number/CNumber;" line="126"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReal" desc="()D" line="147"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minComplex" desc="()Llinalg/complex_number/CNumber;" line="170"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxComplex" desc="()Llinalg/complex_number/CNumber;" line="192"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReal" desc="()Z" line="213"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isComplex" desc="()Z" line="235"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVector" desc="()Z" line="259"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vectorType" desc="()I" line="277"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSelfAdjoint" desc="()Z" line="303"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHermation" desc="()Z" line="316"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="()Z" line="334"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSkewSymmetric" desc="()Z" line="357"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymmetric" desc="(Ljava/lang/String;)Z" line="392"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOrthogonal" desc="()Z" line="419"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnitary" desc="()Z" line="445"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTri" desc="()I" line="479"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriU" desc="()Z" line="501"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTriL" desc="()Z" line="524"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonal" desc="()Z" line="551"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFullRank" desc="()Z" line="567"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingular" desc="()Z" line="580"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="()Llinalg/complex_number/CNumber;" line="595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(D)Llinalg/complex_number/CNumber;" line="610"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="norm" desc="(DD)Llinalg/complex_number/CNumber;" line="628"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infNorm" desc="()Llinalg/complex_number/CNumber;" line="653"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rowSpace" desc="()Llinalg/Matrix;" line="667"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="colSpace" desc="()Llinalg/Matrix;" line="702"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullSpace" desc="()Llinalg/Matrix;" line="739"><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftNullSpace" desc="()Llinalg/Matrix;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPos" desc="()Z" line="803"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNeg" desc="()Z" line="824"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosDef" desc="()Z" line="849"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPosSemidef" desc="()Z" line="877"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eig" desc="()[Llinalg/Matrix;" line="909"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVecs" desc="()Llinalg/Matrix;" line="952"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eigVals" desc="()Llinalg/Matrix;" line="966"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDiagonalizable" desc="()Z" line="978"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="1017"><counter type="INSTRUCTION" missed="858" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2330" covered="18"/><counter type="BRANCH" missed="214" covered="0"/><counter type="LINE" missed="291" covered="6"/><counter type="COMPLEXITY" missed="149" covered="3"/><counter type="METHOD" missed="42" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="linalg/Decompose" sourcefilename="Decompose.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="45"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUP" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="67"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LUPQ" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="90"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LDU" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="QR" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cholesky" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="177"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schur" desc="(Llinalg/Matrix;Z)[Llinalg/Matrix;" line="200"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schurReal" desc="(Llinalg/Matrix;)[Llinalg/Matrix;" line="220"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SingularValueDecomposition.java"><line nr="5" mi="2" ci="0" mb="0" cb="0"/><line nr="6" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="36" mi="17" ci="0" mb="0" cb="0"/><line nr="37" mi="17" ci="0" mb="0" cb="0"/><line nr="38" mi="24" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="45" ci="0" mb="0" cb="0"/><line nr="49" mi="87" ci="0" mb="0" cb="0"/><line nr="54" mi="55" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="15" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LUDecomposition.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="5" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="2" cb="0"/><line nr="58" mi="10" ci="0" mb="2" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="20" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="101" mi="14" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="20" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="2" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="2" cb="0"/><line nr="140" mi="14" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="20" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="2" cb="0"/><line nr="171" mi="8" ci="0" mb="2" cb="0"/><line nr="172" mi="19" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="8" ci="0" mb="2" cb="0"/><line nr="190" mi="6" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="2" cb="0"/><line nr="205" mi="8" ci="0" mb="2" cb="0"/><line nr="206" mi="7" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="544" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="98" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrintOptions.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixChecks.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="2" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="7" ci="0" mb="2" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixMultiplicationAlgorithms.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="2" cb="0"/><line nr="32" mi="8" ci="0" mb="2" cb="0"/><line nr="33" mi="8" ci="0" mb="2" cb="0"/><line nr="34" mi="41" ci="0" mb="0" cb="0"/><line nr="35" mi="41" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Decompose.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="2" cb="0"/><line nr="201" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QRDecomposition.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="9" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="19" ci="0" mb="2" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="2" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="19" ci="0" mb="2" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="15" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="0" cb="0"/><line nr="120" mi="15" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="15" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="129" mi="13" ci="0" mb="0" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="15" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="54" ci="0" mb="0" cb="0"/><line nr="162" mi="87" ci="0" mb="0" cb="0"/><line nr="167" mi="41" ci="0" mb="0" cb="0"/><line nr="170" mi="203" ci="0" mb="0" cb="0"/><line nr="176" mi="87" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="19" ci="0" mb="0" cb="0"/><line nr="186" mi="19" ci="0" mb="0" cb="0"/><line nr="187" mi="17" ci="0" mb="0" cb="0"/><line nr="188" mi="24" ci="0" mb="0" cb="0"/><line nr="189" mi="23" ci="0" mb="0" cb="0"/><line nr="190" mi="16" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1049" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixComparisons.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="4" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="24" mi="8" ci="0" mb="2" cb="0"/><line nr="25" mi="14" ci="0" mb="2" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="2" cb="0"/><line nr="112" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="208" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SchurDecomposition.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="2" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="17" ci="0" mb="4" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="17" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="18" ci="0" mb="0" cb="0"/><line nr="46" mi="15" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="23" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="25" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="18" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="368" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Solvers.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="2" cb="0"/><line nr="36" mi="16" ci="0" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="39" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="27" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="2" cb="0"/><line nr="141" mi="15" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="8" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="2" cb="0"/><line nr="183" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="14" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="332" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Matrix.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="1" cb="1"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="2" cb="2"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="2" cb="2"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="4" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="2" cb="0"/><line nr="154" mi="7" ci="0" mb="2" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="189" mi="14" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="2" cb="0"/><line nr="207" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="2" cb="0"/><line nr="224" mi="8" ci="0" mb="2" cb="0"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="8" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="2" cb="0"/><line nr="244" mi="15" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="279" mi="8" ci="0" mb="2" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="8" ci="0" mb="2" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="7" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="2" cb="0"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="2" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="7" ci="0" mb="2" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="10" ci="0" mb="4" cb="0"/><line nr="468" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="3" ci="0" mb="2" cb="0"/><line nr="484" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="7" ci="0" mb="2" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="3" ci="0" mb="0" cb="0"/><line nr="515" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="7" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="2" cb="0"/><line nr="537" mi="17" ci="0" mb="0" cb="0"/><line nr="540" mi="11" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="0" cb="0"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="560" mi="5" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="2" cb="0"/><line nr="576" mi="17" ci="0" mb="0" cb="0"/><line nr="579" mi="11" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="8" ci="0" mb="0" cb="0"/><line nr="622" mi="8" ci="0" mb="0" cb="0"/><line nr="634" mi="7" ci="0" mb="0" cb="0"/><line nr="646" mi="8" ci="0" mb="0" cb="0"/><line nr="647" mi="3" ci="0" mb="0" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="650" mi="8" ci="0" mb="2" cb="0"/><line nr="651" mi="20" ci="0" mb="0" cb="0"/><line nr="654" mi="10" ci="0" mb="0" cb="0"/><line nr="666" mi="8" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="5" ci="0" mb="0" cb="0"/><line nr="670" mi="8" ci="0" mb="2" cb="0"/><line nr="671" mi="20" ci="0" mb="0" cb="0"/><line nr="674" mi="10" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="2" cb="0"/><line nr="686" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="5" ci="0" mb="0" cb="0"/><line nr="691" mi="8" ci="0" mb="2" cb="0"/><line nr="692" mi="8" ci="0" mb="2" cb="0"/><line nr="693" mi="15" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="3" ci="0" mb="2" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="712" mi="5" ci="0" mb="0" cb="0"/><line nr="714" mi="8" ci="0" mb="2" cb="0"/><line nr="715" mi="8" ci="0" mb="2" cb="0"/><line nr="716" mi="15" ci="0" mb="0" cb="0"/><line nr="720" mi="2" ci="0" mb="0" cb="0"/><line nr="732" mi="3" ci="0" mb="2" cb="0"/><line nr="733" mi="5" ci="0" mb="0" cb="0"/><line nr="736" mi="5" ci="0" mb="0" cb="0"/><line nr="738" mi="8" ci="0" mb="2" cb="0"/><line nr="739" mi="8" ci="0" mb="2" cb="0"/><line nr="740" mi="19" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="754" mi="6" ci="0" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="775" mi="6" ci="0" mb="0" cb="0"/><line nr="777" mi="8" ci="0" mb="2" cb="0"/><line nr="778" mi="10" ci="0" mb="2" cb="0"/><line nr="779" mi="12" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="0" cb="0"/><line nr="807" mi="13" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="8" ci="0" mb="2" cb="0"/><line nr="823" mi="9" ci="0" mb="0" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="6" ci="0" mb="0" cb="0"/><line nr="839" mi="8" ci="0" mb="2" cb="0"/><line nr="840" mi="12" ci="0" mb="0" cb="0"/><line nr="843" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="10" ci="0" mb="0" cb="0"/><line nr="859" mi="9" ci="0" mb="2" cb="0"/><line nr="860" mi="18" ci="0" mb="0" cb="0"/><line nr="863" mi="2" ci="0" mb="0" cb="0"/><line nr="872" mi="10" ci="0" mb="0" cb="0"/><line nr="883" mi="8" ci="0" mb="0" cb="0"/><line nr="893" mi="16" ci="0" mb="2" cb="0"/><line nr="894" mi="4" ci="0" mb="0" cb="0"/><line nr="896" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="16" ci="0" mb="2" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="1" ci="0" mb="0" cb="0"/><line nr="925" mi="16" ci="0" mb="2" cb="0"/><line nr="926" mi="6" ci="0" mb="0" cb="0"/><line nr="929" mi="2" ci="0" mb="0" cb="0"/><line nr="930" mi="1" ci="0" mb="0" cb="0"/><line nr="939" mi="2" ci="0" mb="0" cb="0"/><line nr="941" mi="3" ci="0" mb="2" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="943" mi="4" ci="0" mb="0" cb="0"/><line nr="945" mi="8" ci="0" mb="2" cb="0"/><line nr="946" mi="5" ci="0" mb="0" cb="0"/><line nr="948" mi="7" ci="0" mb="0" cb="0"/><line nr="950" mi="3" ci="0" mb="2" cb="0"/><line nr="951" mi="5" ci="0" mb="0" cb="0"/><line nr="954" mi="5" ci="0" mb="0" cb="0"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="958" mi="8" ci="0" mb="2" cb="0"/><line nr="959" mi="9" ci="0" mb="4" cb="0"/><line nr="960" mi="4" ci="0" mb="0" cb="0"/><line nr="961" mi="5" ci="0" mb="0" cb="0"/><line nr="964" mi="4" ci="0" mb="0" cb="0"/><line nr="966" mi="8" ci="0" mb="2" cb="0"/><line nr="968" mi="9" ci="0" mb="4" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="970" mi="14" ci="0" mb="0" cb="0"/><line nr="971" mi="11" ci="0" mb="0" cb="0"/><line nr="972" mi="23" ci="0" mb="0" cb="0"/><line nr="973" mi="1" ci="0" mb="0" cb="0"/><line nr="976" mi="8" ci="0" mb="0" cb="0"/><line nr="977" mi="19" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="3" ci="0" mb="0" cb="0"/><line nr="986" mi="9" ci="0" mb="0" cb="0"/><line nr="987" mi="1" ci="0" mb="0" cb="0"/><line nr="989" mi="3" ci="0" mb="0" cb="0"/><line nr="992" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1517" covered="169"/><counter type="BRANCH" missed="118" covered="14"/><counter type="LINE" missed="251" covered="42"/><counter type="COMPLEXITY" missed="107" covered="10"/><counter type="METHOD" missed="45" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixManipulations.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="2" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="15" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="2" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="16" ci="0" mb="4" cb="0"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="16" ci="0" mb="4" cb="0"/><line nr="177" mi="13" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="2" cb="0"/><line nr="182" mi="11" ci="0" mb="2" cb="0"/><line nr="183" mi="14" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="2" cb="0"/><line nr="238" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="2" cb="0"/><line nr="242" mi="10" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="5" ci="0" mb="2" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="265" mi="8" ci="0" mb="2" cb="0"/><line nr="266" mi="12" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="288" mi="8" ci="0" mb="2" cb="0"/><line nr="289" mi="12" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="2" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="2" cb="0"/><line nr="313" mi="9" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="2" cb="0"/><line nr="317" mi="10" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="2" cb="0"/><line nr="337" mi="9" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="2" cb="0"/><line nr="341" mi="12" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="2" cb="0"/><line nr="361" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="8" ci="0" mb="2" cb="0"/><line nr="365" mi="12" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="14" ci="0" mb="4" cb="0"/><line nr="385" mi="11" ci="0" mb="0" cb="0"/><line nr="389" mi="10" ci="0" mb="2" cb="0"/><line nr="390" mi="10" ci="0" mb="2" cb="0"/><line nr="391" mi="16" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="14" ci="0" mb="4" cb="0"/><line nr="415" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="2" cb="0"/><line nr="420" mi="10" ci="0" mb="2" cb="0"/><line nr="421" mi="16" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="9" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="2" cb="0"/><line nr="458" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="8" ci="0" mb="2" cb="0"/><line nr="460" mi="12" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="9" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="11" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="8" ci="0" mb="2" cb="0"/><line nr="501" mi="4" ci="0" mb="2" cb="0"/><line nr="502" mi="8" ci="0" mb="2" cb="0"/><line nr="503" mi="12" ci="0" mb="0" cb="0"/><line nr="505" mi="1" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="8" ci="0" mb="2" cb="0"/><line nr="542" mi="13" ci="0" mb="4" cb="0"/><line nr="543" mi="12" ci="0" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="6" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="8" ci="0" mb="2" cb="0"/><line nr="582" mi="7" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="585" mi="13" ci="0" mb="4" cb="0"/><line nr="586" mi="12" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="8" ci="0" mb="2" cb="0"/><line nr="613" mi="9" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="625" mi="6" ci="0" mb="0" cb="0"/><line nr="627" mi="8" ci="0" mb="2" cb="0"/><line nr="628" mi="12" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="3" ci="0" mb="0" cb="0"/><line nr="641" mi="9" ci="0" mb="0" cb="0"/><line nr="643" mi="8" ci="0" mb="2" cb="0"/><line nr="644" mi="12" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="4" ci="0" mb="0" cb="0"/><line nr="660" mi="8" ci="0" mb="0" cb="0"/><line nr="661" mi="10" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="2" cb="0"/><line nr="664" mi="7" ci="0" mb="0" cb="0"/><line nr="668" mi="10" ci="0" mb="2" cb="0"/><line nr="669" mi="23" ci="0" mb="2" cb="0"/><line nr="670" mi="12" ci="0" mb="0" cb="0"/><line nr="672" mi="11" ci="0" mb="0" cb="0"/><line nr="673" mi="10" ci="0" mb="0" cb="0"/><line nr="674" mi="1" ci="0" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="676" mi="1" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="32" ci="0" mb="0" cb="0"/><line nr="682" mi="15" ci="0" mb="0" cb="0"/><line nr="683" mi="29" ci="0" mb="0" cb="0"/><line nr="684" mi="14" ci="0" mb="0" cb="0"/><line nr="687" mi="15" ci="0" mb="0" cb="0"/><line nr="688" mi="37" ci="0" mb="0" cb="0"/><line nr="689" mi="6" ci="0" mb="0" cb="0"/><line nr="694" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="8" ci="0" mb="0" cb="0"/><line nr="710" mi="10" ci="0" mb="0" cb="0"/><line nr="711" mi="3" ci="0" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="2" cb="0"/><line nr="714" mi="7" ci="0" mb="0" cb="0"/><line nr="718" mi="10" ci="0" mb="2" cb="0"/><line nr="719" mi="12" ci="0" mb="0" cb="0"/><line nr="721" mi="11" ci="0" mb="0" cb="0"/><line nr="722" mi="10" ci="0" mb="0" cb="0"/><line nr="723" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="1" ci="0" mb="0" cb="0"/><line nr="729" mi="32" ci="0" mb="0" cb="0"/><line nr="731" mi="15" ci="0" mb="0" cb="0"/><line nr="732" mi="29" ci="0" mb="0" cb="0"/><line nr="733" mi="14" ci="0" mb="0" cb="0"/><line nr="736" mi="15" ci="0" mb="0" cb="0"/><line nr="737" mi="37" ci="0" mb="0" cb="0"/><line nr="738" mi="6" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="4" ci="0" mb="0" cb="0"/><line nr="745" mi="4" ci="0" mb="0" cb="0"/><line nr="747" mi="2" ci="0" mb="0" cb="0"/><line nr="759" mi="3" ci="0" mb="0" cb="0"/><line nr="760" mi="3" ci="0" mb="0" cb="0"/><line nr="762" mi="5" ci="0" mb="0" cb="0"/><line nr="763" mi="5" ci="0" mb="0" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="5" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="0" cb="0"/><line nr="781" mi="3" ci="0" mb="0" cb="0"/><line nr="783" mi="4" ci="0" mb="0" cb="0"/><line nr="784" mi="4" ci="0" mb="0" cb="0"/><line nr="786" mi="8" ci="0" mb="2" cb="0"/><line nr="787" mi="9" ci="0" mb="0" cb="0"/><line nr="788" mi="9" ci="0" mb="0" cb="0"/><line nr="791" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="3" ci="0" mb="0" cb="0"/><line nr="803" mi="8" ci="0" mb="0" cb="0"/><line nr="805" mi="8" ci="0" mb="2" cb="0"/><line nr="806" mi="14" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="8" ci="0" mb="0" cb="0"/><line nr="831" mi="6" ci="0" mb="0" cb="0"/><line nr="842" mi="7" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="858" mi="6" ci="0" mb="4" cb="0"/><line nr="859" mi="7" ci="0" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="2" cb="0"/><line nr="865" mi="5" ci="0" mb="0" cb="0"/><line nr="868" mi="3" ci="0" mb="2" cb="0"/><line nr="869" mi="2" ci="0" mb="0" cb="0"/><line nr="872" mi="8" ci="0" mb="0" cb="0"/><line nr="876" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="6" ci="0" mb="0" cb="0"/><line nr="891" mi="8" ci="0" mb="2" cb="0"/><line nr="892" mi="8" ci="0" mb="2" cb="0"/><line nr="893" mi="14" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="0" cb="0"/><line nr="907" mi="8" ci="0" mb="0" cb="0"/><line nr="908" mi="3" ci="0" mb="0" cb="0"/><line nr="910" mi="8" ci="0" mb="2" cb="0"/><line nr="911" mi="8" ci="0" mb="2" cb="0"/><line nr="912" mi="11" ci="0" mb="2" cb="0"/><line nr="913" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="1" ci="0" mb="0" cb="0"/><line nr="922" mi="19" ci="0" mb="0" cb="0"/><line nr="923" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="9" ci="0" mb="0" cb="0"/><line nr="926" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1884" covered="0"/><counter type="BRANCH" missed="148" covered="0"/><counter type="LINE" missed="272" covered="0"/><counter type="COMPLEXITY" missed="115" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CholeskyDecomposition.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="5" ci="0" mb="0" cb="0"/><line nr="12" mi="19" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="2" cb="0"/><line nr="15" mi="7" ci="0" mb="2" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="7" ci="0" mb="2" cb="0"/><line nr="19" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="14" ci="0" mb="0" cb="0"/><line nr="27" mi="12" ci="0" mb="2" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixProperties.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="4" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="105" mi="8" ci="0" mb="2" cb="0"/><line nr="106" mi="9" ci="0" mb="2" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="9" ci="0" mb="2" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="2" cb="0"/><line nr="174" mi="8" ci="0" mb="2" cb="0"/><line nr="175" mi="9" ci="0" mb="2" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="2" cb="0"/><line nr="196" mi="8" ci="0" mb="2" cb="0"/><line nr="197" mi="9" ci="0" mb="2" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="8" ci="0" mb="2" cb="0"/><line nr="217" mi="8" ci="0" mb="2" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="8" ci="0" mb="2" cb="0"/><line nr="239" mi="8" ci="0" mb="2" cb="0"/><line nr="240" mi="8" ci="0" mb="2" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="4" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="8" ci="0" mb="4" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="8" ci="0" mb="4" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="8" ci="0" mb="4" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="2" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="2" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="7" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="2" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="2" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="2" cb="0"/><line nr="426" mi="7" ci="0" mb="0" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="2" cb="0"/><line nr="448" mi="7" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="2" cb="0"/><line nr="483" mi="3" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="2" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="2" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="10" ci="0" mb="2" cb="0"/><line nr="505" mi="10" ci="0" mb="2" cb="0"/><line nr="506" mi="9" ci="0" mb="2" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="3" ci="0" mb="2" cb="0"/><line nr="528" mi="7" ci="0" mb="0" cb="0"/><line nr="531" mi="10" ci="0" mb="2" cb="0"/><line nr="532" mi="10" ci="0" mb="2" cb="0"/><line nr="533" mi="9" ci="0" mb="2" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="2" cb="0"/><line nr="554" mi="7" ci="0" mb="0" cb="0"/><line nr="557" mi="10" ci="0" mb="4" cb="0"/><line nr="567" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="2" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="7" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="2" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="631" mi="15" ci="0" mb="8" cb="0"/><line nr="632" mi="7" ci="0" mb="0" cb="0"/><line nr="636" mi="8" ci="0" mb="2" cb="0"/><line nr="637" mi="8" ci="0" mb="2" cb="0"/><line nr="638" mi="12" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="644" mi="9" ci="0" mb="0" cb="0"/><line nr="653" mi="5" ci="0" mb="0" cb="0"/><line nr="654" mi="7" ci="0" mb="0" cb="0"/><line nr="667" mi="3" ci="0" mb="0" cb="0"/><line nr="668" mi="4" ci="0" mb="0" cb="0"/><line nr="669" mi="7" ci="0" mb="0" cb="0"/><line nr="670" mi="6" ci="0" mb="0" cb="0"/><line nr="675" mi="8" ci="0" mb="2" cb="0"/><line nr="676" mi="6" ci="0" mb="2" cb="0"/><line nr="677" mi="10" ci="0" mb="2" cb="0"/><line nr="678" mi="9" ci="0" mb="2" cb="0"/><line nr="679" mi="13" ci="0" mb="2" cb="0"/><line nr="680" mi="12" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="702" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="3" ci="0" mb="0" cb="0"/><line nr="704" mi="7" ci="0" mb="0" cb="0"/><line nr="705" mi="6" ci="0" mb="0" cb="0"/><line nr="710" mi="8" ci="0" mb="2" cb="0"/><line nr="711" mi="6" ci="0" mb="2" cb="0"/><line nr="712" mi="10" ci="0" mb="2" cb="0"/><line nr="713" mi="9" ci="0" mb="2" cb="0"/><line nr="714" mi="13" ci="0" mb="2" cb="0"/><line nr="715" mi="12" ci="0" mb="0" cb="0"/><line nr="728" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="741" mi="7" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="743" mi="4" ci="0" mb="0" cb="0"/><line nr="748" mi="8" ci="0" mb="2" cb="0"/><line nr="749" mi="6" ci="0" mb="2" cb="0"/><line nr="750" mi="6" ci="0" mb="0" cb="0"/><line nr="752" mi="10" ci="0" mb="2" cb="0"/><line nr="753" mi="9" ci="0" mb="2" cb="0"/><line nr="754" mi="13" ci="0" mb="2" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="764" mi="11" ci="0" mb="2" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="7" ci="0" mb="0" cb="0"/><line nr="768" mi="8" ci="0" mb="2" cb="0"/><line nr="769" mi="5" ci="0" mb="2" cb="0"/><line nr="771" mi="8" ci="0" mb="2" cb="0"/><line nr="772" mi="9" ci="0" mb="2" cb="0"/><line nr="773" mi="13" ci="0" mb="0" cb="0"/><line nr="774" mi="1" ci="0" mb="0" cb="0"/><line nr="780" mi="7" ci="0" mb="0" cb="0"/><line nr="781" mi="1" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="803" mi="3" ci="0" mb="0" cb="0"/><line nr="804" mi="2" ci="0" mb="0" cb="0"/><line nr="806" mi="8" ci="0" mb="2" cb="0"/><line nr="807" mi="8" ci="0" mb="2" cb="0"/><line nr="808" mi="17" ci="0" mb="4" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="810" mi="2" ci="0" mb="0" cb="0"/><line nr="815" mi="2" ci="0" mb="0" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="2" ci="0" mb="0" cb="0"/><line nr="827" mi="8" ci="0" mb="2" cb="0"/><line nr="828" mi="8" ci="0" mb="2" cb="0"/><line nr="829" mi="17" ci="0" mb="4" cb="0"/><line nr="830" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="2" ci="0" mb="0" cb="0"/><line nr="836" mi="2" ci="0" mb="0" cb="0"/><line nr="849" mi="2" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="2" cb="0"/><line nr="853" mi="3" ci="0" mb="0" cb="0"/><line nr="854" mi="2" ci="0" mb="0" cb="0"/><line nr="856" mi="8" ci="0" mb="2" cb="0"/><line nr="857" mi="17" ci="0" mb="4" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="864" mi="2" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="880" mi="3" ci="0" mb="2" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="0" cb="0"/><line nr="884" mi="8" ci="0" mb="2" cb="0"/><line nr="885" mi="17" ci="0" mb="4" cb="0"/><line nr="887" mi="2" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="0" cb="0"/><line nr="909" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="7" ci="0" mb="0" cb="0"/><line nr="913" mi="11" ci="0" mb="0" cb="0"/><line nr="915" mi="4" ci="0" mb="0" cb="0"/><line nr="916" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="7" ci="0" mb="0" cb="0"/><line nr="918" mi="7" ci="0" mb="0" cb="0"/><line nr="920" mi="6" ci="0" mb="0" cb="0"/><line nr="921" mi="4" ci="0" mb="0" cb="0"/><line nr="923" mi="8" ci="0" mb="2" cb="0"/><line nr="925" mi="18" ci="0" mb="4" cb="0"/><line nr="926" mi="11" ci="0" mb="0" cb="0"/><line nr="931" mi="5" ci="0" mb="0" cb="0"/><line nr="935" mi="4" ci="0" mb="0" cb="0"/><line nr="936" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="2" ci="0" mb="0" cb="0"/><line nr="952" mi="5" ci="0" mb="0" cb="0"/><line nr="966" mi="3" ci="0" mb="0" cb="0"/><line nr="967" mi="6" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="979" mi="4" ci="0" mb="0" cb="0"/><line nr="980" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="2" ci="0" mb="0" cb="0"/><line nr="983" mi="11" ci="0" mb="0" cb="0"/><line nr="985" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="4" ci="0" mb="0" cb="0"/><line nr="988" mi="8" ci="0" mb="2" cb="0"/><line nr="989" mi="20" ci="0" mb="6" cb="0"/><line nr="990" mi="2" ci="0" mb="0" cb="0"/><line nr="992" mi="8" ci="0" mb="2" cb="0"/><line nr="993" mi="14" ci="0" mb="2" cb="0"/><line nr="994" mi="1" ci="0" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="12" ci="0" mb="0" cb="0"/><line nr="1001" mi="6" ci="0" mb="0" cb="0"/><line nr="1005" mi="8" ci="0" mb="2" cb="0"/><line nr="1006" mi="9" ci="0" mb="2" cb="0"/><line nr="1007" mi="2" ci="0" mb="0" cb="0"/><line nr="1008" mi="1" ci="0" mb="0" cb="0"/><line nr="1012" mi="2" ci="0" mb="0" cb="0"/><line nr="1017" mi="87" ci="0" mb="0" cb="0"/><line nr="1022" mi="87" ci="0" mb="0" cb="0"/><line nr="1027" mi="54" ci="0" mb="0" cb="0"/><line nr="1031" mi="87" ci="0" mb="0" cb="0"/><line nr="1036" mi="135" ci="0" mb="0" cb="0"/><line nr="1041" mi="81" ci="0" mb="0" cb="0"/><line nr="1045" mi="54" ci="0" mb="0" cb="0"/><line nr="1049" mi="87" ci="0" mb="0" cb="0"/><line nr="1054" mi="87" ci="0" mb="0" cb="0"/><line nr="1060" mi="5" ci="0" mb="0" cb="0"/><line nr="1063" mi="3" ci="0" mb="0" cb="0"/><line nr="1065" mi="15" ci="0" mb="0" cb="0"/><line nr="1066" mi="17" ci="0" mb="0" cb="0"/><line nr="1067" mi="17" ci="0" mb="0" cb="0"/><line nr="1069" mi="10" ci="0" mb="2" cb="0"/><line nr="1070" mi="28" ci="0" mb="0" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1076" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2330" covered="18"/><counter type="BRANCH" missed="214" covered="0"/><counter type="LINE" missed="291" covered="6"/><counter type="COMPLEXITY" missed="149" covered="3"/><counter type="METHOD" missed="42" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vector.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="7" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="2" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="2" cb="0"/><line nr="277" mi="9" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="2" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="9" ci="0" mb="2" cb="0"/><line nr="292" mi="14" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="2" cb="0"/><line nr="298" mi="14" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="11" ci="0" mb="6" cb="0"/><line nr="352" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="2" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="16" ci="0" mb="2" cb="0"/><line nr="362" mi="7" ci="0" mb="0" cb="0"/><line nr="365" mi="9" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="2" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="11" ci="0" mb="0" cb="0"/><line nr="424" mi="11" ci="0" mb="0" cb="0"/><line nr="428" mi="7" ci="0" mb="0" cb="0"/><line nr="437" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="2" cb="0"/><line nr="440" mi="9" ci="0" mb="2" cb="0"/><line nr="441" mi="12" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="2" cb="0"/><line nr="445" mi="9" ci="0" mb="2" cb="0"/><line nr="446" mi="12" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="751" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="165" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MatrixOperations.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="16" ci="0" mb="8" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="16" ci="0" mb="4" cb="0"/><line nr="39" mi="25" ci="0" mb="0" cb="0"/><line nr="42" mi="38" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="2" cb="0"/><line nr="65" mi="8" ci="0" mb="2" cb="0"/><line nr="66" mi="24" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="2" cb="0"/><line nr="87" mi="38" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="16" ci="0" mb="8" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="8" ci="0" mb="2" cb="0"/><line nr="155" mi="70" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="189" mi="50" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="8" ci="0" mb="2" cb="0"/><line nr="210" mi="8" ci="0" mb="2" cb="0"/><line nr="211" mi="134" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="8" ci="0" mb="2" cb="0"/><line nr="271" mi="7" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="279" mi="3" ci="0" mb="2" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="6" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="285" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="7" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="6" ci="0" mb="0" cb="0"/><line nr="304" mi="8" ci="0" mb="2" cb="0"/><line nr="305" mi="8" ci="0" mb="2" cb="0"/><line nr="306" mi="12" ci="0" mb="0" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="8" ci="0" mb="2" cb="0"/><line nr="326" mi="8" ci="0" mb="2" cb="0"/><line nr="327" mi="12" ci="0" mb="0" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="8" ci="0" mb="2" cb="0"/><line nr="359" mi="8" ci="0" mb="2" cb="0"/><line nr="361" mi="13" ci="0" mb="4" cb="0"/><line nr="362" mi="13" ci="0" mb="4" cb="0"/><line nr="363" mi="11" ci="0" mb="0" cb="0"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="8" ci="0" mb="2" cb="0"/><line nr="383" mi="8" ci="0" mb="2" cb="0"/><line nr="384" mi="12" ci="0" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="438" mi="8" ci="0" mb="4" cb="0"/><line nr="439" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="8" ci="0" mb="4" cb="0"/><line nr="442" mi="7" ci="0" mb="0" cb="0"/><line nr="443" mi="7" ci="0" mb="0" cb="0"/><line nr="444" mi="7" ci="0" mb="0" cb="0"/><line nr="445" mi="7" ci="0" mb="0" cb="0"/><line nr="447" mi="8" ci="0" mb="0" cb="0"/><line nr="448" mi="1" ci="0" mb="0" cb="0"/><line nr="450" mi="8" ci="0" mb="2" cb="0"/><line nr="451" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="8" ci="0" mb="0" cb="0"/><line nr="454" mi="9" ci="0" mb="0" cb="0"/><line nr="456" mi="7" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="15" ci="0" mb="0" cb="0"/><line nr="476" mi="10" ci="0" mb="2" cb="0"/><line nr="477" mi="11" ci="0" mb="0" cb="0"/><line nr="480" mi="4" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="3" ci="0" mb="2" cb="0"/><line nr="495" mi="7" ci="0" mb="0" cb="0"/><line nr="498" mi="8" ci="0" mb="4" cb="0"/><line nr="499" mi="7" ci="0" mb="0" cb="0"/><line nr="500" mi="7" ci="0" mb="0" cb="0"/><line nr="501" mi="7" ci="0" mb="0" cb="0"/><line nr="502" mi="7" ci="0" mb="0" cb="0"/><line nr="504" mi="8" ci="0" mb="0" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="5" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="538" mi="2" ci="0" mb="2" cb="0"/><line nr="539" mi="11" ci="0" mb="2" cb="0"/><line nr="540" mi="15" ci="0" mb="0" cb="0"/><line nr="544" mi="16" ci="0" mb="0" cb="0"/><line nr="546" mi="10" ci="0" mb="2" cb="0"/><line nr="547" mi="11" ci="0" mb="2" cb="0"/><line nr="548" mi="5" ci="0" mb="2" cb="0"/><line nr="549" mi="13" ci="0" mb="0" cb="0"/><line nr="551" mi="16" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="2" cb="0"/><line nr="557" mi="7" ci="0" mb="2" cb="0"/><line nr="558" mi="11" ci="0" mb="0" cb="0"/><line nr="562" mi="18" ci="0" mb="0" cb="0"/><line nr="564" mi="10" ci="0" mb="2" cb="0"/><line nr="565" mi="11" ci="0" mb="2" cb="0"/><line nr="566" mi="7" ci="0" mb="2" cb="0"/><line nr="567" mi="13" ci="0" mb="0" cb="0"/><line nr="569" mi="18" ci="0" mb="0" cb="0"/><line nr="575" mi="6" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="589" mi="5" ci="0" mb="0" cb="0"/><line nr="612" mi="4" ci="0" mb="0" cb="0"/><line nr="615" mi="2" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="8" ci="0" mb="4" cb="0"/><line nr="619" mi="9" ci="0" mb="2" cb="0"/><line nr="620" mi="9" ci="0" mb="0" cb="0"/><line nr="622" mi="8" ci="0" mb="2" cb="0"/><line nr="623" mi="14" ci="0" mb="0" cb="0"/><line nr="627" mi="10" ci="0" mb="2" cb="0"/><line nr="628" mi="7" ci="0" mb="0" cb="0"/><line nr="630" mi="8" ci="0" mb="2" cb="0"/><line nr="631" mi="20" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="7" ci="0" mb="0" cb="0"/><line nr="644" mi="1" ci="0" mb="0" cb="0"/><line nr="645" mi="2" ci="0" mb="0" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="677" mi="5" ci="0" mb="2" cb="0"/><line nr="678" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="4" ci="0" mb="0" cb="0"/><line nr="707" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="0" cb="0"/><line nr="710" mi="8" ci="0" mb="4" cb="0"/><line nr="711" mi="2" ci="0" mb="0" cb="0"/><line nr="712" mi="7" ci="0" mb="0" cb="0"/><line nr="714" mi="8" ci="0" mb="2" cb="0"/><line nr="715" mi="9" ci="0" mb="2" cb="0"/><line nr="722" mi="8" ci="0" mb="0" cb="0"/><line nr="724" mi="9" ci="0" mb="2" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><line nr="726" mi="7" ci="0" mb="0" cb="0"/><line nr="730" mi="9" ci="0" mb="2" cb="0"/><line nr="731" mi="3" ci="0" mb="2" cb="0"/><line nr="732" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="9" ci="0" mb="0" cb="0"/><line nr="737" mi="8" ci="0" mb="2" cb="0"/><line nr="738" mi="14" ci="0" mb="0" cb="0"/><line nr="741" mi="8" ci="0" mb="2" cb="0"/><line nr="742" mi="7" ci="0" mb="0" cb="0"/><line nr="744" mi="3" ci="0" mb="2" cb="0"/><line nr="745" mi="7" ci="0" mb="0" cb="0"/><line nr="747" mi="10" ci="0" mb="2" cb="0"/><line nr="749" mi="15" ci="0" mb="0" cb="0"/><line nr="750" mi="1" ci="0" mb="0" cb="0"/><line nr="751" mi="7" ci="0" mb="0" cb="0"/><line nr="757" mi="1" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="2" ci="0" mb="0" cb="0"/><line nr="791" mi="4" ci="0" mb="0" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="795" mi="2" ci="0" mb="0" cb="0"/><line nr="797" mi="8" ci="0" mb="4" cb="0"/><line nr="798" mi="9" ci="0" mb="2" cb="0"/><line nr="799" mi="9" ci="0" mb="0" cb="0"/><line nr="801" mi="8" ci="0" mb="2" cb="0"/><line nr="802" mi="14" ci="0" mb="0" cb="0"/><line nr="806" mi="8" ci="0" mb="2" cb="0"/><line nr="807" mi="7" ci="0" mb="0" cb="0"/><line nr="809" mi="3" ci="0" mb="2" cb="0"/><line nr="810" mi="8" ci="0" mb="2" cb="0"/><line nr="811" mi="20" ci="0" mb="0" cb="0"/><line nr="812" mi="1" ci="0" mb="0" cb="0"/><line nr="817" mi="1" ci="0" mb="0" cb="0"/><line nr="818" mi="2" ci="0" mb="0" cb="0"/><line nr="821" mi="2" ci="0" mb="0" cb="0"/><line nr="833" mi="3" ci="0" mb="0" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="4" ci="0" mb="0" cb="0"/><line nr="837" mi="3" ci="0" mb="0" cb="0"/><line nr="850" mi="3" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="2" cb="0"/><line nr="853" mi="7" ci="0" mb="0" cb="0"/><line nr="856" mi="7" ci="0" mb="0" cb="0"/><line nr="858" mi="8" ci="0" mb="2" cb="0"/><line nr="859" mi="9" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><line nr="875" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="3" ci="0" mb="0" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="9" ci="0" mb="2" cb="0"/><line nr="894" mi="5" ci="0" mb="2" cb="0"/><line nr="895" mi="1" ci="0" mb="0" cb="0"/><line nr="902" mi="2" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="914" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="0" cb="0"/><line nr="927" mi="3" ci="0" mb="2" cb="0"/><line nr="928" mi="5" ci="0" mb="0" cb="0"/><line nr="931" mi="3" ci="0" mb="0" cb="0"/><line nr="932" mi="2" ci="0" mb="0" cb="0"/><line nr="934" mi="10" ci="0" mb="2" cb="0"/><line nr="935" mi="11" ci="0" mb="0" cb="0"/><line nr="938" mi="7" ci="0" mb="2" cb="0"/><line nr="947" mi="5" ci="0" mb="0" cb="0"/><line nr="951" mi="10" ci="0" mb="0" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="981" mi="8" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="984" mi="3" ci="0" mb="2" cb="0"/><line nr="985" mi="5" ci="0" mb="0" cb="0"/><line nr="988" mi="8" ci="0" mb="2" cb="0"/><line nr="990" mi="8" ci="0" mb="0" cb="0"/><line nr="993" mi="2" ci="0" mb="0" cb="0"/><line nr="1003" mi="7" ci="0" mb="0" cb="0"/><line nr="1005" mi="8" ci="0" mb="2" cb="0"/><line nr="1006" mi="8" ci="0" mb="2" cb="0"/><line nr="1007" mi="13" ci="0" mb="0" cb="0"/><line nr="1011" mi="2" ci="0" mb="0" cb="0"/><line nr="1015" mi="11" ci="0" mb="0" cb="0"/><line nr="1016" mi="11" ci="0" mb="0" cb="0"/><line nr="1018" mi="2" ci="0" mb="0" cb="0"/><line nr="1019" mi="4" ci="0" mb="0" cb="0"/><line nr="1020" mi="2" ci="0" mb="0" cb="0"/><line nr="1022" mi="4" ci="0" mb="0" cb="0"/><line nr="1024" mi="4" ci="0" mb="0" cb="0"/><line nr="1025" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2106" covered="0"/><counter type="BRANCH" missed="186" covered="0"/><counter type="LINE" missed="283" covered="0"/><counter type="COMPLEXITY" missed="134" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="11896" covered="196"/><counter type="BRANCH" missed="885" covered="14"/><counter type="LINE" missed="1688" covered="52"/><counter type="COMPLEXITY" missed="694" covered="14"/><counter type="METHOD" missed="247" covered="10"/><counter type="CLASS" missed="13" covered="3"/></package><counter type="INSTRUCTION" missed="15503" covered="703"/><counter type="BRANCH" missed="1188" covered="75"/><counter type="LINE" missed="2221" covered="177"/><counter type="COMPLEXITY" missed="955" covered="52"/><counter type="METHOD" missed="343" covered="31"/><counter type="CLASS" missed="21" covered="10"/></report>
\ No newline at end of file
Index: target/site/jacoco/jacoco-sessions.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"jacoco-resources/report.gif\" type=\"image/gif\"/><title>Sessions</title></head><body><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_session\">Sessions</span></div><h1>Sessions</h1><p>This coverage report is based on execution data from the following sessions:</p><table class=\"coverage\" cellspacing=\"0\"><thead><tr><td>Session</td><td>Start Time</td><td>Dump Time</td></tr></thead><tbody><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-fe00496a</span></td><td>Sep 27, 2021, 5:29:56 PM</td><td>Sep 27, 2021, 5:29:58 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-9cdf880c</span></td><td>Sep 27, 2021, 5:57:07 PM</td><td>Sep 27, 2021, 5:57:08 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-33e4a7ad</span></td><td>Sep 27, 2021, 6:10:24 PM</td><td>Sep 27, 2021, 6:10:26 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-d759012b</span></td><td>Sep 27, 2021, 6:11:38 PM</td><td>Sep 27, 2021, 6:11:39 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-653be16e</span></td><td>Sep 27, 2021, 6:23:10 PM</td><td>Sep 27, 2021, 6:23:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-e4543b44</span></td><td>Sep 27, 2021, 6:23:36 PM</td><td>Sep 27, 2021, 6:23:37 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-4d4af810</span></td><td>Sep 27, 2021, 6:23:55 PM</td><td>Sep 27, 2021, 6:23:55 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-ca0ff9dc</span></td><td>Sep 27, 2021, 6:32:57 PM</td><td>Sep 27, 2021, 6:32:59 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-2b03aa12</span></td><td>Sep 27, 2021, 6:33:17 PM</td><td>Sep 27, 2021, 6:33:18 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-92377961</span></td><td>Sep 27, 2021, 6:41:53 PM</td><td>Sep 27, 2021, 6:41:55 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-f67dcf9d</span></td><td>Sep 27, 2021, 7:07:03 PM</td><td>Sep 27, 2021, 7:07:03 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-3deffdcc</span></td><td>Sep 27, 2021, 7:07:05 PM</td><td>Sep 27, 2021, 7:07:07 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-8370ba74</span></td><td>Sep 27, 2021, 7:07:14 PM</td><td>Sep 27, 2021, 7:07:16 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-e80853d4</span></td><td>Sep 27, 2021, 7:07:20 PM</td><td>Sep 27, 2021, 7:07:22 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-9ee31791</span></td><td>Sep 27, 2021, 7:07:33 PM</td><td>Sep 27, 2021, 7:07:34 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-58a45499</span></td><td>Sep 27, 2021, 7:14:03 PM</td><td>Sep 27, 2021, 7:14:05 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-6b36a7ae</span></td><td>Sep 27, 2021, 7:15:10 PM</td><td>Sep 27, 2021, 7:15:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cd238e7f</span></td><td>Sep 27, 2021, 7:23:32 PM</td><td>Sep 27, 2021, 7:23:33 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-32a355ac</span></td><td>Sep 27, 2021, 7:23:46 PM</td><td>Sep 27, 2021, 7:23:47 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cf2ae673</span></td><td>Sep 27, 2021, 7:24:23 PM</td><td>Sep 27, 2021, 7:24:25 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-d8ae4a1d</span></td><td>Sep 27, 2021, 7:24:44 PM</td><td>Sep 27, 2021, 7:24:45 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-590642cc</span></td><td>Sep 27, 2021, 7:29:32 PM</td><td>Sep 27, 2021, 7:29:33 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-c18502e8</span></td><td>Sep 27, 2021, 7:36:10 PM</td><td>Sep 27, 2021, 7:36:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-bb68ec51</span></td><td>Sep 27, 2021, 7:36:48 PM</td><td>Sep 27, 2021, 7:36:49 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-dc7eaf97</span></td><td>Sep 27, 2021, 7:53:34 PM</td><td>Sep 27, 2021, 7:53:35 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-4fd69810</span></td><td>Sep 27, 2021, 7:54:01 PM</td><td>Sep 27, 2021, 7:54:02 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-96825214</span></td><td>Sep 27, 2021, 7:58:58 PM</td><td>Sep 27, 2021, 7:59:00 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-89a0fc42</span></td><td>Sep 27, 2021, 7:59:36 PM</td><td>Sep 27, 2021, 7:59:37 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cab82cf0</span></td><td>Sep 27, 2021, 8:00:02 PM</td><td>Sep 27, 2021, 8:00:03 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-c139591e</span></td><td>Sep 27, 2021, 8:34:30 PM</td><td>Sep 27, 2021, 8:34:30 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-82b8fd28</span></td><td>Sep 27, 2021, 8:35:38 PM</td><td>Sep 27, 2021, 8:35:39 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-3bdff75d</span></td><td>Sep 27, 2021, 8:36:10 PM</td><td>Sep 27, 2021, 8:36:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-cdb98687</span></td><td>Sep 27, 2021, 8:39:11 PM</td><td>Sep 27, 2021, 8:39:11 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-e6b68394</span></td><td>Sep 27, 2021, 8:40:13 PM</td><td>Sep 27, 2021, 8:40:14 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-9c517ae6</span></td><td>Sep 27, 2021, 8:40:22 PM</td><td>Sep 27, 2021, 8:40:23 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-7849bf85</span></td><td>Sep 27, 2021, 11:07:11 PM</td><td>Sep 27, 2021, 11:07:12 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-8af91b33</span></td><td>Oct 15, 2021, 5:52:56 PM</td><td>Oct 15, 2021, 5:52:57 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-3c496517</span></td><td>Oct 15, 2021, 5:53:13 PM</td><td>Oct 15, 2021, 5:53:14 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-a1df1e07</span></td><td>Oct 15, 2021, 5:53:39 PM</td><td>Oct 15, 2021, 5:53:39 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-aff8a924</span></td><td>Oct 15, 2021, 5:53:57 PM</td><td>Oct 15, 2021, 5:53:58 PM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-f94da3ae</span></td><td>Oct 15, 2021, 6:03:05 PM</td><td>Oct 15, 2021, 6:03:06 PM</td></tr><tr><td><span class=\"el_session\">Jacobs-MacBook-Pro.local-f3f79794</span></td><td>Oct 21, 2021, 11:15:55 AM</td><td>Oct 21, 2021, 11:16:04 AM</td></tr><tr><td><span class=\"el_session\">DESKTOP-3F0SSFQ-1c4bcb6b</span></td><td>Jan 28, 2022, 8:38:18 PM</td><td>Jan 28, 2022, 8:38:19 PM</td></tr><tr><td><span class=\"el_session\">BLD-5f143199</span></td><td>Mar 21, 2022, 3:32:31 PM</td><td>Mar 21, 2022, 3:32:31 PM</td></tr><tr><td><span class=\"el_session\">BLD-d03d1266</span></td><td>Mar 21, 2022, 3:34:51 PM</td><td>Mar 21, 2022, 3:34:51 PM</td></tr><tr><td><span class=\"el_session\">BLD-13bcee4f</span></td><td>Mar 21, 2022, 3:36:09 PM</td><td>Mar 21, 2022, 3:36:10 PM</td></tr><tr><td><span class=\"el_session\">BLD-73b3ed2a</span></td><td>Mar 21, 2022, 3:36:32 PM</td><td>Mar 21, 2022, 3:36:33 PM</td></tr><tr><td><span class=\"el_session\">BLD-9ce2ccfd</span></td><td>Mar 21, 2022, 3:38:04 PM</td><td>Mar 21, 2022, 3:38:04 PM</td></tr><tr><td><span class=\"el_session\">BLD-2afa8ef6</span></td><td>Mar 21, 2022, 3:38:55 PM</td><td>Mar 21, 2022, 3:38:55 PM</td></tr><tr><td><span class=\"el_session\">BLD-edd601d3</span></td><td>Mar 21, 2022, 3:41:21 PM</td><td>Mar 21, 2022, 3:41:22 PM</td></tr><tr><td><span class=\"el_session\">BLD-c28ecaff</span></td><td>Mar 21, 2022, 3:43:28 PM</td><td>Mar 21, 2022, 3:43:28 PM</td></tr><tr><td><span class=\"el_session\">BLD-55cd338f</span></td><td>Mar 21, 2022, 3:44:35 PM</td><td>Mar 21, 2022, 3:44:35 PM</td></tr><tr><td><span class=\"el_session\">BLD-e4801ee3</span></td><td>Mar 21, 2022, 3:47:23 PM</td><td>Mar 21, 2022, 3:47:23 PM</td></tr><tr><td><span class=\"el_session\">BLD-9f351c8a</span></td><td>Mar 21, 2022, 3:49:19 PM</td><td>Mar 21, 2022, 3:49:19 PM</td></tr><tr><td><span class=\"el_session\">BLD-9eacc799</span></td><td>Mar 21, 2022, 3:49:47 PM</td><td>Mar 21, 2022, 3:49:47 PM</td></tr><tr><td><span class=\"el_session\">BLD-b904ea4e</span></td><td>Mar 21, 2022, 3:50:13 PM</td><td>Mar 21, 2022, 3:50:13 PM</td></tr><tr><td><span class=\"el_session\">BLD-644b10e9</span></td><td>Mar 21, 2022, 3:56:04 PM</td><td>Mar 21, 2022, 3:56:04 PM</td></tr><tr><td><span class=\"el_session\">BLD-dcf1263f</span></td><td>Mar 21, 2022, 3:56:29 PM</td><td>Mar 21, 2022, 3:56:30 PM</td></tr><tr><td><span class=\"el_session\">BLD-c8bba310</span></td><td>Mar 21, 2022, 3:57:04 PM</td><td>Mar 21, 2022, 3:57:05 PM</td></tr><tr><td><span class=\"el_session\">BLD-f13f0532</span></td><td>Mar 21, 2022, 4:01:54 PM</td><td>Mar 21, 2022, 4:01:54 PM</td></tr><tr><td><span class=\"el_session\">BLD-4d60d8a9</span></td><td>Mar 21, 2022, 4:04:09 PM</td><td>Mar 21, 2022, 4:04:10 PM</td></tr><tr><td><span class=\"el_session\">BLD-7c76e99b</span></td><td>Mar 21, 2022, 4:04:26 PM</td><td>Mar 21, 2022, 4:04:26 PM</td></tr><tr><td><span class=\"el_session\">BLD-6e4c34ba</span></td><td>Mar 21, 2022, 4:05:30 PM</td><td>Mar 21, 2022, 4:05:31 PM</td></tr><tr><td><span class=\"el_session\">BLD-611d5be4</span></td><td>Mar 21, 2022, 4:06:52 PM</td><td>Mar 21, 2022, 4:06:52 PM</td></tr><tr><td><span class=\"el_session\">BLD-fbf836d9</span></td><td>Mar 21, 2022, 4:07:09 PM</td><td>Mar 21, 2022, 4:07:09 PM</td></tr><tr><td><span class=\"el_session\">BLD-cf666b95</span></td><td>Mar 21, 2022, 4:08:48 PM</td><td>Mar 21, 2022, 4:08:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-3ac3eaab</span></td><td>Mar 21, 2022, 4:09:19 PM</td><td>Mar 21, 2022, 4:09:19 PM</td></tr><tr><td><span class=\"el_session\">BLD-eb30d151</span></td><td>Mar 21, 2022, 4:12:34 PM</td><td>Mar 21, 2022, 4:12:34 PM</td></tr><tr><td><span class=\"el_session\">BLD-4704b508</span></td><td>Mar 21, 2022, 4:16:30 PM</td><td>Mar 21, 2022, 4:16:30 PM</td></tr><tr><td><span class=\"el_session\">BLD-a9161df8</span></td><td>Mar 21, 2022, 4:17:04 PM</td><td>Mar 21, 2022, 4:17:04 PM</td></tr><tr><td><span class=\"el_session\">BLD-8d1de9c8</span></td><td>Mar 21, 2022, 4:17:31 PM</td><td>Mar 21, 2022, 4:17:31 PM</td></tr><tr><td><span class=\"el_session\">BLD-384b8695</span></td><td>Mar 21, 2022, 4:17:43 PM</td><td>Mar 21, 2022, 4:17:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-dce664e1</span></td><td>Mar 21, 2022, 4:24:00 PM</td><td>Mar 21, 2022, 4:24:01 PM</td></tr><tr><td><span class=\"el_session\">BLD-5871c6dc</span></td><td>Mar 21, 2022, 4:24:19 PM</td><td>Mar 21, 2022, 4:24:20 PM</td></tr><tr><td><span class=\"el_session\">BLD-ec3d5b51</span></td><td>Mar 21, 2022, 4:24:29 PM</td><td>Mar 21, 2022, 4:24:30 PM</td></tr><tr><td><span class=\"el_session\">BLD-c4a22b0</span></td><td>Mar 21, 2022, 4:24:39 PM</td><td>Mar 21, 2022, 4:24:39 PM</td></tr><tr><td><span class=\"el_session\">BLD-e17dbfe3</span></td><td>Mar 21, 2022, 4:24:53 PM</td><td>Mar 21, 2022, 4:24:54 PM</td></tr><tr><td><span class=\"el_session\">BLD-6691bb9b</span></td><td>Mar 21, 2022, 4:25:03 PM</td><td>Mar 21, 2022, 4:25:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-f402c671</span></td><td>Mar 21, 2022, 4:25:59 PM</td><td>Mar 21, 2022, 4:25:59 PM</td></tr><tr><td><span class=\"el_session\">BLD-df63c0c1</span></td><td>Mar 21, 2022, 4:26:09 PM</td><td>Mar 21, 2022, 4:26:10 PM</td></tr><tr><td><span class=\"el_session\">BLD-730deef4</span></td><td>Mar 21, 2022, 4:26:19 PM</td><td>Mar 21, 2022, 4:26:19 PM</td></tr><tr><td><span class=\"el_session\">BLD-47ae258d</span></td><td>Mar 21, 2022, 4:27:37 PM</td><td>Mar 21, 2022, 4:27:37 PM</td></tr><tr><td><span class=\"el_session\">BLD-65f519f5</span></td><td>Mar 21, 2022, 4:27:49 PM</td><td>Mar 21, 2022, 4:27:50 PM</td></tr><tr><td><span class=\"el_session\">BLD-69c63fbe</span></td><td>Mar 21, 2022, 4:28:00 PM</td><td>Mar 21, 2022, 4:28:01 PM</td></tr><tr><td><span class=\"el_session\">BLD-a715049</span></td><td>Mar 21, 2022, 4:28:12 PM</td><td>Mar 21, 2022, 4:28:12 PM</td></tr><tr><td><span class=\"el_session\">BLD-a82e1f3a</span></td><td>Mar 21, 2022, 4:34:50 PM</td><td>Mar 21, 2022, 4:34:50 PM</td></tr><tr><td><span class=\"el_session\">BLD-36a12ee0</span></td><td>Mar 21, 2022, 4:35:06 PM</td><td>Mar 21, 2022, 4:35:06 PM</td></tr><tr><td><span class=\"el_session\">BLD-575cc61a</span></td><td>Mar 21, 2022, 4:35:20 PM</td><td>Mar 21, 2022, 4:35:20 PM</td></tr><tr><td><span class=\"el_session\">BLD-4bb34530</span></td><td>Mar 21, 2022, 4:35:36 PM</td><td>Mar 21, 2022, 4:35:36 PM</td></tr><tr><td><span class=\"el_session\">BLD-448d89fb</span></td><td>Mar 21, 2022, 4:36:55 PM</td><td>Mar 21, 2022, 4:36:55 PM</td></tr><tr><td><span class=\"el_session\">BLD-9b3ee8d6</span></td><td>Mar 21, 2022, 4:38:46 PM</td><td>Mar 21, 2022, 4:38:46 PM</td></tr><tr><td><span class=\"el_session\">BLD-26b02335</span></td><td>Mar 21, 2022, 4:38:57 PM</td><td>Mar 21, 2022, 4:38:58 PM</td></tr><tr><td><span class=\"el_session\">BLD-6ca80015</span></td><td>Mar 21, 2022, 4:41:03 PM</td><td>Mar 21, 2022, 4:41:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-422a9384</span></td><td>Mar 21, 2022, 4:42:31 PM</td><td>Mar 21, 2022, 4:42:32 PM</td></tr><tr><td><span class=\"el_session\">BLD-f789f3a</span></td><td>Mar 21, 2022, 4:50:11 PM</td><td>Mar 21, 2022, 4:50:12 PM</td></tr><tr><td><span class=\"el_session\">BLD-80bee3b2</span></td><td>Mar 21, 2022, 4:51:59 PM</td><td>Mar 21, 2022, 4:51:59 PM</td></tr><tr><td><span class=\"el_session\">BLD-dbbdfdd8</span></td><td>Mar 21, 2022, 4:52:28 PM</td><td>Mar 21, 2022, 4:52:28 PM</td></tr><tr><td><span class=\"el_session\">BLD-5208a62a</span></td><td>Mar 21, 2022, 5:03:42 PM</td><td>Mar 21, 2022, 5:03:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-4f2bd873</span></td><td>Mar 21, 2022, 5:03:49 PM</td><td>Mar 21, 2022, 5:03:50 PM</td></tr><tr><td><span class=\"el_session\">BLD-87d85318</span></td><td>Mar 21, 2022, 5:04:07 PM</td><td>Mar 21, 2022, 5:04:08 PM</td></tr><tr><td><span class=\"el_session\">BLD-7daa79c0</span></td><td>Mar 21, 2022, 5:04:53 PM</td><td>Mar 21, 2022, 5:04:54 PM</td></tr><tr><td><span class=\"el_session\">BLD-b0aa7c38</span></td><td>Mar 21, 2022, 5:05:28 PM</td><td>Mar 21, 2022, 5:05:29 PM</td></tr><tr><td><span class=\"el_session\">BLD-8225c5c2</span></td><td>Mar 21, 2022, 5:05:42 PM</td><td>Mar 21, 2022, 5:05:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-cd5cc3dc</span></td><td>Mar 21, 2022, 5:06:48 PM</td><td>Mar 21, 2022, 5:06:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-4e532446</span></td><td>Mar 21, 2022, 5:07:03 PM</td><td>Mar 21, 2022, 5:07:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-ccbe17aa</span></td><td>Mar 21, 2022, 5:09:53 PM</td><td>Mar 21, 2022, 5:09:53 PM</td></tr><tr><td><span class=\"el_session\">BLD-bd389192</span></td><td>Mar 21, 2022, 5:10:22 PM</td><td>Mar 21, 2022, 5:10:23 PM</td></tr><tr><td><span class=\"el_session\">BLD-63813cab</span></td><td>Mar 21, 2022, 5:15:19 PM</td><td>Mar 21, 2022, 5:15:20 PM</td></tr><tr><td><span class=\"el_session\">BLD-fee079ee</span></td><td>Mar 21, 2022, 5:19:13 PM</td><td>Mar 21, 2022, 5:19:14 PM</td></tr><tr><td><span class=\"el_session\">BLD-d8399d8c</span></td><td>Mar 21, 2022, 5:20:23 PM</td><td>Mar 21, 2022, 5:20:24 PM</td></tr><tr><td><span class=\"el_session\">BLD-8c069a1b</span></td><td>Mar 21, 2022, 5:20:44 PM</td><td>Mar 21, 2022, 5:20:45 PM</td></tr><tr><td><span class=\"el_session\">BLD-1a4546d0</span></td><td>Mar 21, 2022, 5:21:09 PM</td><td>Mar 21, 2022, 5:21:09 PM</td></tr><tr><td><span class=\"el_session\">BLD-158d6146</span></td><td>Mar 21, 2022, 5:21:55 PM</td><td>Mar 21, 2022, 5:21:55 PM</td></tr><tr><td><span class=\"el_session\">BLD-df44e80a</span></td><td>Mar 21, 2022, 5:22:10 PM</td><td>Mar 21, 2022, 5:22:10 PM</td></tr><tr><td><span class=\"el_session\">BLD-aa032da9</span></td><td>Mar 21, 2022, 5:22:21 PM</td><td>Mar 21, 2022, 5:22:21 PM</td></tr><tr><td><span class=\"el_session\">BLD-88e54f0a</span></td><td>Mar 22, 2022, 3:53:27 PM</td><td>Mar 22, 2022, 3:53:27 PM</td></tr><tr><td><span class=\"el_session\">BLD-11ef7812</span></td><td>Mar 22, 2022, 3:53:48 PM</td><td>Mar 22, 2022, 3:53:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-45f5b741</span></td><td>Mar 22, 2022, 3:54:07 PM</td><td>Mar 22, 2022, 3:54:07 PM</td></tr><tr><td><span class=\"el_session\">BLD-d8bc2629</span></td><td>Mar 22, 2022, 3:54:26 PM</td><td>Mar 22, 2022, 3:54:26 PM</td></tr><tr><td><span class=\"el_session\">BLD-5c533f79</span></td><td>Mar 22, 2022, 3:54:44 PM</td><td>Mar 22, 2022, 3:54:44 PM</td></tr><tr><td><span class=\"el_session\">BLD-16314474</span></td><td>Mar 22, 2022, 4:35:31 PM</td><td>Mar 22, 2022, 4:35:31 PM</td></tr><tr><td><span class=\"el_session\">BLD-23250d6e</span></td><td>Mar 22, 2022, 4:36:12 PM</td><td>Mar 22, 2022, 4:36:12 PM</td></tr><tr><td><span class=\"el_session\">BLD-9dc70764</span></td><td>Mar 22, 2022, 4:37:10 PM</td><td>Mar 22, 2022, 4:37:10 PM</td></tr><tr><td><span class=\"el_session\">BLD-141f0a9c</span></td><td>Mar 22, 2022, 4:37:52 PM</td><td>Mar 22, 2022, 4:37:52 PM</td></tr><tr><td><span class=\"el_session\">BLD-a87a5eca</span></td><td>Mar 22, 2022, 4:38:03 PM</td><td>Mar 22, 2022, 4:38:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-f07af7a9</span></td><td>Mar 22, 2022, 4:41:07 PM</td><td>Mar 22, 2022, 4:41:07 PM</td></tr><tr><td><span class=\"el_session\">BLD-3bc2e0eb</span></td><td>Mar 22, 2022, 4:41:37 PM</td><td>Mar 22, 2022, 4:41:37 PM</td></tr><tr><td><span class=\"el_session\">BLD-c52cc34</span></td><td>Mar 22, 2022, 4:47:15 PM</td><td>Mar 22, 2022, 4:47:15 PM</td></tr><tr><td><span class=\"el_session\">BLD-915d4cb5</span></td><td>Mar 22, 2022, 4:50:07 PM</td><td>Mar 22, 2022, 4:50:08 PM</td></tr><tr><td><span class=\"el_session\">BLD-f0e815ea</span></td><td>Mar 22, 2022, 4:51:06 PM</td><td>Mar 22, 2022, 4:51:06 PM</td></tr><tr><td><span class=\"el_session\">BLD-99edb312</span></td><td>Mar 22, 2022, 4:58:57 PM</td><td>Mar 22, 2022, 4:58:57 PM</td></tr><tr><td><span class=\"el_session\">BLD-d0e8055a</span></td><td>Mar 22, 2022, 5:00:42 PM</td><td>Mar 22, 2022, 5:00:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-918a466</span></td><td>Mar 22, 2022, 5:02:08 PM</td><td>Mar 22, 2022, 5:02:09 PM</td></tr><tr><td><span class=\"el_session\">BLD-ced5ae41</span></td><td>Mar 22, 2022, 5:05:58 PM</td><td>Mar 22, 2022, 5:05:58 PM</td></tr><tr><td><span class=\"el_session\">BLD-6926cfa5</span></td><td>Mar 22, 2022, 5:11:48 PM</td><td>Mar 22, 2022, 5:11:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-40511bbd</span></td><td>Mar 22, 2022, 5:12:00 PM</td><td>Mar 22, 2022, 5:12:01 PM</td></tr><tr><td><span class=\"el_session\">BLD-8c00f2a</span></td><td>Mar 22, 2022, 5:28:14 PM</td><td>Mar 22, 2022, 5:28:14 PM</td></tr><tr><td><span class=\"el_session\">BLD-c32762a5</span></td><td>Mar 22, 2022, 8:23:02 PM</td><td>Mar 22, 2022, 8:23:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-cf6d6f82</span></td><td>Mar 22, 2022, 8:27:54 PM</td><td>Mar 22, 2022, 8:27:55 PM</td></tr><tr><td><span class=\"el_session\">BLD-ef04d919</span></td><td>Mar 22, 2022, 8:28:22 PM</td><td>Mar 22, 2022, 8:28:23 PM</td></tr><tr><td><span class=\"el_session\">BLD-3a616cd7</span></td><td>Mar 22, 2022, 8:30:01 PM</td><td>Mar 22, 2022, 8:30:01 PM</td></tr><tr><td><span class=\"el_session\">BLD-de784c09</span></td><td>Mar 22, 2022, 8:31:43 PM</td><td>Mar 22, 2022, 8:31:44 PM</td></tr><tr><td><span class=\"el_session\">BLD-d94dea2c</span></td><td>Mar 22, 2022, 8:32:17 PM</td><td>Mar 22, 2022, 8:32:17 PM</td></tr><tr><td><span class=\"el_session\">BLD-58ed1b2f</span></td><td>Mar 22, 2022, 8:43:05 PM</td><td>Mar 22, 2022, 8:43:05 PM</td></tr><tr><td><span class=\"el_session\">BLD-d96e8843</span></td><td>Mar 22, 2022, 8:49:48 PM</td><td>Mar 22, 2022, 8:49:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-6990374e</span></td><td>Mar 22, 2022, 9:22:24 PM</td><td>Mar 22, 2022, 9:22:24 PM</td></tr><tr><td><span class=\"el_session\">BLD-625de177</span></td><td>Mar 22, 2022, 9:30:28 PM</td><td>Mar 22, 2022, 9:30:28 PM</td></tr><tr><td><span class=\"el_session\">BLD-90080ce6</span></td><td>Mar 22, 2022, 9:49:44 PM</td><td>Mar 22, 2022, 9:49:44 PM</td></tr><tr><td><span class=\"el_session\">BLD-73ed5a2f</span></td><td>Mar 22, 2022, 9:52:01 PM</td><td>Mar 22, 2022, 9:52:02 PM</td></tr><tr><td><span class=\"el_session\">BLD-acbe5570</span></td><td>Mar 22, 2022, 9:53:36 PM</td><td>Mar 22, 2022, 9:53:37 PM</td></tr><tr><td><span class=\"el_session\">BLD-d51d481d</span></td><td>Mar 22, 2022, 9:53:45 PM</td><td>Mar 22, 2022, 9:53:46 PM</td></tr><tr><td><span class=\"el_session\">BLD-9c872883</span></td><td>Mar 22, 2022, 10:07:30 PM</td><td>Mar 22, 2022, 10:07:30 PM</td></tr><tr><td><span class=\"el_session\">BLD-26dc340c</span></td><td>Mar 22, 2022, 10:13:39 PM</td><td>Mar 22, 2022, 10:13:40 PM</td></tr><tr><td><span class=\"el_session\">BLD-c5819925</span></td><td>Mar 22, 2022, 10:26:19 PM</td><td>Mar 22, 2022, 10:26:20 PM</td></tr><tr><td><span class=\"el_session\">BLD-7eb27fed</span></td><td>Mar 22, 2022, 10:29:57 PM</td><td>Mar 22, 2022, 10:29:58 PM</td></tr><tr><td><span class=\"el_session\">BLD-7606e998</span></td><td>Mar 22, 2022, 10:31:55 PM</td><td>Mar 22, 2022, 10:31:56 PM</td></tr><tr><td><span class=\"el_session\">BLD-62ed1053</span></td><td>Mar 22, 2022, 10:34:48 PM</td><td>Mar 22, 2022, 10:34:48 PM</td></tr><tr><td><span class=\"el_session\">BLD-460751bf</span></td><td>Mar 22, 2022, 10:35:46 PM</td><td>Mar 22, 2022, 10:35:46 PM</td></tr><tr><td><span class=\"el_session\">BLD-f73a4b</span></td><td>Mar 22, 2022, 10:36:10 PM</td><td>Mar 22, 2022, 10:36:10 PM</td></tr><tr><td><span class=\"el_session\">BLD-f4661f3</span></td><td>Mar 22, 2022, 10:38:28 PM</td><td>Mar 22, 2022, 10:38:28 PM</td></tr><tr><td><span class=\"el_session\">BLD-8d5346ec</span></td><td>Mar 22, 2022, 10:39:14 PM</td><td>Mar 22, 2022, 10:39:15 PM</td></tr><tr><td><span class=\"el_session\">BLD-b6f1896</span></td><td>Mar 22, 2022, 10:52:51 PM</td><td>Mar 22, 2022, 10:52:51 PM</td></tr><tr><td><span class=\"el_session\">BLD-fd1fdf91</span></td><td>Mar 22, 2022, 10:53:03 PM</td><td>Mar 22, 2022, 10:53:04 PM</td></tr><tr><td><span class=\"el_session\">BLD-5b052c7a</span></td><td>Mar 22, 2022, 10:53:17 PM</td><td>Mar 22, 2022, 10:53:17 PM</td></tr><tr><td><span class=\"el_session\">BLD-921c9dce</span></td><td>Mar 22, 2022, 10:56:00 PM</td><td>Mar 22, 2022, 10:56:00 PM</td></tr><tr><td><span class=\"el_session\">BLD-be274de6</span></td><td>Mar 22, 2022, 10:57:02 PM</td><td>Mar 22, 2022, 10:57:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-ba90ae31</span></td><td>Mar 22, 2022, 10:58:37 PM</td><td>Mar 22, 2022, 10:58:38 PM</td></tr><tr><td><span class=\"el_session\">BLD-d241f362</span></td><td>Mar 22, 2022, 10:59:06 PM</td><td>Mar 22, 2022, 10:59:06 PM</td></tr><tr><td><span class=\"el_session\">BLD-2cf33207</span></td><td>Mar 22, 2022, 10:59:23 PM</td><td>Mar 22, 2022, 10:59:24 PM</td></tr><tr><td><span class=\"el_session\">BLD-34e6cba2</span></td><td>Mar 22, 2022, 11:00:21 PM</td><td>Mar 22, 2022, 11:00:22 PM</td></tr><tr><td><span class=\"el_session\">BLD-7c86ea4c</span></td><td>Mar 22, 2022, 11:00:31 PM</td><td>Mar 22, 2022, 11:00:32 PM</td></tr><tr><td><span class=\"el_session\">BLD-3dc2f10c</span></td><td>Mar 22, 2022, 11:00:47 PM</td><td>Mar 22, 2022, 11:00:48 PM</td></tr><tr><td><span class=\"el_session\">BLD-eb3fc027</span></td><td>Mar 22, 2022, 11:02:36 PM</td><td>Mar 22, 2022, 11:02:36 PM</td></tr><tr><td><span class=\"el_session\">BLD-484e37f3</span></td><td>Mar 22, 2022, 11:18:47 PM</td><td>Mar 22, 2022, 11:18:47 PM</td></tr><tr><td><span class=\"el_session\">BLD-3dab5fc1</span></td><td>Mar 22, 2022, 11:18:53 PM</td><td>Mar 22, 2022, 11:18:53 PM</td></tr><tr><td><span class=\"el_session\">BLD-ac748ad</span></td><td>Mar 22, 2022, 11:19:17 PM</td><td>Mar 22, 2022, 11:19:17 PM</td></tr><tr><td><span class=\"el_session\">BLD-febfc0cc</span></td><td>Mar 22, 2022, 11:19:28 PM</td><td>Mar 22, 2022, 11:19:29 PM</td></tr><tr><td><span class=\"el_session\">BLD-3f27384d</span></td><td>Mar 22, 2022, 11:19:39 PM</td><td>Mar 22, 2022, 11:19:39 PM</td></tr><tr><td><span class=\"el_session\">BLD-7191ed85</span></td><td>Mar 22, 2022, 11:22:36 PM</td><td>Mar 22, 2022, 11:22:36 PM</td></tr><tr><td><span class=\"el_session\">BLD-f150a0f1</span></td><td>Mar 22, 2022, 11:22:51 PM</td><td>Mar 22, 2022, 11:22:52 PM</td></tr><tr><td><span class=\"el_session\">BLD-7653172c</span></td><td>Mar 22, 2022, 11:23:06 PM</td><td>Mar 22, 2022, 11:23:07 PM</td></tr><tr><td><span class=\"el_session\">BLD-4c26638c</span></td><td>Mar 22, 2022, 11:24:18 PM</td><td>Mar 22, 2022, 11:24:19 PM</td></tr><tr><td><span class=\"el_session\">BLD-23e80093</span></td><td>Mar 22, 2022, 11:24:31 PM</td><td>Mar 22, 2022, 11:24:32 PM</td></tr><tr><td><span class=\"el_session\">BLD-adc94ced</span></td><td>Mar 22, 2022, 11:24:48 PM</td><td>Mar 22, 2022, 11:24:48 PM</td></tr><tr><td><span class=\"el_session\">BLD-d808ff09</span></td><td>Mar 22, 2022, 11:25:02 PM</td><td>Mar 22, 2022, 11:25:02 PM</td></tr><tr><td><span class=\"el_session\">BLD-73708a74</span></td><td>Mar 22, 2022, 11:27:00 PM</td><td>Mar 22, 2022, 11:27:00 PM</td></tr><tr><td><span class=\"el_session\">BLD-3ccdbc0b</span></td><td>Mar 22, 2022, 11:27:15 PM</td><td>Mar 22, 2022, 11:27:16 PM</td></tr><tr><td><span class=\"el_session\">BLD-161ad7f7</span></td><td>Mar 22, 2022, 11:27:27 PM</td><td>Mar 22, 2022, 11:27:28 PM</td></tr><tr><td><span class=\"el_session\">BLD-51e7d116</span></td><td>Mar 22, 2022, 11:27:54 PM</td><td>Mar 22, 2022, 11:27:55 PM</td></tr><tr><td><span class=\"el_session\">BLD-f25abf84</span></td><td>Mar 22, 2022, 11:28:11 PM</td><td>Mar 22, 2022, 11:28:12 PM</td></tr><tr><td><span class=\"el_session\">BLD-8f5fcfa1</span></td><td>Mar 22, 2022, 11:28:36 PM</td><td>Mar 22, 2022, 11:28:36 PM</td></tr><tr><td><span class=\"el_session\">BLD-722301d4</span></td><td>Mar 22, 2022, 11:28:49 PM</td><td>Mar 22, 2022, 11:28:50 PM</td></tr><tr><td><span class=\"el_session\">BLD-8feadfa8</span></td><td>Mar 22, 2022, 11:29:03 PM</td><td>Mar 22, 2022, 11:29:04 PM</td></tr><tr><td><span class=\"el_session\">BLD-5cb48547</span></td><td>Mar 22, 2022, 11:30:03 PM</td><td>Mar 22, 2022, 11:30:03 PM</td></tr><tr><td><span class=\"el_session\">BLD-62abb693</span></td><td>Mar 22, 2022, 11:30:15 PM</td><td>Mar 22, 2022, 11:30:15 PM</td></tr><tr><td><span class=\"el_session\">BLD-9a32bf97</span></td><td>Mar 22, 2022, 11:30:54 PM</td><td>Mar 22, 2022, 11:30:55 PM</td></tr><tr><td><span class=\"el_session\">BLD-f07b812e</span></td><td>Mar 22, 2022, 11:31:14 PM</td><td>Mar 22, 2022, 11:31:14 PM</td></tr><tr><td><span class=\"el_session\">BLD-c0c73418</span></td><td>Mar 22, 2022, 11:31:48 PM</td><td>Mar 22, 2022, 11:31:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-cc37a0bf</span></td><td>Mar 22, 2022, 11:32:11 PM</td><td>Mar 22, 2022, 11:32:12 PM</td></tr><tr><td><span class=\"el_session\">BLD-61dea6c2</span></td><td>Mar 22, 2022, 11:32:23 PM</td><td>Mar 22, 2022, 11:32:23 PM</td></tr><tr><td><span class=\"el_session\">BLD-7a2c16b9</span></td><td>Mar 22, 2022, 11:35:29 PM</td><td>Mar 22, 2022, 11:35:29 PM</td></tr><tr><td><span class=\"el_session\">BLD-5d32d470</span></td><td>Mar 22, 2022, 11:44:21 PM</td><td>Mar 22, 2022, 11:44:22 PM</td></tr><tr><td><span class=\"el_session\">BLD-41fe00a9</span></td><td>Mar 22, 2022, 11:44:44 PM</td><td>Mar 22, 2022, 11:44:45 PM</td></tr><tr><td><span class=\"el_session\">BLD-6ce46e8e</span></td><td>Mar 22, 2022, 11:45:00 PM</td><td>Mar 22, 2022, 11:45:00 PM</td></tr><tr><td><span class=\"el_session\">BLD-155148ba</span></td><td>Mar 22, 2022, 11:45:15 PM</td><td>Mar 22, 2022, 11:45:16 PM</td></tr><tr><td><span class=\"el_session\">BLD-cd482c54</span></td><td>Mar 22, 2022, 11:57:09 PM</td><td>Mar 22, 2022, 11:57:09 PM</td></tr><tr><td><span class=\"el_session\">BLD-7a74231a</span></td><td>Mar 23, 2022, 4:16:18 PM</td><td>Mar 23, 2022, 4:16:19 PM</td></tr><tr><td><span class=\"el_session\">BLD-255dc3dc</span></td><td>Mar 23, 2022, 4:24:07 PM</td><td>Mar 23, 2022, 4:24:08 PM</td></tr><tr><td><span class=\"el_session\">BLD-6a0f1015</span></td><td>Mar 23, 2022, 4:37:04 PM</td><td>Mar 23, 2022, 4:37:04 PM</td></tr><tr><td><span class=\"el_session\">BLD-3bb3a318</span></td><td>Mar 23, 2022, 5:09:28 PM</td><td>Mar 23, 2022, 5:09:28 PM</td></tr><tr><td><span class=\"el_session\">BLD-1a184610</span></td><td>Mar 23, 2022, 5:20:43 PM</td><td>Mar 23, 2022, 5:20:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-11464e9a</span></td><td>Mar 23, 2022, 5:22:08 PM</td><td>Mar 23, 2022, 5:22:09 PM</td></tr><tr><td><span class=\"el_session\">BLD-b1a6e671</span></td><td>Mar 23, 2022, 5:22:41 PM</td><td>Mar 23, 2022, 5:22:41 PM</td></tr><tr><td><span class=\"el_session\">BLD-4b587722</span></td><td>Mar 23, 2022, 5:23:41 PM</td><td>Mar 23, 2022, 5:23:41 PM</td></tr><tr><td><span class=\"el_session\">BLD-f5a00201</span></td><td>Mar 23, 2022, 5:25:43 PM</td><td>Mar 23, 2022, 5:25:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-cd93d6fc</span></td><td>Mar 23, 2022, 5:30:35 PM</td><td>Mar 23, 2022, 5:30:35 PM</td></tr><tr><td><span class=\"el_session\">BLD-80486b65</span></td><td>Mar 23, 2022, 5:30:42 PM</td><td>Mar 23, 2022, 5:30:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-aa27378e</span></td><td>Mar 23, 2022, 5:30:49 PM</td><td>Mar 23, 2022, 5:30:49 PM</td></tr><tr><td><span class=\"el_session\">BLD-7f11c4a4</span></td><td>Mar 23, 2022, 5:34:05 PM</td><td>Mar 23, 2022, 5:34:05 PM</td></tr><tr><td><span class=\"el_session\">BLD-252fe5bb</span></td><td>Mar 23, 2022, 5:58:14 PM</td><td>Mar 23, 2022, 5:58:15 PM</td></tr><tr><td><span class=\"el_session\">BLD-a3c67e25</span></td><td>Mar 23, 2022, 6:05:09 PM</td><td>Mar 23, 2022, 6:05:09 PM</td></tr><tr><td><span class=\"el_session\">BLD-ecff14b5</span></td><td>Mar 23, 2022, 6:05:43 PM</td><td>Mar 23, 2022, 6:05:43 PM</td></tr><tr><td><span class=\"el_session\">BLD-66080afa</span></td><td>Mar 23, 2022, 6:17:53 PM</td><td>Mar 23, 2022, 6:17:54 PM</td></tr><tr><td><span class=\"el_session\">BLD-837244bc</span></td><td>Mar 23, 2022, 6:26:17 PM</td><td>Mar 23, 2022, 6:26:18 PM</td></tr><tr><td><span class=\"el_session\">BLD-f4ebceb6</span></td><td>Mar 23, 2022, 7:57:55 PM</td><td>Mar 23, 2022, 7:57:56 PM</td></tr><tr><td><span class=\"el_session\">BLD-475c3214</span></td><td>Mar 23, 2022, 9:59:26 PM</td><td>Mar 23, 2022, 9:59:27 PM</td></tr><tr><td><span class=\"el_session\">BLD-d62db79a</span></td><td>Mar 23, 2022, 10:02:51 PM</td><td>Mar 23, 2022, 10:02:52 PM</td></tr><tr><td><span class=\"el_session\">BLD-de804958</span></td><td>Mar 23, 2022, 10:02:51 PM</td><td>Mar 23, 2022, 10:02:52 PM</td></tr><tr><td><span class=\"el_session\">BLD-3015d818</span></td><td>Mar 23, 2022, 10:03:05 PM</td><td>Mar 23, 2022, 10:03:06 PM</td></tr><tr><td><span class=\"el_session\">BLD-84b52fbf</span></td><td>Mar 23, 2022, 10:06:12 PM</td><td>Mar 23, 2022, 10:06:13 PM</td></tr><tr><td><span class=\"el_session\">BLD-dd3b585d</span></td><td>Mar 23, 2022, 10:15:59 PM</td><td>Mar 23, 2022, 10:16:00 PM</td></tr><tr><td><span class=\"el_session\">BLD-c3f4558b</span></td><td>Mar 23, 2022, 10:16:04 PM</td><td>Mar 23, 2022, 10:16:05 PM</td></tr><tr><td><span class=\"el_session\">BLD-21e4155d</span></td><td>Mar 23, 2022, 10:16:19 PM</td><td>Mar 23, 2022, 10:16:20 PM</td></tr><tr><td><span class=\"el_session\">BLD-a7e8aa1a</span></td><td>Mar 23, 2022, 10:17:26 PM</td><td>Mar 23, 2022, 10:17:26 PM</td></tr><tr><td><span class=\"el_session\">BLD-d5586b6d</span></td><td>Mar 23, 2022, 10:31:23 PM</td><td>Mar 23, 2022, 10:31:23 PM</td></tr><tr><td><span class=\"el_session\">BLD-8675d884</span></td><td>Mar 23, 2022, 10:37:11 PM</td><td>Mar 23, 2022, 10:37:11 PM</td></tr><tr><td><span class=\"el_session\">BLD-9a1e6bc</span></td><td>Mar 23, 2022, 10:38:32 PM</td><td>Mar 23, 2022, 10:38:32 PM</td></tr><tr><td><span class=\"el_session\">BLD-4b70fac8</span></td><td>Mar 23, 2022, 10:59:13 PM</td><td>Mar 23, 2022, 10:59:13 PM</td></tr><tr><td><span class=\"el_session\">BLD-d9fd4f96</span></td><td>Mar 24, 2022, 1:02:01 AM</td><td>Mar 24, 2022, 1:02:02 AM</td></tr></tbody></table><p>Execution data for the following classes is considered in this report:</p><table class=\"coverage\" cellspacing=\"0\"><thead><tr><td>Class</td><td>Id</td></tr></thead><tbody><tr><td><span class=\"el_class\">javax.script.ScriptEngineManager</span></td><td><code>cfba6fa511e45893</code></td></tr><tr><td><span class=\"el_class\">javax.script.ScriptEngineManager.1</span></td><td><code>4213e2cd4b902651</code></td></tr><tr><td><span class=\"el_class\">javax.script.SimpleBindings</span></td><td><code>890d1d7b85b0079e</code></td></tr><tr><td><a href=\"linalg/Matrix.html\" class=\"el_class\">linalg.Matrix</a></td><td><code>5927619f7fd7992f</code></td></tr><tr><td><span class=\"el_class\">linalg.Matrix</span></td><td><code>667058e680b2f652</code></td></tr><tr><td><span class=\"el_class\">linalg.Matrix</span></td><td><code>e3f43eac40e71d03</code></td></tr><tr><td><span class=\"el_class\">linalg.Matrix</span></td><td><code>0f7a92476c4b6875</code></td></tr><tr><td><span class=\"el_class\">linalg.Matrix</span></td><td><code>00b8d5a70cad62e5</code></td></tr><tr><td><span class=\"el_class\">linalg.Matrix</span></td><td><code>3afaba76d8b7e79a</code></td></tr><tr><td><span class=\"el_class\">linalg.MatrixProperties</span></td><td><code>cdbd098f2f60b471</code></td></tr><tr><td><span class=\"el_class\">linalg.MatrixProperties</span></td><td><code>d64dde15d3116a6c</code></td></tr><tr><td><a href=\"linalg/MatrixProperties.html\" class=\"el_class\">linalg.MatrixProperties</a></td><td><code>f8468dbb2948351f</code></td></tr><tr><td><span class=\"el_class\">linalg.MatrixProperties</span></td><td><code>940009cc5570b904</code></td></tr><tr><td><a href=\"linalg/PrintOptions.html\" class=\"el_class\">linalg.PrintOptions</a></td><td><code>87d4b57eebd861ea</code></td></tr><tr><td><span class=\"el_class\">linalg.complex_number.CNumber</span></td><td><code>636bfcd68857fbe0</code></td></tr><tr><td><span class=\"el_class\">linalg.complex_number.CNumber</span></td><td><code>dcd0ca675fd9eb8f</code></td></tr><tr><td><span class=\"el_class\">linalg.complex_number.CNumber</span></td><td><code>14f9a28efbe96ee9</code></td></tr><tr><td><a href=\"linalg.complex_number/CNumber.html\" class=\"el_class\">linalg.complex_number.CNumber</a></td><td><code>319e7e840503e797</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>cf2e2350c5b6a9d3</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>c3aaa749ff55a981</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>11adaf541eec3222</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>552479f8a0848667</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>a5c3049d60beefbe</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>8cf74707bcf3597a</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>76638ca8ea700e75</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>35c6023225290204</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>d84a0b40f81e49ce</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>9dd2ed04d8db5d08</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>c214f1f35630fac0</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>8572d9652414f11e</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>c299df505630fac0</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>2b5017d334fdd733</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>eb792b51a9e2ccb8</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>77eca11bc8859ffb</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>5adf6b227cd150a2</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>a54c0a104c71dcbe</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>1db964b78a884e22</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>63df2e41a62baa1b</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>90d3bed4db0e78cf</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>59c436c645fb1f27</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>24746b3e26f41451</code></td></tr><tr><td><span class=\"el_class\">linalg.matrix.MatrixConstructorTest</span></td><td><code>b438baf14d3de40f</code></td></tr><tr><td><span class=\"el_class\">linalg.util.Lexer</span></td><td><code>4653487ac8971dba</code></td></tr><tr><td><a href=\"linalg.util/Lexer.html\" class=\"el_class\">linalg.util.Lexer</a></td><td><code>e409ebfa2a659ebb</code></td></tr><tr><td><span class=\"el_class\">linalg.util.LinAlgArrayUtils</span></td><td><code>a89da6d783c46fc7</code></td></tr><tr><td><span class=\"el_class\">linalg.util.LinAlgArrayUtils</span></td><td><code>8ba7f2c59cc0deca</code></td></tr><tr><td><a href=\"linalg.util/LinAlgArrayUtils.html\" class=\"el_class\">linalg.util.LinAlgArrayUtils</a></td><td><code>7b7f3e2843bb4d00</code></td></tr><tr><td><a href=\"linalg.util/NumberLexer.html\" class=\"el_class\">linalg.util.NumberLexer</a></td><td><code>fd3785bd9c8bdf19</code></td></tr><tr><td><span class=\"el_class\">linalg.util.NumberLexer</span></td><td><code>b2af6f818100434a</code></td></tr><tr><td><a href=\"linalg.util/Parser.html\" class=\"el_class\">linalg.util.Parser</a></td><td><code>c8f69ece7e388640</code></td></tr><tr><td><a href=\"linalg.util/StringUtils.html\" class=\"el_class\">linalg.util.StringUtils</a></td><td><code>925d5f087ae2f647</code></td></tr><tr><td><a href=\"linalg.util/Token.html\" class=\"el_class\">linalg.util.Token</a></td><td><code>f4b4f2408890702c</code></td></tr><tr><td><span class=\"el_class\">linalg.util.Token</span></td><td><code>dcf02146e3250669</code></td></tr><tr><td><span class=\"el_class\">linalg.util.Token</span></td><td><code>ac7c2a5240d8912f</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.BaseProviderFactory</span></td><td><code>5bdb25554fb3d5df</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.BiProperty</span></td><td><code>9a2074ae999b3c8a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.Command</span></td><td><code>f31ca5085797c808</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.DumpErrorSingleton</span></td><td><code>e3f1c75f159a9ac5</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.ForkedProcessEventType</span></td><td><code>dc56c5dba14b9d58</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.ForkingReporterFactory</span></td><td><code>bcadcd63978e8dcf</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.ForkingRunListener</span></td><td><code>08c963875a23e517</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.MasterProcessCommand</span></td><td><code>90562129b4defd58</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.booter.Shutdown</span></td><td><code>fab38023c4f1ded4</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.cli.CommandLineOption</span></td><td><code>4401c2efb3702254</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.provider.AbstractProvider</span></td><td><code>cf68f167cf236f7b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ConsoleOutputCapture</span></td><td><code>b8719a08fbb63e05</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ConsoleOutputCapture.ForwardingPrintStream</span></td><td><code>7c2392ea44674f2d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ConsoleOutputCapture.NullOutputStream</span></td><td><code>f7132188596462e2</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.LegacyPojoStackTraceWriter</span></td><td><code>1aa62cd28375d6e2</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.ReporterConfiguration</span></td><td><code>39591ad2c5816a79</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.RunMode</span></td><td><code>f02e60476bce4d8d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.SafeThrowable</span></td><td><code>32b5c60e4604ceb7</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.report.SimpleReportEntry</span></td><td><code>e252cb5986c391cc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.suite.RunResult</span></td><td><code>8d97f6894fd90ced</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.DirectoryScannerParameters</span></td><td><code>c53ea59aeaf0b80a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.IncludedExcludedPatterns</span></td><td><code>43b8f8de9b3a1945</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest</span></td><td><code>7e73a65f1017294e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest.ClassMatcher</span></td><td><code>0f9c29dc1562afeb</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest.MethodMatcher</span></td><td><code>fccae89ce7b4ee31</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.ResolvedTest.Type</span></td><td><code>bf93fc9765a2bd72</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.RunOrderParameters</span></td><td><code>cb70af248c260139</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.TestArtifactInfo</span></td><td><code>c68e923f629df613</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.TestListResolver</span></td><td><code>3dc896f10c8df96c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.testset.TestRequest</span></td><td><code>976405c051909d71</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.CloseableIterator</span></td><td><code>f2c0acf940ec6fbe</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.DefaultRunOrderCalculator</span></td><td><code>1f50ae9e4b9717cd</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.DefaultScanResult</span></td><td><code>46fdc84739146387</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.ReflectionUtils</span></td><td><code>6079e135f863f220</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.RunOrder</span></td><td><code>0ea36dbbf05327aa</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.TestsToRun</span></td><td><code>cc3376426ef9c01c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.TestsToRun.ClassesIterator</span></td><td><code>cd6601db7bc899db</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleReadableChannel</span></td><td><code>6abb59e4c94390af</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleWritableChannel</span></td><td><code>989f9bf3c66ab7be</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.Channels</span></td><td><code>95e459b596e3b873</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.Channels.3</span></td><td><code>9770f03bd51e14f7</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.Channels.4</span></td><td><code>a0e3eaa91d355cc2</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory</span></td><td><code>a56bf84543725f3a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory.NamedThreadFactory</span></td><td><code>cfeefeb0265a8a13</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.DumpFileUtils</span></td><td><code>9a7dbfdf3c2027c8</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.ImmutableMap</span></td><td><code>ee11b540cdd4034e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.ImmutableMap.Node</span></td><td><code>984f6258c6d6ac9c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.ObjectUtils</span></td><td><code>8c788ffcde97fbb4</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.api.util.internal.StringUtils</span></td><td><code>f5ecc67792b101a3</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.AbstractPathConfiguration</span></td><td><code>4839ca4be6e46906</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.BooterDeserializer</span></td><td><code>02dc12ed0aec9547</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ClassLoaderConfiguration</span></td><td><code>462fdbd63f8ea8c8</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.Classpath</span></td><td><code>5c18bd381e88bcc8</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ClasspathConfiguration</span></td><td><code>4c9fc97c565be4cc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.CommandReader</span></td><td><code>c29c2eca0cd24bfc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.CommandReader.1</span></td><td><code>727226d97ed192cb</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.CommandReader.CommandRunnable</span></td><td><code>41ac58e8d85ca2bd</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter</span></td><td><code>708bf5b29b088537</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.1</span></td><td><code>7d062229af4458f7</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.3</span></td><td><code>093e1d6ec83caf1c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.4</span></td><td><code>88f2f3e42230f38d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.6</span></td><td><code>a150022bee6cbd41</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.7</span></td><td><code>7d0ab78a1157bb24</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.8</span></td><td><code>01800b3929973273</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ForkedBooter.PingScheduler</span></td><td><code>fb97687ca93ecbd1</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.PpidChecker</span></td><td><code>cc99aab0e566c991</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ProcessCheckerType</span></td><td><code>5e6688e4a6a909e6</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.PropertiesWrapper</span></td><td><code>f63d2b2f2fd9087a</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.ProviderConfiguration</span></td><td><code>146800cea9c5f6cc</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.StartupConfiguration</span></td><td><code>1cb50557cb9ebb0b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.SystemPropertyManager</span></td><td><code>3a0459e270104889</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.TypeEncodedValue</span></td><td><code>25e613e357b4f737</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder</span></td><td><code>477264b3887a3b8b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder.FrameCompletion</span></td><td><code>00319e897e4dfd77</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelEncoder</span></td><td><code>d52ce258d8e88d04</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory</span></td><td><code>3e8e80dcadf11ad6</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory</span></td><td><code>6bb9533ad5c08a49</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.JUnitPlatformProvider</span></td><td><code>847b42ef97f97d2b</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.RunListenerAdapter</span></td><td><code>d23fd29ada1102cb</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.RunListenerAdapter.1</span></td><td><code>55724259eef83afa</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.junitplatform.TestPlanScannerFilter</span></td><td><code>a3ae2542fd30e874</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.report.PojoStackTraceWriter</span></td><td><code>693eee167813eb7d</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.codec.binary.Base64</span></td><td><code>cd6927ec7cf0569e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.codec.binary.BaseNCodec</span></td><td><code>c8dd8163b58acfc1</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.codec.binary.BaseNCodec.Context</span></td><td><code>84b370e464e7008c</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.JavaVersion</span></td><td><code>590095a767529b48</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.StringUtils</span></td><td><code>ae3c2c379ffab6fd</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.SystemUtils</span></td><td><code>e4faf882077bc6c0</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.lang3.math.NumberUtils</span></td><td><code>505629194db735ed</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.utils.StringUtils</span></td><td><code>5ba1288622b5e22e</code></td></tr><tr><td><span class=\"el_class\">org.apache.maven.surefire.shared.utils.cli.ShutdownHookUtils</span></td><td><code>b7b46c5c1f482bd4</code></td></tr><tr><td><span class=\"el_class\">org.apiguardian.api.API.Status</span></td><td><code>0341e8d99fc36573</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.AssertArrayEquals</span></td><td><code>9f4f742684c38546</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.AssertEquals</span></td><td><code>196f9a5d80a1b0b4</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.AssertionUtils</span></td><td><code>54f95f15cc856931</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.Assertions</span></td><td><code>6e029941b09226e8</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.TestInstance.Lifecycle</span></td><td><code>1f8fa67947feae07</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.extension.ConditionEvaluationResult</span></td><td><code>2f9dc9ea54b57975</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.api.extension.ExtensionContext</span></td><td><code>3a50244b0f646355</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.JupiterTestEngine</span></td><td><code>91ce387d63124b0b</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.AbstractExtensionContext</span></td><td><code>e85864ea28ce4900</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ClassExtensionContext</span></td><td><code>0edd8a16a5a0f423</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ClassTestDescriptor</span></td><td><code>871339326cdec08d</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ExtensionUtils</span></td><td><code>c0d4b22308952386</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsNonStaticExtensionField</span></td><td><code>5ca7136962622da7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsStaticExtensionField</span></td><td><code>da084ed9633b1c35</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor</span></td><td><code>2004d10245ed7c14</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.JupiterEngineExtensionContext</span></td><td><code>5bcfdadb7f42ddc0</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.JupiterTestDescriptor</span></td><td><code>45d6f6cb92bcef66</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.LifecycleMethodUtils</span></td><td><code>8fd6cd271b5fe7b7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.MethodBasedTestDescriptor</span></td><td><code>7fbbb277bd63085e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.MethodExtensionContext</span></td><td><code>043325a115f0f7bf</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.TestInstanceLifecycleUtils</span></td><td><code>5a6dea961f455d41</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor</span></td><td><code>ca5344ff78b9ac3c</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.AbstractMethodResolver</span></td><td><code>f474a5f7b9196c63</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.DiscoveryFilterApplier</span></td><td><code>e52beeff7f999c17</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.DiscoverySelectorResolver</span></td><td><code>09a38603c216d18c</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.JavaElementsResolver</span></td><td><code>b033bb5913e5b39e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.MethodFinder</span></td><td><code>5ea468d2eb528361</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.NestedTestsResolver</span></td><td><code>9d92451ae793af41</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestContainerResolver</span></td><td><code>452b660f7a80187f</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestFactoryMethodResolver</span></td><td><code>59fd27320e375440</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestMethodResolver</span></td><td><code>812706355dbf565c</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.TestTemplateMethodResolver</span></td><td><code>47563eb55cd35171</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsInnerClass</span></td><td><code>f7d9846d00228720</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsNestedTestClass</span></td><td><code>e47ff7cd33073803</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsPotentialTestContainer</span></td><td><code>bf17d6180e3bfcd4</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestClassWithTests</span></td><td><code>94179bc44f8c4ff7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestFactoryMethod</span></td><td><code>a2c68978bd6bfbc6</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestMethod</span></td><td><code>8b244977e441886e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestTemplateMethod</span></td><td><code>0baf1066bf0cbad7</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.discovery.predicates.IsTestableMethod</span></td><td><code>59a0b58a40803fe2</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ConditionEvaluator</span></td><td><code>cf027eab03077ec8</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ExecutableInvoker</span></td><td><code>3dcb283c9aa60206</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ExtensionValuesStore</span></td><td><code>6da645cbae2256c5</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext</span></td><td><code>2fa1acfc81a9e564</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.Builder</span></td><td><code>8afc8bcaa04b5a1e</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State</span></td><td><code>98926feeb7289b09</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.execution.ThrowableCollector</span></td><td><code>32288e69ddefa8fb</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.DisabledCondition</span></td><td><code>23223b45668b6ef2</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ExtensionRegistry</span></td><td><code>6de7dc4a18ac97dc</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.RepeatedTestExtension</span></td><td><code>1b7914cc8cf83732</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ScriptExecutionCondition</span></td><td><code>72f1d00f1b0a51e3</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ScriptExecutionCondition.Evaluator</span></td><td><code>36e29b1b3214594b</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.ScriptExecutionEvaluator</span></td><td><code>c2e888183731e173</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.TestInfoParameterResolver</span></td><td><code>1b5b370a56807cae</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.extension.TestReporterParameterResolver</span></td><td><code>60beaf7c80fe99cc</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.script.ScriptAccessor.EnvironmentVariableAccessor</span></td><td><code>c0c905d5fe8998ca</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.script.ScriptAccessor.SystemPropertyAccessor</span></td><td><code>18fe4dab72ac1573</code></td></tr><tr><td><span class=\"el_class\">org.junit.jupiter.engine.script.ScriptExecutionManager</span></td><td><code>1f06dfe26cdafe2c</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.logging.LoggerFactory</span></td><td><code>657201953ff2c697</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.logging.LoggerFactory.DelegatingLogger</span></td><td><code>0e5317bba55fc49d</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.AnnotationUtils</span></td><td><code>a1ef6e0681f70a1e</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.AnnotationUtils.AnnotationCacheKey</span></td><td><code>a2872bf2a614d925</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.BlacklistedExceptions</span></td><td><code>73365157bacc50af</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClassFilter</span></td><td><code>093a789d01159576</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClassLoaderUtils</span></td><td><code>fcbbcbe2d963c55b</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClassUtils</span></td><td><code>4f8139a452003bd6</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ClasspathScanner</span></td><td><code>c0a3b9155dc07154</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.CollectionUtils</span></td><td><code>ad417bb7390cff66</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ExceptionUtils</span></td><td><code>1dc9dedfab661762</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.Preconditions</span></td><td><code>3b76bcacee9114c0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ReflectionUtils</span></td><td><code>1dca291d849b53b2</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode</span></td><td><code>b267f8ac562d551e</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.commons.util.StringUtils</span></td><td><code>9596041173fac5b0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.CompositeFilter</span></td><td><code>ec8dc82249eeb7a9</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.CompositeFilter.1</span></td><td><code>70825b5141694d2a</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.ExecutionRequest</span></td><td><code>ed3835cc21e5a048</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.Filter</span></td><td><code>f932423ccd3b54bf</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.FilterResult</span></td><td><code>cdaa92f4f6f79059</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestDescriptor</span></td><td><code>a81a3e15d23f5898</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestDescriptor.Type</span></td><td><code>eb97fc5a29f3ee3a</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestExecutionResult</span></td><td><code>abbab174d32db912</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.TestExecutionResult.Status</span></td><td><code>da0473a55d05e891</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.UniqueId</span></td><td><code>64973686b4e2c690</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.UniqueId.Segment</span></td><td><code>1872a6198babd9f0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.UniqueIdFormat</span></td><td><code>1470555fac6c7a2b</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.discovery.ClassSelector</span></td><td><code>228aa96d72021db2</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.discovery.DiscoverySelectors</span></td><td><code>c61e9bcc0c5d43d7</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.AbstractTestDescriptor</span></td><td><code>2bfbf25c43491443</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.ClassSource</span></td><td><code>deebd86abf2ac9e8</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.EngineDescriptor</span></td><td><code>b7dbf6dfb794516c</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.descriptor.MethodSource</span></td><td><code>e22f7f8c4f01d2d8</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.filter.ClasspathScanningSupport</span></td><td><code>045afdae065e9ce0</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.ExecutionTracker</span></td><td><code>cbd37bfd76595d62</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine</span></td><td><code>410766a2a07e44b1</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor</span></td><td><code>43b3a991558bcb42</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.1</span></td><td><code>59988b34a20c03de</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.NodeExecutor</span></td><td><code>d5df9a54f301545d</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.Node</span></td><td><code>1e2e35414f9ebddd</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.Node.SkipResult</span></td><td><code>a8b0f84ec81d03c3</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.engine.support.hierarchical.SingleTestExecutor</span></td><td><code>eb68067e61cad23e</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.TestIdentifier</span></td><td><code>225bb434f8f223e2</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.TestPlan</span></td><td><code>9a2b71b572924cbc</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.DefaultDiscoveryRequest</span></td><td><code>7dda3ad9a0e6a666</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.DefaultLauncher</span></td><td><code>1a1f88af87dc6ec1</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.ExecutionListenerAdapter</span></td><td><code>52cf3c3c69d4dfba</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.LauncherConfigurationParameters</span></td><td><code>ef55cacb5e47a902</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder</span></td><td><code>e78a71b91c159e69</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.LauncherFactory</span></td><td><code>e2bd67b8a72737b5</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.Root</span></td><td><code>32394ca895f9fb9a</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry</span></td><td><code>7c054c4cf76cb0f6</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.ServiceLoaderTestExecutionListenerRegistry</span></td><td><code>2299bac1075a6bf3</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.TestExecutionListenerRegistry</span></td><td><code>190f4fb2b0ab865d</code></td></tr><tr><td><span class=\"el_class\">org.junit.platform.launcher.core.TestExecutionListenerRegistry.CompositeTestExecutionListener</span></td><td><code>7538d2d860e1f9cb</code></td></tr><tr><td><span class=\"el_class\">org.opentest4j.AssertionFailedError</span></td><td><code>2c5f69ceb24e9128</code></td></tr><tr><td><span class=\"el_class\">sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo</span></td><td><code>888d0e6a76acb845</code></td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/jacoco-sessions.html b/target/site/jacoco/jacoco-sessions.html
--- a/target/site/jacoco/jacoco-sessions.html	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/jacoco-sessions.html	(date 1648106316673)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Sessions</title></head><body><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><a href="index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_session">Sessions</span></div><h1>Sessions</h1><p>This coverage report is based on execution data from the following sessions:</p><table class="coverage" cellspacing="0"><thead><tr><td>Session</td><td>Start Time</td><td>Dump Time</td></tr></thead><tbody><tr><td><span class="el_session">DESKTOP-3F0SSFQ-fe00496a</span></td><td>Sep 27, 2021, 5:29:56 PM</td><td>Sep 27, 2021, 5:29:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9cdf880c</span></td><td>Sep 27, 2021, 5:57:07 PM</td><td>Sep 27, 2021, 5:57:08 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-33e4a7ad</span></td><td>Sep 27, 2021, 6:10:24 PM</td><td>Sep 27, 2021, 6:10:26 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d759012b</span></td><td>Sep 27, 2021, 6:11:38 PM</td><td>Sep 27, 2021, 6:11:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-653be16e</span></td><td>Sep 27, 2021, 6:23:10 PM</td><td>Sep 27, 2021, 6:23:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e4543b44</span></td><td>Sep 27, 2021, 6:23:36 PM</td><td>Sep 27, 2021, 6:23:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4d4af810</span></td><td>Sep 27, 2021, 6:23:55 PM</td><td>Sep 27, 2021, 6:23:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-ca0ff9dc</span></td><td>Sep 27, 2021, 6:32:57 PM</td><td>Sep 27, 2021, 6:32:59 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-2b03aa12</span></td><td>Sep 27, 2021, 6:33:17 PM</td><td>Sep 27, 2021, 6:33:18 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-92377961</span></td><td>Sep 27, 2021, 6:41:53 PM</td><td>Sep 27, 2021, 6:41:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f67dcf9d</span></td><td>Sep 27, 2021, 7:07:03 PM</td><td>Sep 27, 2021, 7:07:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3deffdcc</span></td><td>Sep 27, 2021, 7:07:05 PM</td><td>Sep 27, 2021, 7:07:07 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8370ba74</span></td><td>Sep 27, 2021, 7:07:14 PM</td><td>Sep 27, 2021, 7:07:16 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e80853d4</span></td><td>Sep 27, 2021, 7:07:20 PM</td><td>Sep 27, 2021, 7:07:22 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9ee31791</span></td><td>Sep 27, 2021, 7:07:33 PM</td><td>Sep 27, 2021, 7:07:34 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-58a45499</span></td><td>Sep 27, 2021, 7:14:03 PM</td><td>Sep 27, 2021, 7:14:05 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-6b36a7ae</span></td><td>Sep 27, 2021, 7:15:10 PM</td><td>Sep 27, 2021, 7:15:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cd238e7f</span></td><td>Sep 27, 2021, 7:23:32 PM</td><td>Sep 27, 2021, 7:23:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-32a355ac</span></td><td>Sep 27, 2021, 7:23:46 PM</td><td>Sep 27, 2021, 7:23:47 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cf2ae673</span></td><td>Sep 27, 2021, 7:24:23 PM</td><td>Sep 27, 2021, 7:24:25 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d8ae4a1d</span></td><td>Sep 27, 2021, 7:24:44 PM</td><td>Sep 27, 2021, 7:24:45 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-590642cc</span></td><td>Sep 27, 2021, 7:29:32 PM</td><td>Sep 27, 2021, 7:29:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c18502e8</span></td><td>Sep 27, 2021, 7:36:10 PM</td><td>Sep 27, 2021, 7:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-bb68ec51</span></td><td>Sep 27, 2021, 7:36:48 PM</td><td>Sep 27, 2021, 7:36:49 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-dc7eaf97</span></td><td>Sep 27, 2021, 7:53:34 PM</td><td>Sep 27, 2021, 7:53:35 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4fd69810</span></td><td>Sep 27, 2021, 7:54:01 PM</td><td>Sep 27, 2021, 7:54:02 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-96825214</span></td><td>Sep 27, 2021, 7:58:58 PM</td><td>Sep 27, 2021, 7:59:00 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-89a0fc42</span></td><td>Sep 27, 2021, 7:59:36 PM</td><td>Sep 27, 2021, 7:59:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cab82cf0</span></td><td>Sep 27, 2021, 8:00:02 PM</td><td>Sep 27, 2021, 8:00:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c139591e</span></td><td>Sep 27, 2021, 8:34:30 PM</td><td>Sep 27, 2021, 8:34:30 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-82b8fd28</span></td><td>Sep 27, 2021, 8:35:38 PM</td><td>Sep 27, 2021, 8:35:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3bdff75d</span></td><td>Sep 27, 2021, 8:36:10 PM</td><td>Sep 27, 2021, 8:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cdb98687</span></td><td>Sep 27, 2021, 8:39:11 PM</td><td>Sep 27, 2021, 8:39:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e6b68394</span></td><td>Sep 27, 2021, 8:40:13 PM</td><td>Sep 27, 2021, 8:40:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9c517ae6</span></td><td>Sep 27, 2021, 8:40:22 PM</td><td>Sep 27, 2021, 8:40:23 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-7849bf85</span></td><td>Sep 27, 2021, 11:07:11 PM</td><td>Sep 27, 2021, 11:07:12 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8af91b33</span></td><td>Oct 15, 2021, 5:52:56 PM</td><td>Oct 15, 2021, 5:52:57 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3c496517</span></td><td>Oct 15, 2021, 5:53:13 PM</td><td>Oct 15, 2021, 5:53:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-a1df1e07</span></td><td>Oct 15, 2021, 5:53:39 PM</td><td>Oct 15, 2021, 5:53:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-aff8a924</span></td><td>Oct 15, 2021, 5:53:57 PM</td><td>Oct 15, 2021, 5:53:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f94da3ae</span></td><td>Oct 15, 2021, 6:03:05 PM</td><td>Oct 15, 2021, 6:03:06 PM</td></tr><tr><td><span class="el_session">Jacobs-MacBook-Pro.local-f3f79794</span></td><td>Oct 21, 2021, 11:15:55 AM</td><td>Oct 21, 2021, 11:16:04 AM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-1c4bcb6b</span></td><td>Jan 28, 2022, 8:38:18 PM</td><td>Jan 28, 2022, 8:38:19 PM</td></tr><tr><td><span class="el_session">BLD-5f143199</span></td><td>Mar 21, 2022, 3:32:31 PM</td><td>Mar 21, 2022, 3:32:31 PM</td></tr><tr><td><span class="el_session">BLD-d03d1266</span></td><td>Mar 21, 2022, 3:34:51 PM</td><td>Mar 21, 2022, 3:34:51 PM</td></tr><tr><td><span class="el_session">BLD-13bcee4f</span></td><td>Mar 21, 2022, 3:36:09 PM</td><td>Mar 21, 2022, 3:36:10 PM</td></tr><tr><td><span class="el_session">BLD-73b3ed2a</span></td><td>Mar 21, 2022, 3:36:32 PM</td><td>Mar 21, 2022, 3:36:33 PM</td></tr><tr><td><span class="el_session">BLD-9ce2ccfd</span></td><td>Mar 21, 2022, 3:38:04 PM</td><td>Mar 21, 2022, 3:38:04 PM</td></tr><tr><td><span class="el_session">BLD-2afa8ef6</span></td><td>Mar 21, 2022, 3:38:55 PM</td><td>Mar 21, 2022, 3:38:55 PM</td></tr><tr><td><span class="el_session">BLD-edd601d3</span></td><td>Mar 21, 2022, 3:41:21 PM</td><td>Mar 21, 2022, 3:41:22 PM</td></tr><tr><td><span class="el_session">BLD-c28ecaff</span></td><td>Mar 21, 2022, 3:43:28 PM</td><td>Mar 21, 2022, 3:43:28 PM</td></tr><tr><td><span class="el_session">BLD-55cd338f</span></td><td>Mar 21, 2022, 3:44:35 PM</td><td>Mar 21, 2022, 3:44:35 PM</td></tr><tr><td><span class="el_session">BLD-e4801ee3</span></td><td>Mar 21, 2022, 3:47:23 PM</td><td>Mar 21, 2022, 3:47:23 PM</td></tr><tr><td><span class="el_session">BLD-9f351c8a</span></td><td>Mar 21, 2022, 3:49:19 PM</td><td>Mar 21, 2022, 3:49:19 PM</td></tr><tr><td><span class="el_session">BLD-9eacc799</span></td><td>Mar 21, 2022, 3:49:47 PM</td><td>Mar 21, 2022, 3:49:47 PM</td></tr><tr><td><span class="el_session">BLD-b904ea4e</span></td><td>Mar 21, 2022, 3:50:13 PM</td><td>Mar 21, 2022, 3:50:13 PM</td></tr><tr><td><span class="el_session">BLD-644b10e9</span></td><td>Mar 21, 2022, 3:56:04 PM</td><td>Mar 21, 2022, 3:56:04 PM</td></tr><tr><td><span class="el_session">BLD-dcf1263f</span></td><td>Mar 21, 2022, 3:56:29 PM</td><td>Mar 21, 2022, 3:56:30 PM</td></tr><tr><td><span class="el_session">BLD-c8bba310</span></td><td>Mar 21, 2022, 3:57:04 PM</td><td>Mar 21, 2022, 3:57:05 PM</td></tr><tr><td><span class="el_session">BLD-f13f0532</span></td><td>Mar 21, 2022, 4:01:54 PM</td><td>Mar 21, 2022, 4:01:54 PM</td></tr><tr><td><span class="el_session">BLD-4d60d8a9</span></td><td>Mar 21, 2022, 4:04:09 PM</td><td>Mar 21, 2022, 4:04:10 PM</td></tr><tr><td><span class="el_session">BLD-7c76e99b</span></td><td>Mar 21, 2022, 4:04:26 PM</td><td>Mar 21, 2022, 4:04:26 PM</td></tr><tr><td><span class="el_session">BLD-6e4c34ba</span></td><td>Mar 21, 2022, 4:05:30 PM</td><td>Mar 21, 2022, 4:05:31 PM</td></tr><tr><td><span class="el_session">BLD-611d5be4</span></td><td>Mar 21, 2022, 4:06:52 PM</td><td>Mar 21, 2022, 4:06:52 PM</td></tr><tr><td><span class="el_session">BLD-fbf836d9</span></td><td>Mar 21, 2022, 4:07:09 PM</td><td>Mar 21, 2022, 4:07:09 PM</td></tr><tr><td><span class="el_session">BLD-cf666b95</span></td><td>Mar 21, 2022, 4:08:48 PM</td><td>Mar 21, 2022, 4:08:49 PM</td></tr><tr><td><span class="el_session">BLD-3ac3eaab</span></td><td>Mar 21, 2022, 4:09:19 PM</td><td>Mar 21, 2022, 4:09:19 PM</td></tr><tr><td><span class="el_session">BLD-eb30d151</span></td><td>Mar 21, 2022, 4:12:34 PM</td><td>Mar 21, 2022, 4:12:34 PM</td></tr><tr><td><span class="el_session">BLD-4704b508</span></td><td>Mar 21, 2022, 4:16:30 PM</td><td>Mar 21, 2022, 4:16:30 PM</td></tr><tr><td><span class="el_session">BLD-a9161df8</span></td><td>Mar 21, 2022, 4:17:04 PM</td><td>Mar 21, 2022, 4:17:04 PM</td></tr><tr><td><span class="el_session">BLD-8d1de9c8</span></td><td>Mar 21, 2022, 4:17:31 PM</td><td>Mar 21, 2022, 4:17:31 PM</td></tr><tr><td><span class="el_session">BLD-384b8695</span></td><td>Mar 21, 2022, 4:17:43 PM</td><td>Mar 21, 2022, 4:17:43 PM</td></tr><tr><td><span class="el_session">BLD-dce664e1</span></td><td>Mar 21, 2022, 4:24:00 PM</td><td>Mar 21, 2022, 4:24:01 PM</td></tr><tr><td><span class="el_session">BLD-5871c6dc</span></td><td>Mar 21, 2022, 4:24:19 PM</td><td>Mar 21, 2022, 4:24:20 PM</td></tr><tr><td><span class="el_session">BLD-ec3d5b51</span></td><td>Mar 21, 2022, 4:24:29 PM</td><td>Mar 21, 2022, 4:24:30 PM</td></tr><tr><td><span class="el_session">BLD-c4a22b0</span></td><td>Mar 21, 2022, 4:24:39 PM</td><td>Mar 21, 2022, 4:24:39 PM</td></tr><tr><td><span class="el_session">BLD-e17dbfe3</span></td><td>Mar 21, 2022, 4:24:53 PM</td><td>Mar 21, 2022, 4:24:54 PM</td></tr><tr><td><span class="el_session">BLD-6691bb9b</span></td><td>Mar 21, 2022, 4:25:03 PM</td><td>Mar 21, 2022, 4:25:03 PM</td></tr><tr><td><span class="el_session">BLD-f402c671</span></td><td>Mar 21, 2022, 4:25:59 PM</td><td>Mar 21, 2022, 4:25:59 PM</td></tr><tr><td><span class="el_session">BLD-df63c0c1</span></td><td>Mar 21, 2022, 4:26:09 PM</td><td>Mar 21, 2022, 4:26:10 PM</td></tr><tr><td><span class="el_session">BLD-730deef4</span></td><td>Mar 21, 2022, 4:26:19 PM</td><td>Mar 21, 2022, 4:26:19 PM</td></tr><tr><td><span class="el_session">BLD-47ae258d</span></td><td>Mar 21, 2022, 4:27:37 PM</td><td>Mar 21, 2022, 4:27:37 PM</td></tr><tr><td><span class="el_session">BLD-65f519f5</span></td><td>Mar 21, 2022, 4:27:49 PM</td><td>Mar 21, 2022, 4:27:50 PM</td></tr><tr><td><span class="el_session">BLD-69c63fbe</span></td><td>Mar 21, 2022, 4:28:00 PM</td><td>Mar 21, 2022, 4:28:01 PM</td></tr><tr><td><span class="el_session">BLD-a715049</span></td><td>Mar 21, 2022, 4:28:12 PM</td><td>Mar 21, 2022, 4:28:12 PM</td></tr><tr><td><span class="el_session">BLD-a82e1f3a</span></td><td>Mar 21, 2022, 4:34:50 PM</td><td>Mar 21, 2022, 4:34:50 PM</td></tr><tr><td><span class="el_session">BLD-36a12ee0</span></td><td>Mar 21, 2022, 4:35:06 PM</td><td>Mar 21, 2022, 4:35:06 PM</td></tr><tr><td><span class="el_session">BLD-575cc61a</span></td><td>Mar 21, 2022, 4:35:20 PM</td><td>Mar 21, 2022, 4:35:20 PM</td></tr><tr><td><span class="el_session">BLD-4bb34530</span></td><td>Mar 21, 2022, 4:35:36 PM</td><td>Mar 21, 2022, 4:35:36 PM</td></tr><tr><td><span class="el_session">BLD-448d89fb</span></td><td>Mar 21, 2022, 4:36:55 PM</td><td>Mar 21, 2022, 4:36:55 PM</td></tr><tr><td><span class="el_session">BLD-9b3ee8d6</span></td><td>Mar 21, 2022, 4:38:46 PM</td><td>Mar 21, 2022, 4:38:46 PM</td></tr><tr><td><span class="el_session">BLD-26b02335</span></td><td>Mar 21, 2022, 4:38:57 PM</td><td>Mar 21, 2022, 4:38:58 PM</td></tr><tr><td><span class="el_session">BLD-6ca80015</span></td><td>Mar 21, 2022, 4:41:03 PM</td><td>Mar 21, 2022, 4:41:03 PM</td></tr><tr><td><span class="el_session">BLD-422a9384</span></td><td>Mar 21, 2022, 4:42:31 PM</td><td>Mar 21, 2022, 4:42:32 PM</td></tr><tr><td><span class="el_session">BLD-f789f3a</span></td><td>Mar 21, 2022, 4:50:11 PM</td><td>Mar 21, 2022, 4:50:12 PM</td></tr><tr><td><span class="el_session">BLD-80bee3b2</span></td><td>Mar 21, 2022, 4:51:59 PM</td><td>Mar 21, 2022, 4:51:59 PM</td></tr><tr><td><span class="el_session">BLD-dbbdfdd8</span></td><td>Mar 21, 2022, 4:52:28 PM</td><td>Mar 21, 2022, 4:52:28 PM</td></tr><tr><td><span class="el_session">BLD-5208a62a</span></td><td>Mar 21, 2022, 5:03:42 PM</td><td>Mar 21, 2022, 5:03:43 PM</td></tr><tr><td><span class="el_session">BLD-4f2bd873</span></td><td>Mar 21, 2022, 5:03:49 PM</td><td>Mar 21, 2022, 5:03:50 PM</td></tr><tr><td><span class="el_session">BLD-87d85318</span></td><td>Mar 21, 2022, 5:04:07 PM</td><td>Mar 21, 2022, 5:04:08 PM</td></tr><tr><td><span class="el_session">BLD-7daa79c0</span></td><td>Mar 21, 2022, 5:04:53 PM</td><td>Mar 21, 2022, 5:04:54 PM</td></tr><tr><td><span class="el_session">BLD-b0aa7c38</span></td><td>Mar 21, 2022, 5:05:28 PM</td><td>Mar 21, 2022, 5:05:29 PM</td></tr><tr><td><span class="el_session">BLD-8225c5c2</span></td><td>Mar 21, 2022, 5:05:42 PM</td><td>Mar 21, 2022, 5:05:43 PM</td></tr><tr><td><span class="el_session">BLD-cd5cc3dc</span></td><td>Mar 21, 2022, 5:06:48 PM</td><td>Mar 21, 2022, 5:06:49 PM</td></tr><tr><td><span class="el_session">BLD-4e532446</span></td><td>Mar 21, 2022, 5:07:03 PM</td><td>Mar 21, 2022, 5:07:03 PM</td></tr><tr><td><span class="el_session">BLD-ccbe17aa</span></td><td>Mar 21, 2022, 5:09:53 PM</td><td>Mar 21, 2022, 5:09:53 PM</td></tr><tr><td><span class="el_session">BLD-bd389192</span></td><td>Mar 21, 2022, 5:10:22 PM</td><td>Mar 21, 2022, 5:10:23 PM</td></tr><tr><td><span class="el_session">BLD-63813cab</span></td><td>Mar 21, 2022, 5:15:19 PM</td><td>Mar 21, 2022, 5:15:20 PM</td></tr><tr><td><span class="el_session">BLD-fee079ee</span></td><td>Mar 21, 2022, 5:19:13 PM</td><td>Mar 21, 2022, 5:19:14 PM</td></tr><tr><td><span class="el_session">BLD-d8399d8c</span></td><td>Mar 21, 2022, 5:20:23 PM</td><td>Mar 21, 2022, 5:20:24 PM</td></tr><tr><td><span class="el_session">BLD-8c069a1b</span></td><td>Mar 21, 2022, 5:20:44 PM</td><td>Mar 21, 2022, 5:20:45 PM</td></tr><tr><td><span class="el_session">BLD-1a4546d0</span></td><td>Mar 21, 2022, 5:21:09 PM</td><td>Mar 21, 2022, 5:21:09 PM</td></tr><tr><td><span class="el_session">BLD-158d6146</span></td><td>Mar 21, 2022, 5:21:55 PM</td><td>Mar 21, 2022, 5:21:55 PM</td></tr><tr><td><span class="el_session">BLD-df44e80a</span></td><td>Mar 21, 2022, 5:22:10 PM</td><td>Mar 21, 2022, 5:22:10 PM</td></tr><tr><td><span class="el_session">BLD-aa032da9</span></td><td>Mar 21, 2022, 5:22:21 PM</td><td>Mar 21, 2022, 5:22:21 PM</td></tr><tr><td><span class="el_session">BLD-88e54f0a</span></td><td>Mar 22, 2022, 3:53:27 PM</td><td>Mar 22, 2022, 3:53:27 PM</td></tr><tr><td><span class="el_session">BLD-11ef7812</span></td><td>Mar 22, 2022, 3:53:48 PM</td><td>Mar 22, 2022, 3:53:49 PM</td></tr><tr><td><span class="el_session">BLD-45f5b741</span></td><td>Mar 22, 2022, 3:54:07 PM</td><td>Mar 22, 2022, 3:54:07 PM</td></tr><tr><td><span class="el_session">BLD-d8bc2629</span></td><td>Mar 22, 2022, 3:54:26 PM</td><td>Mar 22, 2022, 3:54:26 PM</td></tr><tr><td><span class="el_session">BLD-5c533f79</span></td><td>Mar 22, 2022, 3:54:44 PM</td><td>Mar 22, 2022, 3:54:44 PM</td></tr><tr><td><span class="el_session">BLD-16314474</span></td><td>Mar 22, 2022, 4:35:31 PM</td><td>Mar 22, 2022, 4:35:31 PM</td></tr><tr><td><span class="el_session">BLD-23250d6e</span></td><td>Mar 22, 2022, 4:36:12 PM</td><td>Mar 22, 2022, 4:36:12 PM</td></tr><tr><td><span class="el_session">BLD-9dc70764</span></td><td>Mar 22, 2022, 4:37:10 PM</td><td>Mar 22, 2022, 4:37:10 PM</td></tr><tr><td><span class="el_session">BLD-141f0a9c</span></td><td>Mar 22, 2022, 4:37:52 PM</td><td>Mar 22, 2022, 4:37:52 PM</td></tr><tr><td><span class="el_session">BLD-a87a5eca</span></td><td>Mar 22, 2022, 4:38:03 PM</td><td>Mar 22, 2022, 4:38:03 PM</td></tr><tr><td><span class="el_session">BLD-f07af7a9</span></td><td>Mar 22, 2022, 4:41:07 PM</td><td>Mar 22, 2022, 4:41:07 PM</td></tr><tr><td><span class="el_session">BLD-3bc2e0eb</span></td><td>Mar 22, 2022, 4:41:37 PM</td><td>Mar 22, 2022, 4:41:37 PM</td></tr><tr><td><span class="el_session">BLD-c52cc34</span></td><td>Mar 22, 2022, 4:47:15 PM</td><td>Mar 22, 2022, 4:47:15 PM</td></tr><tr><td><span class="el_session">BLD-915d4cb5</span></td><td>Mar 22, 2022, 4:50:07 PM</td><td>Mar 22, 2022, 4:50:08 PM</td></tr><tr><td><span class="el_session">BLD-f0e815ea</span></td><td>Mar 22, 2022, 4:51:06 PM</td><td>Mar 22, 2022, 4:51:06 PM</td></tr><tr><td><span class="el_session">BLD-99edb312</span></td><td>Mar 22, 2022, 4:58:57 PM</td><td>Mar 22, 2022, 4:58:57 PM</td></tr><tr><td><span class="el_session">BLD-d0e8055a</span></td><td>Mar 22, 2022, 5:00:42 PM</td><td>Mar 22, 2022, 5:00:43 PM</td></tr><tr><td><span class="el_session">BLD-918a466</span></td><td>Mar 22, 2022, 5:02:08 PM</td><td>Mar 22, 2022, 5:02:09 PM</td></tr><tr><td><span class="el_session">BLD-ced5ae41</span></td><td>Mar 22, 2022, 5:05:58 PM</td><td>Mar 22, 2022, 5:05:58 PM</td></tr><tr><td><span class="el_session">BLD-6926cfa5</span></td><td>Mar 22, 2022, 5:11:48 PM</td><td>Mar 22, 2022, 5:11:49 PM</td></tr><tr><td><span class="el_session">BLD-40511bbd</span></td><td>Mar 22, 2022, 5:12:00 PM</td><td>Mar 22, 2022, 5:12:01 PM</td></tr><tr><td><span class="el_session">BLD-8c00f2a</span></td><td>Mar 22, 2022, 5:28:14 PM</td><td>Mar 22, 2022, 5:28:14 PM</td></tr><tr><td><span class="el_session">BLD-c32762a5</span></td><td>Mar 22, 2022, 8:23:02 PM</td><td>Mar 22, 2022, 8:23:03 PM</td></tr><tr><td><span class="el_session">BLD-cf6d6f82</span></td><td>Mar 22, 2022, 8:27:54 PM</td><td>Mar 22, 2022, 8:27:55 PM</td></tr><tr><td><span class="el_session">BLD-ef04d919</span></td><td>Mar 22, 2022, 8:28:22 PM</td><td>Mar 22, 2022, 8:28:23 PM</td></tr><tr><td><span class="el_session">BLD-3a616cd7</span></td><td>Mar 22, 2022, 8:30:01 PM</td><td>Mar 22, 2022, 8:30:01 PM</td></tr><tr><td><span class="el_session">BLD-de784c09</span></td><td>Mar 22, 2022, 8:31:43 PM</td><td>Mar 22, 2022, 8:31:44 PM</td></tr><tr><td><span class="el_session">BLD-d94dea2c</span></td><td>Mar 22, 2022, 8:32:17 PM</td><td>Mar 22, 2022, 8:32:17 PM</td></tr><tr><td><span class="el_session">BLD-58ed1b2f</span></td><td>Mar 22, 2022, 8:43:05 PM</td><td>Mar 22, 2022, 8:43:05 PM</td></tr><tr><td><span class="el_session">BLD-d96e8843</span></td><td>Mar 22, 2022, 8:49:48 PM</td><td>Mar 22, 2022, 8:49:49 PM</td></tr><tr><td><span class="el_session">BLD-6990374e</span></td><td>Mar 22, 2022, 9:22:24 PM</td><td>Mar 22, 2022, 9:22:24 PM</td></tr><tr><td><span class="el_session">BLD-625de177</span></td><td>Mar 22, 2022, 9:30:28 PM</td><td>Mar 22, 2022, 9:30:28 PM</td></tr><tr><td><span class="el_session">BLD-90080ce6</span></td><td>Mar 22, 2022, 9:49:44 PM</td><td>Mar 22, 2022, 9:49:44 PM</td></tr><tr><td><span class="el_session">BLD-73ed5a2f</span></td><td>Mar 22, 2022, 9:52:01 PM</td><td>Mar 22, 2022, 9:52:02 PM</td></tr><tr><td><span class="el_session">BLD-acbe5570</span></td><td>Mar 22, 2022, 9:53:36 PM</td><td>Mar 22, 2022, 9:53:37 PM</td></tr><tr><td><span class="el_session">BLD-d51d481d</span></td><td>Mar 22, 2022, 9:53:45 PM</td><td>Mar 22, 2022, 9:53:46 PM</td></tr><tr><td><span class="el_session">BLD-9c872883</span></td><td>Mar 22, 2022, 10:07:30 PM</td><td>Mar 22, 2022, 10:07:30 PM</td></tr><tr><td><span class="el_session">BLD-26dc340c</span></td><td>Mar 22, 2022, 10:13:39 PM</td><td>Mar 22, 2022, 10:13:40 PM</td></tr><tr><td><span class="el_session">BLD-c5819925</span></td><td>Mar 22, 2022, 10:26:19 PM</td><td>Mar 22, 2022, 10:26:20 PM</td></tr><tr><td><span class="el_session">BLD-7eb27fed</span></td><td>Mar 22, 2022, 10:29:57 PM</td><td>Mar 22, 2022, 10:29:58 PM</td></tr><tr><td><span class="el_session">BLD-7606e998</span></td><td>Mar 22, 2022, 10:31:55 PM</td><td>Mar 22, 2022, 10:31:56 PM</td></tr><tr><td><span class="el_session">BLD-62ed1053</span></td><td>Mar 22, 2022, 10:34:48 PM</td><td>Mar 22, 2022, 10:34:48 PM</td></tr><tr><td><span class="el_session">BLD-460751bf</span></td><td>Mar 22, 2022, 10:35:46 PM</td><td>Mar 22, 2022, 10:35:46 PM</td></tr><tr><td><span class="el_session">BLD-f73a4b</span></td><td>Mar 22, 2022, 10:36:10 PM</td><td>Mar 22, 2022, 10:36:10 PM</td></tr><tr><td><span class="el_session">BLD-f4661f3</span></td><td>Mar 22, 2022, 10:38:28 PM</td><td>Mar 22, 2022, 10:38:28 PM</td></tr><tr><td><span class="el_session">BLD-8d5346ec</span></td><td>Mar 22, 2022, 10:39:14 PM</td><td>Mar 22, 2022, 10:39:15 PM</td></tr><tr><td><span class="el_session">BLD-b6f1896</span></td><td>Mar 22, 2022, 10:52:51 PM</td><td>Mar 22, 2022, 10:52:51 PM</td></tr><tr><td><span class="el_session">BLD-fd1fdf91</span></td><td>Mar 22, 2022, 10:53:03 PM</td><td>Mar 22, 2022, 10:53:04 PM</td></tr><tr><td><span class="el_session">BLD-5b052c7a</span></td><td>Mar 22, 2022, 10:53:17 PM</td><td>Mar 22, 2022, 10:53:17 PM</td></tr><tr><td><span class="el_session">BLD-921c9dce</span></td><td>Mar 22, 2022, 10:56:00 PM</td><td>Mar 22, 2022, 10:56:00 PM</td></tr><tr><td><span class="el_session">BLD-be274de6</span></td><td>Mar 22, 2022, 10:57:02 PM</td><td>Mar 22, 2022, 10:57:03 PM</td></tr><tr><td><span class="el_session">BLD-ba90ae31</span></td><td>Mar 22, 2022, 10:58:37 PM</td><td>Mar 22, 2022, 10:58:38 PM</td></tr><tr><td><span class="el_session">BLD-d241f362</span></td><td>Mar 22, 2022, 10:59:06 PM</td><td>Mar 22, 2022, 10:59:06 PM</td></tr><tr><td><span class="el_session">BLD-2cf33207</span></td><td>Mar 22, 2022, 10:59:23 PM</td><td>Mar 22, 2022, 10:59:24 PM</td></tr><tr><td><span class="el_session">BLD-34e6cba2</span></td><td>Mar 22, 2022, 11:00:21 PM</td><td>Mar 22, 2022, 11:00:22 PM</td></tr><tr><td><span class="el_session">BLD-7c86ea4c</span></td><td>Mar 22, 2022, 11:00:31 PM</td><td>Mar 22, 2022, 11:00:32 PM</td></tr><tr><td><span class="el_session">BLD-3dc2f10c</span></td><td>Mar 22, 2022, 11:00:47 PM</td><td>Mar 22, 2022, 11:00:48 PM</td></tr><tr><td><span class="el_session">BLD-eb3fc027</span></td><td>Mar 22, 2022, 11:02:36 PM</td><td>Mar 22, 2022, 11:02:36 PM</td></tr><tr><td><span class="el_session">BLD-484e37f3</span></td><td>Mar 22, 2022, 11:18:47 PM</td><td>Mar 22, 2022, 11:18:47 PM</td></tr><tr><td><span class="el_session">BLD-3dab5fc1</span></td><td>Mar 22, 2022, 11:18:53 PM</td><td>Mar 22, 2022, 11:18:53 PM</td></tr><tr><td><span class="el_session">BLD-ac748ad</span></td><td>Mar 22, 2022, 11:19:17 PM</td><td>Mar 22, 2022, 11:19:17 PM</td></tr><tr><td><span class="el_session">BLD-febfc0cc</span></td><td>Mar 22, 2022, 11:19:28 PM</td><td>Mar 22, 2022, 11:19:29 PM</td></tr><tr><td><span class="el_session">BLD-3f27384d</span></td><td>Mar 22, 2022, 11:19:39 PM</td><td>Mar 22, 2022, 11:19:39 PM</td></tr><tr><td><span class="el_session">BLD-7191ed85</span></td><td>Mar 22, 2022, 11:22:36 PM</td><td>Mar 22, 2022, 11:22:36 PM</td></tr><tr><td><span class="el_session">BLD-f150a0f1</span></td><td>Mar 22, 2022, 11:22:51 PM</td><td>Mar 22, 2022, 11:22:52 PM</td></tr><tr><td><span class="el_session">BLD-7653172c</span></td><td>Mar 22, 2022, 11:23:06 PM</td><td>Mar 22, 2022, 11:23:07 PM</td></tr><tr><td><span class="el_session">BLD-4c26638c</span></td><td>Mar 22, 2022, 11:24:18 PM</td><td>Mar 22, 2022, 11:24:19 PM</td></tr><tr><td><span class="el_session">BLD-23e80093</span></td><td>Mar 22, 2022, 11:24:31 PM</td><td>Mar 22, 2022, 11:24:32 PM</td></tr><tr><td><span class="el_session">BLD-adc94ced</span></td><td>Mar 22, 2022, 11:24:48 PM</td><td>Mar 22, 2022, 11:24:48 PM</td></tr><tr><td><span class="el_session">BLD-d808ff09</span></td><td>Mar 22, 2022, 11:25:02 PM</td><td>Mar 22, 2022, 11:25:02 PM</td></tr><tr><td><span class="el_session">BLD-73708a74</span></td><td>Mar 22, 2022, 11:27:00 PM</td><td>Mar 22, 2022, 11:27:00 PM</td></tr><tr><td><span class="el_session">BLD-3ccdbc0b</span></td><td>Mar 22, 2022, 11:27:15 PM</td><td>Mar 22, 2022, 11:27:16 PM</td></tr><tr><td><span class="el_session">BLD-161ad7f7</span></td><td>Mar 22, 2022, 11:27:27 PM</td><td>Mar 22, 2022, 11:27:28 PM</td></tr><tr><td><span class="el_session">BLD-51e7d116</span></td><td>Mar 22, 2022, 11:27:54 PM</td><td>Mar 22, 2022, 11:27:55 PM</td></tr><tr><td><span class="el_session">BLD-f25abf84</span></td><td>Mar 22, 2022, 11:28:11 PM</td><td>Mar 22, 2022, 11:28:12 PM</td></tr><tr><td><span class="el_session">BLD-8f5fcfa1</span></td><td>Mar 22, 2022, 11:28:36 PM</td><td>Mar 22, 2022, 11:28:36 PM</td></tr><tr><td><span class="el_session">BLD-722301d4</span></td><td>Mar 22, 2022, 11:28:49 PM</td><td>Mar 22, 2022, 11:28:50 PM</td></tr><tr><td><span class="el_session">BLD-8feadfa8</span></td><td>Mar 22, 2022, 11:29:03 PM</td><td>Mar 22, 2022, 11:29:04 PM</td></tr><tr><td><span class="el_session">BLD-5cb48547</span></td><td>Mar 22, 2022, 11:30:03 PM</td><td>Mar 22, 2022, 11:30:03 PM</td></tr><tr><td><span class="el_session">BLD-62abb693</span></td><td>Mar 22, 2022, 11:30:15 PM</td><td>Mar 22, 2022, 11:30:15 PM</td></tr><tr><td><span class="el_session">BLD-9a32bf97</span></td><td>Mar 22, 2022, 11:30:54 PM</td><td>Mar 22, 2022, 11:30:55 PM</td></tr><tr><td><span class="el_session">BLD-f07b812e</span></td><td>Mar 22, 2022, 11:31:14 PM</td><td>Mar 22, 2022, 11:31:14 PM</td></tr><tr><td><span class="el_session">BLD-c0c73418</span></td><td>Mar 22, 2022, 11:31:48 PM</td><td>Mar 22, 2022, 11:31:49 PM</td></tr><tr><td><span class="el_session">BLD-cc37a0bf</span></td><td>Mar 22, 2022, 11:32:11 PM</td><td>Mar 22, 2022, 11:32:12 PM</td></tr><tr><td><span class="el_session">BLD-61dea6c2</span></td><td>Mar 22, 2022, 11:32:23 PM</td><td>Mar 22, 2022, 11:32:23 PM</td></tr><tr><td><span class="el_session">BLD-7a2c16b9</span></td><td>Mar 22, 2022, 11:35:29 PM</td><td>Mar 22, 2022, 11:35:29 PM</td></tr><tr><td><span class="el_session">BLD-5d32d470</span></td><td>Mar 22, 2022, 11:44:21 PM</td><td>Mar 22, 2022, 11:44:22 PM</td></tr><tr><td><span class="el_session">BLD-41fe00a9</span></td><td>Mar 22, 2022, 11:44:44 PM</td><td>Mar 22, 2022, 11:44:45 PM</td></tr><tr><td><span class="el_session">BLD-6ce46e8e</span></td><td>Mar 22, 2022, 11:45:00 PM</td><td>Mar 22, 2022, 11:45:00 PM</td></tr><tr><td><span class="el_session">BLD-155148ba</span></td><td>Mar 22, 2022, 11:45:15 PM</td><td>Mar 22, 2022, 11:45:16 PM</td></tr><tr><td><span class="el_session">BLD-cd482c54</span></td><td>Mar 22, 2022, 11:57:09 PM</td><td>Mar 22, 2022, 11:57:09 PM</td></tr><tr><td><span class="el_session">BLD-7a74231a</span></td><td>Mar 23, 2022, 4:16:18 PM</td><td>Mar 23, 2022, 4:16:19 PM</td></tr><tr><td><span class="el_session">BLD-255dc3dc</span></td><td>Mar 23, 2022, 4:24:07 PM</td><td>Mar 23, 2022, 4:24:08 PM</td></tr><tr><td><span class="el_session">BLD-6a0f1015</span></td><td>Mar 23, 2022, 4:37:04 PM</td><td>Mar 23, 2022, 4:37:04 PM</td></tr><tr><td><span class="el_session">BLD-3bb3a318</span></td><td>Mar 23, 2022, 5:09:28 PM</td><td>Mar 23, 2022, 5:09:28 PM</td></tr><tr><td><span class="el_session">BLD-1a184610</span></td><td>Mar 23, 2022, 5:20:43 PM</td><td>Mar 23, 2022, 5:20:43 PM</td></tr><tr><td><span class="el_session">BLD-11464e9a</span></td><td>Mar 23, 2022, 5:22:08 PM</td><td>Mar 23, 2022, 5:22:09 PM</td></tr><tr><td><span class="el_session">BLD-b1a6e671</span></td><td>Mar 23, 2022, 5:22:41 PM</td><td>Mar 23, 2022, 5:22:41 PM</td></tr><tr><td><span class="el_session">BLD-4b587722</span></td><td>Mar 23, 2022, 5:23:41 PM</td><td>Mar 23, 2022, 5:23:41 PM</td></tr><tr><td><span class="el_session">BLD-f5a00201</span></td><td>Mar 23, 2022, 5:25:43 PM</td><td>Mar 23, 2022, 5:25:43 PM</td></tr><tr><td><span class="el_session">BLD-cd93d6fc</span></td><td>Mar 23, 2022, 5:30:35 PM</td><td>Mar 23, 2022, 5:30:35 PM</td></tr><tr><td><span class="el_session">BLD-80486b65</span></td><td>Mar 23, 2022, 5:30:42 PM</td><td>Mar 23, 2022, 5:30:43 PM</td></tr><tr><td><span class="el_session">BLD-aa27378e</span></td><td>Mar 23, 2022, 5:30:49 PM</td><td>Mar 23, 2022, 5:30:49 PM</td></tr><tr><td><span class="el_session">BLD-7f11c4a4</span></td><td>Mar 23, 2022, 5:34:05 PM</td><td>Mar 23, 2022, 5:34:05 PM</td></tr><tr><td><span class="el_session">BLD-252fe5bb</span></td><td>Mar 23, 2022, 5:58:14 PM</td><td>Mar 23, 2022, 5:58:15 PM</td></tr><tr><td><span class="el_session">BLD-a3c67e25</span></td><td>Mar 23, 2022, 6:05:09 PM</td><td>Mar 23, 2022, 6:05:09 PM</td></tr><tr><td><span class="el_session">BLD-ecff14b5</span></td><td>Mar 23, 2022, 6:05:43 PM</td><td>Mar 23, 2022, 6:05:43 PM</td></tr><tr><td><span class="el_session">BLD-66080afa</span></td><td>Mar 23, 2022, 6:17:53 PM</td><td>Mar 23, 2022, 6:17:54 PM</td></tr><tr><td><span class="el_session">BLD-837244bc</span></td><td>Mar 23, 2022, 6:26:17 PM</td><td>Mar 23, 2022, 6:26:18 PM</td></tr><tr><td><span class="el_session">BLD-f4ebceb6</span></td><td>Mar 23, 2022, 7:57:55 PM</td><td>Mar 23, 2022, 7:57:56 PM</td></tr><tr><td><span class="el_session">BLD-475c3214</span></td><td>Mar 23, 2022, 9:59:26 PM</td><td>Mar 23, 2022, 9:59:27 PM</td></tr><tr><td><span class="el_session">BLD-d62db79a</span></td><td>Mar 23, 2022, 10:02:51 PM</td><td>Mar 23, 2022, 10:02:52 PM</td></tr><tr><td><span class="el_session">BLD-de804958</span></td><td>Mar 23, 2022, 10:02:51 PM</td><td>Mar 23, 2022, 10:02:52 PM</td></tr><tr><td><span class="el_session">BLD-3015d818</span></td><td>Mar 23, 2022, 10:03:05 PM</td><td>Mar 23, 2022, 10:03:06 PM</td></tr><tr><td><span class="el_session">BLD-84b52fbf</span></td><td>Mar 23, 2022, 10:06:12 PM</td><td>Mar 23, 2022, 10:06:13 PM</td></tr><tr><td><span class="el_session">BLD-dd3b585d</span></td><td>Mar 23, 2022, 10:15:59 PM</td><td>Mar 23, 2022, 10:16:00 PM</td></tr><tr><td><span class="el_session">BLD-c3f4558b</span></td><td>Mar 23, 2022, 10:16:04 PM</td><td>Mar 23, 2022, 10:16:05 PM</td></tr><tr><td><span class="el_session">BLD-21e4155d</span></td><td>Mar 23, 2022, 10:16:19 PM</td><td>Mar 23, 2022, 10:16:20 PM</td></tr><tr><td><span class="el_session">BLD-a7e8aa1a</span></td><td>Mar 23, 2022, 10:17:26 PM</td><td>Mar 23, 2022, 10:17:26 PM</td></tr><tr><td><span class="el_session">BLD-d5586b6d</span></td><td>Mar 23, 2022, 10:31:23 PM</td><td>Mar 23, 2022, 10:31:23 PM</td></tr><tr><td><span class="el_session">BLD-8675d884</span></td><td>Mar 23, 2022, 10:37:11 PM</td><td>Mar 23, 2022, 10:37:11 PM</td></tr><tr><td><span class="el_session">BLD-9a1e6bc</span></td><td>Mar 23, 2022, 10:38:32 PM</td><td>Mar 23, 2022, 10:38:32 PM</td></tr><tr><td><span class="el_session">BLD-4b70fac8</span></td><td>Mar 23, 2022, 10:59:13 PM</td><td>Mar 23, 2022, 10:59:13 PM</td></tr><tr><td><span class="el_session">BLD-d9fd4f96</span></td><td>Mar 24, 2022, 1:02:01 AM</td><td>Mar 24, 2022, 1:02:02 AM</td></tr></tbody></table><p>Execution data for the following classes is considered in this report:</p><table class="coverage" cellspacing="0"><thead><tr><td>Class</td><td>Id</td></tr></thead><tbody><tr><td><span class="el_class">javax.script.ScriptEngineManager</span></td><td><code>cfba6fa511e45893</code></td></tr><tr><td><span class="el_class">javax.script.ScriptEngineManager.1</span></td><td><code>4213e2cd4b902651</code></td></tr><tr><td><span class="el_class">javax.script.SimpleBindings</span></td><td><code>890d1d7b85b0079e</code></td></tr><tr><td><a href="linalg/Matrix.html" class="el_class">linalg.Matrix</a></td><td><code>5927619f7fd7992f</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>667058e680b2f652</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>e3f43eac40e71d03</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>0f7a92476c4b6875</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>00b8d5a70cad62e5</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>3afaba76d8b7e79a</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>cdbd098f2f60b471</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>d64dde15d3116a6c</code></td></tr><tr><td><a href="linalg/MatrixProperties.html" class="el_class">linalg.MatrixProperties</a></td><td><code>f8468dbb2948351f</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>940009cc5570b904</code></td></tr><tr><td><a href="linalg/PrintOptions.html" class="el_class">linalg.PrintOptions</a></td><td><code>87d4b57eebd861ea</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>636bfcd68857fbe0</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>dcd0ca675fd9eb8f</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>14f9a28efbe96ee9</code></td></tr><tr><td><a href="linalg.complex_number/CNumber.html" class="el_class">linalg.complex_number.CNumber</a></td><td><code>319e7e840503e797</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>cf2e2350c5b6a9d3</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c3aaa749ff55a981</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>11adaf541eec3222</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>552479f8a0848667</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a5c3049d60beefbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8cf74707bcf3597a</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>76638ca8ea700e75</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>35c6023225290204</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>d84a0b40f81e49ce</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>9dd2ed04d8db5d08</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c214f1f35630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8572d9652414f11e</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c299df505630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>2b5017d334fdd733</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>eb792b51a9e2ccb8</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>77eca11bc8859ffb</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>5adf6b227cd150a2</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a54c0a104c71dcbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>1db964b78a884e22</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>63df2e41a62baa1b</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>90d3bed4db0e78cf</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>59c436c645fb1f27</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>24746b3e26f41451</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>b438baf14d3de40f</code></td></tr><tr><td><span class="el_class">linalg.util.Lexer</span></td><td><code>4653487ac8971dba</code></td></tr><tr><td><a href="linalg.util/Lexer.html" class="el_class">linalg.util.Lexer</a></td><td><code>e409ebfa2a659ebb</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>a89da6d783c46fc7</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>8ba7f2c59cc0deca</code></td></tr><tr><td><a href="linalg.util/LinAlgArrayUtils.html" class="el_class">linalg.util.LinAlgArrayUtils</a></td><td><code>7b7f3e2843bb4d00</code></td></tr><tr><td><a href="linalg.util/NumberLexer.html" class="el_class">linalg.util.NumberLexer</a></td><td><code>fd3785bd9c8bdf19</code></td></tr><tr><td><span class="el_class">linalg.util.NumberLexer</span></td><td><code>b2af6f818100434a</code></td></tr><tr><td><a href="linalg.util/Parser.html" class="el_class">linalg.util.Parser</a></td><td><code>c8f69ece7e388640</code></td></tr><tr><td><a href="linalg.util/StringUtils.html" class="el_class">linalg.util.StringUtils</a></td><td><code>925d5f087ae2f647</code></td></tr><tr><td><a href="linalg.util/Token.html" class="el_class">linalg.util.Token</a></td><td><code>f4b4f2408890702c</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>dcf02146e3250669</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>ac7c2a5240d8912f</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BaseProviderFactory</span></td><td><code>5bdb25554fb3d5df</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BiProperty</span></td><td><code>9a2074ae999b3c8a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Command</span></td><td><code>f31ca5085797c808</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.DumpErrorSingleton</span></td><td><code>e3f1c75f159a9ac5</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkedProcessEventType</span></td><td><code>dc56c5dba14b9d58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingReporterFactory</span></td><td><code>bcadcd63978e8dcf</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingRunListener</span></td><td><code>08c963875a23e517</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.MasterProcessCommand</span></td><td><code>90562129b4defd58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Shutdown</span></td><td><code>fab38023c4f1ded4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.cli.CommandLineOption</span></td><td><code>4401c2efb3702254</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.provider.AbstractProvider</span></td><td><code>cf68f167cf236f7b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture</span></td><td><code>b8719a08fbb63e05</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.ForwardingPrintStream</span></td><td><code>7c2392ea44674f2d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.NullOutputStream</span></td><td><code>f7132188596462e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.LegacyPojoStackTraceWriter</span></td><td><code>1aa62cd28375d6e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ReporterConfiguration</span></td><td><code>39591ad2c5816a79</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.RunMode</span></td><td><code>f02e60476bce4d8d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SafeThrowable</span></td><td><code>32b5c60e4604ceb7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SimpleReportEntry</span></td><td><code>e252cb5986c391cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.suite.RunResult</span></td><td><code>8d97f6894fd90ced</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.DirectoryScannerParameters</span></td><td><code>c53ea59aeaf0b80a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.IncludedExcludedPatterns</span></td><td><code>43b8f8de9b3a1945</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest</span></td><td><code>7e73a65f1017294e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.ClassMatcher</span></td><td><code>0f9c29dc1562afeb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.MethodMatcher</span></td><td><code>fccae89ce7b4ee31</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.Type</span></td><td><code>bf93fc9765a2bd72</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.RunOrderParameters</span></td><td><code>cb70af248c260139</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestArtifactInfo</span></td><td><code>c68e923f629df613</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestListResolver</span></td><td><code>3dc896f10c8df96c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestRequest</span></td><td><code>976405c051909d71</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.CloseableIterator</span></td><td><code>f2c0acf940ec6fbe</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultRunOrderCalculator</span></td><td><code>1f50ae9e4b9717cd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultScanResult</span></td><td><code>46fdc84739146387</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.ReflectionUtils</span></td><td><code>6079e135f863f220</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.RunOrder</span></td><td><code>0ea36dbbf05327aa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun</span></td><td><code>cc3376426ef9c01c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun.ClassesIterator</span></td><td><code>cd6601db7bc899db</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleReadableChannel</span></td><td><code>6abb59e4c94390af</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleWritableChannel</span></td><td><code>989f9bf3c66ab7be</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels</span></td><td><code>95e459b596e3b873</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.3</span></td><td><code>9770f03bd51e14f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.4</span></td><td><code>a0e3eaa91d355cc2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory</span></td><td><code>a56bf84543725f3a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory.NamedThreadFactory</span></td><td><code>cfeefeb0265a8a13</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DumpFileUtils</span></td><td><code>9a7dbfdf3c2027c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap</span></td><td><code>ee11b540cdd4034e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap.Node</span></td><td><code>984f6258c6d6ac9c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ObjectUtils</span></td><td><code>8c788ffcde97fbb4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.StringUtils</span></td><td><code>f5ecc67792b101a3</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.AbstractPathConfiguration</span></td><td><code>4839ca4be6e46906</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.BooterDeserializer</span></td><td><code>02dc12ed0aec9547</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClassLoaderConfiguration</span></td><td><code>462fdbd63f8ea8c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.Classpath</span></td><td><code>5c18bd381e88bcc8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClasspathConfiguration</span></td><td><code>4c9fc97c565be4cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader</span></td><td><code>c29c2eca0cd24bfc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.1</span></td><td><code>727226d97ed192cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.CommandRunnable</span></td><td><code>41ac58e8d85ca2bd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter</span></td><td><code>708bf5b29b088537</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.1</span></td><td><code>7d062229af4458f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.3</span></td><td><code>093e1d6ec83caf1c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.4</span></td><td><code>88f2f3e42230f38d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.6</span></td><td><code>a150022bee6cbd41</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.7</span></td><td><code>7d0ab78a1157bb24</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.8</span></td><td><code>01800b3929973273</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.PingScheduler</span></td><td><code>fb97687ca93ecbd1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PpidChecker</span></td><td><code>cc99aab0e566c991</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProcessCheckerType</span></td><td><code>5e6688e4a6a909e6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PropertiesWrapper</span></td><td><code>f63d2b2f2fd9087a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProviderConfiguration</span></td><td><code>146800cea9c5f6cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.StartupConfiguration</span></td><td><code>1cb50557cb9ebb0b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.SystemPropertyManager</span></td><td><code>3a0459e270104889</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.TypeEncodedValue</span></td><td><code>25e613e357b4f737</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder</span></td><td><code>477264b3887a3b8b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder.FrameCompletion</span></td><td><code>00319e897e4dfd77</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelEncoder</span></td><td><code>d52ce258d8e88d04</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory</span></td><td><code>3e8e80dcadf11ad6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory</span></td><td><code>6bb9533ad5c08a49</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.JUnitPlatformProvider</span></td><td><code>847b42ef97f97d2b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter</span></td><td><code>d23fd29ada1102cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter.1</span></td><td><code>55724259eef83afa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.TestPlanScannerFilter</span></td><td><code>a3ae2542fd30e874</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.report.PojoStackTraceWriter</span></td><td><code>693eee167813eb7d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.Base64</span></td><td><code>cd6927ec7cf0569e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec</span></td><td><code>c8dd8163b58acfc1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec.Context</span></td><td><code>84b370e464e7008c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.JavaVersion</span></td><td><code>590095a767529b48</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.StringUtils</span></td><td><code>ae3c2c379ffab6fd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.SystemUtils</span></td><td><code>e4faf882077bc6c0</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.math.NumberUtils</span></td><td><code>505629194db735ed</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.StringUtils</span></td><td><code>5ba1288622b5e22e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.cli.ShutdownHookUtils</span></td><td><code>b7b46c5c1f482bd4</code></td></tr><tr><td><span class="el_class">org.apiguardian.api.API.Status</span></td><td><code>0341e8d99fc36573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertArrayEquals</span></td><td><code>9f4f742684c38546</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertEquals</span></td><td><code>196f9a5d80a1b0b4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertionUtils</span></td><td><code>54f95f15cc856931</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.Assertions</span></td><td><code>6e029941b09226e8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.TestInstance.Lifecycle</span></td><td><code>1f8fa67947feae07</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ConditionEvaluationResult</span></td><td><code>2f9dc9ea54b57975</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ExtensionContext</span></td><td><code>3a50244b0f646355</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.JupiterTestEngine</span></td><td><code>91ce387d63124b0b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.AbstractExtensionContext</span></td><td><code>e85864ea28ce4900</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassExtensionContext</span></td><td><code>0edd8a16a5a0f423</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassTestDescriptor</span></td><td><code>871339326cdec08d</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils</span></td><td><code>c0d4b22308952386</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsNonStaticExtensionField</span></td><td><code>5ca7136962622da7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsStaticExtensionField</span></td><td><code>da084ed9633b1c35</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor</span></td><td><code>2004d10245ed7c14</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineExtensionContext</span></td><td><code>5bcfdadb7f42ddc0</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterTestDescriptor</span></td><td><code>45d6f6cb92bcef66</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.LifecycleMethodUtils</span></td><td><code>8fd6cd271b5fe7b7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodBasedTestDescriptor</span></td><td><code>7fbbb277bd63085e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodExtensionContext</span></td><td><code>043325a115f0f7bf</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestInstanceLifecycleUtils</span></td><td><code>5a6dea961f455d41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor</span></td><td><code>ca5344ff78b9ac3c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.AbstractMethodResolver</span></td><td><code>f474a5f7b9196c63</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoveryFilterApplier</span></td><td><code>e52beeff7f999c17</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoverySelectorResolver</span></td><td><code>09a38603c216d18c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.JavaElementsResolver</span></td><td><code>b033bb5913e5b39e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.MethodFinder</span></td><td><code>5ea468d2eb528361</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.NestedTestsResolver</span></td><td><code>9d92451ae793af41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestContainerResolver</span></td><td><code>452b660f7a80187f</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestFactoryMethodResolver</span></td><td><code>59fd27320e375440</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestMethodResolver</span></td><td><code>812706355dbf565c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestTemplateMethodResolver</span></td><td><code>47563eb55cd35171</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsInnerClass</span></td><td><code>f7d9846d00228720</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsNestedTestClass</span></td><td><code>e47ff7cd33073803</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsPotentialTestContainer</span></td><td><code>bf17d6180e3bfcd4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestClassWithTests</span></td><td><code>94179bc44f8c4ff7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestFactoryMethod</span></td><td><code>a2c68978bd6bfbc6</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestMethod</span></td><td><code>8b244977e441886e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestTemplateMethod</span></td><td><code>0baf1066bf0cbad7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestableMethod</span></td><td><code>59a0b58a40803fe2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ConditionEvaluator</span></td><td><code>cf027eab03077ec8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExecutableInvoker</span></td><td><code>3dcb283c9aa60206</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExtensionValuesStore</span></td><td><code>6da645cbae2256c5</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext</span></td><td><code>2fa1acfc81a9e564</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.Builder</span></td><td><code>8afc8bcaa04b5a1e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State</span></td><td><code>98926feeb7289b09</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ThrowableCollector</span></td><td><code>32288e69ddefa8fb</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.DisabledCondition</span></td><td><code>23223b45668b6ef2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ExtensionRegistry</span></td><td><code>6de7dc4a18ac97dc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.RepeatedTestExtension</span></td><td><code>1b7914cc8cf83732</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition</span></td><td><code>72f1d00f1b0a51e3</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition.Evaluator</span></td><td><code>36e29b1b3214594b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionEvaluator</span></td><td><code>c2e888183731e173</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestInfoParameterResolver</span></td><td><code>1b5b370a56807cae</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestReporterParameterResolver</span></td><td><code>60beaf7c80fe99cc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.EnvironmentVariableAccessor</span></td><td><code>c0c905d5fe8998ca</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.SystemPropertyAccessor</span></td><td><code>18fe4dab72ac1573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptExecutionManager</span></td><td><code>1f06dfe26cdafe2c</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory</span></td><td><code>657201953ff2c697</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory.DelegatingLogger</span></td><td><code>0e5317bba55fc49d</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils</span></td><td><code>a1ef6e0681f70a1e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils.AnnotationCacheKey</span></td><td><code>a2872bf2a614d925</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.BlacklistedExceptions</span></td><td><code>73365157bacc50af</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassFilter</span></td><td><code>093a789d01159576</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassLoaderUtils</span></td><td><code>fcbbcbe2d963c55b</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassUtils</span></td><td><code>4f8139a452003bd6</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClasspathScanner</span></td><td><code>c0a3b9155dc07154</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.CollectionUtils</span></td><td><code>ad417bb7390cff66</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ExceptionUtils</span></td><td><code>1dc9dedfab661762</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.Preconditions</span></td><td><code>3b76bcacee9114c0</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils</span></td><td><code>1dca291d849b53b2</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode</span></td><td><code>b267f8ac562d551e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.StringUtils</span></td><td><code>9596041173fac5b0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter</span></td><td><code>ec8dc82249eeb7a9</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter.1</span></td><td><code>70825b5141694d2a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.ExecutionRequest</span></td><td><code>ed3835cc21e5a048</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.Filter</span></td><td><code>f932423ccd3b54bf</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.FilterResult</span></td><td><code>cdaa92f4f6f79059</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor</span></td><td><code>a81a3e15d23f5898</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor.Type</span></td><td><code>eb97fc5a29f3ee3a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult</span></td><td><code>abbab174d32db912</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult.Status</span></td><td><code>da0473a55d05e891</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId</span></td><td><code>64973686b4e2c690</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId.Segment</span></td><td><code>1872a6198babd9f0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueIdFormat</span></td><td><code>1470555fac6c7a2b</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.ClassSelector</span></td><td><code>228aa96d72021db2</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.DiscoverySelectors</span></td><td><code>c61e9bcc0c5d43d7</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.AbstractTestDescriptor</span></td><td><code>2bfbf25c43491443</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.ClassSource</span></td><td><code>deebd86abf2ac9e8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.EngineDescriptor</span></td><td><code>b7dbf6dfb794516c</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.MethodSource</span></td><td><code>e22f7f8c4f01d2d8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.filter.ClasspathScanningSupport</span></td><td><code>045afdae065e9ce0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.ExecutionTracker</span></td><td><code>cbd37bfd76595d62</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine</span></td><td><code>410766a2a07e44b1</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor</span></td><td><code>43b3a991558bcb42</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.1</span></td><td><code>59988b34a20c03de</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.NodeExecutor</span></td><td><code>d5df9a54f301545d</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node</span></td><td><code>1e2e35414f9ebddd</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node.SkipResult</span></td><td><code>a8b0f84ec81d03c3</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.SingleTestExecutor</span></td><td><code>eb68067e61cad23e</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestIdentifier</span></td><td><code>225bb434f8f223e2</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestPlan</span></td><td><code>9a2b71b572924cbc</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultDiscoveryRequest</span></td><td><code>7dda3ad9a0e6a666</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultLauncher</span></td><td><code>1a1f88af87dc6ec1</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ExecutionListenerAdapter</span></td><td><code>52cf3c3c69d4dfba</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherConfigurationParameters</span></td><td><code>ef55cacb5e47a902</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder</span></td><td><code>e78a71b91c159e69</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherFactory</span></td><td><code>e2bd67b8a72737b5</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.Root</span></td><td><code>32394ca895f9fb9a</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry</span></td><td><code>7c054c4cf76cb0f6</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestExecutionListenerRegistry</span></td><td><code>2299bac1075a6bf3</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry</span></td><td><code>190f4fb2b0ab865d</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry.CompositeTestExecutionListener</span></td><td><code>7538d2d860e1f9cb</code></td></tr><tr><td><span class="el_class">org.opentest4j.AssertionFailedError</span></td><td><code>2c5f69ceb24e9128</code></td></tr><tr><td><span class="el_class">sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo</span></td><td><code>888d0e6a76acb845</code></td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Sessions</title></head><body><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><a href="index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_session">Sessions</span></div><h1>Sessions</h1><p>This coverage report is based on execution data from the following sessions:</p><table class="coverage" cellspacing="0"><thead><tr><td>Session</td><td>Start Time</td><td>Dump Time</td></tr></thead><tbody><tr><td><span class="el_session">DESKTOP-3F0SSFQ-fe00496a</span></td><td>Sep 27, 2021, 5:29:56 PM</td><td>Sep 27, 2021, 5:29:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9cdf880c</span></td><td>Sep 27, 2021, 5:57:07 PM</td><td>Sep 27, 2021, 5:57:08 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-33e4a7ad</span></td><td>Sep 27, 2021, 6:10:24 PM</td><td>Sep 27, 2021, 6:10:26 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d759012b</span></td><td>Sep 27, 2021, 6:11:38 PM</td><td>Sep 27, 2021, 6:11:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-653be16e</span></td><td>Sep 27, 2021, 6:23:10 PM</td><td>Sep 27, 2021, 6:23:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e4543b44</span></td><td>Sep 27, 2021, 6:23:36 PM</td><td>Sep 27, 2021, 6:23:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4d4af810</span></td><td>Sep 27, 2021, 6:23:55 PM</td><td>Sep 27, 2021, 6:23:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-ca0ff9dc</span></td><td>Sep 27, 2021, 6:32:57 PM</td><td>Sep 27, 2021, 6:32:59 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-2b03aa12</span></td><td>Sep 27, 2021, 6:33:17 PM</td><td>Sep 27, 2021, 6:33:18 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-92377961</span></td><td>Sep 27, 2021, 6:41:53 PM</td><td>Sep 27, 2021, 6:41:55 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f67dcf9d</span></td><td>Sep 27, 2021, 7:07:03 PM</td><td>Sep 27, 2021, 7:07:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3deffdcc</span></td><td>Sep 27, 2021, 7:07:05 PM</td><td>Sep 27, 2021, 7:07:07 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8370ba74</span></td><td>Sep 27, 2021, 7:07:14 PM</td><td>Sep 27, 2021, 7:07:16 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e80853d4</span></td><td>Sep 27, 2021, 7:07:20 PM</td><td>Sep 27, 2021, 7:07:22 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9ee31791</span></td><td>Sep 27, 2021, 7:07:33 PM</td><td>Sep 27, 2021, 7:07:34 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-58a45499</span></td><td>Sep 27, 2021, 7:14:03 PM</td><td>Sep 27, 2021, 7:14:05 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-6b36a7ae</span></td><td>Sep 27, 2021, 7:15:10 PM</td><td>Sep 27, 2021, 7:15:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cd238e7f</span></td><td>Sep 27, 2021, 7:23:32 PM</td><td>Sep 27, 2021, 7:23:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-32a355ac</span></td><td>Sep 27, 2021, 7:23:46 PM</td><td>Sep 27, 2021, 7:23:47 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cf2ae673</span></td><td>Sep 27, 2021, 7:24:23 PM</td><td>Sep 27, 2021, 7:24:25 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-d8ae4a1d</span></td><td>Sep 27, 2021, 7:24:44 PM</td><td>Sep 27, 2021, 7:24:45 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-590642cc</span></td><td>Sep 27, 2021, 7:29:32 PM</td><td>Sep 27, 2021, 7:29:33 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c18502e8</span></td><td>Sep 27, 2021, 7:36:10 PM</td><td>Sep 27, 2021, 7:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-bb68ec51</span></td><td>Sep 27, 2021, 7:36:48 PM</td><td>Sep 27, 2021, 7:36:49 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-dc7eaf97</span></td><td>Sep 27, 2021, 7:53:34 PM</td><td>Sep 27, 2021, 7:53:35 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-4fd69810</span></td><td>Sep 27, 2021, 7:54:01 PM</td><td>Sep 27, 2021, 7:54:02 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-96825214</span></td><td>Sep 27, 2021, 7:58:58 PM</td><td>Sep 27, 2021, 7:59:00 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-89a0fc42</span></td><td>Sep 27, 2021, 7:59:36 PM</td><td>Sep 27, 2021, 7:59:37 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cab82cf0</span></td><td>Sep 27, 2021, 8:00:02 PM</td><td>Sep 27, 2021, 8:00:03 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-c139591e</span></td><td>Sep 27, 2021, 8:34:30 PM</td><td>Sep 27, 2021, 8:34:30 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-82b8fd28</span></td><td>Sep 27, 2021, 8:35:38 PM</td><td>Sep 27, 2021, 8:35:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3bdff75d</span></td><td>Sep 27, 2021, 8:36:10 PM</td><td>Sep 27, 2021, 8:36:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-cdb98687</span></td><td>Sep 27, 2021, 8:39:11 PM</td><td>Sep 27, 2021, 8:39:11 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-e6b68394</span></td><td>Sep 27, 2021, 8:40:13 PM</td><td>Sep 27, 2021, 8:40:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-9c517ae6</span></td><td>Sep 27, 2021, 8:40:22 PM</td><td>Sep 27, 2021, 8:40:23 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-7849bf85</span></td><td>Sep 27, 2021, 11:07:11 PM</td><td>Sep 27, 2021, 11:07:12 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-8af91b33</span></td><td>Oct 15, 2021, 5:52:56 PM</td><td>Oct 15, 2021, 5:52:57 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-3c496517</span></td><td>Oct 15, 2021, 5:53:13 PM</td><td>Oct 15, 2021, 5:53:14 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-a1df1e07</span></td><td>Oct 15, 2021, 5:53:39 PM</td><td>Oct 15, 2021, 5:53:39 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-aff8a924</span></td><td>Oct 15, 2021, 5:53:57 PM</td><td>Oct 15, 2021, 5:53:58 PM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-f94da3ae</span></td><td>Oct 15, 2021, 6:03:05 PM</td><td>Oct 15, 2021, 6:03:06 PM</td></tr><tr><td><span class="el_session">Jacobs-MacBook-Pro.local-f3f79794</span></td><td>Oct 21, 2021, 11:15:55 AM</td><td>Oct 21, 2021, 11:16:04 AM</td></tr><tr><td><span class="el_session">DESKTOP-3F0SSFQ-1c4bcb6b</span></td><td>Jan 28, 2022, 8:38:18 PM</td><td>Jan 28, 2022, 8:38:19 PM</td></tr><tr><td><span class="el_session">BLD-e50ef23e</span></td><td>Mar 24, 2022, 1:07:53 AM</td><td>Mar 24, 2022, 1:07:53 AM</td></tr><tr><td><span class="el_session">BLD-74c6d6ca</span></td><td>Mar 24, 2022, 1:08:21 AM</td><td>Mar 24, 2022, 1:08:21 AM</td></tr><tr><td><span class="el_session">BLD-822e0130</span></td><td>Mar 24, 2022, 1:18:35 AM</td><td>Mar 24, 2022, 1:18:36 AM</td></tr></tbody></table><p>Execution data for the following classes is considered in this report:</p><table class="coverage" cellspacing="0"><thead><tr><td>Class</td><td>Id</td></tr></thead><tbody><tr><td><span class="el_class">javax.script.ScriptEngineManager</span></td><td><code>cfba6fa511e45893</code></td></tr><tr><td><span class="el_class">javax.script.ScriptEngineManager.1</span></td><td><code>4213e2cd4b902651</code></td></tr><tr><td><span class="el_class">javax.script.SimpleBindings</span></td><td><code>890d1d7b85b0079e</code></td></tr><tr><td><a href="linalg/Matrix.html" class="el_class">linalg.Matrix</a></td><td><code>5927619f7fd7992f</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>667058e680b2f652</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>00b8d5a70cad62e5</code></td></tr><tr><td><span class="el_class">linalg.Matrix</span></td><td><code>3afaba76d8b7e79a</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>cdbd098f2f60b471</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>d64dde15d3116a6c</code></td></tr><tr><td><a href="linalg/MatrixProperties.html" class="el_class">linalg.MatrixProperties</a></td><td><code>f8468dbb2948351f</code></td></tr><tr><td><span class="el_class">linalg.MatrixProperties</span></td><td><code>940009cc5570b904</code></td></tr><tr><td><a href="linalg/PrintOptions.html" class="el_class">linalg.PrintOptions</a></td><td><code>87d4b57eebd861ea</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>636bfcd68857fbe0</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>dcd0ca675fd9eb8f</code></td></tr><tr><td><span class="el_class">linalg.complex_number.CNumber</span></td><td><code>14f9a28efbe96ee9</code></td></tr><tr><td><a href="linalg.complex_number/CNumber.html" class="el_class">linalg.complex_number.CNumber</a></td><td><code>319e7e840503e797</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>cf2e2350c5b6a9d3</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c3aaa749ff55a981</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>11adaf541eec3222</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>552479f8a0848667</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a5c3049d60beefbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8cf74707bcf3597a</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>76638ca8ea700e75</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>35c6023225290204</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>d84a0b40f81e49ce</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>9dd2ed04d8db5d08</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c214f1f35630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>8572d9652414f11e</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>c299df505630fac0</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>2b5017d334fdd733</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>eb792b51a9e2ccb8</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>77eca11bc8859ffb</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>5adf6b227cd150a2</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>a54c0a104c71dcbe</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>1db964b78a884e22</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>63df2e41a62baa1b</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>90d3bed4db0e78cf</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>59c436c645fb1f27</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>24746b3e26f41451</code></td></tr><tr><td><span class="el_class">linalg.matrix.MatrixConstructorTest</span></td><td><code>b438baf14d3de40f</code></td></tr><tr><td><span class="el_class">linalg.util.Lexer</span></td><td><code>4653487ac8971dba</code></td></tr><tr><td><a href="linalg.util/Lexer.html" class="el_class">linalg.util.Lexer</a></td><td><code>e409ebfa2a659ebb</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>a89da6d783c46fc7</code></td></tr><tr><td><span class="el_class">linalg.util.LinAlgArrayUtils</span></td><td><code>8ba7f2c59cc0deca</code></td></tr><tr><td><a href="linalg.util/LinAlgArrayUtils.html" class="el_class">linalg.util.LinAlgArrayUtils</a></td><td><code>7b7f3e2843bb4d00</code></td></tr><tr><td><a href="linalg.util/NumberLexer.html" class="el_class">linalg.util.NumberLexer</a></td><td><code>fd3785bd9c8bdf19</code></td></tr><tr><td><span class="el_class">linalg.util.NumberLexer</span></td><td><code>b2af6f818100434a</code></td></tr><tr><td><a href="linalg.util/Parser.html" class="el_class">linalg.util.Parser</a></td><td><code>c8f69ece7e388640</code></td></tr><tr><td><a href="linalg.util/StringUtils.html" class="el_class">linalg.util.StringUtils</a></td><td><code>925d5f087ae2f647</code></td></tr><tr><td><a href="linalg.util/Token.html" class="el_class">linalg.util.Token</a></td><td><code>f4b4f2408890702c</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>dcf02146e3250669</code></td></tr><tr><td><span class="el_class">linalg.util.Token</span></td><td><code>ac7c2a5240d8912f</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BaseProviderFactory</span></td><td><code>5bdb25554fb3d5df</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.BiProperty</span></td><td><code>9a2074ae999b3c8a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Command</span></td><td><code>f31ca5085797c808</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.DumpErrorSingleton</span></td><td><code>e3f1c75f159a9ac5</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkedProcessEventType</span></td><td><code>dc56c5dba14b9d58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingReporterFactory</span></td><td><code>bcadcd63978e8dcf</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.ForkingRunListener</span></td><td><code>08c963875a23e517</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.MasterProcessCommand</span></td><td><code>90562129b4defd58</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.booter.Shutdown</span></td><td><code>fab38023c4f1ded4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.cli.CommandLineOption</span></td><td><code>4401c2efb3702254</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.provider.AbstractProvider</span></td><td><code>cf68f167cf236f7b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture</span></td><td><code>b8719a08fbb63e05</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.ForwardingPrintStream</span></td><td><code>7c2392ea44674f2d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ConsoleOutputCapture.NullOutputStream</span></td><td><code>f7132188596462e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.LegacyPojoStackTraceWriter</span></td><td><code>1aa62cd28375d6e2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.ReporterConfiguration</span></td><td><code>39591ad2c5816a79</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.RunMode</span></td><td><code>f02e60476bce4d8d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SafeThrowable</span></td><td><code>32b5c60e4604ceb7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.report.SimpleReportEntry</span></td><td><code>e252cb5986c391cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.suite.RunResult</span></td><td><code>8d97f6894fd90ced</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.DirectoryScannerParameters</span></td><td><code>c53ea59aeaf0b80a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.IncludedExcludedPatterns</span></td><td><code>43b8f8de9b3a1945</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest</span></td><td><code>7e73a65f1017294e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.ClassMatcher</span></td><td><code>0f9c29dc1562afeb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.MethodMatcher</span></td><td><code>fccae89ce7b4ee31</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.ResolvedTest.Type</span></td><td><code>bf93fc9765a2bd72</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.RunOrderParameters</span></td><td><code>cb70af248c260139</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestArtifactInfo</span></td><td><code>c68e923f629df613</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestListResolver</span></td><td><code>3dc896f10c8df96c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.testset.TestRequest</span></td><td><code>976405c051909d71</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.CloseableIterator</span></td><td><code>f2c0acf940ec6fbe</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultRunOrderCalculator</span></td><td><code>1f50ae9e4b9717cd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.DefaultScanResult</span></td><td><code>46fdc84739146387</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.ReflectionUtils</span></td><td><code>6079e135f863f220</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.RunOrder</span></td><td><code>0ea36dbbf05327aa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun</span></td><td><code>cc3376426ef9c01c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.TestsToRun.ClassesIterator</span></td><td><code>cd6601db7bc899db</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleReadableChannel</span></td><td><code>6abb59e4c94390af</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.AbstractNoninterruptibleWritableChannel</span></td><td><code>989f9bf3c66ab7be</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels</span></td><td><code>95e459b596e3b873</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.3</span></td><td><code>9770f03bd51e14f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.Channels.4</span></td><td><code>a0e3eaa91d355cc2</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory</span></td><td><code>a56bf84543725f3a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DaemonThreadFactory.NamedThreadFactory</span></td><td><code>cfeefeb0265a8a13</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.DumpFileUtils</span></td><td><code>9a7dbfdf3c2027c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap</span></td><td><code>ee11b540cdd4034e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ImmutableMap.Node</span></td><td><code>984f6258c6d6ac9c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.ObjectUtils</span></td><td><code>8c788ffcde97fbb4</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.api.util.internal.StringUtils</span></td><td><code>f5ecc67792b101a3</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.AbstractPathConfiguration</span></td><td><code>4839ca4be6e46906</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.BooterDeserializer</span></td><td><code>02dc12ed0aec9547</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClassLoaderConfiguration</span></td><td><code>462fdbd63f8ea8c8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.Classpath</span></td><td><code>5c18bd381e88bcc8</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ClasspathConfiguration</span></td><td><code>4c9fc97c565be4cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader</span></td><td><code>c29c2eca0cd24bfc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.1</span></td><td><code>727226d97ed192cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.CommandReader.CommandRunnable</span></td><td><code>41ac58e8d85ca2bd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter</span></td><td><code>708bf5b29b088537</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.1</span></td><td><code>7d062229af4458f7</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.3</span></td><td><code>093e1d6ec83caf1c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.4</span></td><td><code>88f2f3e42230f38d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.6</span></td><td><code>a150022bee6cbd41</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.7</span></td><td><code>7d0ab78a1157bb24</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.8</span></td><td><code>01800b3929973273</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ForkedBooter.PingScheduler</span></td><td><code>fb97687ca93ecbd1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PpidChecker</span></td><td><code>cc99aab0e566c991</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProcessCheckerType</span></td><td><code>5e6688e4a6a909e6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.PropertiesWrapper</span></td><td><code>f63d2b2f2fd9087a</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.ProviderConfiguration</span></td><td><code>146800cea9c5f6cc</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.StartupConfiguration</span></td><td><code>1cb50557cb9ebb0b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.SystemPropertyManager</span></td><td><code>3a0459e270104889</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.TypeEncodedValue</span></td><td><code>25e613e357b4f737</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder</span></td><td><code>477264b3887a3b8b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelDecoder.FrameCompletion</span></td><td><code>00319e897e4dfd77</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelEncoder</span></td><td><code>d52ce258d8e88d04</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory</span></td><td><code>3e8e80dcadf11ad6</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory</span></td><td><code>6bb9533ad5c08a49</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.JUnitPlatformProvider</span></td><td><code>847b42ef97f97d2b</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter</span></td><td><code>d23fd29ada1102cb</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.RunListenerAdapter.1</span></td><td><code>55724259eef83afa</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.junitplatform.TestPlanScannerFilter</span></td><td><code>a3ae2542fd30e874</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.report.PojoStackTraceWriter</span></td><td><code>693eee167813eb7d</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.Base64</span></td><td><code>cd6927ec7cf0569e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec</span></td><td><code>c8dd8163b58acfc1</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.codec.binary.BaseNCodec.Context</span></td><td><code>84b370e464e7008c</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.JavaVersion</span></td><td><code>590095a767529b48</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.StringUtils</span></td><td><code>ae3c2c379ffab6fd</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.SystemUtils</span></td><td><code>e4faf882077bc6c0</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.lang3.math.NumberUtils</span></td><td><code>505629194db735ed</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.StringUtils</span></td><td><code>5ba1288622b5e22e</code></td></tr><tr><td><span class="el_class">org.apache.maven.surefire.shared.utils.cli.ShutdownHookUtils</span></td><td><code>b7b46c5c1f482bd4</code></td></tr><tr><td><span class="el_class">org.apiguardian.api.API.Status</span></td><td><code>0341e8d99fc36573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertArrayEquals</span></td><td><code>9f4f742684c38546</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertEquals</span></td><td><code>196f9a5d80a1b0b4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.AssertionUtils</span></td><td><code>54f95f15cc856931</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.Assertions</span></td><td><code>6e029941b09226e8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.TestInstance.Lifecycle</span></td><td><code>1f8fa67947feae07</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ConditionEvaluationResult</span></td><td><code>2f9dc9ea54b57975</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.api.extension.ExtensionContext</span></td><td><code>3a50244b0f646355</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.JupiterTestEngine</span></td><td><code>91ce387d63124b0b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.AbstractExtensionContext</span></td><td><code>e85864ea28ce4900</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassExtensionContext</span></td><td><code>0edd8a16a5a0f423</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ClassTestDescriptor</span></td><td><code>871339326cdec08d</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils</span></td><td><code>c0d4b22308952386</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsNonStaticExtensionField</span></td><td><code>5ca7136962622da7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.ExtensionUtils.IsStaticExtensionField</span></td><td><code>da084ed9633b1c35</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor</span></td><td><code>2004d10245ed7c14</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterEngineExtensionContext</span></td><td><code>5bcfdadb7f42ddc0</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.JupiterTestDescriptor</span></td><td><code>45d6f6cb92bcef66</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.LifecycleMethodUtils</span></td><td><code>8fd6cd271b5fe7b7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodBasedTestDescriptor</span></td><td><code>7fbbb277bd63085e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.MethodExtensionContext</span></td><td><code>043325a115f0f7bf</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestInstanceLifecycleUtils</span></td><td><code>5a6dea961f455d41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor</span></td><td><code>ca5344ff78b9ac3c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.AbstractMethodResolver</span></td><td><code>f474a5f7b9196c63</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoveryFilterApplier</span></td><td><code>e52beeff7f999c17</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.DiscoverySelectorResolver</span></td><td><code>09a38603c216d18c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.JavaElementsResolver</span></td><td><code>b033bb5913e5b39e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.MethodFinder</span></td><td><code>5ea468d2eb528361</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.NestedTestsResolver</span></td><td><code>9d92451ae793af41</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestContainerResolver</span></td><td><code>452b660f7a80187f</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestFactoryMethodResolver</span></td><td><code>59fd27320e375440</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestMethodResolver</span></td><td><code>812706355dbf565c</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.TestTemplateMethodResolver</span></td><td><code>47563eb55cd35171</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsInnerClass</span></td><td><code>f7d9846d00228720</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsNestedTestClass</span></td><td><code>e47ff7cd33073803</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsPotentialTestContainer</span></td><td><code>bf17d6180e3bfcd4</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestClassWithTests</span></td><td><code>94179bc44f8c4ff7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestFactoryMethod</span></td><td><code>a2c68978bd6bfbc6</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestMethod</span></td><td><code>8b244977e441886e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestTemplateMethod</span></td><td><code>0baf1066bf0cbad7</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.discovery.predicates.IsTestableMethod</span></td><td><code>59a0b58a40803fe2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ConditionEvaluator</span></td><td><code>cf027eab03077ec8</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExecutableInvoker</span></td><td><code>3dcb283c9aa60206</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ExtensionValuesStore</span></td><td><code>6da645cbae2256c5</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext</span></td><td><code>2fa1acfc81a9e564</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.Builder</span></td><td><code>8afc8bcaa04b5a1e</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State</span></td><td><code>98926feeb7289b09</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.execution.ThrowableCollector</span></td><td><code>32288e69ddefa8fb</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.DisabledCondition</span></td><td><code>23223b45668b6ef2</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ExtensionRegistry</span></td><td><code>6de7dc4a18ac97dc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.RepeatedTestExtension</span></td><td><code>1b7914cc8cf83732</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition</span></td><td><code>72f1d00f1b0a51e3</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionCondition.Evaluator</span></td><td><code>36e29b1b3214594b</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.ScriptExecutionEvaluator</span></td><td><code>c2e888183731e173</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestInfoParameterResolver</span></td><td><code>1b5b370a56807cae</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.extension.TestReporterParameterResolver</span></td><td><code>60beaf7c80fe99cc</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.EnvironmentVariableAccessor</span></td><td><code>c0c905d5fe8998ca</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptAccessor.SystemPropertyAccessor</span></td><td><code>18fe4dab72ac1573</code></td></tr><tr><td><span class="el_class">org.junit.jupiter.engine.script.ScriptExecutionManager</span></td><td><code>1f06dfe26cdafe2c</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory</span></td><td><code>657201953ff2c697</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.logging.LoggerFactory.DelegatingLogger</span></td><td><code>0e5317bba55fc49d</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils</span></td><td><code>a1ef6e0681f70a1e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.AnnotationUtils.AnnotationCacheKey</span></td><td><code>a2872bf2a614d925</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.BlacklistedExceptions</span></td><td><code>73365157bacc50af</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassFilter</span></td><td><code>093a789d01159576</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassLoaderUtils</span></td><td><code>fcbbcbe2d963c55b</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClassUtils</span></td><td><code>4f8139a452003bd6</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ClasspathScanner</span></td><td><code>c0a3b9155dc07154</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.CollectionUtils</span></td><td><code>ad417bb7390cff66</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ExceptionUtils</span></td><td><code>1dc9dedfab661762</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.Preconditions</span></td><td><code>3b76bcacee9114c0</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils</span></td><td><code>1dca291d849b53b2</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode</span></td><td><code>b267f8ac562d551e</code></td></tr><tr><td><span class="el_class">org.junit.platform.commons.util.StringUtils</span></td><td><code>9596041173fac5b0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter</span></td><td><code>ec8dc82249eeb7a9</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.CompositeFilter.1</span></td><td><code>70825b5141694d2a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.ExecutionRequest</span></td><td><code>ed3835cc21e5a048</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.Filter</span></td><td><code>f932423ccd3b54bf</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.FilterResult</span></td><td><code>cdaa92f4f6f79059</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor</span></td><td><code>a81a3e15d23f5898</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestDescriptor.Type</span></td><td><code>eb97fc5a29f3ee3a</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult</span></td><td><code>abbab174d32db912</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.TestExecutionResult.Status</span></td><td><code>da0473a55d05e891</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId</span></td><td><code>64973686b4e2c690</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueId.Segment</span></td><td><code>1872a6198babd9f0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.UniqueIdFormat</span></td><td><code>1470555fac6c7a2b</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.ClassSelector</span></td><td><code>228aa96d72021db2</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.discovery.DiscoverySelectors</span></td><td><code>c61e9bcc0c5d43d7</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.AbstractTestDescriptor</span></td><td><code>2bfbf25c43491443</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.ClassSource</span></td><td><code>deebd86abf2ac9e8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.EngineDescriptor</span></td><td><code>b7dbf6dfb794516c</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.descriptor.MethodSource</span></td><td><code>e22f7f8c4f01d2d8</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.filter.ClasspathScanningSupport</span></td><td><code>045afdae065e9ce0</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.ExecutionTracker</span></td><td><code>cbd37bfd76595d62</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine</span></td><td><code>410766a2a07e44b1</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor</span></td><td><code>43b3a991558bcb42</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.1</span></td><td><code>59988b34a20c03de</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.NodeExecutor</span></td><td><code>d5df9a54f301545d</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node</span></td><td><code>1e2e35414f9ebddd</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.Node.SkipResult</span></td><td><code>a8b0f84ec81d03c3</code></td></tr><tr><td><span class="el_class">org.junit.platform.engine.support.hierarchical.SingleTestExecutor</span></td><td><code>eb68067e61cad23e</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestIdentifier</span></td><td><code>225bb434f8f223e2</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.TestPlan</span></td><td><code>9a2b71b572924cbc</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultDiscoveryRequest</span></td><td><code>7dda3ad9a0e6a666</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.DefaultLauncher</span></td><td><code>1a1f88af87dc6ec1</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ExecutionListenerAdapter</span></td><td><code>52cf3c3c69d4dfba</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherConfigurationParameters</span></td><td><code>ef55cacb5e47a902</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder</span></td><td><code>e78a71b91c159e69</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.LauncherFactory</span></td><td><code>e2bd67b8a72737b5</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.Root</span></td><td><code>32394ca895f9fb9a</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry</span></td><td><code>7c054c4cf76cb0f6</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.ServiceLoaderTestExecutionListenerRegistry</span></td><td><code>2299bac1075a6bf3</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry</span></td><td><code>190f4fb2b0ab865d</code></td></tr><tr><td><span class="el_class">org.junit.platform.launcher.core.TestExecutionListenerRegistry.CompositeTestExecutionListener</span></td><td><code>7538d2d860e1f9cb</code></td></tr><tr><td><span class="el_class">org.opentest4j.AssertionFailedError</span></td><td><code>2c5f69ceb24e9128</code></td></tr><tr><td><span class="el_class">sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo</span></td><td><code>888d0e6a76acb845</code></td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"jacoco-resources/report.gif\" type=\"image/gif\"/><title>Java-Linear-Algebra</title><script type=\"text/javascript\" src=\"jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><span class=\"el_report\">Java-Linear-Algebra</span></div><h1>Java-Linear-Algebra</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">15,464 of 16,167</td><td class=\"ctr2\">4%</td><td class=\"bar\">1,188 of 1,263</td><td class=\"ctr2\">5%</td><td class=\"ctr1\">954</td><td class=\"ctr2\">1,006</td><td class=\"ctr1\">2,213</td><td class=\"ctr2\">2,390</td><td class=\"ctr1\">342</td><td class=\"ctr2\">373</td><td class=\"ctr1\">21</td><td class=\"ctr2\">31</td></tr></tfoot><tbody><tr><td id=\"a0\"><a href=\"linalg/index.html\" class=\"el_package\">linalg</a></td><td class=\"bar\" id=\"b0\"><img src=\"jacoco-resources/redbar.gif\" width=\"118\" height=\"10\" title=\"11,857\" alt=\"11,857\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"1\" height=\"10\" title=\"196\" alt=\"196\"/></td><td class=\"ctr2\" id=\"c2\">1%</td><td class=\"bar\" id=\"d0\"><img src=\"jacoco-resources/redbar.gif\" width=\"118\" height=\"10\" title=\"885\" alt=\"885\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"1\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e2\">1%</td><td class=\"ctr1\" id=\"f0\">693</td><td class=\"ctr2\" id=\"g0\">707</td><td class=\"ctr1\" id=\"h0\">1,680</td><td class=\"ctr2\" id=\"i0\">1,732</td><td class=\"ctr1\" id=\"j0\">246</td><td class=\"ctr2\" id=\"k0\">256</td><td class=\"ctr1\" id=\"l0\">13</td><td class=\"ctr2\" id=\"m0\">16</td></tr><tr><td id=\"a3\"><a href=\"linalg.util/index.html\" class=\"el_package\">linalg.util</a></td><td class=\"bar\" id=\"b1\"><img src=\"jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"2,136\" alt=\"2,136\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"3\" height=\"10\" title=\"401\" alt=\"401\"/></td><td class=\"ctr2\" id=\"c0\">15%</td><td class=\"bar\" id=\"d1\"><img src=\"jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"162\" alt=\"162\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"7\" height=\"10\" title=\"58\" alt=\"58\"/></td><td class=\"ctr2\" id=\"e0\">26%</td><td class=\"ctr1\" id=\"f1\">127</td><td class=\"ctr2\" id=\"g1\">160</td><td class=\"ctr1\" id=\"h1\">274</td><td class=\"ctr2\" id=\"i1\">371</td><td class=\"ctr1\" id=\"j2\">34</td><td class=\"ctr2\" id=\"k2\">50</td><td class=\"ctr1\" id=\"l2\">3</td><td class=\"ctr2\" id=\"m1\">9</td></tr><tr><td id=\"a1\"><a href=\"linalg.complex_number/index.html\" class=\"el_package\">linalg.complex_number</a></td><td class=\"bar\" id=\"b2\"><img src=\"jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"893\" alt=\"893\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"1\" height=\"10\" title=\"106\" alt=\"106\"/></td><td class=\"ctr2\" id=\"c1\">10%</td><td class=\"bar\" id=\"d2\"><img src=\"jacoco-resources/redbar.gif\" width=\"14\" height=\"10\" title=\"107\" alt=\"107\"/></td><td class=\"ctr2\" id=\"e1\">2%</td><td class=\"ctr1\" id=\"f2\">103</td><td class=\"ctr2\" id=\"g2\">108</td><td class=\"ctr1\" id=\"h2\">160</td><td class=\"ctr2\" id=\"i2\">188</td><td class=\"ctr1\" id=\"j1\">48</td><td class=\"ctr2\" id=\"k1\">53</td><td class=\"ctr1\" id=\"l3\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a2\"><a href=\"linalg.concurrent/index.html\" class=\"el_package\">linalg.concurrent</a></td><td class=\"bar\" id=\"b3\"><img src=\"jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"578\" alt=\"578\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"34\" alt=\"34\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f3\">31</td><td class=\"ctr2\" id=\"g3\">31</td><td class=\"ctr1\" id=\"h3\">99</td><td class=\"ctr2\" id=\"i3\">99</td><td class=\"ctr1\" id=\"j3\">14</td><td class=\"ctr2\" id=\"k3\">14</td><td class=\"ctr1\" id=\"l1\">5</td><td class=\"ctr2\" id=\"m2\">5</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/index.html b/target/site/jacoco/index.html
--- a/target/site/jacoco/index.html	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/index.html	(date 1648106316659)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Java-Linear-Algebra</title><script type="text/javascript" src="jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><span class="el_report">Java-Linear-Algebra</span></div><h1>Java-Linear-Algebra</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">15,464 of 16,167</td><td class="ctr2">4%</td><td class="bar">1,188 of 1,263</td><td class="ctr2">5%</td><td class="ctr1">954</td><td class="ctr2">1,006</td><td class="ctr1">2,213</td><td class="ctr2">2,390</td><td class="ctr1">342</td><td class="ctr2">373</td><td class="ctr1">21</td><td class="ctr2">31</td></tr></tfoot><tbody><tr><td id="a0"><a href="linalg/index.html" class="el_package">linalg</a></td><td class="bar" id="b0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="11,857" alt="11,857"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="196" alt="196"/></td><td class="ctr2" id="c2">1%</td><td class="bar" id="d0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="885" alt="885"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="14" alt="14"/></td><td class="ctr2" id="e2">1%</td><td class="ctr1" id="f0">693</td><td class="ctr2" id="g0">707</td><td class="ctr1" id="h0">1,680</td><td class="ctr2" id="i0">1,732</td><td class="ctr1" id="j0">246</td><td class="ctr2" id="k0">256</td><td class="ctr1" id="l0">13</td><td class="ctr2" id="m0">16</td></tr><tr><td id="a3"><a href="linalg.util/index.html" class="el_package">linalg.util</a></td><td class="bar" id="b1"><img src="jacoco-resources/redbar.gif" width="21" height="10" title="2,136" alt="2,136"/><img src="jacoco-resources/greenbar.gif" width="3" height="10" title="401" alt="401"/></td><td class="ctr2" id="c0">15%</td><td class="bar" id="d1"><img src="jacoco-resources/redbar.gif" width="21" height="10" title="162" alt="162"/><img src="jacoco-resources/greenbar.gif" width="7" height="10" title="58" alt="58"/></td><td class="ctr2" id="e0">26%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">160</td><td class="ctr1" id="h1">274</td><td class="ctr2" id="i1">371</td><td class="ctr1" id="j2">34</td><td class="ctr2" id="k2">50</td><td class="ctr1" id="l2">3</td><td class="ctr2" id="m1">9</td></tr><tr><td id="a1"><a href="linalg.complex_number/index.html" class="el_package">linalg.complex_number</a></td><td class="bar" id="b2"><img src="jacoco-resources/redbar.gif" width="8" height="10" title="893" alt="893"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="106" alt="106"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d2"><img src="jacoco-resources/redbar.gif" width="14" height="10" title="107" alt="107"/></td><td class="ctr2" id="e1">2%</td><td class="ctr1" id="f2">103</td><td class="ctr2" id="g2">108</td><td class="ctr1" id="h2">160</td><td class="ctr2" id="i2">188</td><td class="ctr1" id="j1">48</td><td class="ctr2" id="k1">53</td><td class="ctr1" id="l3">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a2"><a href="linalg.concurrent/index.html" class="el_package">linalg.concurrent</a></td><td class="bar" id="b3"><img src="jacoco-resources/redbar.gif" width="5" height="10" title="578" alt="578"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d3"><img src="jacoco-resources/redbar.gif" width="4" height="10" title="34" alt="34"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f3">31</td><td class="ctr2" id="g3">31</td><td class="ctr1" id="h3">99</td><td class="ctr2" id="i3">99</td><td class="ctr1" id="j3">14</td><td class="ctr2" id="k3">14</td><td class="ctr1" id="l1">5</td><td class="ctr2" id="m2">5</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="jacoco-resources/report.gif" type="image/gif"/><title>Java-Linear-Algebra</title><script type="text/javascript" src="jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="jacoco-sessions.html" class="el_session">Sessions</a></span><span class="el_report">Java-Linear-Algebra</span></div><h1>Java-Linear-Algebra</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">15,503 of 16,206</td><td class="ctr2">4%</td><td class="bar">1,188 of 1,263</td><td class="ctr2">5%</td><td class="ctr1">955</td><td class="ctr2">1,007</td><td class="ctr1">2,221</td><td class="ctr2">2,398</td><td class="ctr1">343</td><td class="ctr2">374</td><td class="ctr1">21</td><td class="ctr2">31</td></tr></tfoot><tbody><tr><td id="a0"><a href="linalg/index.html" class="el_package">linalg</a></td><td class="bar" id="b0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="11,896" alt="11,896"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="196" alt="196"/></td><td class="ctr2" id="c2">1%</td><td class="bar" id="d0"><img src="jacoco-resources/redbar.gif" width="118" height="10" title="885" alt="885"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="14" alt="14"/></td><td class="ctr2" id="e2">1%</td><td class="ctr1" id="f0">694</td><td class="ctr2" id="g0">708</td><td class="ctr1" id="h0">1,688</td><td class="ctr2" id="i0">1,740</td><td class="ctr1" id="j0">247</td><td class="ctr2" id="k0">257</td><td class="ctr1" id="l0">13</td><td class="ctr2" id="m0">16</td></tr><tr><td id="a3"><a href="linalg.util/index.html" class="el_package">linalg.util</a></td><td class="bar" id="b1"><img src="jacoco-resources/redbar.gif" width="21" height="10" title="2,136" alt="2,136"/><img src="jacoco-resources/greenbar.gif" width="3" height="10" title="401" alt="401"/></td><td class="ctr2" id="c0">15%</td><td class="bar" id="d1"><img src="jacoco-resources/redbar.gif" width="21" height="10" title="162" alt="162"/><img src="jacoco-resources/greenbar.gif" width="7" height="10" title="58" alt="58"/></td><td class="ctr2" id="e0">26%</td><td class="ctr1" id="f1">127</td><td class="ctr2" id="g1">160</td><td class="ctr1" id="h1">274</td><td class="ctr2" id="i1">371</td><td class="ctr1" id="j2">34</td><td class="ctr2" id="k2">50</td><td class="ctr1" id="l2">3</td><td class="ctr2" id="m1">9</td></tr><tr><td id="a1"><a href="linalg.complex_number/index.html" class="el_package">linalg.complex_number</a></td><td class="bar" id="b2"><img src="jacoco-resources/redbar.gif" width="8" height="10" title="893" alt="893"/><img src="jacoco-resources/greenbar.gif" width="1" height="10" title="106" alt="106"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d2"><img src="jacoco-resources/redbar.gif" width="14" height="10" title="107" alt="107"/></td><td class="ctr2" id="e1">2%</td><td class="ctr1" id="f2">103</td><td class="ctr2" id="g2">108</td><td class="ctr1" id="h2">160</td><td class="ctr2" id="i2">188</td><td class="ctr1" id="j1">48</td><td class="ctr2" id="k1">53</td><td class="ctr1" id="l3">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a2"><a href="linalg.concurrent/index.html" class="el_package">linalg.concurrent</a></td><td class="bar" id="b3"><img src="jacoco-resources/redbar.gif" width="5" height="10" title="578" alt="578"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d3"><img src="jacoco-resources/redbar.gif" width="4" height="10" title="34" alt="34"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f3">31</td><td class="ctr2" id="g3">31</td><td class="ctr1" id="h3">99</td><td class="ctr2" id="i3">99</td><td class="ctr1" id="j3">14</td><td class="ctr2" id="k3">14</td><td class="ctr1" id="l1">5</td><td class="ctr2" id="m2">5</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>linalg\\MatrixComparisons.class\r\nlinalg\\util\\LinAlgArrayUtils.class\r\nlinalg\\CholeskyDecomposition.class\r\nlinalg\\LUDecomposition.class\r\nlinalg\\util\\StringUtils.class\r\nlinalg\\concurrent\\ConcurrentMatrixAddition.class\r\nlinalg\\concurrent\\MatrixAdditionWorker.class\r\nlinalg\\concurrent\\ConcurrentMatrixMultiplication.class\r\nlinalg\\MatrixProperties.class\r\nlinalg\\Solvers.class\r\nlinalg\\MatrixChecks.class\r\nlinalg\\MatrixManipulations.class\r\nlinalg\\util\\Token.class\r\nlinalg\\SingularValueDecomposition.class\r\nlinalg\\util\\Parser.class\r\nlinalg\\util\\ExampleMatrices.class\r\nlinalg\\Matrix.class\r\nlinalg\\util\\ShapeLexer.class\r\nlinalg\\PrintOptions.class\r\nlinalg\\util\\FileManager.class\r\nlinalg\\concurrent\\MatrixMultiplicationWorker.class\r\nlinalg\\Decompose.class\r\nlinalg\\QRDecomposition.class\r\nlinalg\\util\\NumberLexer.class\r\nlinalg\\complex_number\\CNumber.class\r\nlinalg\\SchurDecomposition.class\r\nlinalg\\concurrent\\ThreadTypes.class\r\nlinalg\\MatrixMultiplicationAlgorithms.class\r\nlinalg\\MatrixOperations.class\r\nlinalg\\util\\Lexer.class\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1648106315583)
@@ -2,10 +2,8 @@
 linalg\util\LinAlgArrayUtils.class
 linalg\CholeskyDecomposition.class
 linalg\LUDecomposition.class
+linalg\Vector.class
 linalg\util\StringUtils.class
-linalg\concurrent\ConcurrentMatrixAddition.class
-linalg\concurrent\MatrixAdditionWorker.class
-linalg\concurrent\ConcurrentMatrixMultiplication.class
 linalg\MatrixProperties.class
 linalg\Solvers.class
 linalg\MatrixChecks.class
@@ -18,13 +16,10 @@
 linalg\util\ShapeLexer.class
 linalg\PrintOptions.class
 linalg\util\FileManager.class
-linalg\concurrent\MatrixMultiplicationWorker.class
 linalg\Decompose.class
 linalg\QRDecomposition.class
 linalg\util\NumberLexer.class
 linalg\complex_number\CNumber.class
 linalg\SchurDecomposition.class
-linalg\concurrent\ThreadTypes.class
-linalg\MatrixMultiplicationAlgorithms.class
 linalg\MatrixOperations.class
 linalg\util\Lexer.class
Index: target/site/jacoco/linalg/MatrixOperations.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixOperations</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_class\">MatrixOperations</span></div><h1>MatrixOperations</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">2,067 of 2,067</td><td class=\"ctr2\">0%</td><td class=\"bar\">186 of 186</td><td class=\"ctr2\">0%</td><td class=\"ctr1\">133</td><td class=\"ctr2\">133</td><td class=\"ctr1\">275</td><td class=\"ctr2\">275</td><td class=\"ctr1\">40</td><td class=\"ctr2\">40</td></tr></tfoot><tbody><tr><td id=\"a33\"><a href=\"MatrixOperations.java.html#L535\" class=\"el_method\">stack(Matrix, int)</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"210\" alt=\"210\"/></td><td class=\"ctr2\" id=\"c0\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"109\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e0\">0%</td><td class=\"ctr1\" id=\"f1\">11</td><td class=\"ctr2\" id=\"g1\">11</td><td class=\"ctr1\" id=\"h1\">22</td><td class=\"ctr2\" id=\"i1\">22</td><td class=\"ctr1\" id=\"j0\">1</td><td class=\"ctr2\" id=\"k0\">1</td></tr><tr><td id=\"a24\"><a href=\"MatrixOperations.java.html#L703\" class=\"el_method\">rref()</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"103\" height=\"10\" title=\"181\" alt=\"181\"/></td><td class=\"ctr2\" id=\"c1\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"22\" alt=\"22\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">12</td><td class=\"ctr2\" id=\"g0\">12</td><td class=\"ctr1\" id=\"h0\">30</td><td class=\"ctr2\" id=\"i0\">30</td><td class=\"ctr1\" id=\"j1\">1</td><td class=\"ctr2\" id=\"k1\">1</td></tr><tr><td id=\"a10\"><a href=\"MatrixOperations.java.html#L205\" class=\"el_method\">elemDiv(Matrix)</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"168\" alt=\"168\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f11\">3</td><td class=\"ctr2\" id=\"g11\">3</td><td class=\"ctr1\" id=\"h11\">7</td><td class=\"ctr2\" id=\"i11\">7</td><td class=\"ctr1\" id=\"j2\">1</td><td class=\"ctr2\" id=\"k2\">1</td></tr><tr><td id=\"a2\"><a href=\"MatrixOperations.java.html#L21\" class=\"el_method\">add(Matrix)</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"80\" height=\"10\" title=\"141\" alt=\"141\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"87\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f2\">9</td><td class=\"ctr2\" id=\"g2\">9</td><td class=\"ctr1\" id=\"h6\">14</td><td class=\"ctr2\" id=\"i6\">14</td><td class=\"ctr1\" id=\"j3\">1</td><td class=\"ctr2\" id=\"k3\">1</td></tr><tr><td id=\"a23\"><a href=\"MatrixOperations.java.html#L612\" class=\"el_method\">ref()</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"65\" height=\"10\" title=\"114\" alt=\"114\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"65\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f4\">7</td><td class=\"ctr2\" id=\"g4\">7</td><td class=\"ctr1\" id=\"h2\">17</td><td class=\"ctr2\" id=\"i2\">17</td><td class=\"ctr1\" id=\"j4\">1</td><td class=\"ctr2\" id=\"k4\">1</td></tr><tr><td id=\"a26\"><a href=\"MatrixOperations.java.html#L791\" class=\"el_method\">rrefNoPivot()</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"61\" height=\"10\" title=\"108\" alt=\"108\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"76\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f3\">8</td><td class=\"ctr2\" id=\"g3\">8</td><td class=\"ctr1\" id=\"h3\">17</td><td class=\"ctr2\" id=\"i3\">17</td><td class=\"ctr1\" id=\"j5\">1</td><td class=\"ctr2\" id=\"k5\">1</td></tr><tr><td id=\"a11\"><a href=\"MatrixOperations.java.html#L148\" class=\"el_method\">elemMult(Matrix)</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"59\" height=\"10\" title=\"104\" alt=\"104\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f12\">3</td><td class=\"ctr2\" id=\"g12\">3</td><td class=\"ctr1\" id=\"h12\">7</td><td class=\"ctr2\" id=\"i12\">7</td><td class=\"ctr1\" id=\"j6\">1</td><td class=\"ctr2\" id=\"k6\">1</td></tr><tr><td id=\"a8\"><a href=\"MatrixOperations.java.html#L436\" class=\"el_method\">detRec(Matrix)</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"58\" height=\"10\" title=\"102\" alt=\"102\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"54\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f6\">6</td><td class=\"ctr2\" id=\"g6\">6</td><td class=\"ctr1\" id=\"h4\">16</td><td class=\"ctr2\" id=\"i4\">16</td><td class=\"ctr1\" id=\"j7\">1</td><td class=\"ctr2\" id=\"k7\">1</td></tr><tr><td id=\"a9\"><a href=\"MatrixOperations.java.html#L266\" class=\"el_method\">directSum(Matrix[])</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"52\" height=\"10\" title=\"91\" alt=\"91\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f8\">4</td><td class=\"ctr2\" id=\"g8\">4</td><td class=\"ctr1\" id=\"h5\">16</td><td class=\"ctr2\" id=\"i5\">16</td><td class=\"ctr1\" id=\"j8\">1</td><td class=\"ctr2\" id=\"k8\">1</td></tr><tr><td id=\"a29\"><a href=\"MatrixOperations.java.html#L184\" class=\"el_method\">scalMult(CNumber)</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"45\" height=\"10\" title=\"80\" alt=\"80\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f13\">3</td><td class=\"ctr2\" id=\"g13\">3</td><td class=\"ctr1\" id=\"h17\">6</td><td class=\"ctr2\" id=\"i17\">6</td><td class=\"ctr1\" id=\"j9\">1</td><td class=\"ctr2\" id=\"k9\">1</td></tr><tr><td id=\"a35\"><a href=\"MatrixOperations.java.html#L81\" class=\"el_method\">sub(Matrix)</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"41\" height=\"10\" title=\"72\" alt=\"72\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f14\">3</td><td class=\"ctr2\" id=\"g14\">3</td><td class=\"ctr1\" id=\"h13\">7</td><td class=\"ctr2\" id=\"i13\">7</td><td class=\"ctr1\" id=\"j10\">1</td><td class=\"ctr2\" id=\"k10\">1</td></tr><tr><td id=\"a36\"><a href=\"MatrixOperations.java.html#L352\" class=\"el_method\">T()</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"39\" height=\"10\" title=\"69\" alt=\"69\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"65\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f5\">7</td><td class=\"ctr2\" id=\"g5\">7</td><td class=\"ctr1\" id=\"h9\">9</td><td class=\"ctr2\" id=\"i9\">9</td><td class=\"ctr1\" id=\"j11\">1</td><td class=\"ctr2\" id=\"k11\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixOperations.java.html#L492\" class=\"el_method\">det()</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"34\" height=\"10\" title=\"60\" alt=\"60\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f9\">4</td><td class=\"ctr2\" id=\"g9\">4</td><td class=\"ctr1\" id=\"h7\">10</td><td class=\"ctr2\" id=\"i7\">10</td><td class=\"ctr1\" id=\"j12\">1</td><td class=\"ctr2\" id=\"k12\">1</td></tr><tr><td id=\"a17\"><a href=\"MatrixOperations.java.html#L925\" class=\"el_method\">inverse()</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"33\" height=\"10\" title=\"59\" alt=\"59\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"32\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f10\">4</td><td class=\"ctr2\" id=\"g10\">4</td><td class=\"ctr1\" id=\"h8\">10</td><td class=\"ctr2\" id=\"i8\">10</td><td class=\"ctr1\" id=\"j13\">1</td><td class=\"ctr2\" id=\"k13\">1</td></tr><tr><td id=\"a1\"><a href=\"MatrixOperations.java.html#L61\" class=\"el_method\">add(double)</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"30\" height=\"10\" title=\"54\" alt=\"54\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e14\">0%</td><td class=\"ctr1\" id=\"f15\">3</td><td class=\"ctr2\" id=\"g15\">3</td><td class=\"ctr1\" id=\"h18\">6</td><td class=\"ctr2\" id=\"i18\">6</td><td class=\"ctr1\" id=\"j14\">1</td><td class=\"ctr2\" id=\"k14\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixOperations.java.html#L471\" class=\"el_method\">detQR(Matrix)</a></td><td class=\"bar\" id=\"b15\"><img src=\"../jacoco-resources/redbar.gif\" width=\"26\" height=\"10\" title=\"46\" alt=\"46\"/></td><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e15\">0%</td><td class=\"ctr1\" id=\"f23\">2</td><td class=\"ctr2\" id=\"g23\">2</td><td class=\"ctr1\" id=\"h19\">6</td><td class=\"ctr2\" id=\"i19\">6</td><td class=\"ctr1\" id=\"j15\">1</td><td class=\"ctr2\" id=\"k15\">1</td></tr><tr><td id=\"a19\"><a href=\"MatrixOperations.java.html#L117\" class=\"el_method\">mult(Matrix)</a></td><td class=\"bar\" id=\"b16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"43\" alt=\"43\"/></td><td class=\"ctr2\" id=\"c16\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"54\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e16\">0%</td><td class=\"ctr1\" id=\"f7\">6</td><td class=\"ctr2\" id=\"g7\">6</td><td class=\"ctr1\" id=\"h10\">8</td><td class=\"ctr2\" id=\"i10\">8</td><td class=\"ctr1\" id=\"j16\">1</td><td class=\"ctr2\" id=\"k16\">1</td></tr><tr><td id=\"a31\"><a href=\"MatrixOperations.java.html#L301\" class=\"el_method\">sqrt()</a></td><td class=\"bar\" id=\"b17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"c17\">0%</td><td class=\"bar\" id=\"d16\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e17\">0%</td><td class=\"ctr1\" id=\"f16\">3</td><td class=\"ctr2\" id=\"g16\">3</td><td class=\"ctr1\" id=\"h20\">6</td><td class=\"ctr2\" id=\"i20\">6</td><td class=\"ctr1\" id=\"j17\">1</td><td class=\"ctr2\" id=\"k17\">1</td></tr><tr><td id=\"a0\"><a href=\"MatrixOperations.java.html#L322\" class=\"el_method\">abs()</a></td><td class=\"bar\" id=\"b18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"c18\">0%</td><td class=\"bar\" id=\"d17\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e18\">0%</td><td class=\"ctr1\" id=\"f17\">3</td><td class=\"ctr2\" id=\"g17\">3</td><td class=\"ctr1\" id=\"h21\">6</td><td class=\"ctr2\" id=\"i21\">6</td><td class=\"ctr1\" id=\"j18\">1</td><td class=\"ctr2\" id=\"k18\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixOperations.java.html#L379\" class=\"el_method\">conjugate()</a></td><td class=\"bar\" id=\"b19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"24\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"c19\">0%</td><td class=\"bar\" id=\"d18\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e19\">0%</td><td class=\"ctr1\" id=\"f18\">3</td><td class=\"ctr2\" id=\"g18\">3</td><td class=\"ctr1\" id=\"h22\">6</td><td class=\"ctr2\" id=\"i22\">6</td><td class=\"ctr1\" id=\"j19\">1</td><td class=\"ctr2\" id=\"k19\">1</td></tr><tr><td id=\"a38\"><a href=\"MatrixOperations.java.html#L850\" class=\"el_method\">trace()</a></td><td class=\"bar\" id=\"b20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"22\" height=\"10\" title=\"39\" alt=\"39\"/></td><td class=\"ctr2\" id=\"c20\">0%</td><td class=\"bar\" id=\"d19\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e20\">0%</td><td class=\"ctr1\" id=\"f19\">3</td><td class=\"ctr2\" id=\"g19\">3</td><td class=\"ctr1\" id=\"h14\">7</td><td class=\"ctr2\" id=\"i14\">7</td><td class=\"ctr1\" id=\"j20\">1</td><td class=\"ctr2\" id=\"k20\">1</td></tr><tr><td id=\"a18\"><a href=\"MatrixOperations.java.html#L981\" class=\"el_method\">inverseTriU(Matrix)</a></td><td class=\"bar\" id=\"b21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c21\">0%</td><td class=\"bar\" id=\"d20\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e21\">0%</td><td class=\"ctr1\" id=\"f20\">3</td><td class=\"ctr2\" id=\"g20\">3</td><td class=\"ctr1\" id=\"h15\">7</td><td class=\"ctr2\" id=\"i15\">7</td><td class=\"ctr1\" id=\"j21\">1</td><td class=\"ctr2\" id=\"k21\">1</td></tr><tr><td id=\"a22\"><a href=\"MatrixOperations.java.html#L1003\" class=\"el_method\">recep()</a></td><td class=\"bar\" id=\"b22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"38\" alt=\"38\"/></td><td class=\"ctr2\" id=\"c22\">0%</td><td class=\"bar\" id=\"d21\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e22\">0%</td><td class=\"ctr1\" id=\"f21\">3</td><td class=\"ctr2\" id=\"g21\">3</td><td class=\"ctr1\" id=\"h23\">5</td><td class=\"ctr2\" id=\"i23\">5</td><td class=\"ctr1\" id=\"j22\">1</td><td class=\"ctr2\" id=\"k22\">1</td></tr><tr><td id=\"a21\"><a href=\"MatrixOperations.java.html#L889\" class=\"el_method\">rank()</a></td><td class=\"bar\" id=\"b23\"><img src=\"../jacoco-resources/redbar.gif\" width=\"14\" height=\"10\" title=\"26\" alt=\"26\"/></td><td class=\"ctr2\" id=\"c23\">0%</td><td class=\"bar\" id=\"d22\"><img src=\"../jacoco-resources/redbar.gif\" width=\"21\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"e23\">0%</td><td class=\"ctr1\" id=\"f22\">3</td><td class=\"ctr2\" id=\"g22\">3</td><td class=\"ctr1\" id=\"h16\">7</td><td class=\"ctr2\" id=\"i16\">7</td><td class=\"ctr1\" id=\"j23\">1</td><td class=\"ctr2\" id=\"k23\">1</td></tr><tr><td id=\"a12\"><a href=\"MatrixOperations.java.html#L833\" class=\"el_method\">erref()</a></td><td class=\"bar\" id=\"b24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"c24\">0%</td><td class=\"bar\" id=\"d25\"/><td class=\"ctr2\" id=\"e25\">n/a</td><td class=\"ctr1\" id=\"f25\">1</td><td class=\"ctr2\" id=\"g25\">1</td><td class=\"ctr1\" id=\"h24\">4</td><td class=\"ctr2\" id=\"i24\">4</td><td class=\"ctr1\" id=\"j24\">1</td><td class=\"ctr2\" id=\"k24\">1</td></tr><tr><td id=\"a28\"><a href=\"MatrixOperations.java.html#L231\" class=\"el_method\">scalDiv(double)</a></td><td class=\"bar\" id=\"b25\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"11\" alt=\"11\"/></td><td class=\"ctr2\" id=\"c25\">0%</td><td class=\"bar\" id=\"d26\"/><td class=\"ctr2\" id=\"e26\">n/a</td><td class=\"ctr1\" id=\"f26\">1</td><td class=\"ctr2\" id=\"g26\">1</td><td class=\"ctr1\" id=\"h25\">2</td><td class=\"ctr2\" id=\"i25\">2</td><td class=\"ctr1\" id=\"j25\">1</td><td class=\"ctr2\" id=\"k25\">1</td></tr><tr><td id=\"a20\"><a href=\"MatrixOperations.java.html#L913\" class=\"el_method\">nullity()</a></td><td class=\"bar\" id=\"b26\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"9\" alt=\"9\"/></td><td class=\"ctr2\" id=\"c26\">0%</td><td class=\"bar\" id=\"d27\"/><td class=\"ctr2\" id=\"e27\">n/a</td><td class=\"ctr1\" id=\"f27\">1</td><td class=\"ctr2\" id=\"g27\">1</td><td class=\"ctr1\" id=\"h26\">2</td><td class=\"ctr2\" id=\"i26\">2</td><td class=\"ctr1\" id=\"j26\">1</td><td class=\"ctr2\" id=\"k26\">1</td></tr><tr><td id=\"a27\"><a href=\"MatrixOperations.java.html#L243\" class=\"el_method\">scalDiv(CNumber)</a></td><td class=\"bar\" id=\"b27\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"c27\">0%</td><td class=\"bar\" id=\"d28\"/><td class=\"ctr2\" id=\"e28\">n/a</td><td class=\"ctr1\" id=\"f28\">1</td><td class=\"ctr2\" id=\"g28\">1</td><td class=\"ctr1\" id=\"h27\">2</td><td class=\"ctr2\" id=\"i27\">2</td><td class=\"ctr1\" id=\"j27\">1</td><td class=\"ctr2\" id=\"k27\">1</td></tr><tr><td id=\"a25\"><a href=\"MatrixOperations.java.html#L677\" class=\"el_method\">rref(boolean)</a></td><td class=\"bar\" id=\"b28\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"c28\">0%</td><td class=\"bar\" id=\"d24\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"2\" alt=\"2\"/></td><td class=\"ctr2\" id=\"e24\">0%</td><td class=\"ctr1\" id=\"f24\">2</td><td class=\"ctr2\" id=\"g24\">2</td><td class=\"ctr1\" id=\"h28\">2</td><td class=\"ctr2\" id=\"i28\">2</td><td class=\"ctr1\" id=\"j28\">1</td><td class=\"ctr2\" id=\"k28\">1</td></tr><tr><td id=\"a30\"><a href=\"MatrixOperations.java.html#L173\" class=\"el_method\">scalMult(double)</a></td><td class=\"bar\" id=\"b29\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"7\" alt=\"7\"/></td><td class=\"ctr2\" id=\"c29\">0%</td><td class=\"bar\" id=\"d29\"/><td class=\"ctr2\" id=\"e29\">n/a</td><td class=\"ctr1\" id=\"f29\">1</td><td class=\"ctr2\" id=\"g29\">1</td><td class=\"ctr1\" id=\"h29\">1</td><td class=\"ctr2\" id=\"i29\">1</td><td class=\"ctr1\" id=\"j29\">1</td><td class=\"ctr2\" id=\"k29\">1</td></tr><tr><td id=\"a34\"><a href=\"MatrixOperations.java.html#L102\" class=\"el_method\">sub(double)</a></td><td class=\"bar\" id=\"b30\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c30\">0%</td><td class=\"bar\" id=\"d30\"/><td class=\"ctr2\" id=\"e30\">n/a</td><td class=\"ctr1\" id=\"f30\">1</td><td class=\"ctr2\" id=\"g30\">1</td><td class=\"ctr1\" id=\"h30\">1</td><td class=\"ctr2\" id=\"i30\">1</td><td class=\"ctr1\" id=\"j30\">1</td><td class=\"ctr2\" id=\"k30\">1</td></tr><tr><td id=\"a13\"><a href=\"MatrixOperations.java.html#L255\" class=\"el_method\">fip(Matrix)</a></td><td class=\"bar\" id=\"b31\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c31\">0%</td><td class=\"bar\" id=\"d31\"/><td class=\"ctr2\" id=\"e31\">n/a</td><td class=\"ctr1\" id=\"f31\">1</td><td class=\"ctr2\" id=\"g31\">1</td><td class=\"ctr1\" id=\"h31\">1</td><td class=\"ctr2\" id=\"i31\">1</td><td class=\"ctr1\" id=\"j31\">1</td><td class=\"ctr2\" id=\"k31\">1</td></tr><tr><td id=\"a32\"><a href=\"MatrixOperations.java.html#L519\" class=\"el_method\">stack(Matrix)</a></td><td class=\"bar\" id=\"b32\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c32\">0%</td><td class=\"bar\" id=\"d32\"/><td class=\"ctr2\" id=\"e32\">n/a</td><td class=\"ctr1\" id=\"f32\">1</td><td class=\"ctr2\" id=\"g32\">1</td><td class=\"ctr1\" id=\"h32\">1</td><td class=\"ctr2\" id=\"i32\">1</td><td class=\"ctr1\" id=\"j32\">1</td><td class=\"ctr2\" id=\"k32\">1</td></tr><tr><td id=\"a3\"><a href=\"MatrixOperations.java.html#L589\" class=\"el_method\">augment(Matrix)</a></td><td class=\"bar\" id=\"b33\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"5\" alt=\"5\"/></td><td class=\"ctr2\" id=\"c33\">0%</td><td class=\"bar\" id=\"d33\"/><td class=\"ctr2\" id=\"e33\">n/a</td><td class=\"ctr1\" id=\"f33\">1</td><td class=\"ctr2\" id=\"g33\">1</td><td class=\"ctr1\" id=\"h33\">1</td><td class=\"ctr2\" id=\"i33\">1</td><td class=\"ctr1\" id=\"j33\">1</td><td class=\"ctr2\" id=\"k33\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixOperations.java.html#L400\" class=\"el_method\">conjT()</a></td><td class=\"bar\" id=\"b34\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c34\">0%</td><td class=\"bar\" id=\"d34\"/><td class=\"ctr2\" id=\"e34\">n/a</td><td class=\"ctr1\" id=\"f34\">1</td><td class=\"ctr2\" id=\"g34\">1</td><td class=\"ctr1\" id=\"h34\">1</td><td class=\"ctr2\" id=\"i34\">1</td><td class=\"ctr1\" id=\"j34\">1</td><td class=\"ctr2\" id=\"k34\">1</td></tr><tr><td id=\"a15\"><a href=\"MatrixOperations.java.html#L412\" class=\"el_method\">hermAdjoint()</a></td><td class=\"bar\" id=\"b35\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c35\">0%</td><td class=\"bar\" id=\"d35\"/><td class=\"ctr2\" id=\"e35\">n/a</td><td class=\"ctr1\" id=\"f35\">1</td><td class=\"ctr2\" id=\"g35\">1</td><td class=\"ctr1\" id=\"h35\">1</td><td class=\"ctr2\" id=\"i35\">1</td><td class=\"ctr1\" id=\"j35\">1</td><td class=\"ctr2\" id=\"k35\">1</td></tr><tr><td id=\"a14\"><a href=\"MatrixOperations.java.html#L424\" class=\"el_method\">H()</a></td><td class=\"bar\" id=\"b36\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"4\" alt=\"4\"/></td><td class=\"ctr2\" id=\"c36\">0%</td><td class=\"bar\" id=\"d36\"/><td class=\"ctr2\" id=\"e36\">n/a</td><td class=\"ctr1\" id=\"f36\">1</td><td class=\"ctr2\" id=\"g36\">1</td><td class=\"ctr1\" id=\"h36\">1</td><td class=\"ctr2\" id=\"i36\">1</td><td class=\"ctr1\" id=\"j36\">1</td><td class=\"ctr2\" id=\"k36\">1</td></tr><tr><td id=\"a39\"><a href=\"MatrixOperations.java.html#L341\" class=\"el_method\">transpose()</a></td><td class=\"bar\" id=\"b37\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c37\">0%</td><td class=\"bar\" id=\"d37\"/><td class=\"ctr2\" id=\"e37\">n/a</td><td class=\"ctr1\" id=\"f37\">1</td><td class=\"ctr2\" id=\"g37\">1</td><td class=\"ctr1\" id=\"h37\">1</td><td class=\"ctr2\" id=\"i37\">1</td><td class=\"ctr1\" id=\"j37\">1</td><td class=\"ctr2\" id=\"k37\">1</td></tr><tr><td id=\"a37\"><a href=\"MatrixOperations.java.html#L875\" class=\"el_method\">tr()</a></td><td class=\"bar\" id=\"b38\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c38\">0%</td><td class=\"bar\" id=\"d38\"/><td class=\"ctr2\" id=\"e38\">n/a</td><td class=\"ctr1\" id=\"f38\">1</td><td class=\"ctr2\" id=\"g38\">1</td><td class=\"ctr1\" id=\"h38\">1</td><td class=\"ctr2\" id=\"i38\">1</td><td class=\"ctr1\" id=\"j38\">1</td><td class=\"ctr2\" id=\"k38\">1</td></tr><tr><td id=\"a16\"><a href=\"MatrixOperations.java.html#L962\" class=\"el_method\">inv()</a></td><td class=\"bar\" id=\"b39\"><img src=\"../jacoco-resources/redbar.gif\" width=\"1\" height=\"10\" title=\"3\" alt=\"3\"/></td><td class=\"ctr2\" id=\"c39\">0%</td><td class=\"bar\" id=\"d39\"/><td class=\"ctr2\" id=\"e39\">n/a</td><td class=\"ctr1\" id=\"f39\">1</td><td class=\"ctr2\" id=\"g39\">1</td><td class=\"ctr1\" id=\"h39\">1</td><td class=\"ctr2\" id=\"i39\">1</td><td class=\"ctr1\" id=\"j39\">1</td><td class=\"ctr2\" id=\"k39\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixOperations.html b/target/site/jacoco/linalg/MatrixOperations.html
--- a/target/site/jacoco/linalg/MatrixOperations.html	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/linalg/MatrixOperations.html	(date 1648106316644)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixOperations</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixOperations</span></div><h1>MatrixOperations</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,067 of 2,067</td><td class="ctr2">0%</td><td class="bar">186 of 186</td><td class="ctr2">0%</td><td class="ctr1">133</td><td class="ctr2">133</td><td class="ctr1">275</td><td class="ctr2">275</td><td class="ctr1">40</td><td class="ctr2">40</td></tr></tfoot><tbody><tr><td id="a33"><a href="MatrixOperations.java.html#L535" class="el_method">stack(Matrix, int)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="210" alt="210"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="109" height="10" title="20" alt="20"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f1">11</td><td class="ctr2" id="g1">11</td><td class="ctr1" id="h1">22</td><td class="ctr2" id="i1">22</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a24"><a href="MatrixOperations.java.html#L703" class="el_method">rref()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="103" height="10" title="181" alt="181"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="22" alt="22"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">12</td><td class="ctr2" id="g0">12</td><td class="ctr1" id="h0">30</td><td class="ctr2" id="i0">30</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a10"><a href="MatrixOperations.java.html#L205" class="el_method">elemDiv(Matrix)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="168" alt="168"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f11">3</td><td class="ctr2" id="g11">3</td><td class="ctr1" id="h11">7</td><td class="ctr2" id="i11">7</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a2"><a href="MatrixOperations.java.html#L21" class="el_method">add(Matrix)</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="80" height="10" title="141" alt="141"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="87" height="10" title="16" alt="16"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">9</td><td class="ctr2" id="g2">9</td><td class="ctr1" id="h6">14</td><td class="ctr2" id="i6">14</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a23"><a href="MatrixOperations.java.html#L612" class="el_method">ref()</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="114" alt="114"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f4">7</td><td class="ctr2" id="g4">7</td><td class="ctr1" id="h2">17</td><td class="ctr2" id="i2">17</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a26"><a href="MatrixOperations.java.html#L791" class="el_method">rrefNoPivot()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="61" height="10" title="108" alt="108"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="14" alt="14"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f3">8</td><td class="ctr2" id="g3">8</td><td class="ctr1" id="h3">17</td><td class="ctr2" id="i3">17</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a11"><a href="MatrixOperations.java.html#L148" class="el_method">elemMult(Matrix)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="59" height="10" title="104" alt="104"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f12">3</td><td class="ctr2" id="g12">3</td><td class="ctr1" id="h12">7</td><td class="ctr2" id="i12">7</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a8"><a href="MatrixOperations.java.html#L436" class="el_method">detRec(Matrix)</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="58" height="10" title="102" alt="102"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f6">6</td><td class="ctr2" id="g6">6</td><td class="ctr1" id="h4">16</td><td class="ctr2" id="i4">16</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a9"><a href="MatrixOperations.java.html#L266" class="el_method">directSum(Matrix[])</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="52" height="10" title="91" alt="91"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">4</td><td class="ctr2" id="g8">4</td><td class="ctr1" id="h5">16</td><td class="ctr2" id="i5">16</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a29"><a href="MatrixOperations.java.html#L184" class="el_method">scalMult(CNumber)</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="45" height="10" title="80" alt="80"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f13">3</td><td class="ctr2" id="g13">3</td><td class="ctr1" id="h17">6</td><td class="ctr2" id="i17">6</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a35"><a href="MatrixOperations.java.html#L81" class="el_method">sub(Matrix)</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="41" height="10" title="72" alt="72"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h13">7</td><td class="ctr2" id="i13">7</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a36"><a href="MatrixOperations.java.html#L352" class="el_method">T()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="39" height="10" title="69" alt="69"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f5">7</td><td class="ctr2" id="g5">7</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a6"><a href="MatrixOperations.java.html#L492" class="el_method">det()</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="34" height="10" title="60" alt="60"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f9">4</td><td class="ctr2" id="g9">4</td><td class="ctr1" id="h7">10</td><td class="ctr2" id="i7">10</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a17"><a href="MatrixOperations.java.html#L925" class="el_method">inverse()</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="33" height="10" title="59" alt="59"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f10">4</td><td class="ctr2" id="g10">4</td><td class="ctr1" id="h8">10</td><td class="ctr2" id="i8">10</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a1"><a href="MatrixOperations.java.html#L61" class="el_method">add(double)</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="54" alt="54"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f15">3</td><td class="ctr2" id="g15">3</td><td class="ctr1" id="h18">6</td><td class="ctr2" id="i18">6</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a7"><a href="MatrixOperations.java.html#L471" class="el_method">detQR(Matrix)</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="46" alt="46"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f23">2</td><td class="ctr2" id="g23">2</td><td class="ctr1" id="h19">6</td><td class="ctr2" id="i19">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a19"><a href="MatrixOperations.java.html#L117" class="el_method">mult(Matrix)</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="43" alt="43"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f7">6</td><td class="ctr2" id="g7">6</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a31"><a href="MatrixOperations.java.html#L301" class="el_method">sqrt()</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f16">3</td><td class="ctr2" id="g16">3</td><td class="ctr1" id="h20">6</td><td class="ctr2" id="i20">6</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a0"><a href="MatrixOperations.java.html#L322" class="el_method">abs()</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f17">3</td><td class="ctr2" id="g17">3</td><td class="ctr1" id="h21">6</td><td class="ctr2" id="i21">6</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a5"><a href="MatrixOperations.java.html#L379" class="el_method">conjugate()</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f18">3</td><td class="ctr2" id="g18">3</td><td class="ctr1" id="h22">6</td><td class="ctr2" id="i22">6</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a38"><a href="MatrixOperations.java.html#L850" class="el_method">trace()</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="39" alt="39"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f19">3</td><td class="ctr2" id="g19">3</td><td class="ctr1" id="h14">7</td><td class="ctr2" id="i14">7</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a18"><a href="MatrixOperations.java.html#L981" class="el_method">inverseTriU(Matrix)</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="38" alt="38"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f20">3</td><td class="ctr2" id="g20">3</td><td class="ctr1" id="h15">7</td><td class="ctr2" id="i15">7</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a22"><a href="MatrixOperations.java.html#L1003" class="el_method">recep()</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="38" alt="38"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h23">5</td><td class="ctr2" id="i23">5</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a21"><a href="MatrixOperations.java.html#L889" class="el_method">rank()</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="14" height="10" title="26" alt="26"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h16">7</td><td class="ctr2" id="i16">7</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a12"><a href="MatrixOperations.java.html#L833" class="el_method">erref()</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="14" alt="14"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d25"/><td class="ctr2" id="e25">n/a</td><td class="ctr1" id="f25">1</td><td class="ctr2" id="g25">1</td><td class="ctr1" id="h24">4</td><td class="ctr2" id="i24">4</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a28"><a href="MatrixOperations.java.html#L231" class="el_method">scalDiv(double)</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="11" alt="11"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d26"/><td class="ctr2" id="e26">n/a</td><td class="ctr1" id="f26">1</td><td class="ctr2" id="g26">1</td><td class="ctr1" id="h25">2</td><td class="ctr2" id="i25">2</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a20"><a href="MatrixOperations.java.html#L913" class="el_method">nullity()</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="9" alt="9"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d27"/><td class="ctr2" id="e27">n/a</td><td class="ctr1" id="f27">1</td><td class="ctr2" id="g27">1</td><td class="ctr1" id="h26">2</td><td class="ctr2" id="i26">2</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a27"><a href="MatrixOperations.java.html#L243" class="el_method">scalDiv(CNumber)</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d28"/><td class="ctr2" id="e28">n/a</td><td class="ctr1" id="f28">1</td><td class="ctr2" id="g28">1</td><td class="ctr1" id="h27">2</td><td class="ctr2" id="i27">2</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a25"><a href="MatrixOperations.java.html#L677" class="el_method">rref(boolean)</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f24">2</td><td class="ctr2" id="g24">2</td><td class="ctr1" id="h28">2</td><td class="ctr2" id="i28">2</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a30"><a href="MatrixOperations.java.html#L173" class="el_method">scalMult(double)</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="7" alt="7"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d29"/><td class="ctr2" id="e29">n/a</td><td class="ctr1" id="f29">1</td><td class="ctr2" id="g29">1</td><td class="ctr1" id="h29">1</td><td class="ctr2" id="i29">1</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a34"><a href="MatrixOperations.java.html#L102" class="el_method">sub(double)</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d30"/><td class="ctr2" id="e30">n/a</td><td class="ctr1" id="f30">1</td><td class="ctr2" id="g30">1</td><td class="ctr1" id="h30">1</td><td class="ctr2" id="i30">1</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a13"><a href="MatrixOperations.java.html#L255" class="el_method">fip(Matrix)</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d31"/><td class="ctr2" id="e31">n/a</td><td class="ctr1" id="f31">1</td><td class="ctr2" id="g31">1</td><td class="ctr1" id="h31">1</td><td class="ctr2" id="i31">1</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a32"><a href="MatrixOperations.java.html#L519" class="el_method">stack(Matrix)</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d32"/><td class="ctr2" id="e32">n/a</td><td class="ctr1" id="f32">1</td><td class="ctr2" id="g32">1</td><td class="ctr1" id="h32">1</td><td class="ctr2" id="i32">1</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a3"><a href="MatrixOperations.java.html#L589" class="el_method">augment(Matrix)</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d33"/><td class="ctr2" id="e33">n/a</td><td class="ctr1" id="f33">1</td><td class="ctr2" id="g33">1</td><td class="ctr1" id="h33">1</td><td class="ctr2" id="i33">1</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a4"><a href="MatrixOperations.java.html#L400" class="el_method">conjT()</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h34">1</td><td class="ctr2" id="i34">1</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a15"><a href="MatrixOperations.java.html#L412" class="el_method">hermAdjoint()</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">1</td><td class="ctr2" id="i35">1</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a14"><a href="MatrixOperations.java.html#L424" class="el_method">H()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">1</td><td class="ctr2" id="i36">1</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a39"><a href="MatrixOperations.java.html#L341" class="el_method">transpose()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">1</td><td class="ctr2" id="i37">1</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a37"><a href="MatrixOperations.java.html#L875" class="el_method">tr()</a></td><td class="bar" id="b38"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i38">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a16"><a href="MatrixOperations.java.html#L962" class="el_method">inv()</a></td><td class="bar" id="b39"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i39">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>MatrixOperations</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <a href="index.html" class="el_package">linalg</a> &gt; <span class="el_class">MatrixOperations</span></div><h1>MatrixOperations</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">2,106 of 2,106</td><td class="ctr2">0%</td><td class="bar">186 of 186</td><td class="ctr2">0%</td><td class="ctr1">134</td><td class="ctr2">134</td><td class="ctr1">283</td><td class="ctr2">283</td><td class="ctr1">41</td><td class="ctr2">41</td></tr></tfoot><tbody><tr><td id="a34"><a href="MatrixOperations.java.html#L535" class="el_method">stack(Matrix, int)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="210" alt="210"/></td><td class="ctr2" id="c0">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="109" height="10" title="20" alt="20"/></td><td class="ctr2" id="e0">0%</td><td class="ctr1" id="f1">11</td><td class="ctr2" id="g1">11</td><td class="ctr1" id="h1">22</td><td class="ctr2" id="i1">22</td><td class="ctr1" id="j0">1</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a25"><a href="MatrixOperations.java.html#L703" class="el_method">rref()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="103" height="10" title="181" alt="181"/></td><td class="ctr2" id="c1">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="22" alt="22"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">12</td><td class="ctr2" id="g0">12</td><td class="ctr1" id="h0">30</td><td class="ctr2" id="i0">30</td><td class="ctr1" id="j1">1</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a10"><a href="MatrixOperations.java.html#L205" class="el_method">elemDiv(Matrix)</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="168" alt="168"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f11">3</td><td class="ctr2" id="g11">3</td><td class="ctr1" id="h12">7</td><td class="ctr2" id="i12">7</td><td class="ctr1" id="j2">1</td><td class="ctr2" id="k2">1</td></tr><tr><td id="a2"><a href="MatrixOperations.java.html#L21" class="el_method">add(Matrix)</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="80" height="10" title="141" alt="141"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="87" height="10" title="16" alt="16"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">9</td><td class="ctr2" id="g2">9</td><td class="ctr1" id="h6">14</td><td class="ctr2" id="i6">14</td><td class="ctr1" id="j3">1</td><td class="ctr2" id="k3">1</td></tr><tr><td id="a24"><a href="MatrixOperations.java.html#L612" class="el_method">ref()</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="114" alt="114"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f4">7</td><td class="ctr2" id="g4">7</td><td class="ctr1" id="h2">17</td><td class="ctr2" id="i2">17</td><td class="ctr1" id="j4">1</td><td class="ctr2" id="k4">1</td></tr><tr><td id="a27"><a href="MatrixOperations.java.html#L791" class="el_method">rrefNoPivot()</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="61" height="10" title="108" alt="108"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="76" height="10" title="14" alt="14"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f3">8</td><td class="ctr2" id="g3">8</td><td class="ctr1" id="h3">17</td><td class="ctr2" id="i3">17</td><td class="ctr1" id="j5">1</td><td class="ctr2" id="k5">1</td></tr><tr><td id="a11"><a href="MatrixOperations.java.html#L148" class="el_method">elemMult(Matrix)</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="59" height="10" title="104" alt="104"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f12">3</td><td class="ctr2" id="g12">3</td><td class="ctr1" id="h13">7</td><td class="ctr2" id="i13">7</td><td class="ctr1" id="j6">1</td><td class="ctr2" id="k6">1</td></tr><tr><td id="a8"><a href="MatrixOperations.java.html#L436" class="el_method">detRec(Matrix)</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="58" height="10" title="102" alt="102"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f6">6</td><td class="ctr2" id="g6">6</td><td class="ctr1" id="h4">16</td><td class="ctr2" id="i4">16</td><td class="ctr1" id="j7">1</td><td class="ctr2" id="k7">1</td></tr><tr><td id="a9"><a href="MatrixOperations.java.html#L266" class="el_method">directSum(Matrix[])</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="52" height="10" title="91" alt="91"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">4</td><td class="ctr2" id="g8">4</td><td class="ctr1" id="h5">16</td><td class="ctr2" id="i5">16</td><td class="ctr1" id="j8">1</td><td class="ctr2" id="k8">1</td></tr><tr><td id="a30"><a href="MatrixOperations.java.html#L184" class="el_method">scalMult(CNumber)</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="45" height="10" title="80" alt="80"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f13">3</td><td class="ctr2" id="g13">3</td><td class="ctr1" id="h18">6</td><td class="ctr2" id="i18">6</td><td class="ctr1" id="j9">1</td><td class="ctr2" id="k9">1</td></tr><tr><td id="a36"><a href="MatrixOperations.java.html#L81" class="el_method">sub(Matrix)</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="41" height="10" title="72" alt="72"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d14"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h14">7</td><td class="ctr2" id="i14">7</td><td class="ctr1" id="j10">1</td><td class="ctr2" id="k10">1</td></tr><tr><td id="a37"><a href="MatrixOperations.java.html#L352" class="el_method">T()</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="39" height="10" title="69" alt="69"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="65" height="10" title="12" alt="12"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f5">7</td><td class="ctr2" id="g5">7</td><td class="ctr1" id="h9">9</td><td class="ctr2" id="i9">9</td><td class="ctr1" id="j11">1</td><td class="ctr2" id="k11">1</td></tr><tr><td id="a6"><a href="MatrixOperations.java.html#L492" class="el_method">det()</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="34" height="10" title="60" alt="60"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f9">4</td><td class="ctr2" id="g9">4</td><td class="ctr1" id="h7">10</td><td class="ctr2" id="i7">10</td><td class="ctr1" id="j12">1</td><td class="ctr2" id="k12">1</td></tr><tr><td id="a17"><a href="MatrixOperations.java.html#L925" class="el_method">inverse()</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="33" height="10" title="59" alt="59"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="32" height="10" title="6" alt="6"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f10">4</td><td class="ctr2" id="g10">4</td><td class="ctr1" id="h8">10</td><td class="ctr2" id="i8">10</td><td class="ctr1" id="j13">1</td><td class="ctr2" id="k13">1</td></tr><tr><td id="a1"><a href="MatrixOperations.java.html#L61" class="el_method">add(double)</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="30" height="10" title="54" alt="54"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d15"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e14">0%</td><td class="ctr1" id="f15">3</td><td class="ctr2" id="g15">3</td><td class="ctr1" id="h19">6</td><td class="ctr2" id="i19">6</td><td class="ctr1" id="j14">1</td><td class="ctr2" id="k14">1</td></tr><tr><td id="a7"><a href="MatrixOperations.java.html#L471" class="el_method">detQR(Matrix)</a></td><td class="bar" id="b15"><img src="../jacoco-resources/redbar.gif" width="26" height="10" title="46" alt="46"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d23"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e15">0%</td><td class="ctr1" id="f23">2</td><td class="ctr2" id="g23">2</td><td class="ctr1" id="h20">6</td><td class="ctr2" id="i20">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">1</td></tr><tr><td id="a20"><a href="MatrixOperations.java.html#L117" class="el_method">mult(Matrix)</a></td><td class="bar" id="b16"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="43" alt="43"/></td><td class="ctr2" id="c16">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="54" height="10" title="10" alt="10"/></td><td class="ctr2" id="e16">0%</td><td class="ctr1" id="f7">6</td><td class="ctr2" id="g7">6</td><td class="ctr1" id="h10">8</td><td class="ctr2" id="i10">8</td><td class="ctr1" id="j16">1</td><td class="ctr2" id="k16">1</td></tr><tr><td id="a32"><a href="MatrixOperations.java.html#L301" class="el_method">sqrt()</a></td><td class="bar" id="b17"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c17">0%</td><td class="bar" id="d16"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e17">0%</td><td class="ctr1" id="f16">3</td><td class="ctr2" id="g16">3</td><td class="ctr1" id="h21">6</td><td class="ctr2" id="i21">6</td><td class="ctr1" id="j17">1</td><td class="ctr2" id="k17">1</td></tr><tr><td id="a0"><a href="MatrixOperations.java.html#L322" class="el_method">abs()</a></td><td class="bar" id="b18"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c18">0%</td><td class="bar" id="d17"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e18">0%</td><td class="ctr1" id="f17">3</td><td class="ctr2" id="g17">3</td><td class="ctr1" id="h22">6</td><td class="ctr2" id="i22">6</td><td class="ctr1" id="j18">1</td><td class="ctr2" id="k18">1</td></tr><tr><td id="a5"><a href="MatrixOperations.java.html#L379" class="el_method">conjugate()</a></td><td class="bar" id="b19"><img src="../jacoco-resources/redbar.gif" width="24" height="10" title="42" alt="42"/></td><td class="ctr2" id="c19">0%</td><td class="bar" id="d18"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e19">0%</td><td class="ctr1" id="f18">3</td><td class="ctr2" id="g18">3</td><td class="ctr1" id="h23">6</td><td class="ctr2" id="i23">6</td><td class="ctr1" id="j19">1</td><td class="ctr2" id="k19">1</td></tr><tr><td id="a39"><a href="MatrixOperations.java.html#L850" class="el_method">trace()</a></td><td class="bar" id="b20"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="39" alt="39"/></td><td class="ctr2" id="c20">0%</td><td class="bar" id="d19"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e20">0%</td><td class="ctr1" id="f19">3</td><td class="ctr2" id="g19">3</td><td class="ctr1" id="h15">7</td><td class="ctr2" id="i15">7</td><td class="ctr1" id="j20">1</td><td class="ctr2" id="k20">1</td></tr><tr><td id="a19"><a href="MatrixOperations.java.html#L1015" class="el_method">main(String[])</a></td><td class="bar" id="b21"><img src="../jacoco-resources/redbar.gif" width="22" height="10" title="39" alt="39"/></td><td class="ctr2" id="c21">0%</td><td class="bar" id="d25"/><td class="ctr2" id="e25">n/a</td><td class="ctr1" id="f25">1</td><td class="ctr2" id="g25">1</td><td class="ctr1" id="h11">8</td><td class="ctr2" id="i11">8</td><td class="ctr1" id="j21">1</td><td class="ctr2" id="k21">1</td></tr><tr><td id="a18"><a href="MatrixOperations.java.html#L981" class="el_method">inverseTriU(Matrix)</a></td><td class="bar" id="b22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="38" alt="38"/></td><td class="ctr2" id="c22">0%</td><td class="bar" id="d20"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e21">0%</td><td class="ctr1" id="f20">3</td><td class="ctr2" id="g20">3</td><td class="ctr1" id="h16">7</td><td class="ctr2" id="i16">7</td><td class="ctr1" id="j22">1</td><td class="ctr2" id="k22">1</td></tr><tr><td id="a23"><a href="MatrixOperations.java.html#L1003" class="el_method">recep()</a></td><td class="bar" id="b23"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="38" alt="38"/></td><td class="ctr2" id="c23">0%</td><td class="bar" id="d21"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e22">0%</td><td class="ctr1" id="f21">3</td><td class="ctr2" id="g21">3</td><td class="ctr1" id="h24">5</td><td class="ctr2" id="i24">5</td><td class="ctr1" id="j23">1</td><td class="ctr2" id="k23">1</td></tr><tr><td id="a22"><a href="MatrixOperations.java.html#L889" class="el_method">rank()</a></td><td class="bar" id="b24"><img src="../jacoco-resources/redbar.gif" width="14" height="10" title="26" alt="26"/></td><td class="ctr2" id="c24">0%</td><td class="bar" id="d22"><img src="../jacoco-resources/redbar.gif" width="21" height="10" title="4" alt="4"/></td><td class="ctr2" id="e23">0%</td><td class="ctr1" id="f22">3</td><td class="ctr2" id="g22">3</td><td class="ctr1" id="h17">7</td><td class="ctr2" id="i17">7</td><td class="ctr1" id="j24">1</td><td class="ctr2" id="k24">1</td></tr><tr><td id="a12"><a href="MatrixOperations.java.html#L833" class="el_method">erref()</a></td><td class="bar" id="b25"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="14" alt="14"/></td><td class="ctr2" id="c25">0%</td><td class="bar" id="d26"/><td class="ctr2" id="e26">n/a</td><td class="ctr1" id="f26">1</td><td class="ctr2" id="g26">1</td><td class="ctr1" id="h25">4</td><td class="ctr2" id="i25">4</td><td class="ctr1" id="j25">1</td><td class="ctr2" id="k25">1</td></tr><tr><td id="a29"><a href="MatrixOperations.java.html#L231" class="el_method">scalDiv(double)</a></td><td class="bar" id="b26"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="11" alt="11"/></td><td class="ctr2" id="c26">0%</td><td class="bar" id="d27"/><td class="ctr2" id="e27">n/a</td><td class="ctr1" id="f27">1</td><td class="ctr2" id="g27">1</td><td class="ctr1" id="h26">2</td><td class="ctr2" id="i26">2</td><td class="ctr1" id="j26">1</td><td class="ctr2" id="k26">1</td></tr><tr><td id="a21"><a href="MatrixOperations.java.html#L913" class="el_method">nullity()</a></td><td class="bar" id="b27"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="9" alt="9"/></td><td class="ctr2" id="c27">0%</td><td class="bar" id="d28"/><td class="ctr2" id="e28">n/a</td><td class="ctr1" id="f28">1</td><td class="ctr2" id="g28">1</td><td class="ctr1" id="h27">2</td><td class="ctr2" id="i27">2</td><td class="ctr1" id="j27">1</td><td class="ctr2" id="k27">1</td></tr><tr><td id="a28"><a href="MatrixOperations.java.html#L243" class="el_method">scalDiv(CNumber)</a></td><td class="bar" id="b28"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="c28">0%</td><td class="bar" id="d29"/><td class="ctr2" id="e29">n/a</td><td class="ctr1" id="f29">1</td><td class="ctr2" id="g29">1</td><td class="ctr1" id="h28">2</td><td class="ctr2" id="i28">2</td><td class="ctr1" id="j28">1</td><td class="ctr2" id="k28">1</td></tr><tr><td id="a26"><a href="MatrixOperations.java.html#L677" class="el_method">rref(boolean)</a></td><td class="bar" id="b29"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="c29">0%</td><td class="bar" id="d24"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="2" alt="2"/></td><td class="ctr2" id="e24">0%</td><td class="ctr1" id="f24">2</td><td class="ctr2" id="g24">2</td><td class="ctr1" id="h29">2</td><td class="ctr2" id="i29">2</td><td class="ctr1" id="j29">1</td><td class="ctr2" id="k29">1</td></tr><tr><td id="a31"><a href="MatrixOperations.java.html#L173" class="el_method">scalMult(double)</a></td><td class="bar" id="b30"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="7" alt="7"/></td><td class="ctr2" id="c30">0%</td><td class="bar" id="d30"/><td class="ctr2" id="e30">n/a</td><td class="ctr1" id="f30">1</td><td class="ctr2" id="g30">1</td><td class="ctr1" id="h30">1</td><td class="ctr2" id="i30">1</td><td class="ctr1" id="j30">1</td><td class="ctr2" id="k30">1</td></tr><tr><td id="a35"><a href="MatrixOperations.java.html#L102" class="el_method">sub(double)</a></td><td class="bar" id="b31"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c31">0%</td><td class="bar" id="d31"/><td class="ctr2" id="e31">n/a</td><td class="ctr1" id="f31">1</td><td class="ctr2" id="g31">1</td><td class="ctr1" id="h31">1</td><td class="ctr2" id="i31">1</td><td class="ctr1" id="j31">1</td><td class="ctr2" id="k31">1</td></tr><tr><td id="a13"><a href="MatrixOperations.java.html#L255" class="el_method">fip(Matrix)</a></td><td class="bar" id="b32"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c32">0%</td><td class="bar" id="d32"/><td class="ctr2" id="e32">n/a</td><td class="ctr1" id="f32">1</td><td class="ctr2" id="g32">1</td><td class="ctr1" id="h32">1</td><td class="ctr2" id="i32">1</td><td class="ctr1" id="j32">1</td><td class="ctr2" id="k32">1</td></tr><tr><td id="a33"><a href="MatrixOperations.java.html#L519" class="el_method">stack(Matrix)</a></td><td class="bar" id="b33"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c33">0%</td><td class="bar" id="d33"/><td class="ctr2" id="e33">n/a</td><td class="ctr1" id="f33">1</td><td class="ctr2" id="g33">1</td><td class="ctr1" id="h33">1</td><td class="ctr2" id="i33">1</td><td class="ctr1" id="j33">1</td><td class="ctr2" id="k33">1</td></tr><tr><td id="a3"><a href="MatrixOperations.java.html#L589" class="el_method">augment(Matrix)</a></td><td class="bar" id="b34"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="5" alt="5"/></td><td class="ctr2" id="c34">0%</td><td class="bar" id="d34"/><td class="ctr2" id="e34">n/a</td><td class="ctr1" id="f34">1</td><td class="ctr2" id="g34">1</td><td class="ctr1" id="h34">1</td><td class="ctr2" id="i34">1</td><td class="ctr1" id="j34">1</td><td class="ctr2" id="k34">1</td></tr><tr><td id="a4"><a href="MatrixOperations.java.html#L400" class="el_method">conjT()</a></td><td class="bar" id="b35"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c35">0%</td><td class="bar" id="d35"/><td class="ctr2" id="e35">n/a</td><td class="ctr1" id="f35">1</td><td class="ctr2" id="g35">1</td><td class="ctr1" id="h35">1</td><td class="ctr2" id="i35">1</td><td class="ctr1" id="j35">1</td><td class="ctr2" id="k35">1</td></tr><tr><td id="a15"><a href="MatrixOperations.java.html#L412" class="el_method">hermAdjoint()</a></td><td class="bar" id="b36"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c36">0%</td><td class="bar" id="d36"/><td class="ctr2" id="e36">n/a</td><td class="ctr1" id="f36">1</td><td class="ctr2" id="g36">1</td><td class="ctr1" id="h36">1</td><td class="ctr2" id="i36">1</td><td class="ctr1" id="j36">1</td><td class="ctr2" id="k36">1</td></tr><tr><td id="a14"><a href="MatrixOperations.java.html#L424" class="el_method">H()</a></td><td class="bar" id="b37"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="4" alt="4"/></td><td class="ctr2" id="c37">0%</td><td class="bar" id="d37"/><td class="ctr2" id="e37">n/a</td><td class="ctr1" id="f37">1</td><td class="ctr2" id="g37">1</td><td class="ctr1" id="h37">1</td><td class="ctr2" id="i37">1</td><td class="ctr1" id="j37">1</td><td class="ctr2" id="k37">1</td></tr><tr><td id="a40"><a href="MatrixOperations.java.html#L341" class="el_method">transpose()</a></td><td class="bar" id="b38"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c38">0%</td><td class="bar" id="d38"/><td class="ctr2" id="e38">n/a</td><td class="ctr1" id="f38">1</td><td class="ctr2" id="g38">1</td><td class="ctr1" id="h38">1</td><td class="ctr2" id="i38">1</td><td class="ctr1" id="j38">1</td><td class="ctr2" id="k38">1</td></tr><tr><td id="a38"><a href="MatrixOperations.java.html#L875" class="el_method">tr()</a></td><td class="bar" id="b39"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c39">0%</td><td class="bar" id="d39"/><td class="ctr2" id="e39">n/a</td><td class="ctr1" id="f39">1</td><td class="ctr2" id="g39">1</td><td class="ctr1" id="h39">1</td><td class="ctr2" id="i39">1</td><td class="ctr1" id="j39">1</td><td class="ctr2" id="k39">1</td></tr><tr><td id="a16"><a href="MatrixOperations.java.html#L962" class="el_method">inv()</a></td><td class="bar" id="b40"><img src="../jacoco-resources/redbar.gif" width="1" height="10" title="3" alt="3"/></td><td class="ctr2" id="c40">0%</td><td class="bar" id="d40"/><td class="ctr2" id="e40">n/a</td><td class="ctr1" id="f40">1</td><td class="ctr2" id="g40">1</td><td class="ctr1" id="h40">1</td><td class="ctr2" id="i40">1</td><td class="ctr1" id="j40">1</td><td class="ctr2" id="k40">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/MatrixOperations.java.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>MatrixOperations.java</title><link rel=\"stylesheet\" href=\"../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <a href=\"index.source.html\" class=\"el_package\">linalg</a> &gt; <span class=\"el_source\">MatrixOperations.java</span></div><h1>MatrixOperations.java</h1><pre class=\"source lang-java linenums\">package linalg;\r\n\r\nimport linalg.complex_number.CNumber;\r\nimport linalg.concurrent.ConcurrentMatrixAddition;\r\n\r\n/**\r\n * This interface provides several methods useful for matrix operations.\r\n * \r\n * @author Jacob Watters\r\n */\r\ninterface MatrixOperations {\r\n\r\n\r\n\t/**\r\n\t * Performs matrix addition on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to add to the instance matrix\r\n\t * @return result of matrix addition\r\n\t */\r\n\t default Matrix add(Matrix B) {\r\n<span class=\"nc\" id=\"L21\">\t\t Matrix A = (Matrix) this;</span>\r\n\t\t Matrix sum;\r\n\r\n<span class=\"nc\" id=\"L24\">\t\t CNumber[][] C = new CNumber[A.m][A.n];</span>\r\n<span class=\"nc\" id=\"L25\">\t\t MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\r\n<span class=\"nc bnc\" id=\"L27\" title=\"All 8 branches missed.\">\t\t if((A.m &gt; 1200 &amp;&amp; A.n &gt; 1200) || A.m &gt; 80000 || A.n &gt; 80000) {</span>\r\n\r\n\t\t\t // Use concurrent algorithm.\r\n<span class=\"nc\" id=\"L30\">\t\t\t ConcurrentMatrixAddition adder = new ConcurrentMatrixAddition(A, B);</span>\r\n<span class=\"nc\" id=\"L31\">\t\t\t sum = adder.add();</span>\r\n\r\n<span class=\"nc\" id=\"L33\">\t\t } else {</span>\r\n\r\n\t\t\t // Use standard algorithm\r\n<span class=\"nc bnc\" id=\"L36\" title=\"All 2 branches missed.\">\t\t\t for(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L37\" title=\"All 2 branches missed.\">\t\t\t\t for(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L38\" title=\"All 4 branches missed.\">\t\t\t\t\t if(A.entries[i][j].isReal() &amp;&amp; B.entries[i][j].isReal()) {</span>\r\n<span class=\"nc\" id=\"L39\">\t\t\t\t\t\t C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,</span>\r\n\t\t\t\t\t\t\t\t 0);\r\n\t\t\t\t\t } else {\r\n<span class=\"nc\" id=\"L42\">\t\t\t\t\t\t C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,</span>\r\n\t\t\t\t\t\t\t\t A.entries[i][j].im + B.entries[i][j].im);\r\n\t\t\t\t\t }\r\n\t\t\t\t }\r\n\t\t\t }\r\n\r\n<span class=\"nc\" id=\"L48\">\t\t\t sum = new Matrix(C);</span>\r\n\t\t }\r\n\r\n<span class=\"nc\" id=\"L51\">\t\t return sum;</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds the value of a to all entries of matrix.\r\n\t * @param a Value to add to matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix add(double a) {\r\n<span class=\"nc\" id=\"L61\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L62\">\t\tCNumber[][] C = new CNumber[A.m][A.n];</span>\r\n\r\n<span class=\"nc bnc\" id=\"L64\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L65\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L66\">\t\t\t\tC[i][j] = new CNumber(A.entries[i][j].re + a, A.entries[i][j].im);</span>\r\n\t\t\t}\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L70\">\t\treturn new Matrix(C);</span>\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Performs matrix subtraction on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to subtract to the instance matrix\r\n\t * @return result of matrix subtraction\r\n\t */\r\n\t default Matrix sub(Matrix B) {\r\n<span class=\"nc\" id=\"L81\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L82\">\t\tCNumber[][] C = new CNumber[A.m][A.n];</span>\r\n<span class=\"nc\" id=\"L83\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L85\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L86\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L87\">\t\t\t\tC[i][j] = new CNumber(A.entries[i][j].re - B.entries[i][j].re,</span>\r\n\t\t\t\t\t\tA.entries[i][j].im - B.entries[i][j].im);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L92\">\t\treturn new Matrix(C);</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Subtracts the value of a from all entries of matrix.\r\n\t * @param a Value to subtract from matrix.\r\n\t * @return A new matrix with the value of a added to this matrix.\r\n\t */\r\n\tdefault Matrix sub(double a) {\r\n<span class=\"nc\" id=\"L102\">\t\t return this.add(-a);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs matrix multiplication on two matrices. The instance matrix\r\n\t * must have the same number of columns as the rows of B.\r\n\t * \r\n\t * If the instance matrix is a kxm matrix and B is a \r\n\t * m x n matrix then the result will be a k x n matrix.\r\n\t * \r\n\t * @param B - matrix to multiply to the instance matrix\r\n\t * @return result of matrix multiplication\r\n\t */\r\n\t default Matrix mult(Matrix B) {\r\n<span class=\"nc\" id=\"L117\">\t\tMatrix A = (Matrix) this;</span>\r\n\r\n<span class=\"nc bnc\" id=\"L119\" title=\"All 2 branches missed.\">\t\tif(!MatrixComparisons.matMultCheck(A, B)) {</span>\r\n<span class=\"nc\" id=\"L120\">\t\t\tthrow new IllegalArgumentException(&quot;Number of columns in first matrix must match \\n&quot;</span>\r\n<span class=\"nc\" id=\"L121\">\t\t\t\t\t+ &quot;number of rows in second matrix but got &quot; + A.shape() + &quot; and &quot; + B.shape() + &quot;.&quot;);</span>\r\n\t\t}\r\n\r\n\t\tMatrix product;\r\n\r\n<span class=\"nc bnc\" id=\"L126\" title=\"All 8 branches missed.\">\t\tif(A.n &gt;= 250 &amp;&amp; A.m &gt;= 250 || A.m &gt;= 1000 || A.n &gt;= 1000) {</span>\r\n<span class=\"nc\" id=\"L127\">\t\t\tproduct = MatrixMultiplicationAlgorithms.concurrent(A, B);</span>\r\n\t\t} else {\r\n<span class=\"nc\" id=\"L129\">\t\t\tproduct = MatrixMultiplicationAlgorithms.standard(A, B);</span>\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L132\">\t\treturn product;</span>\r\n\t}\r\n\r\n\r\n\t// TODO: Add method for Matrix vector multiplication i.e. mult(Vector b) to compute the matrix multiplication of a\r\n\t//\t\tmatrix A and a column vector b.\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise multiplication of two matrices.\r\n\t * \r\n\t * @throws IllegalArgumentException If matrices do not have the same dimension.\r\n\t * @param B - matrix to multiply element-wise to this matrix.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemMult(Matrix B) {\r\n<span class=\"nc\" id=\"L148\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L149\">\t\tCNumber[][] C = new CNumber[A.m][A.n];</span>\r\n<span class=\"nc\" id=\"L150\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L152\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L153\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n\r\n<span class=\"nc\" id=\"L155\">\t\t\t\tC[i][j] = new CNumber(A.entries[i][j].re*B.entries[i][j].re - A.entries[i][j].im*B.entries[i][j].im,</span>\r\n\t\t\t\t\t\tA.entries[i][j].re*B.entries[i][j].im + A.entries[i][j].im*B.entries[i][j].re);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L161\">\t\treturn new Matrix(C);</span>\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply this matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\tdefault Matrix scalMult(double factor) {\r\n<span class=\"nc\" id=\"L173\">\t\treturn this.scalMult(new CNumber(factor));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar multiplication of a matrix.\r\n\t * \r\n\t * @param factor - value to multiply matrix by.\r\n\t * @return The scalar multiplication of the matrix and the factor.\r\n\t */\r\n\t default Matrix scalMult(CNumber factor) {\r\n<span class=\"nc\" id=\"L184\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L185\">\t\tCNumber[][] result = new CNumber[A.m][A.n];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L187\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L188\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt;  A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L189\">\t\t\t\tresult[i][j] = new CNumber(A.entries[i][j].re*factor.re - A.entries[i][j].im*factor.im,</span>\r\n\t\t\t\t\t\tA.entries[i][j].re*factor.im + A.entries[i][j].im*factor.re);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L194\">\t\treturn new Matrix(result);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs element-wise division on two matrices of the same dimensions.\r\n\t * \r\n\t * @param B - matrix to divide element-wise the instance matrix with.\r\n\t * @return result of element-wise matrix multiplication.\r\n\t */\r\n\t default Matrix elemDiv(Matrix B) {\r\n<span class=\"nc\" id=\"L205\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L206\">\t\tCNumber[][] C = new CNumber[A.m][A.n];</span>\r\n<span class=\"nc\" id=\"L207\">\t\tMatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L209\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L210\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L211\">\t\t\t\tC[i][j] = new CNumber((A.entries[i][j].re*B.entries[i][j].re + A.entries[i][j].im*B.entries[i][j].im) /</span>\r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im),\r\n\r\n\t\t\t\t\t\t\t\t(A.entries[i][j].im*B.entries[i][j].re - A.entries[i][j].re*B.entries[i][j].im) /\r\n\t\t\t\t\t\t\t\t\t\t(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im)\r\n\t\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L220\">\t\treturn new Matrix(C);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(double divisor) {\r\n<span class=\"nc\" id=\"L231\">\t\tdouble factor = 1/divisor;</span>\r\n<span class=\"nc\" id=\"L232\">\t\treturn this.scalMult(new CNumber(factor));</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Performs scalar division of this matrix.\r\n\t * \r\n\t * @param divisor - value to divide matrix by.\r\n\t * @return The scalar division of the matrix and the divisor.\r\n\t */\r\n\t default Matrix scalDiv(CNumber divisor) {\r\n<span class=\"nc\" id=\"L243\">\t\tCNumber factor = CNumber.divide(CNumber.ONE, divisor);</span>\r\n<span class=\"nc\" id=\"L244\">\t\treturn this.scalMult(factor);</span>\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Computes the Frobenius inner product of two matrices A and B, {@code &lt;A, B&gt;}&lt;sub&gt;F&lt;/sub&gt;.\r\n\t * \r\n\t * @param B - Second matrix for the Frobenius inner product.\r\n \t * @return the Frobenius inner product.\r\n\t */\r\n\t default CNumber fip(Matrix B) {\r\n<span class=\"nc\" id=\"L255\">\t\treturn this.mult(B).tr();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix direct sum. That is, a block diagonal matrix containing all matrices from a set of matrices.\r\n\t * \r\n\t * @param matrixList - List of matrices from which to compute the matrix direct sum.\r\n\t * @return The result of direct summing the matrices in matrixList to this matrix.\r\n\t */\r\n\t default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include &quot;this&quot; in the direct sum.\r\n<span class=\"nc\" id=\"L266\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L267\">\t\tint new_m = A.m, new_n = A.n,</span>\r\n<span class=\"nc\" id=\"L268\">\t\t\tcurrent_m = 0, current_n = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L270\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;matrixList.length; i++) {\t\t\t</span>\r\n<span class=\"nc\" id=\"L271\">\t\t\tnew_m += matrixList[i].m;</span>\r\n<span class=\"nc\" id=\"L272\">\t\t\tnew_n += matrixList[i].n;</span>\r\n\t\t}\r\n\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L276\">\t\tMatrix directSum = new Matrix(new_m, new_n);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L278\" title=\"All 2 branches missed.\">\t\tfor(int i=-1; i&lt;matrixList.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L279\" title=\"All 2 branches missed.\">\t\t\tif(i==-1) {</span>\r\n<span class=\"nc\" id=\"L280\">\t\t\t\tdirectSum.setSlice(current_m, current_n, A);</span>\r\n<span class=\"nc\" id=\"L281\">\t\t\t\tcurrent_m += A.m;</span>\r\n<span class=\"nc\" id=\"L282\">\t\t\t\tcurrent_n += A.n;</span>\r\n\t\t\t} else {\r\n<span class=\"nc\" id=\"L284\">\t\t\t\tdirectSum.setSlice(current_m, current_n, matrixList[i]);</span>\r\n<span class=\"nc\" id=\"L285\">\t\t\t\tcurrent_m += matrixList[i].m;</span>\r\n<span class=\"nc\" id=\"L286\">\t\t\t\tcurrent_n += matrixList[i].n;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L290\">\t\treturn directSum;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes element wise square root of the matrix. All square roots are the positive root or, in\r\n\t * the case of complex entries, the root with positive real part.\r\n\t * \r\n\t * @return The element-wise square root of this matrix.\r\n\t */\r\n\t default Matrix sqrt() {\r\n<span class=\"nc\" id=\"L301\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L302\">\t\tCNumber[][] root = new CNumber[A.m][A.n];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L304\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L305\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L306\">\t\t\t\troot[i][j] = CNumber.sqrt(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L310\">\t\treturn new Matrix(root);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes absolute value, element-wise, of a matrix.\r\n\t * If any of the matrix cells are complex, this will result\r\n\t * in the magnitude of that value.\r\n\t * \r\n\t * @return - element-wise absolute value of matrix.\r\n\t */\r\n\t default Matrix abs() {\r\n<span class=\"nc\" id=\"L322\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L323\">\t\tCNumber[][] abs = new CNumber[A.m][A.n];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L325\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L326\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L327\">\t\t\t\tabs[i][j] = CNumber.abs(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L331\">\t\treturn new Matrix(abs);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as &lt;code&gt; Matrix.T() &lt;/code&gt;\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix transpose() {\r\n<span class=\"nc\" id=\"L341\">\t\treturn this.T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Transposes Matrix. Same as &lt;code&gt; Matrix.transpose() &lt;/code&gt;\r\n\t * \r\n\t * @return transpose of matrix\r\n\t */\r\n\t default Matrix T() {\r\n<span class=\"nc\" id=\"L352\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L353\">\t\tCNumber[][] At = new CNumber[A.n][A.m];</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L355\">\t    final int BLOCK_SIZE = 16;</span>\r\n\t    \r\n\t    // Compute transpose using blocked algorithm\r\n<span class=\"nc bnc\" id=\"L358\" title=\"All 2 branches missed.\">\t    for(int i = 0; i &lt; A.m; i += BLOCK_SIZE) {</span>\r\n<span class=\"nc bnc\" id=\"L359\" title=\"All 2 branches missed.\">\t        for (int j = 0; j &lt; A.n; j += BLOCK_SIZE) {</span>\r\n\t            // transpose the block beginning at [i,j]\r\n<span class=\"nc bnc\" id=\"L361\" title=\"All 4 branches missed.\">\t            for (int k = i; k &lt; i + BLOCK_SIZE &amp;&amp; k &lt; A.m; ++k) {</span>\r\n<span class=\"nc bnc\" id=\"L362\" title=\"All 4 branches missed.\">\t                for (int l = j; l &lt; j + BLOCK_SIZE &amp;&amp; l &lt; A.n; ++l) {</span>\r\n<span class=\"nc\" id=\"L363\">\t                    At[l][k] = A.entries[k][l];</span>\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    \r\n<span class=\"nc\" id=\"L369\">\t    return new Matrix(At);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Conjugates a matrix element-wise.\r\n\t * \r\n\t * @return Conjugate of matrix\r\n\t */\r\n\t default Matrix conjugate() {\r\n<span class=\"nc\" id=\"L379\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L380\">\t\tCNumber[][] Ac = new CNumber[A.m][A.n];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L382\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i &lt; A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L383\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L384\">\t\t\t\tAc[i][j] = CNumber.conjugate(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L388\">\t\treturn new Matrix(Ac);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the conjugate transpose of this matrix. \r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}. \r\n\t * \r\n\t * @return The conjugate transpose of this matrix.\r\n\t */\r\n\t default Matrix conjT() {\r\n<span class=\"nc\" id=\"L400\">\t\treturn this.conjugate().T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}. \r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix hermAdjoint() {\r\n<span class=\"nc\" id=\"L412\">\t\treturn this.conjugate().T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #conjT() conjT()} and {@link #hermAdjoint() hermAdjpint()}.\r\n\t * \r\n\t * @return adjoint of matrix.\r\n\t */\r\n\t default Matrix H() {\r\n<span class=\"nc\" id=\"L424\">\t\treturn this.conjugate().T();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix using reccurisive definition. This method exists\r\n\t * for computing the determinant of non-real matrices.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detRec(Matrix A) {\r\n<span class=\"nc\" id=\"L436\">\t\tCNumber value = CNumber.ZERO;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L438\" title=\"All 4 branches missed.\">\t\tif(A.m == 1 &amp;&amp; A.n == 1) { // Then we simply have a 1x1 matrix.</span>\r\n<span class=\"nc\" id=\"L439\">\t\t\treturn A.entries[0][0];</span>\r\n\t\t}\r\n<span class=\"nc bnc\" id=\"L441\" title=\"All 4 branches missed.\">\t\telse if(A.m == 2 &amp;&amp; A.n == 2) { // Then we have a 2x2 matrix, which is the base case</span>\r\n<span class=\"nc\" id=\"L442\">\t\t\tCNumber a = A.entries[0][0];</span>\r\n<span class=\"nc\" id=\"L443\">\t\t\tCNumber b = A.entries[0][1];</span>\r\n<span class=\"nc\" id=\"L444\">\t\t\tCNumber c = A.entries[1][0];</span>\r\n<span class=\"nc\" id=\"L445\">\t\t\tCNumber d = A.entries[1][1];</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L447\">\t\t\tvalue = CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));</span>\r\n<span class=\"nc\" id=\"L448\">\t\t} </span>\r\n\t\telse {\r\n<span class=\"nc bnc\" id=\"L450\" title=\"All 2 branches missed.\">\t\t\tfor(int j = 0; j &lt; A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L451\">\t\t\t\tMatrix newA = A.removeRow(0).removeCol(j);</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L453\">\t\t\t\tCNumber num = new CNumber(Math.pow(-1, j));</span>\r\n<span class=\"nc\" id=\"L454\">\t\t\t\tnum = CNumber.multiply(num, A.entries[0][j]);</span>\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L456\">\t\t\t\tvalue = CNumber.add(value, CNumber.multiply(detRec(newA), num));</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L460\">\t\treturn value;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of real matrix using QR decomposition.\r\n\t * \r\n\t * @param A - Matrix to compute determinant of.\r\n\t * @return determinant of matrix A\r\n\t */\r\n\tstatic CNumber detQR(Matrix A) {\r\n<span class=\"nc\" id=\"L471\">\t\tCNumber detQ, detR = CNumber.ONE;</span>\r\n<span class=\"nc\" id=\"L472\">\t\tMatrix[] QRh = Decompose.QR(A, true);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L474\">\t\tdetQ = new CNumber(Math.pow(-1, QRh[2].entries[0][0].getReal()));</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L476\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i&lt;QRh[1].n; i++) {</span>\r\n<span class=\"nc\" id=\"L477\">\t\t\tdetR = CNumber.multiply(detR, QRh[1].entries[i][i]);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L480\">\t\treturn CNumber.multiply(detR, detQ);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes determinant of matrix. If the matrix has\r\n\t * any complex entries, this may be a complex value.\r\n\t * Note: Currently this method only works for real matirces.\r\n\t * \r\n\t * @return determinant of matrix.\r\n\t */\r\n\t default CNumber det() {\r\n<span class=\"nc\" id=\"L492\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L494\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L495\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L498\" title=\"All 4 branches missed.\">\t\tif(A.m == 2 &amp;&amp; A.n == 2) { // Then we have a 2x2 matrix, which we can directly compute</span>\r\n<span class=\"nc\" id=\"L499\">\t\t\tCNumber a = A.entries[0][0];</span>\r\n<span class=\"nc\" id=\"L500\">\t\t\tCNumber b = A.entries[0][1];</span>\r\n<span class=\"nc\" id=\"L501\">\t\t\tCNumber c = A.entries[1][0];</span>\r\n<span class=\"nc\" id=\"L502\">\t\t\tCNumber d = A.entries[1][1];</span>\r\n\t\t\t\r\n<span class=\"nc\" id=\"L504\">\t\t\treturn CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L507\">\t\treturn detQR(A);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along rows. Both matrices must have the same number of columns\r\n\t * Also see {@link #stack(Matrix, int) stack(Matrix B, int axis)}\r\n\t * \r\n\t * @param B\r\n\t * @return\r\n\t */\r\n\t default Matrix stack(Matrix B) {\r\n<span class=\"nc\" id=\"L519\">\t\treturn this.stack(B, 0);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stacks matrices along specified axis. Axis 0 will stack matrices along the rows. Axis 1 will\r\n\t * stack matrices along columns.\r\n\t * \r\n\t * Note: To stack matrices along axis 0 they must have the same number of columns.\r\n\t * To stack matrices along axis 1 they must have the same number of rows.\r\n\t * \r\n\t * @param B - Matrix to stack\r\n\t * @param axis - Axis along which to stack matrices.\r\n\t * @return Returns A and B stacked along specified axis.\r\n\t */\r\n\t default Matrix stack(Matrix B, int axis) {\r\n<span class=\"nc\" id=\"L535\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L536\">\t\tMatrix result = null;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L538\" title=\"All 2 branches missed.\">\t\tif(axis == 0) { // Stack on rows</span>\r\n<span class=\"nc bnc\" id=\"L539\" title=\"All 2 branches missed.\">\t\t\tif(A.entries[0].length != B.entries[0].length) { // Ensure matrices have same number or columns</span>\r\n<span class=\"nc\" id=\"L540\">\t\t\t\tthrow new IllegalArgumentException(&quot;Must have same number of columns but &quot;</span>\r\n\t\t\t\t\t\t+ &quot;got &quot; + A.entries[0].length + &quot; and &quot; + B.entries[0].length);\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L544\">\t\t\tresult = new Matrix(A.entries.length+B.entries.length, A.entries[0].length);</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L546\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i &lt; result.entries.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L547\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; result.entries[0].length; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L548\" title=\"All 2 branches missed.\">\t\t\t\t\tif(i &lt; A.entries.length) { // Then copy from A.entries</span>\r\n<span class=\"nc\" id=\"L549\">\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];</span>\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n<span class=\"nc\" id=\"L551\">\t\t\t\t\t\tresult.entries[i][j] = B.entries[i-A.entries.length][j];</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n<span class=\"nc bnc\" id=\"L556\" title=\"All 2 branches missed.\">\t\telse if(axis == 1) { // Stack on cols</span>\r\n<span class=\"nc bnc\" id=\"L557\" title=\"All 2 branches missed.\">\t\t\tif(A.entries.length != B.entries.length) { // Ensure matrices have same number or rows</span>\r\n<span class=\"nc\" id=\"L558\">\t\t\t\tthrow new IllegalArgumentException(&quot;Must have same number of rows but &quot;</span>\r\n\t\t\t\t\t\t+ &quot;got &quot; + A.entries.length + &quot; and &quot; + B.entries.length);\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L562\">\t\t\tresult = new Matrix(A.entries.length, A.entries[0].length + B.entries[0].length);</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L564\" title=\"All 2 branches missed.\">\t\t\tfor(int i = 0; i &lt; result.entries.length; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L565\" title=\"All 2 branches missed.\">\t\t\t\tfor(int j = 0; j &lt; result.entries[0].length; j++) {</span>\r\n<span class=\"nc bnc\" id=\"L566\" title=\"All 2 branches missed.\">\t\t\t\t\tif(j &lt; A.entries[0].length) { // Then copy from A.entries</span>\r\n<span class=\"nc\" id=\"L567\">\t\t\t\t\t\tresult.entries[i][j] = A.entries[i][j];</span>\r\n\t\t\t\t\t} else { // the copy from B.entries\r\n<span class=\"nc\" id=\"L569\">\t\t\t\t\t\tresult.entries[i][j] = B.entries[i][j-A.entries[0].length];</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n<span class=\"nc\" id=\"L575\">\t\t\tthrow new IllegalArgumentException(&quot;axis must be 0 or 1 but got &quot; + axis);</span>\r\n\t\t}\t\t\r\n\t\t\r\n<span class=\"nc\" id=\"L578\">\t\treturn result;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Augments two matrices. This is the same as {@link #stack(Matrix, int) stack(B, 1)}\r\n\t * \r\n\t * @param B - Matrix to augment to this matrix.\r\n\t * @return The matrix B augmented to this matrix.\r\n\t */\r\n\t default Matrix augment(Matrix B) {\r\n<span class=\"nc\" id=\"L589\">\t\treturn this.stack(B, 1);</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes row-echelon form of matrix. This will be an upper-triangular matrix.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in row-echelon form if:\r\n\t *  - The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *  - The pivot of a nonzero row is always strictly to \r\n\t *    the right of the leading coefficient of the row above it.\r\n\t *  - Rows with all zero elements, if any, are below rows having a non-zero element.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row equivalent matrix in row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #rref() rref()}&lt;/code&gt; for reduced row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix\r\n\t */\r\n\t default Matrix ref() {\r\n<span class=\"nc\" id=\"L612\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\tCNumber m, scale;\r\n\t\t\r\n<span class=\"nc\" id=\"L615\">\t\tint pivotRow = 0,</span>\r\n<span class=\"nc\" id=\"L616\">\t\t\tpivotCol = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L618\" title=\"All 4 branches missed.\">\t\twhile(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>\r\n<span class=\"nc bnc\" id=\"L619\" title=\"All 2 branches missed.\">\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) { // Then we can make the pivot one.</span>\r\n<span class=\"nc\" id=\"L620\">\t\t\t\t scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>\r\n\t\t\t\t \r\n<span class=\"nc bnc\" id=\"L622\" title=\"All 2 branches missed.\">\t\t\t\t for(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>\r\n<span class=\"nc\" id=\"L623\">\t\t\t\t\t A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);</span>\r\n\t\t\t\t }\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L627\" title=\"All 2 branches missed.\">\t\t\tfor(int i=pivotRow+1; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L628\">\t\t\t\tm = A.entries[i][pivotCol];</span>\r\n\r\n<span class=\"nc bnc\" id=\"L630\" title=\"All 2 branches missed.\">\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) {</span>\r\n<span class=\"nc\" id=\"L631\">\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], </span>\r\n<span class=\"nc\" id=\"L632\">\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));</span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\t * This insures the entries to the left of the pivot are zero. \r\n\t\t\t\t * They may be a very small (in absolute value) non-zero value\r\n\t\t\t\t * resulting from errors in floating point arithmetic.\r\n\t\t\t\t */\r\n<span class=\"nc\" id=\"L641\">\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;</span>\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L644\">\t\t\tpivotRow++;</span>\r\n<span class=\"nc\" id=\"L645\">\t\t\tpivotCol++;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L648\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in reduced row-echelon form if:&lt;br&gt;\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * @param partialPivoting - Falg for use of partial pivoting.\r\n\t * &lt;pre&gt;\r\n\t *  - If true then the rref will be computed using partial pivoting.\r\n\t * \t    ~ This is equivalent to the method {@link #rref() rref()}.\r\n\t *  - If false then the rref will be computed WITHOUT using partial pivoting.\r\n\t * &lt;/pre&gt;\r\n\t * @return\r\n\t */\r\n\t default Matrix rref(boolean partialPivoting) {\r\n<span class=\"nc bnc\" id=\"L677\" title=\"All 2 branches missed.\">\t\tif(partialPivoting) return rref();</span>\r\n<span class=\"nc\" id=\"L678\">\t\telse return rrefNoPivot();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. This is done using partial pivoting.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in reduced row-echelon form if:&lt;br&gt;\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #ref() ref()}&lt;/code&gt; for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\t default Matrix rref() {\r\n<span class=\"nc\" id=\"L703\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\tCNumber mult, scale, currentMax;\r\n\t\tint maxIndex;\r\n\t\t\r\n<span class=\"nc\" id=\"L707\">\t\tint pivotRow = 0,</span>\r\n<span class=\"nc\" id=\"L708\">\t\t\tpivotCol = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L710\" title=\"All 4 branches missed.\">\t\twhile(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>\r\n<span class=\"nc\" id=\"L711\">\t\t\tmaxIndex = pivotRow;</span>\r\n<span class=\"nc\" id=\"L712\">\t\t\tcurrentMax = A.entries[pivotRow][pivotCol];</span>\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L714\" title=\"All 2 branches missed.\">\t\t\tfor(int i=pivotRow; i&lt;A.m; i++) { // Find the maximum entry in the pivot column (at or below the pivot ).</span>\r\n<span class=\"nc bnc\" id=\"L715\" title=\"All 2 branches missed.\">\t\t\t\tif(A.entries[i][pivotCol].nearZero(1.0E-12)) { </span>\r\n\t\t\t\t\t\r\n\t\t\t\t\t/* \r\n\t\t\t\t\t * If a number is very close to zero, assume it is supposed to be zero.\r\n\t\t\t\t\t * This protects against trying to manipulate a column which\r\n\t\t\t\t\t * is already in the correct form.\r\n\t\t\t\t\t */\r\n<span class=\"nc\" id=\"L722\">\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;</span>\r\n\t\t\t\t}\r\n<span class=\"nc bnc\" id=\"L724\" title=\"All 2 branches missed.\">\t\t\t\telse if(A.entries[i][pivotCol].compareTo(currentMax) &gt; 0) {</span>\r\n<span class=\"nc\" id=\"L725\">\t\t\t\t\tmaxIndex = i;</span>\r\n<span class=\"nc\" id=\"L726\">\t\t\t\t\tcurrentMax = A.entries[i][pivotCol];</span>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc bnc\" id=\"L730\" title=\"All 2 branches missed.\">\t\t\tif(!A.entries[maxIndex][pivotCol].equals(CNumber.ZERO)) { // Check that the maximum absolute value is not zero.</span>\r\n<span class=\"nc bnc\" id=\"L731\" title=\"All 2 branches missed.\">\t\t\t\tif(pivotRow != maxIndex) {</span>\r\n<span class=\"nc\" id=\"L732\">\t\t\t\t\tA = A.swapRows(pivotRow, maxIndex); // Make the row with the largest value in the pivot column the pivot for this row.</span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L735\">\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>\r\n\t\t\t\t \r\n<span class=\"nc bnc\" id=\"L737\" title=\"All 2 branches missed.\">\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row so that the pivot is 1</span>\r\n<span class=\"nc\" id=\"L738\">\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L741\" title=\"All 2 branches missed.\">\t\t\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L742\">\t\t\t\t\tmult = A.entries[i][pivotCol];</span>\r\n\t\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L744\" title=\"All 2 branches missed.\">\t\t\t\t\tif(pivotRow != i) {</span>\r\n<span class=\"nc\" id=\"L745\">\t\t\t\t\t\tA.entries[i][pivotCol] = CNumber.ZERO;</span>\r\n\t\t\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L747\" title=\"All 2 branches missed.\">\t\t\t\t\t\tfor(int k=pivotCol+1; k&lt;A.n; k++) {</span>\r\n\t\t\t\t\t\t\t\r\n<span class=\"nc\" id=\"L749\">\t\t\t\t\t\t\tCNumber value = CNumber.subtract(A.entries[i][k], </span>\r\n<span class=\"nc\" id=\"L750\">\t\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], mult));</span>\r\n<span class=\"nc\" id=\"L751\">\t\t\t\t\t\t\tA.entries[i][k] = value;</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc\" id=\"L757\">\t\t\t\tpivotRow++;</span>\r\n<span class=\"nc\" id=\"L758\">\t\t\t\tpivotCol++;</span>\r\n\t\t\t}\r\n\t\t\telse { // Then we do not have a pivot for this column (i.e. the column is all zeros).\r\n<span class=\"nc\" id=\"L761\">\t\t\t\tpivotCol++;</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L765\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced row-echelon form of matrix. \r\n\t * This is done WITHOUT using partial pivoting.&lt;br&gt;\r\n\t * \r\n\t * &lt;pre&gt;\r\n\t * A matrix is in reduced row-echelon form if:&lt;br&gt;\r\n\t *  - It is in row-echelon form. This is,\r\n\t *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.\r\n\t *      ~ The pivot of a nonzero row is always strictly to \r\n\t *        the right of the leading coefficient of the row above it.\r\n\t *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;\r\n\t *  - The pivot in each row is the only non-zero entry in its column.\r\n\t * &lt;/pre&gt;\r\n\t * \r\n\t * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.\r\n\t * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Also see &lt;code&gt;{@link #ref() ref()}&lt;/code&gt; for row-echelon form.\r\n\t * \r\n\t * @return Row-echelon form of matrix.\r\n\t */\r\n\tdefault Matrix rrefNoPivot() {\r\n<span class=\"nc\" id=\"L791\">\t\tMatrix A = ((Matrix) this).copy();</span>\r\n\t\tCNumber m, scale;\r\n\t\t\r\n<span class=\"nc\" id=\"L794\">\t\tint pivotRow = 0,</span>\r\n<span class=\"nc\" id=\"L795\">\t\t\tpivotCol = 0;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L797\" title=\"All 4 branches missed.\">\t\twhile(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>\r\n<span class=\"nc bnc\" id=\"L798\" title=\"All 2 branches missed.\">\t\t\tif(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) {</span>\r\n<span class=\"nc\" id=\"L799\">\t\t\t\tscale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>\r\n\t\t\t\t \r\n<span class=\"nc bnc\" id=\"L801\" title=\"All 2 branches missed.\">\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>\r\n<span class=\"nc\" id=\"L802\">\t\t\t\t\tA.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L806\" title=\"All 2 branches missed.\">\t\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc\" id=\"L807\">\t\t\t\tm = A.entries[i][pivotCol];</span>\r\n\t\t\t\t\r\n<span class=\"nc bnc\" id=\"L809\" title=\"All 2 branches missed.\">\t\t\t\tif(pivotRow != i) {</span>\r\n<span class=\"nc bnc\" id=\"L810\" title=\"All 2 branches missed.\">\t\t\t\t\tfor(int k=pivotCol; k&lt;A.n; k++) {</span>\r\n<span class=\"nc\" id=\"L811\">\t\t\t\t\t\tA.entries[i][k] = CNumber.subtract(A.entries[i][k], </span>\r\n<span class=\"nc\" id=\"L812\">\t\t\t\t\t\t\t\tCNumber.multiply(A.entries[pivotRow][k], m));</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n<span class=\"nc\" id=\"L817\">\t\t\tpivotRow++;</span>\r\n<span class=\"nc\" id=\"L818\">\t\t\tpivotCol++;</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L821\">\t\treturn A;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes reduced extended row-echelon form of matrix. That is, a Matrix with\r\n\t * the same number of rows is {@link #augment(Matrix) augmented} with this matrix and\r\n\t * then this augmented matrix is put into {@link #rref() reduced row-echelon form}.\r\n\t * \r\n\t * @return Returns extended row-echelon form of this matrix.\r\n\t */\r\n\t default Matrix erref() {\r\n<span class=\"nc\" id=\"L833\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L834\">\t\tMatrix I = Matrix.I(A.m);</span>\r\n<span class=\"nc\" id=\"L835\">\t\tMatrix Aug = A.augment(I);</span>\r\n\t\t\r\n<span class=\"nc\" id=\"L837\">\t\treturn Aug.rref();</span>\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Computes the trace of square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #tr() tr()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber trace() {\r\n<span class=\"nc\" id=\"L850\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L852\" title=\"All 2 branches missed.\">\t\tif(!A.isSquare()) {</span>\r\n<span class=\"nc\" id=\"L853\">\t\t\tthrow new IllegalArgumentException(&quot;Expecting matrix to be square but got &quot; + A.shape);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L856\">\t\tCNumber result = A.entries[0][0];</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L858\" title=\"All 2 branches missed.\">\t\tfor(int i = 1; i &lt; A.n; i++) {</span>\r\n<span class=\"nc\" id=\"L859\">\t\t\tresult = CNumber.add(result, A.entries[i][i]);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L862\">\t\treturn result;</span>\r\n\t} \r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the trace of a square matrix. That is, the sum \r\n\t * of the entries along the principle diagonal.\r\n\t * &lt;br&gt;&lt;br&gt;\r\n\t * This method is the same as {@link #trace() trace()}.\r\n\t * \r\n\t * @return trace of this matrix.\r\n\t */\r\n\t default CNumber tr() {\r\n<span class=\"nc\" id=\"L875\">\t\treturn this.trace();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space generated (or spanned) by its columns.\r\n\t * This is always an integer.\r\n\t * This corresponds to the maximal number of linearly independent columns of A. \r\n\t * This, in turn, is identical to the dimension of the vector space spanned by its rows\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t// TODO: Should be switched to rank revealing QR decomposition as it is more numerically stable.\r\n\t default int rank() {\r\n<span class=\"nc\" id=\"L889\">\t\tMatrix A = (Matrix) this;</span>\r\n<span class=\"nc\" id=\"L890\">\t\tMatrix rrefA = A.rref();</span>\r\n<span class=\"nc\" id=\"L891\">\t\tint rank = A.m;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L893\" title=\"All 2 branches missed.\">\t\tfor(int i=rrefA.m-1; i&gt;=0; i--) {</span>\r\n<span class=\"nc bnc\" id=\"L894\" title=\"All 2 branches missed.\">\t\t\tif(rrefA.getRowAsVector(i).isZero()) {</span>\r\n<span class=\"nc\" id=\"L895\">\t\t\t\trank--;\t\t\t</span>\r\n\t\t\t} else { \r\n\t\t\t\t// Then we have no more zero rows as rrefA is in reduced row echelon form.\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L902\">\t\treturn rank;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * The rank of a matrix A is the dimension of the vector space spanned by the nullspace of this matrix.\r\n\t * The nullify is always an integer.\r\n\t * \r\n\t * @return Returns the rank of this matrix.\r\n\t */\r\n\t default int nullity() {\r\n<span class=\"nc\" id=\"L913\">\t\tint rank = this.rank();</span>\r\n<span class=\"nc\" id=\"L914\">\t\treturn ((Matrix) this).m - rank;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A&lt;sup&gt;-1&lt;/sup&gt; satisfying AA&lt;sup&gt;-1&lt;/sup&gt;=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inverse() {\r\n<span class=\"nc\" id=\"L925\">\t\tMatrix A = (Matrix) this;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L927\" title=\"All 2 branches missed.\">\t\tif(!A.isSingular()) {</span>\r\n<span class=\"nc\" id=\"L928\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix is singular.&quot;);</span>\r\n\t\t}\r\n\r\n<span class=\"nc\" id=\"L931\">\t\tMatrix[] QR = Decompose.QR(A); // Compute the QR decomposition of A. This will be used to compute the inverse.</span>\r\n<span class=\"nc\" id=\"L932\">\t\tCNumber detR = CNumber.ONE;</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L934\" title=\"All 2 branches missed.\">\t\tfor(int i = 0; i&lt;QR[1].n; i++) { // Computing the determinant of R</span>\r\n<span class=\"nc\" id=\"L935\">\t\t\tdetR = CNumber.multiply(detR, QR[1].entries[i][i]);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L938\" title=\"All 2 branches missed.\">\t\tif(CNumber.round(detR, 10).re == 0) {</span>\r\n\t\t\t/* Then we know the matrix is singular.\r\n\t\t\t * We know this by exploiting properties of the orthogonal matrix Q and the upper triangular matrix R.\r\n\t\t\t * The determinant of an orthogonal matrix is either -1 or 1. The determinant of an upper triangular matrix R is the product\r\n\t\t\t * of the diagonals. Since A=QR det(A) = det(QR) = det(Q)*det(R). So if the determinant of R is zero, then the matrix A must be singular.\r\n\t\t\t * \r\n\t\t\t * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that, \r\n\t\t\t * so it would be redundant to call the isSingular() method and recompute the QR decomposition again.\r\n\t\t\t */\r\n<span class=\"nc\" id=\"L947\">\t\t\tthrow new IllegalArgumentException(&quot;Matrix is singular, thus can not be inverted.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n\t\t// Here we compute and return A^-1 = (R^-1)*(Q^-1)\r\n<span class=\"nc\" id=\"L951\">\t\treturn inverseTriU(QR[1]).mult(QR[0].H());</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}\r\n\t * The inverse of a Matrix A is A&lt;sup&gt;-1&lt;/sup&gt; satisfying AA&lt;sup&gt;-1&lt;/sup&gt;=I where I is the appropriately sized Identity matrix.\r\n\t * \r\n\t * @return The inverse of this matrix.\r\n\t */\r\n\t default Matrix inv() {\r\n<span class=\"nc\" id=\"L962\">\t\treturn this.inverse();</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Helper method to invert an upper triangular matrix. &lt;br&gt;\r\n\t * We can compute the inverse of an n-by-n upper triangular matrix U by solving the n systems...&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Ux=I&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;\r\n\t * \r\n\t * where 1&lt;=i&lt;=n, I is the n-by-n identity matrix, I&lt;sub&gt;i&lt;/sub&gt; is the ith column of I.&lt;br&gt;&lt;br&gt;\r\n\t * \r\n\t * Each solution becomes a column in the inverse &lt;sup&gt;-1&lt;/sub&gt;.\r\n\t * Because U is upper triangular, we can solve these n systems using backsolve.\r\n\t * \r\n\t * @param U - U is a square upper triangular matrix\r\n\t * @return Returns the inverse of U, denoted U&lt;sup&gt;-1&lt;/sub&gt;\r\n\t */\r\n\tstatic Matrix inverseTriU(Matrix U) {\r\n<span class=\"nc\" id=\"L981\">\t\tMatrix Uinv = new Matrix(U.m, U.m);</span>\r\n<span class=\"nc\" id=\"L982\">\t\tMatrix I = Matrix.I(U.m);</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L984\" title=\"All 2 branches missed.\">\t\tif(!U.isTriU()) {</span>\r\n<span class=\"nc\" id=\"L985\">\t\t\tthrow new IllegalArgumentException(&quot;U must be upper triangular.&quot;);</span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L988\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;U.m; i++)  {</span>\r\n\t\t\t// U is upper triangular, so to solve the system we simply need to use back-solve function.\r\n<span class=\"nc\" id=\"L990\">\t\t\tUinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i); </span>\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L993\">\t\treturn Uinv;</span>\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new matrix that contains the reciprocals of this matrix\r\n\t * \r\n\t * @return new matrix that contains the reciprocals of this matrix\r\n\t */\r\n\t default Matrix recep() {\r\n<span class=\"nc\" id=\"L1003\">\t\tMatrix A = new Matrix((Matrix) this).copy();</span>\r\n\t\t\r\n<span class=\"nc bnc\" id=\"L1005\" title=\"All 2 branches missed.\">\t\tfor(int i=0; i&lt;A.m; i++) {</span>\r\n<span class=\"nc bnc\" id=\"L1006\" title=\"All 2 branches missed.\">\t\t\tfor(int j=0; j&lt;A.n; j++) {</span>\r\n<span class=\"nc\" id=\"L1007\">\t\t\t\tA.entries[i][j] = CNumber.inv(A.entries[i][j]);</span>\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n<span class=\"nc\" id=\"L1011\">\t\treturn A;</span>\r\n\t}\r\n}\r\n\r\n</pre><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/MatrixOperations.java.html b/target/site/jacoco/linalg/MatrixOperations.java.html
--- a/target/site/jacoco/linalg/MatrixOperations.java.html	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/linalg/MatrixOperations.java.html	(date 1648106316639)
@@ -5,7 +5,7 @@
 
 /**
  * This interface provides several methods useful for matrix operations.
- * 
+ *
  * @author Jacob Watters
  */
 interface MatrixOperations {
@@ -13,42 +13,42 @@
 
 	/**
 	 * Performs matrix addition on two matrices of the same dimensions.
-	 * 
+	 *
 	 * @param B - matrix to add to the instance matrix
 	 * @return result of matrix addition
 	 */
-	 default Matrix add(Matrix B) {
-<span class="nc" id="L21">		 Matrix A = (Matrix) this;</span>
-		 Matrix sum;
+	default Matrix add(Matrix B) {
+<span class="nc" id="L21">		Matrix A = (Matrix) this;</span>
+		Matrix sum;
 
-<span class="nc" id="L24">		 CNumber[][] C = new CNumber[A.m][A.n];</span>
-<span class="nc" id="L25">		 MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>
+<span class="nc" id="L24">		CNumber[][] C = new CNumber[A.m][A.n];</span>
+<span class="nc" id="L25">		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>
 
-<span class="nc bnc" id="L27" title="All 8 branches missed.">		 if((A.m &gt; 1200 &amp;&amp; A.n &gt; 1200) || A.m &gt; 80000 || A.n &gt; 80000) {</span>
+<span class="nc bnc" id="L27" title="All 8 branches missed.">		if((A.m &gt; 1200 &amp;&amp; A.n &gt; 1200) || A.m &gt; 80000 || A.n &gt; 80000) {</span>
 
-			 // Use concurrent algorithm.
-<span class="nc" id="L30">			 ConcurrentMatrixAddition adder = new ConcurrentMatrixAddition(A, B);</span>
-<span class="nc" id="L31">			 sum = adder.add();</span>
+			// Use concurrent algorithm.
+<span class="nc" id="L30">			ConcurrentMatrixAddition adder = new ConcurrentMatrixAddition(A, B);</span>
+<span class="nc" id="L31">			sum = adder.add();</span>
 
-<span class="nc" id="L33">		 } else {</span>
+<span class="nc" id="L33">		} else {</span>
 
-			 // Use standard algorithm
-<span class="nc bnc" id="L36" title="All 2 branches missed.">			 for(int i=0; i&lt;A.m; i++) {</span>
-<span class="nc bnc" id="L37" title="All 2 branches missed.">				 for(int j=0; j&lt;A.n; j++) {</span>
-<span class="nc bnc" id="L38" title="All 4 branches missed.">					 if(A.entries[i][j].isReal() &amp;&amp; B.entries[i][j].isReal()) {</span>
-<span class="nc" id="L39">						 C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,</span>
-								 0);
-					 } else {
-<span class="nc" id="L42">						 C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,</span>
-								 A.entries[i][j].im + B.entries[i][j].im);
-					 }
-				 }
-			 }
+			// Use standard algorithm
+<span class="nc bnc" id="L36" title="All 2 branches missed.">			for(int i=0; i&lt;A.m; i++) {</span>
+<span class="nc bnc" id="L37" title="All 2 branches missed.">				for(int j=0; j&lt;A.n; j++) {</span>
+<span class="nc bnc" id="L38" title="All 4 branches missed.">					if(A.entries[i][j].isReal() &amp;&amp; B.entries[i][j].isReal()) {</span>
+<span class="nc" id="L39">						C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,</span>
+								0);
+					} else {
+<span class="nc" id="L42">						C[i][j] = new CNumber(A.entries[i][j].re + B.entries[i][j].re,</span>
+								A.entries[i][j].im + B.entries[i][j].im);
+					}
+				}
+			}
 
-<span class="nc" id="L48">			 sum = new Matrix(C);</span>
-		 }
+<span class="nc" id="L48">			sum = new Matrix(C);</span>
+		}
 
-<span class="nc" id="L51">		 return sum;</span>
+<span class="nc" id="L51">		return sum;</span>
 	}
 
 
@@ -70,25 +70,25 @@
 <span class="nc" id="L70">		return new Matrix(C);</span>
 	}
 
-	
+
 	/**
 	 * Performs matrix subtraction on two matrices of the same dimensions.
-	 * 
+	 *
 	 * @param B - matrix to subtract to the instance matrix
 	 * @return result of matrix subtraction
 	 */
-	 default Matrix sub(Matrix B) {
+	default Matrix sub(Matrix B) {
 <span class="nc" id="L81">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L82">		CNumber[][] C = new CNumber[A.m][A.n];</span>
 <span class="nc" id="L83">		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>
-		
+
 <span class="nc bnc" id="L85" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc bnc" id="L86" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
 <span class="nc" id="L87">				C[i][j] = new CNumber(A.entries[i][j].re - B.entries[i][j].re,</span>
 						A.entries[i][j].im - B.entries[i][j].im);
 			}
 		}
-		
+
 <span class="nc" id="L92">		return new Matrix(C);</span>
 	}
 
@@ -99,21 +99,21 @@
 	 * @return A new matrix with the value of a added to this matrix.
 	 */
 	default Matrix sub(double a) {
-<span class="nc" id="L102">		 return this.add(-a);</span>
+<span class="nc" id="L102">		return this.add(-a);</span>
 	}
-	
-	
+
+
 	/**
 	 * Performs matrix multiplication on two matrices. The instance matrix
 	 * must have the same number of columns as the rows of B.
-	 * 
-	 * If the instance matrix is a kxm matrix and B is a 
+	 *
+	 * If the instance matrix is a kxm matrix and B is a
 	 * m x n matrix then the result will be a k x n matrix.
-	 * 
+	 *
 	 * @param B - matrix to multiply to the instance matrix
 	 * @return result of matrix multiplication
 	 */
-	 default Matrix mult(Matrix B) {
+	default Matrix mult(Matrix B) {
 <span class="nc" id="L117">		Matrix A = (Matrix) this;</span>
 
 <span class="nc bnc" id="L119" title="All 2 branches missed.">		if(!MatrixComparisons.matMultCheck(A, B)) {</span>
@@ -135,20 +135,20 @@
 
 	// TODO: Add method for Matrix vector multiplication i.e. mult(Vector b) to compute the matrix multiplication of a
 	//		matrix A and a column vector b.
-	
-	
+
+
 	/**
 	 * Performs element-wise multiplication of two matrices.
-	 * 
+	 *
 	 * @throws IllegalArgumentException If matrices do not have the same dimension.
 	 * @param B - matrix to multiply element-wise to this matrix.
 	 * @return result of element-wise matrix multiplication.
 	 */
-	 default Matrix elemMult(Matrix B) {
+	default Matrix elemMult(Matrix B) {
 <span class="nc" id="L148">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L149">		CNumber[][] C = new CNumber[A.m][A.n];</span>
 <span class="nc" id="L150">		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>
-		
+
 <span class="nc bnc" id="L152" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc bnc" id="L153" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
 
@@ -157,89 +157,89 @@
 
 			}
 		}
-		
+
 <span class="nc" id="L161">		return new Matrix(C);</span>
 	}
-	
-	
-	
+
+
+
 	/**
 	 * Performs scalar multiplication of a matrix.
-	 * 
+	 *
 	 * @param factor - value to multiply this matrix by.
 	 * @return The scalar multiplication of the matrix and the factor.
 	 */
 	default Matrix scalMult(double factor) {
 <span class="nc" id="L173">		return this.scalMult(new CNumber(factor));</span>
 	}
-	
-	
+
+
 	/**
 	 * Performs scalar multiplication of a matrix.
-	 * 
+	 *
 	 * @param factor - value to multiply matrix by.
 	 * @return The scalar multiplication of the matrix and the factor.
 	 */
-	 default Matrix scalMult(CNumber factor) {
+	default Matrix scalMult(CNumber factor) {
 <span class="nc" id="L184">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L185">		CNumber[][] result = new CNumber[A.m][A.n];</span>
-		
+
 <span class="nc bnc" id="L187" title="All 2 branches missed.">		for(int i = 0; i &lt; A.m; i++) {</span>
 <span class="nc bnc" id="L188" title="All 2 branches missed.">			for(int j = 0; j &lt;  A.n; j++) {</span>
 <span class="nc" id="L189">				result[i][j] = new CNumber(A.entries[i][j].re*factor.re - A.entries[i][j].im*factor.im,</span>
 						A.entries[i][j].re*factor.im + A.entries[i][j].im*factor.re);
 			}
 		}
-		
+
 <span class="nc" id="L194">		return new Matrix(result);</span>
 	}
-	
-	
+
+
 	/**
 	 * Performs element-wise division on two matrices of the same dimensions.
-	 * 
+	 *
 	 * @param B - matrix to divide element-wise the instance matrix with.
 	 * @return result of element-wise matrix multiplication.
 	 */
-	 default Matrix elemDiv(Matrix B) {
+	default Matrix elemDiv(Matrix B) {
 <span class="nc" id="L205">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L206">		CNumber[][] C = new CNumber[A.m][A.n];</span>
 <span class="nc" id="L207">		MatrixChecks.dimensionCheck(A, B, MatrixChecks.SAME_DIM);</span>
-		
+
 <span class="nc bnc" id="L209" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc bnc" id="L210" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
 <span class="nc" id="L211">				C[i][j] = new CNumber((A.entries[i][j].re*B.entries[i][j].re + A.entries[i][j].im*B.entries[i][j].im) /</span>
-										(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im),
+						(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im),
 
-								(A.entries[i][j].im*B.entries[i][j].re - A.entries[i][j].re*B.entries[i][j].im) /
-										(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im)
-						);
+						(A.entries[i][j].im*B.entries[i][j].re - A.entries[i][j].re*B.entries[i][j].im) /
+								(B.entries[i][j].re*B.entries[i][j].re + B.entries[i][j].im*B.entries[i][j].im)
+				);
 			}
 		}
-		
+
 <span class="nc" id="L220">		return new Matrix(C);</span>
 	}
-	
-	
+
+
 	/**
 	 * Performs scalar division of this matrix.
-	 * 
+	 *
 	 * @param divisor - value to divide matrix by.
 	 * @return The scalar division of the matrix and the divisor.
 	 */
-	 default Matrix scalDiv(double divisor) {
+	default Matrix scalDiv(double divisor) {
 <span class="nc" id="L231">		double factor = 1/divisor;</span>
 <span class="nc" id="L232">		return this.scalMult(new CNumber(factor));</span>
 	}
-	
-	
+
+
 	/**
 	 * Performs scalar division of this matrix.
-	 * 
+	 *
 	 * @param divisor - value to divide matrix by.
 	 * @return The scalar division of the matrix and the divisor.
 	 */
-	 default Matrix scalDiv(CNumber divisor) {
+	default Matrix scalDiv(CNumber divisor) {
 <span class="nc" id="L243">		CNumber factor = CNumber.divide(CNumber.ONE, divisor);</span>
 <span class="nc" id="L244">		return this.scalMult(factor);</span>
 	}
@@ -247,34 +247,34 @@
 
 	/**
 	 * Computes the Frobenius inner product of two matrices A and B, {@code &lt;A, B&gt;}&lt;sub&gt;F&lt;/sub&gt;.
-	 * 
+	 *
 	 * @param B - Second matrix for the Frobenius inner product.
- 	 * @return the Frobenius inner product.
+	 * @return the Frobenius inner product.
 	 */
-	 default CNumber fip(Matrix B) {
+	default CNumber fip(Matrix B) {
 <span class="nc" id="L255">		return this.mult(B).tr();</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes the matrix direct sum. That is, a block diagonal matrix containing all matrices from a set of matrices.
-	 * 
+	 *
 	 * @param matrixList - List of matrices from which to compute the matrix direct sum.
 	 * @return The result of direct summing the matrices in matrixList to this matrix.
 	 */
-	 default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include &quot;this&quot; in the direct sum.
+	default Matrix directSum(Matrix... matrixList) { // TODO: Because this is not static, include &quot;this&quot; in the direct sum.
 <span class="nc" id="L266">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L267">		int new_m = A.m, new_n = A.n,</span>
-<span class="nc" id="L268">			current_m = 0, current_n = 0;</span>
-		
-<span class="nc bnc" id="L270" title="All 2 branches missed.">		for(int i=0; i&lt;matrixList.length; i++) {			</span>
+<span class="nc" id="L268">				current_m = 0, current_n = 0;</span>
+
+<span class="nc bnc" id="L270" title="All 2 branches missed.">		for(int i=0; i&lt;matrixList.length; i++) {</span>
 <span class="nc" id="L271">			new_m += matrixList[i].m;</span>
 <span class="nc" id="L272">			new_n += matrixList[i].n;</span>
 		}
-		
-		
+
+
 <span class="nc" id="L276">		Matrix directSum = new Matrix(new_m, new_n);</span>
-		
+
 <span class="nc bnc" id="L278" title="All 2 branches missed.">		for(int i=-1; i&lt;matrixList.length; i++) {</span>
 <span class="nc bnc" id="L279" title="All 2 branches missed.">			if(i==-1) {</span>
 <span class="nc" id="L280">				directSum.setSlice(current_m, current_n, A);</span>
@@ -286,155 +286,155 @@
 <span class="nc" id="L286">				current_n += matrixList[i].n;</span>
 			}
 		}
-		
+
 <span class="nc" id="L290">		return directSum;</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes element wise square root of the matrix. All square roots are the positive root or, in
 	 * the case of complex entries, the root with positive real part.
-	 * 
+	 *
 	 * @return The element-wise square root of this matrix.
 	 */
-	 default Matrix sqrt() {
+	default Matrix sqrt() {
 <span class="nc" id="L301">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L302">		CNumber[][] root = new CNumber[A.m][A.n];</span>
-		
+
 <span class="nc bnc" id="L304" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc bnc" id="L305" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
 <span class="nc" id="L306">				root[i][j] = CNumber.sqrt(A.entries[i][j]);</span>
 			}
 		}
-		
+
 <span class="nc" id="L310">		return new Matrix(root);</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes absolute value, element-wise, of a matrix.
 	 * If any of the matrix cells are complex, this will result
 	 * in the magnitude of that value.
-	 * 
+	 *
 	 * @return - element-wise absolute value of matrix.
 	 */
-	 default Matrix abs() {
+	default Matrix abs() {
 <span class="nc" id="L322">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L323">		CNumber[][] abs = new CNumber[A.m][A.n];</span>
-		
+
 <span class="nc bnc" id="L325" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc bnc" id="L326" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
 <span class="nc" id="L327">				abs[i][j] = CNumber.abs(A.entries[i][j]);</span>
 			}
 		}
-		
+
 <span class="nc" id="L331">		return new Matrix(abs);</span>
 	}
-	
-	
+
+
 	/**
 	 * Transposes Matrix. Same as &lt;code&gt; Matrix.T() &lt;/code&gt;
-	 * 
+	 *
 	 * @return transpose of matrix
 	 */
-	 default Matrix transpose() {
+	default Matrix transpose() {
 <span class="nc" id="L341">		return this.T();</span>
 	}
-	
-	
-	
+
+
+
 	/**
 	 * Transposes Matrix. Same as &lt;code&gt; Matrix.transpose() &lt;/code&gt;
-	 * 
+	 *
 	 * @return transpose of matrix
 	 */
-	 default Matrix T() {
+	default Matrix T() {
 <span class="nc" id="L352">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L353">		CNumber[][] At = new CNumber[A.n][A.m];</span>
-		
-<span class="nc" id="L355">	    final int BLOCK_SIZE = 16;</span>
-	    
-	    // Compute transpose using blocked algorithm
-<span class="nc bnc" id="L358" title="All 2 branches missed.">	    for(int i = 0; i &lt; A.m; i += BLOCK_SIZE) {</span>
-<span class="nc bnc" id="L359" title="All 2 branches missed.">	        for (int j = 0; j &lt; A.n; j += BLOCK_SIZE) {</span>
-	            // transpose the block beginning at [i,j]
-<span class="nc bnc" id="L361" title="All 4 branches missed.">	            for (int k = i; k &lt; i + BLOCK_SIZE &amp;&amp; k &lt; A.m; ++k) {</span>
-<span class="nc bnc" id="L362" title="All 4 branches missed.">	                for (int l = j; l &lt; j + BLOCK_SIZE &amp;&amp; l &lt; A.n; ++l) {</span>
-<span class="nc" id="L363">	                    At[l][k] = A.entries[k][l];</span>
-	                }
-	            }
-	        }
-	    }
-	    
-<span class="nc" id="L369">	    return new Matrix(At);</span>
+
+<span class="nc" id="L355">		final int BLOCK_SIZE = 16;</span>
+
+		// Compute transpose using blocked algorithm
+<span class="nc bnc" id="L358" title="All 2 branches missed.">		for(int i = 0; i &lt; A.m; i += BLOCK_SIZE) {</span>
+<span class="nc bnc" id="L359" title="All 2 branches missed.">			for (int j = 0; j &lt; A.n; j += BLOCK_SIZE) {</span>
+				// transpose the block beginning at [i,j]
+<span class="nc bnc" id="L361" title="All 4 branches missed.">				for (int k = i; k &lt; i + BLOCK_SIZE &amp;&amp; k &lt; A.m; ++k) {</span>
+<span class="nc bnc" id="L362" title="All 4 branches missed.">					for (int l = j; l &lt; j + BLOCK_SIZE &amp;&amp; l &lt; A.n; ++l) {</span>
+<span class="nc" id="L363">						At[l][k] = A.entries[k][l];</span>
+					}
+				}
+			}
+		}
+
+<span class="nc" id="L369">		return new Matrix(At);</span>
 	}
-	
-	
+
+
 	/**
 	 * Conjugates a matrix element-wise.
-	 * 
+	 *
 	 * @return Conjugate of matrix
 	 */
-	 default Matrix conjugate() {
+	default Matrix conjugate() {
 <span class="nc" id="L379">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L380">		CNumber[][] Ac = new CNumber[A.m][A.n];</span>
-		
+
 <span class="nc bnc" id="L382" title="All 2 branches missed.">		for(int i = 0; i &lt; A.m; i++) {</span>
 <span class="nc bnc" id="L383" title="All 2 branches missed.">			for(int j = 0; j &lt; A.n; j++) {</span>
 <span class="nc" id="L384">				Ac[i][j] = CNumber.conjugate(A.entries[i][j]);</span>
 			}
 		}
-		
+
 <span class="nc" id="L388">		return new Matrix(Ac);</span>
 	}
-	
-	
+
+
 	/**
-	 * Computes the conjugate transpose of this matrix. 
+	 * Computes the conjugate transpose of this matrix.
 	 * &lt;br&gt;&lt;br&gt;
-	 * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}. 
-	 * 
+	 * This method is the same as {@link #hermAdjoint() hermAdjoint()} and {@link #H() H()}.
+	 *
 	 * @return The conjugate transpose of this matrix.
 	 */
-	 default Matrix conjT() {
+	default Matrix conjT() {
 <span class="nc" id="L400">		return this.conjugate().T();</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.
 	 * &lt;br&gt;&lt;br&gt;
-	 * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}. 
-	 * 
+	 * This method is the same as {@link #conjT() conjT()}  and {@link #H() H()}.
+	 *
 	 * @return adjoint of matrix.
 	 */
-	 default Matrix hermAdjoint() {
+	default Matrix hermAdjoint() {
 <span class="nc" id="L412">		return this.conjugate().T();</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes the Hermation adjoint of a matrix. This is the transpose of the conjugate matrix.
 	 * &lt;br&gt;&lt;br&gt;
 	 * This method is the same as {@link #conjT() conjT()} and {@link #hermAdjoint() hermAdjpint()}.
-	 * 
+	 *
 	 * @return adjoint of matrix.
 	 */
-	 default Matrix H() {
+	default Matrix H() {
 <span class="nc" id="L424">		return this.conjugate().T();</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes determinant of matrix using reccurisive definition. This method exists
 	 * for computing the determinant of non-real matrices.
-	 * 
+	 *
 	 * @param A - Matrix to compute determinant of
 	 * @return determinant of matrix A
 	 */
 	static CNumber detRec(Matrix A) {
 <span class="nc" id="L436">		CNumber value = CNumber.ZERO;</span>
-		
+
 <span class="nc bnc" id="L438" title="All 4 branches missed.">		if(A.m == 1 &amp;&amp; A.n == 1) { // Then we simply have a 1x1 matrix.</span>
 <span class="nc" id="L439">			return A.entries[0][0];</span>
 		}
@@ -443,106 +443,106 @@
 <span class="nc" id="L443">			CNumber b = A.entries[0][1];</span>
 <span class="nc" id="L444">			CNumber c = A.entries[1][0];</span>
 <span class="nc" id="L445">			CNumber d = A.entries[1][1];</span>
-			
+
 <span class="nc" id="L447">			value = CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));</span>
-<span class="nc" id="L448">		} </span>
+<span class="nc" id="L448">		}</span>
 		else {
 <span class="nc bnc" id="L450" title="All 2 branches missed.">			for(int j = 0; j &lt; A.n; j++) {</span>
 <span class="nc" id="L451">				Matrix newA = A.removeRow(0).removeCol(j);</span>
-				
+
 <span class="nc" id="L453">				CNumber num = new CNumber(Math.pow(-1, j));</span>
 <span class="nc" id="L454">				num = CNumber.multiply(num, A.entries[0][j]);</span>
-				
+
 <span class="nc" id="L456">				value = CNumber.add(value, CNumber.multiply(detRec(newA), num));</span>
 			}
 		}
-		
+
 <span class="nc" id="L460">		return value;</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes determinant of real matrix using QR decomposition.
-	 * 
+	 *
 	 * @param A - Matrix to compute determinant of.
 	 * @return determinant of matrix A
 	 */
 	static CNumber detQR(Matrix A) {
 <span class="nc" id="L471">		CNumber detQ, detR = CNumber.ONE;</span>
 <span class="nc" id="L472">		Matrix[] QRh = Decompose.QR(A, true);</span>
-		
+
 <span class="nc" id="L474">		detQ = new CNumber(Math.pow(-1, QRh[2].entries[0][0].getReal()));</span>
-		
+
 <span class="nc bnc" id="L476" title="All 2 branches missed.">		for(int i = 0; i&lt;QRh[1].n; i++) {</span>
 <span class="nc" id="L477">			detR = CNumber.multiply(detR, QRh[1].entries[i][i]);</span>
 		}
-		
+
 <span class="nc" id="L480">		return CNumber.multiply(detR, detQ);</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes determinant of matrix. If the matrix has
 	 * any complex entries, this may be a complex value.
 	 * Note: Currently this method only works for real matirces.
-	 * 
+	 *
 	 * @return determinant of matrix.
 	 */
-	 default CNumber det() {
+	default CNumber det() {
 <span class="nc" id="L492">		Matrix A = (Matrix) this;</span>
-		
+
 <span class="nc bnc" id="L494" title="All 2 branches missed.">		if(!A.isSquare()) {</span>
 <span class="nc" id="L495">			throw new IllegalArgumentException(&quot;Matrix must be square but got shape &quot; + A.shape);</span>
 		}
-		
+
 <span class="nc bnc" id="L498" title="All 4 branches missed.">		if(A.m == 2 &amp;&amp; A.n == 2) { // Then we have a 2x2 matrix, which we can directly compute</span>
 <span class="nc" id="L499">			CNumber a = A.entries[0][0];</span>
 <span class="nc" id="L500">			CNumber b = A.entries[0][1];</span>
 <span class="nc" id="L501">			CNumber c = A.entries[1][0];</span>
 <span class="nc" id="L502">			CNumber d = A.entries[1][1];</span>
-			
+
 <span class="nc" id="L504">			return CNumber.subtract(CNumber.multiply(a, d), CNumber.multiply(b, c));</span>
 		}
-		
+
 <span class="nc" id="L507">		return detQR(A);</span>
 	}
-	
-	
+
+
 	/**
 	 * Stacks matrices along rows. Both matrices must have the same number of columns
 	 * Also see {@link #stack(Matrix, int) stack(Matrix B, int axis)}
-	 * 
+	 *
 	 * @param B
 	 * @return
 	 */
-	 default Matrix stack(Matrix B) {
+	default Matrix stack(Matrix B) {
 <span class="nc" id="L519">		return this.stack(B, 0);</span>
 	}
-	
-	
+
+
 	/**
 	 * Stacks matrices along specified axis. Axis 0 will stack matrices along the rows. Axis 1 will
 	 * stack matrices along columns.
-	 * 
+	 *
 	 * Note: To stack matrices along axis 0 they must have the same number of columns.
 	 * To stack matrices along axis 1 they must have the same number of rows.
-	 * 
+	 *
 	 * @param B - Matrix to stack
 	 * @param axis - Axis along which to stack matrices.
 	 * @return Returns A and B stacked along specified axis.
 	 */
-	 default Matrix stack(Matrix B, int axis) {
+	default Matrix stack(Matrix B, int axis) {
 <span class="nc" id="L535">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L536">		Matrix result = null;</span>
-		
+
 <span class="nc bnc" id="L538" title="All 2 branches missed.">		if(axis == 0) { // Stack on rows</span>
 <span class="nc bnc" id="L539" title="All 2 branches missed.">			if(A.entries[0].length != B.entries[0].length) { // Ensure matrices have same number or columns</span>
 <span class="nc" id="L540">				throw new IllegalArgumentException(&quot;Must have same number of columns but &quot;</span>
 						+ &quot;got &quot; + A.entries[0].length + &quot; and &quot; + B.entries[0].length);
 			}
-			
+
 <span class="nc" id="L544">			result = new Matrix(A.entries.length+B.entries.length, A.entries[0].length);</span>
-			
+
 <span class="nc bnc" id="L546" title="All 2 branches missed.">			for(int i = 0; i &lt; result.entries.length; i++) {</span>
 <span class="nc bnc" id="L547" title="All 2 branches missed.">				for(int j = 0; j &lt; result.entries[0].length; j++) {</span>
 <span class="nc bnc" id="L548" title="All 2 branches missed.">					if(i &lt; A.entries.length) { // Then copy from A.entries</span>
@@ -552,15 +552,15 @@
 					}
 				}
 			}
-		} 
+		}
 <span class="nc bnc" id="L556" title="All 2 branches missed.">		else if(axis == 1) { // Stack on cols</span>
 <span class="nc bnc" id="L557" title="All 2 branches missed.">			if(A.entries.length != B.entries.length) { // Ensure matrices have same number or rows</span>
 <span class="nc" id="L558">				throw new IllegalArgumentException(&quot;Must have same number of rows but &quot;</span>
 						+ &quot;got &quot; + A.entries.length + &quot; and &quot; + B.entries.length);
 			}
-			
+
 <span class="nc" id="L562">			result = new Matrix(A.entries.length, A.entries[0].length + B.entries[0].length);</span>
-			
+
 <span class="nc bnc" id="L564" title="All 2 branches missed.">			for(int i = 0; i &lt; result.entries.length; i++) {</span>
 <span class="nc bnc" id="L565" title="All 2 branches missed.">				for(int j = 0; j &lt; result.entries[0].length; j++) {</span>
 <span class="nc bnc" id="L566" title="All 2 branches missed.">					if(j &lt; A.entries[0].length) { // Then copy from A.entries</span>
@@ -573,98 +573,98 @@
 		}
 		else {
 <span class="nc" id="L575">			throw new IllegalArgumentException(&quot;axis must be 0 or 1 but got &quot; + axis);</span>
-		}		
-		
+		}
+
 <span class="nc" id="L578">		return result;</span>
 	}
-	
-	
+
+
 	/**
 	 * Augments two matrices. This is the same as {@link #stack(Matrix, int) stack(B, 1)}
-	 * 
+	 *
 	 * @param B - Matrix to augment to this matrix.
 	 * @return The matrix B augmented to this matrix.
 	 */
-	 default Matrix augment(Matrix B) {
+	default Matrix augment(Matrix B) {
 <span class="nc" id="L589">		return this.stack(B, 1);</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes row-echelon form of matrix. This will be an upper-triangular matrix.&lt;br&gt;
-	 * 
+	 *
 	 * &lt;pre&gt;
 	 * A matrix is in row-echelon form if:
 	 *  - The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *  - The pivot of a nonzero row is always strictly to 
+	 *  - The pivot of a nonzero row is always strictly to
 	 *    the right of the leading coefficient of the row above it.
 	 *  - Rows with all zero elements, if any, are below rows having a non-zero element.
 	 * &lt;/pre&gt;
-	 * 
+	 *
 	 * A matrix can be transformed into a row equivalent matrix in row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;
-	 * 
+	 *
 	 * Also see &lt;code&gt;{@link #rref() rref()}&lt;/code&gt; for reduced row-echelon form.
-	 * 
+	 *
 	 * @return Row-echelon form of matrix
 	 */
-	 default Matrix ref() {
+	default Matrix ref() {
 <span class="nc" id="L612">		Matrix A = ((Matrix) this).copy();</span>
 		CNumber m, scale;
-		
+
 <span class="nc" id="L615">		int pivotRow = 0,</span>
-<span class="nc" id="L616">			pivotCol = 0;</span>
-		
+<span class="nc" id="L616">				pivotCol = 0;</span>
+
 <span class="nc bnc" id="L618" title="All 4 branches missed.">		while(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>
 <span class="nc bnc" id="L619" title="All 2 branches missed.">			if(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) { // Then we can make the pivot one.</span>
-<span class="nc" id="L620">				 scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>
-				 
-<span class="nc bnc" id="L622" title="All 2 branches missed.">				 for(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>
-<span class="nc" id="L623">					 A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);</span>
-				 }
+<span class="nc" id="L620">				scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>
+
+<span class="nc bnc" id="L622" title="All 2 branches missed.">				for(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>
+<span class="nc" id="L623">					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);</span>
+				}
 			}
-			
+
 <span class="nc bnc" id="L627" title="All 2 branches missed.">			for(int i=pivotRow+1; i&lt;A.m; i++) {</span>
 <span class="nc" id="L628">				m = A.entries[i][pivotCol];</span>
 
 <span class="nc bnc" id="L630" title="All 2 branches missed.">				for(int k=pivotCol; k&lt;A.n; k++) {</span>
-<span class="nc" id="L631">					A.entries[i][k] = CNumber.subtract(A.entries[i][k], </span>
+<span class="nc" id="L631">					A.entries[i][k] = CNumber.subtract(A.entries[i][k],</span>
 <span class="nc" id="L632">							CNumber.multiply(A.entries[pivotRow][k], m));</span>
 				}
-				
-				
+
+
 				/*
-				 * This insures the entries to the left of the pivot are zero. 
+				 * This insures the entries to the left of the pivot are zero.
 				 * They may be a very small (in absolute value) non-zero value
 				 * resulting from errors in floating point arithmetic.
 				 */
 <span class="nc" id="L641">				A.entries[i][pivotCol] = CNumber.ZERO;</span>
 			}
-			
+
 <span class="nc" id="L644">			pivotRow++;</span>
 <span class="nc" id="L645">			pivotCol++;</span>
 		}
-		
+
 <span class="nc" id="L648">		return A;</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes reduced row-echelon form of matrix.&lt;br&gt;
-	 * 
+	 *
 	 * &lt;pre&gt;
 	 * A matrix is in reduced row-echelon form if:&lt;br&gt;
 	 *  - It is in row-echelon form. This is,
 	 *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *      ~ The pivot of a nonzero row is always strictly to 
+	 *      ~ The pivot of a nonzero row is always strictly to
 	 *        the right of the leading coefficient of the row above it.
 	 *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;
 	 *  - The pivot in each row is the only non-zero entry in its column.
 	 * &lt;/pre&gt;
-	 * 
+	 *
 	 * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;
-	 * 
+	 *
 	 * @param partialPivoting - Falg for use of partial pivoting.
 	 * &lt;pre&gt;
 	 *  - If true then the rref will be computed using partial pivoting.
@@ -673,48 +673,48 @@
 	 * &lt;/pre&gt;
 	 * @return
 	 */
-	 default Matrix rref(boolean partialPivoting) {
+	default Matrix rref(boolean partialPivoting) {
 <span class="nc bnc" id="L677" title="All 2 branches missed.">		if(partialPivoting) return rref();</span>
 <span class="nc" id="L678">		else return rrefNoPivot();</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes reduced row-echelon form of matrix. This is done using partial pivoting.&lt;br&gt;
-	 * 
+	 *
 	 * &lt;pre&gt;
 	 * A matrix is in reduced row-echelon form if:&lt;br&gt;
 	 *  - It is in row-echelon form. This is,
 	 *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *      ~ The pivot of a nonzero row is always strictly to 
+	 *      ~ The pivot of a nonzero row is always strictly to
 	 *        the right of the leading coefficient of the row above it.
 	 *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;
 	 *  - The pivot in each row is the only non-zero entry in its column.
 	 * &lt;/pre&gt;
-	 * 
+	 *
 	 * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;
-	 * 
+	 *
 	 * Also see &lt;code&gt;{@link #ref() ref()}&lt;/code&gt; for row-echelon form.
-	 * 
+	 *
 	 * @return Row-echelon form of matrix.
 	 */
-	 default Matrix rref() {
+	default Matrix rref() {
 <span class="nc" id="L703">		Matrix A = ((Matrix) this).copy();</span>
 		CNumber mult, scale, currentMax;
 		int maxIndex;
-		
+
 <span class="nc" id="L707">		int pivotRow = 0,</span>
-<span class="nc" id="L708">			pivotCol = 0;</span>
-		
+<span class="nc" id="L708">				pivotCol = 0;</span>
+
 <span class="nc bnc" id="L710" title="All 4 branches missed.">		while(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>
 <span class="nc" id="L711">			maxIndex = pivotRow;</span>
 <span class="nc" id="L712">			currentMax = A.entries[pivotRow][pivotCol];</span>
-			
+
 <span class="nc bnc" id="L714" title="All 2 branches missed.">			for(int i=pivotRow; i&lt;A.m; i++) { // Find the maximum entry in the pivot column (at or below the pivot ).</span>
-<span class="nc bnc" id="L715" title="All 2 branches missed.">				if(A.entries[i][pivotCol].nearZero(1.0E-12)) { </span>
-					
-					/* 
+<span class="nc bnc" id="L715" title="All 2 branches missed.">				if(A.entries[i][pivotCol].nearZero(1.0E-12)) {</span>
+
+					/*
 					 * If a number is very close to zero, assume it is supposed to be zero.
 					 * This protects against trying to manipulate a column which
 					 * is already in the correct form.
@@ -726,34 +726,34 @@
 <span class="nc" id="L726">					currentMax = A.entries[i][pivotCol];</span>
 				}
 			}
-			
+
 <span class="nc bnc" id="L730" title="All 2 branches missed.">			if(!A.entries[maxIndex][pivotCol].equals(CNumber.ZERO)) { // Check that the maximum absolute value is not zero.</span>
 <span class="nc bnc" id="L731" title="All 2 branches missed.">				if(pivotRow != maxIndex) {</span>
 <span class="nc" id="L732">					A = A.swapRows(pivotRow, maxIndex); // Make the row with the largest value in the pivot column the pivot for this row.</span>
 				}
-				
+
 <span class="nc" id="L735">				scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>
-				 
+
 <span class="nc bnc" id="L737" title="All 2 branches missed.">				for(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row so that the pivot is 1</span>
-<span class="nc" id="L738">					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>
+<span class="nc" id="L738">					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);</span>
 				}
-				
+
 <span class="nc bnc" id="L741" title="All 2 branches missed.">				for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc" id="L742">					mult = A.entries[i][pivotCol];</span>
-					
+
 <span class="nc bnc" id="L744" title="All 2 branches missed.">					if(pivotRow != i) {</span>
 <span class="nc" id="L745">						A.entries[i][pivotCol] = CNumber.ZERO;</span>
-						
+
 <span class="nc bnc" id="L747" title="All 2 branches missed.">						for(int k=pivotCol+1; k&lt;A.n; k++) {</span>
-							
-<span class="nc" id="L749">							CNumber value = CNumber.subtract(A.entries[i][k], </span>
+
+<span class="nc" id="L749">							CNumber value = CNumber.subtract(A.entries[i][k],</span>
 <span class="nc" id="L750">									CNumber.multiply(A.entries[pivotRow][k], mult));</span>
 <span class="nc" id="L751">							A.entries[i][k] = value;</span>
 						}
-						
+
 					}
 				}
-				
+
 <span class="nc" id="L757">				pivotRow++;</span>
 <span class="nc" id="L758">				pivotCol++;</span>
 			}
@@ -761,255 +761,268 @@
 <span class="nc" id="L761">				pivotCol++;</span>
 			}
 		}
-		
+
 <span class="nc" id="L765">		return A;</span>
 	}
-	
-	
+
+
 	/**
-	 * Computes reduced row-echelon form of matrix. 
+	 * Computes reduced row-echelon form of matrix.
 	 * This is done WITHOUT using partial pivoting.&lt;br&gt;
-	 * 
+	 *
 	 * &lt;pre&gt;
 	 * A matrix is in reduced row-echelon form if:&lt;br&gt;
 	 *  - It is in row-echelon form. This is,
 	 *      ~ The first non-zero element in each row, called the leading entry (also called the pivot), is 1.
-	 *      ~ The pivot of a nonzero row is always strictly to 
+	 *      ~ The pivot of a nonzero row is always strictly to
 	 *        the right of the leading coefficient of the row above it.
 	 *      ~ Rows with all zero elements, if any, are below rows having a non-zero element.&lt;br&gt;
 	 *  - The pivot in each row is the only non-zero entry in its column.
 	 * &lt;/pre&gt;
-	 * 
+	 *
 	 * A matrix can be transformed into a row eqivalent matrix in reduced row-echelon form using row operations.
 	 * This is done using Gaussian (Gauss-Jordan) elimination. &lt;br&gt;&lt;br&gt;
-	 * 
+	 *
 	 * Also see &lt;code&gt;{@link #ref() ref()}&lt;/code&gt; for row-echelon form.
-	 * 
+	 *
 	 * @return Row-echelon form of matrix.
 	 */
 	default Matrix rrefNoPivot() {
 <span class="nc" id="L791">		Matrix A = ((Matrix) this).copy();</span>
 		CNumber m, scale;
-		
+
 <span class="nc" id="L794">		int pivotRow = 0,</span>
-<span class="nc" id="L795">			pivotCol = 0;</span>
-		
+<span class="nc" id="L795">				pivotCol = 0;</span>
+
 <span class="nc bnc" id="L797" title="All 4 branches missed.">		while(pivotRow&lt;A.m &amp;&amp; pivotCol&lt;A.n) {</span>
 <span class="nc bnc" id="L798" title="All 2 branches missed.">			if(!A.entries[pivotRow][pivotCol].equals(CNumber.ZERO)) {</span>
 <span class="nc" id="L799">				scale = CNumber.divide(CNumber.ONE, A.entries[pivotRow][pivotCol]);</span>
-				 
+
 <span class="nc bnc" id="L801" title="All 2 branches missed.">				for(int k=pivotCol; k&lt;A.n; k++) { // scale the whole row</span>
-<span class="nc" id="L802">					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale); </span>
-				}	
+<span class="nc" id="L802">					A.entries[pivotRow][k] = CNumber.multiply(A.entries[pivotRow][k], scale);</span>
+				}
 			}
-				
+
 <span class="nc bnc" id="L806" title="All 2 branches missed.">			for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc" id="L807">				m = A.entries[i][pivotCol];</span>
-				
+
 <span class="nc bnc" id="L809" title="All 2 branches missed.">				if(pivotRow != i) {</span>
 <span class="nc bnc" id="L810" title="All 2 branches missed.">					for(int k=pivotCol; k&lt;A.n; k++) {</span>
-<span class="nc" id="L811">						A.entries[i][k] = CNumber.subtract(A.entries[i][k], </span>
+<span class="nc" id="L811">						A.entries[i][k] = CNumber.subtract(A.entries[i][k],</span>
 <span class="nc" id="L812">								CNumber.multiply(A.entries[pivotRow][k], m));</span>
 					}
 				}
 			}
-			
+
 <span class="nc" id="L817">			pivotRow++;</span>
 <span class="nc" id="L818">			pivotCol++;</span>
 		}
-		
+
 <span class="nc" id="L821">		return A;</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes reduced extended row-echelon form of matrix. That is, a Matrix with
 	 * the same number of rows is {@link #augment(Matrix) augmented} with this matrix and
 	 * then this augmented matrix is put into {@link #rref() reduced row-echelon form}.
-	 * 
+	 *
 	 * @return Returns extended row-echelon form of this matrix.
 	 */
-	 default Matrix erref() {
+	default Matrix erref() {
 <span class="nc" id="L833">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L834">		Matrix I = Matrix.I(A.m);</span>
 <span class="nc" id="L835">		Matrix Aug = A.augment(I);</span>
-		
+
 <span class="nc" id="L837">		return Aug.rref();</span>
 	}
 
-	
+
 	/**
-	 * Computes the trace of square matrix. That is, the sum 
+	 * Computes the trace of square matrix. That is, the sum
 	 * of the entries along the principle diagonal.
 	 * &lt;br&gt;&lt;br&gt;
 	 * This method is the same as {@link #tr() tr()}.
-	 * 
+	 *
 	 * @return trace of this matrix.
 	 */
-	 default CNumber trace() {
+	default CNumber trace() {
 <span class="nc" id="L850">		Matrix A = (Matrix) this;</span>
-		
+
 <span class="nc bnc" id="L852" title="All 2 branches missed.">		if(!A.isSquare()) {</span>
 <span class="nc" id="L853">			throw new IllegalArgumentException(&quot;Expecting matrix to be square but got &quot; + A.shape);</span>
 		}
-		
+
 <span class="nc" id="L856">		CNumber result = A.entries[0][0];</span>
-		
+
 <span class="nc bnc" id="L858" title="All 2 branches missed.">		for(int i = 1; i &lt; A.n; i++) {</span>
 <span class="nc" id="L859">			result = CNumber.add(result, A.entries[i][i]);</span>
 		}
-		
+
 <span class="nc" id="L862">		return result;</span>
-	} 
-	
-	
+	}
+
+
 	/**
-	 * Computes the trace of a square matrix. That is, the sum 
+	 * Computes the trace of a square matrix. That is, the sum
 	 * of the entries along the principle diagonal.
 	 * &lt;br&gt;&lt;br&gt;
 	 * This method is the same as {@link #trace() trace()}.
-	 * 
+	 *
 	 * @return trace of this matrix.
 	 */
-	 default CNumber tr() {
+	default CNumber tr() {
 <span class="nc" id="L875">		return this.trace();</span>
 	}
-	
-	
+
+
 	/**
 	 * The rank of a matrix A is the dimension of the vector space generated (or spanned) by its columns.
 	 * This is always an integer.
-	 * This corresponds to the maximal number of linearly independent columns of A. 
+	 * This corresponds to the maximal number of linearly independent columns of A.
 	 * This, in turn, is identical to the dimension of the vector space spanned by its rows
-	 * 
+	 *
 	 * @return Returns the rank of this matrix.
 	 */
 	// TODO: Should be switched to rank revealing QR decomposition as it is more numerically stable.
-	 default int rank() {
+	default int rank() {
 <span class="nc" id="L889">		Matrix A = (Matrix) this;</span>
 <span class="nc" id="L890">		Matrix rrefA = A.rref();</span>
 <span class="nc" id="L891">		int rank = A.m;</span>
-		
+
 <span class="nc bnc" id="L893" title="All 2 branches missed.">		for(int i=rrefA.m-1; i&gt;=0; i--) {</span>
 <span class="nc bnc" id="L894" title="All 2 branches missed.">			if(rrefA.getRowAsVector(i).isZero()) {</span>
-<span class="nc" id="L895">				rank--;			</span>
-			} else { 
+<span class="nc" id="L895">				rank--;</span>
+			} else {
 				// Then we have no more zero rows as rrefA is in reduced row echelon form.
 				break;
 			}
 		}
-		
+
 <span class="nc" id="L902">		return rank;</span>
 	}
-	
-	
+
+
 	/**
 	 * The rank of a matrix A is the dimension of the vector space spanned by the nullspace of this matrix.
 	 * The nullify is always an integer.
-	 * 
+	 *
 	 * @return Returns the rank of this matrix.
 	 */
-	 default int nullity() {
+	default int nullity() {
 <span class="nc" id="L913">		int rank = this.rank();</span>
 <span class="nc" id="L914">		return ((Matrix) this).m - rank;</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}
 	 * The inverse of a Matrix A is A&lt;sup&gt;-1&lt;/sup&gt; satisfying AA&lt;sup&gt;-1&lt;/sup&gt;=I where I is the appropriately sized Identity matrix.
-	 * 
+	 *
 	 * @return The inverse of this matrix.
 	 */
-	 default Matrix inverse() {
+	default Matrix inverse() {
 <span class="nc" id="L925">		Matrix A = (Matrix) this;</span>
-		
+
 <span class="nc bnc" id="L927" title="All 2 branches missed.">		if(!A.isSingular()) {</span>
 <span class="nc" id="L928">			throw new IllegalArgumentException(&quot;Matrix is singular.&quot;);</span>
 		}
 
 <span class="nc" id="L931">		Matrix[] QR = Decompose.QR(A); // Compute the QR decomposition of A. This will be used to compute the inverse.</span>
 <span class="nc" id="L932">		CNumber detR = CNumber.ONE;</span>
-		
+
 <span class="nc bnc" id="L934" title="All 2 branches missed.">		for(int i = 0; i&lt;QR[1].n; i++) { // Computing the determinant of R</span>
 <span class="nc" id="L935">			detR = CNumber.multiply(detR, QR[1].entries[i][i]);</span>
 		}
-		
+
 <span class="nc bnc" id="L938" title="All 2 branches missed.">		if(CNumber.round(detR, 10).re == 0) {</span>
 			/* Then we know the matrix is singular.
 			 * We know this by exploiting properties of the orthogonal matrix Q and the upper triangular matrix R.
 			 * The determinant of an orthogonal matrix is either -1 or 1. The determinant of an upper triangular matrix R is the product
 			 * of the diagonals. Since A=QR det(A) = det(QR) = det(Q)*det(R). So if the determinant of R is zero, then the matrix A must be singular.
-			 * 
-			 * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that, 
+			 *
+			 * The isSingular() method is not used here because it computes the QR decomposition to check if the matrix is singular. However, we have already done that,
 			 * so it would be redundant to call the isSingular() method and recompute the QR decomposition again.
 			 */
 <span class="nc" id="L947">			throw new IllegalArgumentException(&quot;Matrix is singular, thus can not be inverted.&quot;);</span>
 		}
-		
+
 		// Here we compute and return A^-1 = (R^-1)*(Q^-1)
 <span class="nc" id="L951">		return inverseTriU(QR[1]).mult(QR[0].H());</span>
 	}
-	
-	
+
+
 	/**
 	 * Computes the matrix inverse if it exists. This is done by first computing the {@link linalg.Decompose#QR(Matrix) QR decomposition}
 	 * The inverse of a Matrix A is A&lt;sup&gt;-1&lt;/sup&gt; satisfying AA&lt;sup&gt;-1&lt;/sup&gt;=I where I is the appropriately sized Identity matrix.
-	 * 
+	 *
 	 * @return The inverse of this matrix.
 	 */
-	 default Matrix inv() {
+	default Matrix inv() {
 <span class="nc" id="L962">		return this.inverse();</span>
 	}
-	
-	
+
+
 	/**
 	 * Helper method to invert an upper triangular matrix. &lt;br&gt;
 	 * We can compute the inverse of an n-by-n upper triangular matrix U by solving the n systems...&lt;br&gt;&lt;br&gt;
-	 * 
+	 *
 	 * Ux=I&lt;sub&gt;i&lt;/sub&gt;&lt;br&gt;
-	 * 
+	 *
 	 * where 1&lt;=i&lt;=n, I is the n-by-n identity matrix, I&lt;sub&gt;i&lt;/sub&gt; is the ith column of I.&lt;br&gt;&lt;br&gt;
-	 * 
+	 *
 	 * Each solution becomes a column in the inverse &lt;sup&gt;-1&lt;/sub&gt;.
 	 * Because U is upper triangular, we can solve these n systems using backsolve.
-	 * 
+	 *
 	 * @param U - U is a square upper triangular matrix
 	 * @return Returns the inverse of U, denoted U&lt;sup&gt;-1&lt;/sub&gt;
 	 */
 	static Matrix inverseTriU(Matrix U) {
 <span class="nc" id="L981">		Matrix Uinv = new Matrix(U.m, U.m);</span>
 <span class="nc" id="L982">		Matrix I = Matrix.I(U.m);</span>
-		
+
 <span class="nc bnc" id="L984" title="All 2 branches missed.">		if(!U.isTriU()) {</span>
 <span class="nc" id="L985">			throw new IllegalArgumentException(&quot;U must be upper triangular.&quot;);</span>
 		}
-		
+
 <span class="nc bnc" id="L988" title="All 2 branches missed.">		for(int i=0; i&lt;U.m; i++)  {</span>
 			// U is upper triangular, so to solve the system we simply need to use back-solve function.
-<span class="nc" id="L990">			Uinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i); </span>
+<span class="nc" id="L990">			Uinv.setCol(Solvers.backSolve(U, I.getColAsVector(i)), i);</span>
 		}
-		
+
 <span class="nc" id="L993">		return Uinv;</span>
 	}
-	
-	
+
+
 	/**
 	 * Creates a new matrix that contains the reciprocals of this matrix
-	 * 
+	 *
 	 * @return new matrix that contains the reciprocals of this matrix
 	 */
-	 default Matrix recep() {
+	default Matrix recep() {
 <span class="nc" id="L1003">		Matrix A = new Matrix((Matrix) this).copy();</span>
-		
+
 <span class="nc bnc" id="L1005" title="All 2 branches missed.">		for(int i=0; i&lt;A.m; i++) {</span>
 <span class="nc bnc" id="L1006" title="All 2 branches missed.">			for(int j=0; j&lt;A.n; j++) {</span>
 <span class="nc" id="L1007">				A.entries[i][j] = CNumber.inv(A.entries[i][j]);</span>
 			}
 		}
-		
+
 <span class="nc" id="L1011">		return A;</span>
 	}
+
+	public static void main(String[] args) {
+<span class="nc" id="L1015">		Matrix A = Matrix.random(&quot;1000x1000&quot;, -1000, 1000, false);</span>
+<span class="nc" id="L1016">		Matrix B = Matrix.random(&quot;1000x1000&quot;, -1000, 1000, false);</span>
+
+<span class="nc" id="L1018">		long s1=System.currentTimeMillis();</span>
+<span class="nc" id="L1019">		A.mult(B);</span>
+<span class="nc" id="L1020">		long e1=System.currentTimeMillis();</span>
+
+<span class="nc" id="L1022">		long t = e1-s1;</span>
+
+<span class="nc" id="L1024">		System.out.println(&quot;Time: &quot; + t + &quot; ms&quot;);</span>
+<span class="nc" id="L1025">	}</span>
 }
 
 </pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>linalg</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"index.source.html\" class=\"el_source\">Source Files</a><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_package\">linalg</span></div><h1>linalg</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">11,857 of 12,053</td><td class=\"ctr2\">1%</td><td class=\"bar\">885 of 899</td><td class=\"ctr2\">1%</td><td class=\"ctr1\">693</td><td class=\"ctr2\">707</td><td class=\"ctr1\">1,680</td><td class=\"ctr2\">1,732</td><td class=\"ctr1\">246</td><td class=\"ctr2\">256</td><td class=\"ctr1\">13</td><td class=\"ctr2\">16</td></tr></tfoot><tbody><tr><td id=\"a9\"><a href=\"MatrixProperties.html\" class=\"el_class\">MatrixProperties</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"119\" height=\"10\" title=\"2,330\" alt=\"2,330\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"214\" alt=\"214\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">149</td><td class=\"ctr2\" id=\"g0\">152</td><td class=\"ctr1\" id=\"h0\">291</td><td class=\"ctr2\" id=\"i0\">297</td><td class=\"ctr1\" id=\"j1\">42</td><td class=\"ctr2\" id=\"k1\">45</td><td class=\"ctr1\" id=\"l13\">0</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a8\"><a href=\"MatrixOperations.html\" class=\"el_class\">MatrixOperations</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"105\" height=\"10\" title=\"2,067\" alt=\"2,067\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"104\" height=\"10\" title=\"186\" alt=\"186\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f1\">133</td><td class=\"ctr2\" id=\"g1\">133</td><td class=\"ctr1\" id=\"h1\">275</td><td class=\"ctr2\" id=\"i2\">275</td><td class=\"ctr1\" id=\"j3\">40</td><td class=\"ctr2\" id=\"k3\">40</td><td class=\"ctr1\" id=\"l0\">1</td><td class=\"ctr2\" id=\"m1\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixManipulations.html\" class=\"el_class\">MatrixManipulations</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"1,884\" alt=\"1,884\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"82\" height=\"10\" title=\"148\" alt=\"148\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f2\">115</td><td class=\"ctr2\" id=\"g3\">115</td><td class=\"ctr1\" id=\"h2\">272</td><td class=\"ctr2\" id=\"i3\">272</td><td class=\"ctr1\" id=\"j2\">41</td><td class=\"ctr2\" id=\"k2\">41</td><td class=\"ctr1\" id=\"l1\">1</td><td class=\"ctr2\" id=\"m2\">1</td></tr><tr><td id=\"a3\"><a href=\"Matrix.html\" class=\"el_class\">Matrix</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"77\" height=\"10\" title=\"1,517\" alt=\"1,517\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"169\" alt=\"169\"/></td><td class=\"ctr2\" id=\"c1\">10%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"66\" height=\"10\" title=\"118\" alt=\"118\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"7\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e0\">10%</td><td class=\"ctr1\" id=\"f3\">107</td><td class=\"ctr2\" id=\"g2\">117</td><td class=\"ctr1\" id=\"h3\">251</td><td class=\"ctr2\" id=\"i1\">293</td><td class=\"ctr1\" id=\"j0\">45</td><td class=\"ctr2\" id=\"k0\">51</td><td class=\"ctr1\" id=\"l14\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a11\"><a href=\"QRDecomposition.html\" class=\"el_class\">QRDecomposition</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"53\" height=\"10\" title=\"1,049\" alt=\"1,049\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"18\" alt=\"18\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f9\">14</td><td class=\"ctr2\" id=\"g9\">14</td><td class=\"ctr1\" id=\"h6\">79</td><td class=\"ctr2\" id=\"i6\">79</td><td class=\"ctr1\" id=\"j9\">5</td><td class=\"ctr2\" id=\"k9\">5</td><td class=\"ctr1\" id=\"l2\">1</td><td class=\"ctr2\" id=\"m4\">1</td></tr><tr><td id=\"a15\"><a href=\"Vector.html\" class=\"el_class\">Vector</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"38\" height=\"10\" title=\"751\" alt=\"751\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"28\" height=\"10\" title=\"50\" alt=\"50\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f4\">51</td><td class=\"ctr2\" id=\"g4\">51</td><td class=\"ctr1\" id=\"h4\">165</td><td class=\"ctr2\" id=\"i4\">165</td><td class=\"ctr1\" id=\"j4\">26</td><td class=\"ctr2\" id=\"k4\">26</td><td class=\"ctr1\" id=\"l3\">1</td><td class=\"ctr2\" id=\"m5\">1</td></tr><tr><td id=\"a2\"><a href=\"LUDecomposition.html\" class=\"el_class\">LUDecomposition</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"27\" height=\"10\" title=\"544\" alt=\"544\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"37\" alt=\"37\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f5\">28</td><td class=\"ctr2\" id=\"g5\">28</td><td class=\"ctr1\" id=\"h5\">98</td><td class=\"ctr2\" id=\"i5\">98</td><td class=\"ctr1\" id=\"j6\">8</td><td class=\"ctr2\" id=\"k6\">8</td><td class=\"ctr1\" id=\"l4\">1</td><td class=\"ctr2\" id=\"m6\">1</td></tr><tr><td id=\"a13\"><a href=\"SingularValueDecomposition.html\" class=\"el_class\">SingularValueDecomposition</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"371\" alt=\"371\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d14\"/><td class=\"ctr2\" id=\"e14\">n/a</td><td class=\"ctr1\" id=\"f14\">3</td><td class=\"ctr2\" id=\"g14\">3</td><td class=\"ctr1\" id=\"h11\">24</td><td class=\"ctr2\" id=\"i11\">24</td><td class=\"ctr1\" id=\"j10\">3</td><td class=\"ctr2\" id=\"k10\">3</td><td class=\"ctr1\" id=\"l5\">1</td><td class=\"ctr2\" id=\"m7\">1</td></tr><tr><td id=\"a12\"><a href=\"SchurDecomposition.html\" class=\"el_class\">SchurDecomposition</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"368\" alt=\"368\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f10\">8</td><td class=\"ctr2\" id=\"g10\">8</td><td class=\"ctr1\" id=\"h7\">55</td><td class=\"ctr2\" id=\"i7\">55</td><td class=\"ctr1\" id=\"j12\">2</td><td class=\"ctr2\" id=\"k12\">2</td><td class=\"ctr1\" id=\"l6\">1</td><td class=\"ctr2\" id=\"m8\">1</td></tr><tr><td id=\"a14\"><a href=\"Solvers.html\" class=\"el_class\">Solvers</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"332\" alt=\"332\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f8\">18</td><td class=\"ctr2\" id=\"g8\">18</td><td class=\"ctr1\" id=\"h8\">52</td><td class=\"ctr2\" id=\"i8\">52</td><td class=\"ctr1\" id=\"j7\">8</td><td class=\"ctr2\" id=\"k7\">8</td><td class=\"ctr1\" id=\"l7\">1</td><td class=\"ctr2\" id=\"m9\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixComparisons.html\" class=\"el_class\">MatrixComparisons</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"208\" alt=\"208\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f6\">28</td><td class=\"ctr2\" id=\"g6\">28</td><td class=\"ctr1\" id=\"h9\">47</td><td class=\"ctr2\" id=\"i9\">47</td><td class=\"ctr1\" id=\"j8\">7</td><td class=\"ctr2\" id=\"k8\">7</td><td class=\"ctr1\" id=\"l8\">1</td><td class=\"ctr2\" id=\"m10\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixMultiplicationAlgorithms.html\" class=\"el_class\">MatrixMultiplicationAlgorithms</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"132\" alt=\"132\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f12\">6</td><td class=\"ctr2\" id=\"g12\">6</td><td class=\"ctr1\" id=\"h14\">11</td><td class=\"ctr2\" id=\"i14\">11</td><td class=\"ctr1\" id=\"j11\">3</td><td class=\"ctr2\" id=\"k11\">3</td><td class=\"ctr1\" id=\"l9\">1</td><td class=\"ctr2\" id=\"m11\">1</td></tr><tr><td id=\"a1\"><a href=\"Decompose.html\" class=\"el_class\">Decompose</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"127\" alt=\"127\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f7\">19</td><td class=\"ctr2\" id=\"g7\">19</td><td class=\"ctr1\" id=\"h10\">28</td><td class=\"ctr2\" id=\"i10\">28</td><td class=\"ctr1\" id=\"j5\">11</td><td class=\"ctr2\" id=\"k5\">11</td><td class=\"ctr1\" id=\"l10\">1</td><td class=\"ctr2\" id=\"m12\">1</td></tr><tr><td id=\"a0\"><a href=\"CholeskyDecomposition.html\" class=\"el_class\">CholeskyDecomposition</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"123\" alt=\"123\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f11\">7</td><td class=\"ctr2\" id=\"g11\">7</td><td class=\"ctr1\" id=\"h12\">18</td><td class=\"ctr2\" id=\"i12\">18</td><td class=\"ctr1\" id=\"j13\">2</td><td class=\"ctr2\" id=\"k13\">2</td><td class=\"ctr1\" id=\"l11\">1</td><td class=\"ctr2\" id=\"m13\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixChecks.html\" class=\"el_class\">MatrixChecks</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"47\" alt=\"47\"/></td><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f13\">6</td><td class=\"ctr2\" id=\"g13\">6</td><td class=\"ctr1\" id=\"h13\">12</td><td class=\"ctr2\" id=\"i13\">12</td><td class=\"ctr1\" id=\"j14\">2</td><td class=\"ctr2\" id=\"k14\">2</td><td class=\"ctr1\" id=\"l12\">1</td><td class=\"ctr2\" id=\"m14\">1</td></tr><tr><td id=\"a10\"><a href=\"PrintOptions.html\" class=\"el_class\">PrintOptions</a></td><td class=\"bar\" id=\"b15\"/><td class=\"ctr2\" id=\"c0\">56%</td><td class=\"bar\" id=\"d15\"/><td class=\"ctr2\" id=\"e15\">n/a</td><td class=\"ctr1\" id=\"f15\">1</td><td class=\"ctr2\" id=\"g15\">2</td><td class=\"ctr1\" id=\"h15\">2</td><td class=\"ctr2\" id=\"i15\">6</td><td class=\"ctr1\" id=\"j15\">1</td><td class=\"ctr2\" id=\"k15\">2</td><td class=\"ctr1\" id=\"l15\">0</td><td class=\"ctr2\" id=\"m15\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/index.html b/target/site/jacoco/linalg/index.html
--- a/target/site/jacoco/linalg/index.html	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/linalg/index.html	(date 1648106316658)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.source.html" class="el_source">Source Files</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">11,857 of 12,053</td><td class="ctr2">1%</td><td class="bar">885 of 899</td><td class="ctr2">1%</td><td class="ctr1">693</td><td class="ctr2">707</td><td class="ctr1">1,680</td><td class="ctr2">1,732</td><td class="ctr1">246</td><td class="ctr2">256</td><td class="ctr1">13</td><td class="ctr2">16</td></tr></tfoot><tbody><tr><td id="a9"><a href="MatrixProperties.html" class="el_class">MatrixProperties</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l13">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a8"><a href="MatrixOperations.html" class="el_class">MatrixOperations</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="105" height="10" title="2,067" alt="2,067"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="104" height="10" title="186" alt="186"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">133</td><td class="ctr2" id="g1">133</td><td class="ctr1" id="h1">275</td><td class="ctr2" id="i2">275</td><td class="ctr1" id="j3">40</td><td class="ctr2" id="k3">40</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.html" class="el_class">MatrixManipulations</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="1,884" alt="1,884"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="82" height="10" title="148" alt="148"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">115</td><td class="ctr2" id="g3">115</td><td class="ctr1" id="h2">272</td><td class="ctr2" id="i3">272</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.html" class="el_class">Matrix</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a11"><a href="QRDecomposition.html" class="el_class">QRDecomposition</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a15"><a href="Vector.html" class="el_class">Vector</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.html" class="el_class">LUDecomposition</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a13"><a href="SingularValueDecomposition.html" class="el_class">SingularValueDecomposition</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a12"><a href="SchurDecomposition.html" class="el_class">SchurDecomposition</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a14"><a href="Solvers.html" class="el_class">Solvers</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.html" class="el_class">MatrixComparisons</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="208" alt="208"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">47</td><td class="ctr2" id="i9">47</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a7"><a href="MatrixMultiplicationAlgorithms.html" class="el_class">MatrixMultiplicationAlgorithms</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="132" alt="132"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h14">11</td><td class="ctr2" id="i14">11</td><td class="ctr1" id="j11">3</td><td class="ctr2" id="k11">3</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a1"><a href="Decompose.html" class="el_class">Decompose</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.html" class="el_class">CholeskyDecomposition</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a4"><a href="MatrixChecks.html" class="el_class">MatrixChecks</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f13">6</td><td class="ctr2" id="g13">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j14">2</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l12">1</td><td class="ctr2" id="m14">1</td></tr><tr><td id="a10"><a href="PrintOptions.html" class="el_class">PrintOptions</a></td><td class="bar" id="b15"/><td class="ctr2" id="c0">56%</td><td class="bar" id="d15"/><td class="ctr2" id="e15">n/a</td><td class="ctr1" id="f15">1</td><td class="ctr2" id="g15">2</td><td class="ctr1" id="h15">2</td><td class="ctr2" id="i15">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">2</td><td class="ctr1" id="l15">0</td><td class="ctr2" id="m15">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.source.html" class="el_source">Source Files</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">11,896 of 12,092</td><td class="ctr2">1%</td><td class="bar">885 of 899</td><td class="ctr2">1%</td><td class="ctr1">694</td><td class="ctr2">708</td><td class="ctr1">1,688</td><td class="ctr2">1,740</td><td class="ctr1">247</td><td class="ctr2">257</td><td class="ctr1">13</td><td class="ctr2">16</td></tr></tfoot><tbody><tr><td id="a9"><a href="MatrixProperties.html" class="el_class">MatrixProperties</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l13">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a8"><a href="MatrixOperations.html" class="el_class">MatrixOperations</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="107" height="10" title="2,106" alt="2,106"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="104" height="10" title="186" alt="186"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">134</td><td class="ctr2" id="g1">134</td><td class="ctr1" id="h1">283</td><td class="ctr2" id="i2">283</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.html" class="el_class">MatrixManipulations</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="1,884" alt="1,884"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="82" height="10" title="148" alt="148"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">115</td><td class="ctr2" id="g3">115</td><td class="ctr1" id="h2">272</td><td class="ctr2" id="i3">272</td><td class="ctr1" id="j3">41</td><td class="ctr2" id="k3">41</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.html" class="el_class">Matrix</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a11"><a href="QRDecomposition.html" class="el_class">QRDecomposition</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a15"><a href="Vector.html" class="el_class">Vector</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.html" class="el_class">LUDecomposition</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a13"><a href="SingularValueDecomposition.html" class="el_class">SingularValueDecomposition</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a12"><a href="SchurDecomposition.html" class="el_class">SchurDecomposition</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a14"><a href="Solvers.html" class="el_class">Solvers</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.html" class="el_class">MatrixComparisons</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="208" alt="208"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">47</td><td class="ctr2" id="i9">47</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a7"><a href="MatrixMultiplicationAlgorithms.html" class="el_class">MatrixMultiplicationAlgorithms</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="132" alt="132"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h14">11</td><td class="ctr2" id="i14">11</td><td class="ctr1" id="j11">3</td><td class="ctr2" id="k11">3</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a1"><a href="Decompose.html" class="el_class">Decompose</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.html" class="el_class">CholeskyDecomposition</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a4"><a href="MatrixChecks.html" class="el_class">MatrixChecks</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f13">6</td><td class="ctr2" id="g13">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j14">2</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l12">1</td><td class="ctr2" id="m14">1</td></tr><tr><td id="a10"><a href="PrintOptions.html" class="el_class">PrintOptions</a></td><td class="bar" id="b15"/><td class="ctr2" id="c0">56%</td><td class="bar" id="d15"/><td class="ctr2" id="e15">n/a</td><td class="ctr1" id="f15">1</td><td class="ctr2" id="g15">2</td><td class="ctr1" id="h15">2</td><td class="ctr2" id="i15">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">2</td><td class="ctr1" id="l15">0</td><td class="ctr2" id="m15">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/site/jacoco/linalg/index.source.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../jacoco-resources/report.gif\" type=\"image/gif\"/><title>linalg</title><script type=\"text/javascript\" src=\"../jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"index.html\" class=\"el_class\">Classes</a><a href=\"../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../index.html\" class=\"el_report\">Java-Linear-Algebra</a> &gt; <span class=\"el_package\">linalg</span></div><h1>linalg</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">11,857 of 12,053</td><td class=\"ctr2\">1%</td><td class=\"bar\">885 of 899</td><td class=\"ctr2\">1%</td><td class=\"ctr1\">693</td><td class=\"ctr2\">707</td><td class=\"ctr1\">1,680</td><td class=\"ctr2\">1,732</td><td class=\"ctr1\">246</td><td class=\"ctr2\">256</td><td class=\"ctr1\">13</td><td class=\"ctr2\">16</td></tr></tfoot><tbody><tr><td id=\"a9\"><a href=\"MatrixProperties.java.html\" class=\"el_source\">MatrixProperties.java</a></td><td class=\"bar\" id=\"b0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"119\" height=\"10\" title=\"2,330\" alt=\"2,330\"/></td><td class=\"ctr2\" id=\"c2\">0%</td><td class=\"bar\" id=\"d0\"><img src=\"../jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"214\" alt=\"214\"/></td><td class=\"ctr2\" id=\"e1\">0%</td><td class=\"ctr1\" id=\"f0\">149</td><td class=\"ctr2\" id=\"g0\">152</td><td class=\"ctr1\" id=\"h0\">291</td><td class=\"ctr2\" id=\"i0\">297</td><td class=\"ctr1\" id=\"j1\">42</td><td class=\"ctr2\" id=\"k1\">45</td><td class=\"ctr1\" id=\"l13\">0</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a8\"><a href=\"MatrixOperations.java.html\" class=\"el_source\">MatrixOperations.java</a></td><td class=\"bar\" id=\"b1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"105\" height=\"10\" title=\"2,067\" alt=\"2,067\"/></td><td class=\"ctr2\" id=\"c3\">0%</td><td class=\"bar\" id=\"d1\"><img src=\"../jacoco-resources/redbar.gif\" width=\"104\" height=\"10\" title=\"186\" alt=\"186\"/></td><td class=\"ctr2\" id=\"e2\">0%</td><td class=\"ctr1\" id=\"f1\">133</td><td class=\"ctr2\" id=\"g1\">133</td><td class=\"ctr1\" id=\"h1\">275</td><td class=\"ctr2\" id=\"i2\">275</td><td class=\"ctr1\" id=\"j3\">40</td><td class=\"ctr2\" id=\"k3\">40</td><td class=\"ctr1\" id=\"l0\">1</td><td class=\"ctr2\" id=\"m1\">1</td></tr><tr><td id=\"a6\"><a href=\"MatrixManipulations.java.html\" class=\"el_source\">MatrixManipulations.java</a></td><td class=\"bar\" id=\"b2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"1,884\" alt=\"1,884\"/></td><td class=\"ctr2\" id=\"c4\">0%</td><td class=\"bar\" id=\"d2\"><img src=\"../jacoco-resources/redbar.gif\" width=\"82\" height=\"10\" title=\"148\" alt=\"148\"/></td><td class=\"ctr2\" id=\"e3\">0%</td><td class=\"ctr1\" id=\"f2\">115</td><td class=\"ctr2\" id=\"g3\">115</td><td class=\"ctr1\" id=\"h2\">272</td><td class=\"ctr2\" id=\"i3\">272</td><td class=\"ctr1\" id=\"j2\">41</td><td class=\"ctr2\" id=\"k2\">41</td><td class=\"ctr1\" id=\"l1\">1</td><td class=\"ctr2\" id=\"m2\">1</td></tr><tr><td id=\"a3\"><a href=\"Matrix.java.html\" class=\"el_source\">Matrix.java</a></td><td class=\"bar\" id=\"b3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"77\" height=\"10\" title=\"1,517\" alt=\"1,517\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"169\" alt=\"169\"/></td><td class=\"ctr2\" id=\"c1\">10%</td><td class=\"bar\" id=\"d3\"><img src=\"../jacoco-resources/redbar.gif\" width=\"66\" height=\"10\" title=\"118\" alt=\"118\"/><img src=\"../jacoco-resources/greenbar.gif\" width=\"7\" height=\"10\" title=\"14\" alt=\"14\"/></td><td class=\"ctr2\" id=\"e0\">10%</td><td class=\"ctr1\" id=\"f3\">107</td><td class=\"ctr2\" id=\"g2\">117</td><td class=\"ctr1\" id=\"h3\">251</td><td class=\"ctr2\" id=\"i1\">293</td><td class=\"ctr1\" id=\"j0\">45</td><td class=\"ctr2\" id=\"k0\">51</td><td class=\"ctr1\" id=\"l14\">0</td><td class=\"ctr2\" id=\"m3\">1</td></tr><tr><td id=\"a11\"><a href=\"QRDecomposition.java.html\" class=\"el_source\">QRDecomposition.java</a></td><td class=\"bar\" id=\"b4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"53\" height=\"10\" title=\"1,049\" alt=\"1,049\"/></td><td class=\"ctr2\" id=\"c5\">0%</td><td class=\"bar\" id=\"d8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"18\" alt=\"18\"/></td><td class=\"ctr2\" id=\"e4\">0%</td><td class=\"ctr1\" id=\"f9\">14</td><td class=\"ctr2\" id=\"g9\">14</td><td class=\"ctr1\" id=\"h6\">79</td><td class=\"ctr2\" id=\"i6\">79</td><td class=\"ctr1\" id=\"j9\">5</td><td class=\"ctr2\" id=\"k9\">5</td><td class=\"ctr1\" id=\"l2\">1</td><td class=\"ctr2\" id=\"m4\">1</td></tr><tr><td id=\"a15\"><a href=\"Vector.java.html\" class=\"el_source\">Vector.java</a></td><td class=\"bar\" id=\"b5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"38\" height=\"10\" title=\"751\" alt=\"751\"/></td><td class=\"ctr2\" id=\"c6\">0%</td><td class=\"bar\" id=\"d4\"><img src=\"../jacoco-resources/redbar.gif\" width=\"28\" height=\"10\" title=\"50\" alt=\"50\"/></td><td class=\"ctr2\" id=\"e5\">0%</td><td class=\"ctr1\" id=\"f4\">51</td><td class=\"ctr2\" id=\"g4\">51</td><td class=\"ctr1\" id=\"h4\">165</td><td class=\"ctr2\" id=\"i4\">165</td><td class=\"ctr1\" id=\"j4\">26</td><td class=\"ctr2\" id=\"k4\">26</td><td class=\"ctr1\" id=\"l3\">1</td><td class=\"ctr2\" id=\"m5\">1</td></tr><tr><td id=\"a2\"><a href=\"LUDecomposition.java.html\" class=\"el_source\">LUDecomposition.java</a></td><td class=\"bar\" id=\"b6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"27\" height=\"10\" title=\"544\" alt=\"544\"/></td><td class=\"ctr2\" id=\"c7\">0%</td><td class=\"bar\" id=\"d6\"><img src=\"../jacoco-resources/redbar.gif\" width=\"20\" height=\"10\" title=\"37\" alt=\"37\"/></td><td class=\"ctr2\" id=\"e6\">0%</td><td class=\"ctr1\" id=\"f5\">28</td><td class=\"ctr2\" id=\"g5\">28</td><td class=\"ctr1\" id=\"h5\">98</td><td class=\"ctr2\" id=\"i5\">98</td><td class=\"ctr1\" id=\"j6\">8</td><td class=\"ctr2\" id=\"k6\">8</td><td class=\"ctr1\" id=\"l4\">1</td><td class=\"ctr2\" id=\"m6\">1</td></tr><tr><td id=\"a13\"><a href=\"SingularValueDecomposition.java.html\" class=\"el_source\">SingularValueDecomposition.java</a></td><td class=\"bar\" id=\"b7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"371\" alt=\"371\"/></td><td class=\"ctr2\" id=\"c8\">0%</td><td class=\"bar\" id=\"d14\"/><td class=\"ctr2\" id=\"e14\">n/a</td><td class=\"ctr1\" id=\"f14\">3</td><td class=\"ctr2\" id=\"g14\">3</td><td class=\"ctr1\" id=\"h11\">24</td><td class=\"ctr2\" id=\"i11\">24</td><td class=\"ctr1\" id=\"j10\">3</td><td class=\"ctr2\" id=\"k10\">3</td><td class=\"ctr1\" id=\"l5\">1</td><td class=\"ctr2\" id=\"m7\">1</td></tr><tr><td id=\"a12\"><a href=\"SchurDecomposition.java.html\" class=\"el_source\">SchurDecomposition.java</a></td><td class=\"bar\" id=\"b8\"><img src=\"../jacoco-resources/redbar.gif\" width=\"18\" height=\"10\" title=\"368\" alt=\"368\"/></td><td class=\"ctr2\" id=\"c9\">0%</td><td class=\"bar\" id=\"d10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"12\" alt=\"12\"/></td><td class=\"ctr2\" id=\"e7\">0%</td><td class=\"ctr1\" id=\"f10\">8</td><td class=\"ctr2\" id=\"g10\">8</td><td class=\"ctr1\" id=\"h7\">55</td><td class=\"ctr2\" id=\"i7\">55</td><td class=\"ctr1\" id=\"j12\">2</td><td class=\"ctr2\" id=\"k12\">2</td><td class=\"ctr1\" id=\"l6\">1</td><td class=\"ctr2\" id=\"m8\">1</td></tr><tr><td id=\"a14\"><a href=\"Solvers.java.html\" class=\"el_source\">Solvers.java</a></td><td class=\"bar\" id=\"b9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"16\" height=\"10\" title=\"332\" alt=\"332\"/></td><td class=\"ctr2\" id=\"c10\">0%</td><td class=\"bar\" id=\"d7\"><img src=\"../jacoco-resources/redbar.gif\" width=\"11\" height=\"10\" title=\"20\" alt=\"20\"/></td><td class=\"ctr2\" id=\"e8\">0%</td><td class=\"ctr1\" id=\"f8\">18</td><td class=\"ctr2\" id=\"g8\">18</td><td class=\"ctr1\" id=\"h8\">52</td><td class=\"ctr2\" id=\"i8\">52</td><td class=\"ctr1\" id=\"j7\">8</td><td class=\"ctr2\" id=\"k7\">8</td><td class=\"ctr1\" id=\"l7\">1</td><td class=\"ctr2\" id=\"m9\">1</td></tr><tr><td id=\"a5\"><a href=\"MatrixComparisons.java.html\" class=\"el_source\">MatrixComparisons.java</a></td><td class=\"bar\" id=\"b10\"><img src=\"../jacoco-resources/redbar.gif\" width=\"10\" height=\"10\" title=\"208\" alt=\"208\"/></td><td class=\"ctr2\" id=\"c11\">0%</td><td class=\"bar\" id=\"d5\"><img src=\"../jacoco-resources/redbar.gif\" width=\"23\" height=\"10\" title=\"42\" alt=\"42\"/></td><td class=\"ctr2\" id=\"e9\">0%</td><td class=\"ctr1\" id=\"f6\">28</td><td class=\"ctr2\" id=\"g6\">28</td><td class=\"ctr1\" id=\"h9\">47</td><td class=\"ctr2\" id=\"i9\">47</td><td class=\"ctr1\" id=\"j8\">7</td><td class=\"ctr2\" id=\"k8\">7</td><td class=\"ctr1\" id=\"l8\">1</td><td class=\"ctr2\" id=\"m10\">1</td></tr><tr><td id=\"a7\"><a href=\"MatrixMultiplicationAlgorithms.java.html\" class=\"el_source\">MatrixMultiplicationAlgorithms.java</a></td><td class=\"bar\" id=\"b11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"132\" alt=\"132\"/></td><td class=\"ctr2\" id=\"c12\">0%</td><td class=\"bar\" id=\"d13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"3\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e10\">0%</td><td class=\"ctr1\" id=\"f12\">6</td><td class=\"ctr2\" id=\"g12\">6</td><td class=\"ctr1\" id=\"h14\">11</td><td class=\"ctr2\" id=\"i14\">11</td><td class=\"ctr1\" id=\"j11\">3</td><td class=\"ctr2\" id=\"k11\">3</td><td class=\"ctr1\" id=\"l9\">1</td><td class=\"ctr2\" id=\"m11\">1</td></tr><tr><td id=\"a1\"><a href=\"Decompose.java.html\" class=\"el_source\">Decompose.java</a></td><td class=\"bar\" id=\"b12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"127\" alt=\"127\"/></td><td class=\"ctr2\" id=\"c13\">0%</td><td class=\"bar\" id=\"d9\"><img src=\"../jacoco-resources/redbar.gif\" width=\"8\" height=\"10\" title=\"16\" alt=\"16\"/></td><td class=\"ctr2\" id=\"e11\">0%</td><td class=\"ctr1\" id=\"f7\">19</td><td class=\"ctr2\" id=\"g7\">19</td><td class=\"ctr1\" id=\"h10\">28</td><td class=\"ctr2\" id=\"i10\">28</td><td class=\"ctr1\" id=\"j5\">11</td><td class=\"ctr2\" id=\"k5\">11</td><td class=\"ctr1\" id=\"l10\">1</td><td class=\"ctr2\" id=\"m12\">1</td></tr><tr><td id=\"a0\"><a href=\"CholeskyDecomposition.java.html\" class=\"el_source\">CholeskyDecomposition.java</a></td><td class=\"bar\" id=\"b13\"><img src=\"../jacoco-resources/redbar.gif\" width=\"6\" height=\"10\" title=\"123\" alt=\"123\"/></td><td class=\"ctr2\" id=\"c14\">0%</td><td class=\"bar\" id=\"d11\"><img src=\"../jacoco-resources/redbar.gif\" width=\"5\" height=\"10\" title=\"10\" alt=\"10\"/></td><td class=\"ctr2\" id=\"e12\">0%</td><td class=\"ctr1\" id=\"f11\">7</td><td class=\"ctr2\" id=\"g11\">7</td><td class=\"ctr1\" id=\"h12\">18</td><td class=\"ctr2\" id=\"i12\">18</td><td class=\"ctr1\" id=\"j13\">2</td><td class=\"ctr2\" id=\"k13\">2</td><td class=\"ctr1\" id=\"l11\">1</td><td class=\"ctr2\" id=\"m13\">1</td></tr><tr><td id=\"a4\"><a href=\"MatrixChecks.java.html\" class=\"el_source\">MatrixChecks.java</a></td><td class=\"bar\" id=\"b14\"><img src=\"../jacoco-resources/redbar.gif\" width=\"2\" height=\"10\" title=\"47\" alt=\"47\"/></td><td class=\"ctr2\" id=\"c15\">0%</td><td class=\"bar\" id=\"d12\"><img src=\"../jacoco-resources/redbar.gif\" width=\"4\" height=\"10\" title=\"8\" alt=\"8\"/></td><td class=\"ctr2\" id=\"e13\">0%</td><td class=\"ctr1\" id=\"f13\">6</td><td class=\"ctr2\" id=\"g13\">6</td><td class=\"ctr1\" id=\"h13\">12</td><td class=\"ctr2\" id=\"i13\">12</td><td class=\"ctr1\" id=\"j14\">2</td><td class=\"ctr2\" id=\"k14\">2</td><td class=\"ctr1\" id=\"l12\">1</td><td class=\"ctr2\" id=\"m14\">1</td></tr><tr><td id=\"a10\"><a href=\"PrintOptions.java.html\" class=\"el_source\">PrintOptions.java</a></td><td class=\"bar\" id=\"b15\"/><td class=\"ctr2\" id=\"c0\">56%</td><td class=\"bar\" id=\"d15\"/><td class=\"ctr2\" id=\"e15\">n/a</td><td class=\"ctr1\" id=\"f15\">1</td><td class=\"ctr2\" id=\"g15\">2</td><td class=\"ctr1\" id=\"h15\">2</td><td class=\"ctr2\" id=\"i15\">6</td><td class=\"ctr1\" id=\"j15\">1</td><td class=\"ctr2\" id=\"k15\">2</td><td class=\"ctr1\" id=\"l15\">0</td><td class=\"ctr2\" id=\"m15\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/linalg/index.source.html b/target/site/jacoco/linalg/index.source.html
--- a/target/site/jacoco/linalg/index.source.html	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/linalg/index.source.html	(date 1648106316640)
@@ -1,1 +1,1 @@
-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.html" class="el_class">Classes</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">11,857 of 12,053</td><td class="ctr2">1%</td><td class="bar">885 of 899</td><td class="ctr2">1%</td><td class="ctr1">693</td><td class="ctr2">707</td><td class="ctr1">1,680</td><td class="ctr2">1,732</td><td class="ctr1">246</td><td class="ctr2">256</td><td class="ctr1">13</td><td class="ctr2">16</td></tr></tfoot><tbody><tr><td id="a9"><a href="MatrixProperties.java.html" class="el_source">MatrixProperties.java</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l13">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a8"><a href="MatrixOperations.java.html" class="el_source">MatrixOperations.java</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="105" height="10" title="2,067" alt="2,067"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="104" height="10" title="186" alt="186"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">133</td><td class="ctr2" id="g1">133</td><td class="ctr1" id="h1">275</td><td class="ctr2" id="i2">275</td><td class="ctr1" id="j3">40</td><td class="ctr2" id="k3">40</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.java.html" class="el_source">MatrixManipulations.java</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="1,884" alt="1,884"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="82" height="10" title="148" alt="148"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">115</td><td class="ctr2" id="g3">115</td><td class="ctr1" id="h2">272</td><td class="ctr2" id="i3">272</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.java.html" class="el_source">Matrix.java</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a11"><a href="QRDecomposition.java.html" class="el_source">QRDecomposition.java</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a15"><a href="Vector.java.html" class="el_source">Vector.java</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.java.html" class="el_source">LUDecomposition.java</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a13"><a href="SingularValueDecomposition.java.html" class="el_source">SingularValueDecomposition.java</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a12"><a href="SchurDecomposition.java.html" class="el_source">SchurDecomposition.java</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a14"><a href="Solvers.java.html" class="el_source">Solvers.java</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.java.html" class="el_source">MatrixComparisons.java</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="208" alt="208"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">47</td><td class="ctr2" id="i9">47</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a7"><a href="MatrixMultiplicationAlgorithms.java.html" class="el_source">MatrixMultiplicationAlgorithms.java</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="132" alt="132"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h14">11</td><td class="ctr2" id="i14">11</td><td class="ctr1" id="j11">3</td><td class="ctr2" id="k11">3</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a1"><a href="Decompose.java.html" class="el_source">Decompose.java</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.java.html" class="el_source">CholeskyDecomposition.java</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a4"><a href="MatrixChecks.java.html" class="el_source">MatrixChecks.java</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f13">6</td><td class="ctr2" id="g13">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j14">2</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l12">1</td><td class="ctr2" id="m14">1</td></tr><tr><td id="a10"><a href="PrintOptions.java.html" class="el_source">PrintOptions.java</a></td><td class="bar" id="b15"/><td class="ctr2" id="c0">56%</td><td class="bar" id="d15"/><td class="ctr2" id="e15">n/a</td><td class="ctr1" id="f15">1</td><td class="ctr2" id="g15">2</td><td class="ctr1" id="h15">2</td><td class="ctr2" id="i15">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">2</td><td class="ctr1" id="l15">0</td><td class="ctr2" id="m15">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>linalg</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb', 'coveragetable'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="index.html" class="el_class">Classes</a><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Java-Linear-Algebra</a> &gt; <span class="el_package">linalg</span></div><h1>linalg</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td><td class="sortable ctr1" id="l" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="m" onclick="toggleSort(this)">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">11,896 of 12,092</td><td class="ctr2">1%</td><td class="bar">885 of 899</td><td class="ctr2">1%</td><td class="ctr1">694</td><td class="ctr2">708</td><td class="ctr1">1,688</td><td class="ctr2">1,740</td><td class="ctr1">247</td><td class="ctr2">257</td><td class="ctr1">13</td><td class="ctr2">16</td></tr></tfoot><tbody><tr><td id="a9"><a href="MatrixProperties.java.html" class="el_source">MatrixProperties.java</a></td><td class="bar" id="b0"><img src="../jacoco-resources/redbar.gif" width="119" height="10" title="2,330" alt="2,330"/></td><td class="ctr2" id="c2">0%</td><td class="bar" id="d0"><img src="../jacoco-resources/redbar.gif" width="120" height="10" title="214" alt="214"/></td><td class="ctr2" id="e1">0%</td><td class="ctr1" id="f0">149</td><td class="ctr2" id="g0">152</td><td class="ctr1" id="h0">291</td><td class="ctr2" id="i0">297</td><td class="ctr1" id="j1">42</td><td class="ctr2" id="k1">45</td><td class="ctr1" id="l13">0</td><td class="ctr2" id="m0">1</td></tr><tr><td id="a8"><a href="MatrixOperations.java.html" class="el_source">MatrixOperations.java</a></td><td class="bar" id="b1"><img src="../jacoco-resources/redbar.gif" width="107" height="10" title="2,106" alt="2,106"/></td><td class="ctr2" id="c3">0%</td><td class="bar" id="d1"><img src="../jacoco-resources/redbar.gif" width="104" height="10" title="186" alt="186"/></td><td class="ctr2" id="e2">0%</td><td class="ctr1" id="f1">134</td><td class="ctr2" id="g1">134</td><td class="ctr1" id="h1">283</td><td class="ctr2" id="i2">283</td><td class="ctr1" id="j2">41</td><td class="ctr2" id="k2">41</td><td class="ctr1" id="l0">1</td><td class="ctr2" id="m1">1</td></tr><tr><td id="a6"><a href="MatrixManipulations.java.html" class="el_source">MatrixManipulations.java</a></td><td class="bar" id="b2"><img src="../jacoco-resources/redbar.gif" width="96" height="10" title="1,884" alt="1,884"/></td><td class="ctr2" id="c4">0%</td><td class="bar" id="d2"><img src="../jacoco-resources/redbar.gif" width="82" height="10" title="148" alt="148"/></td><td class="ctr2" id="e3">0%</td><td class="ctr1" id="f2">115</td><td class="ctr2" id="g3">115</td><td class="ctr1" id="h2">272</td><td class="ctr2" id="i3">272</td><td class="ctr1" id="j3">41</td><td class="ctr2" id="k3">41</td><td class="ctr1" id="l1">1</td><td class="ctr2" id="m2">1</td></tr><tr><td id="a3"><a href="Matrix.java.html" class="el_source">Matrix.java</a></td><td class="bar" id="b3"><img src="../jacoco-resources/redbar.gif" width="77" height="10" title="1,517" alt="1,517"/><img src="../jacoco-resources/greenbar.gif" width="8" height="10" title="169" alt="169"/></td><td class="ctr2" id="c1">10%</td><td class="bar" id="d3"><img src="../jacoco-resources/redbar.gif" width="66" height="10" title="118" alt="118"/><img src="../jacoco-resources/greenbar.gif" width="7" height="10" title="14" alt="14"/></td><td class="ctr2" id="e0">10%</td><td class="ctr1" id="f3">107</td><td class="ctr2" id="g2">117</td><td class="ctr1" id="h3">251</td><td class="ctr2" id="i1">293</td><td class="ctr1" id="j0">45</td><td class="ctr2" id="k0">51</td><td class="ctr1" id="l14">0</td><td class="ctr2" id="m3">1</td></tr><tr><td id="a11"><a href="QRDecomposition.java.html" class="el_source">QRDecomposition.java</a></td><td class="bar" id="b4"><img src="../jacoco-resources/redbar.gif" width="53" height="10" title="1,049" alt="1,049"/></td><td class="ctr2" id="c5">0%</td><td class="bar" id="d8"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="18" alt="18"/></td><td class="ctr2" id="e4">0%</td><td class="ctr1" id="f9">14</td><td class="ctr2" id="g9">14</td><td class="ctr1" id="h6">79</td><td class="ctr2" id="i6">79</td><td class="ctr1" id="j9">5</td><td class="ctr2" id="k9">5</td><td class="ctr1" id="l2">1</td><td class="ctr2" id="m4">1</td></tr><tr><td id="a15"><a href="Vector.java.html" class="el_source">Vector.java</a></td><td class="bar" id="b5"><img src="../jacoco-resources/redbar.gif" width="38" height="10" title="751" alt="751"/></td><td class="ctr2" id="c6">0%</td><td class="bar" id="d4"><img src="../jacoco-resources/redbar.gif" width="28" height="10" title="50" alt="50"/></td><td class="ctr2" id="e5">0%</td><td class="ctr1" id="f4">51</td><td class="ctr2" id="g4">51</td><td class="ctr1" id="h4">165</td><td class="ctr2" id="i4">165</td><td class="ctr1" id="j4">26</td><td class="ctr2" id="k4">26</td><td class="ctr1" id="l3">1</td><td class="ctr2" id="m5">1</td></tr><tr><td id="a2"><a href="LUDecomposition.java.html" class="el_source">LUDecomposition.java</a></td><td class="bar" id="b6"><img src="../jacoco-resources/redbar.gif" width="27" height="10" title="544" alt="544"/></td><td class="ctr2" id="c7">0%</td><td class="bar" id="d6"><img src="../jacoco-resources/redbar.gif" width="20" height="10" title="37" alt="37"/></td><td class="ctr2" id="e6">0%</td><td class="ctr1" id="f5">28</td><td class="ctr2" id="g5">28</td><td class="ctr1" id="h5">98</td><td class="ctr2" id="i5">98</td><td class="ctr1" id="j6">8</td><td class="ctr2" id="k6">8</td><td class="ctr1" id="l4">1</td><td class="ctr2" id="m6">1</td></tr><tr><td id="a13"><a href="SingularValueDecomposition.java.html" class="el_source">SingularValueDecomposition.java</a></td><td class="bar" id="b7"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="371" alt="371"/></td><td class="ctr2" id="c8">0%</td><td class="bar" id="d14"/><td class="ctr2" id="e14">n/a</td><td class="ctr1" id="f14">3</td><td class="ctr2" id="g14">3</td><td class="ctr1" id="h11">24</td><td class="ctr2" id="i11">24</td><td class="ctr1" id="j10">3</td><td class="ctr2" id="k10">3</td><td class="ctr1" id="l5">1</td><td class="ctr2" id="m7">1</td></tr><tr><td id="a12"><a href="SchurDecomposition.java.html" class="el_source">SchurDecomposition.java</a></td><td class="bar" id="b8"><img src="../jacoco-resources/redbar.gif" width="18" height="10" title="368" alt="368"/></td><td class="ctr2" id="c9">0%</td><td class="bar" id="d10"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="12" alt="12"/></td><td class="ctr2" id="e7">0%</td><td class="ctr1" id="f10">8</td><td class="ctr2" id="g10">8</td><td class="ctr1" id="h7">55</td><td class="ctr2" id="i7">55</td><td class="ctr1" id="j12">2</td><td class="ctr2" id="k12">2</td><td class="ctr1" id="l6">1</td><td class="ctr2" id="m8">1</td></tr><tr><td id="a14"><a href="Solvers.java.html" class="el_source">Solvers.java</a></td><td class="bar" id="b9"><img src="../jacoco-resources/redbar.gif" width="16" height="10" title="332" alt="332"/></td><td class="ctr2" id="c10">0%</td><td class="bar" id="d7"><img src="../jacoco-resources/redbar.gif" width="11" height="10" title="20" alt="20"/></td><td class="ctr2" id="e8">0%</td><td class="ctr1" id="f8">18</td><td class="ctr2" id="g8">18</td><td class="ctr1" id="h8">52</td><td class="ctr2" id="i8">52</td><td class="ctr1" id="j7">8</td><td class="ctr2" id="k7">8</td><td class="ctr1" id="l7">1</td><td class="ctr2" id="m9">1</td></tr><tr><td id="a5"><a href="MatrixComparisons.java.html" class="el_source">MatrixComparisons.java</a></td><td class="bar" id="b10"><img src="../jacoco-resources/redbar.gif" width="10" height="10" title="208" alt="208"/></td><td class="ctr2" id="c11">0%</td><td class="bar" id="d5"><img src="../jacoco-resources/redbar.gif" width="23" height="10" title="42" alt="42"/></td><td class="ctr2" id="e9">0%</td><td class="ctr1" id="f6">28</td><td class="ctr2" id="g6">28</td><td class="ctr1" id="h9">47</td><td class="ctr2" id="i9">47</td><td class="ctr1" id="j8">7</td><td class="ctr2" id="k8">7</td><td class="ctr1" id="l8">1</td><td class="ctr2" id="m10">1</td></tr><tr><td id="a7"><a href="MatrixMultiplicationAlgorithms.java.html" class="el_source">MatrixMultiplicationAlgorithms.java</a></td><td class="bar" id="b11"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="132" alt="132"/></td><td class="ctr2" id="c12">0%</td><td class="bar" id="d13"><img src="../jacoco-resources/redbar.gif" width="3" height="10" title="6" alt="6"/></td><td class="ctr2" id="e10">0%</td><td class="ctr1" id="f12">6</td><td class="ctr2" id="g12">6</td><td class="ctr1" id="h14">11</td><td class="ctr2" id="i14">11</td><td class="ctr1" id="j11">3</td><td class="ctr2" id="k11">3</td><td class="ctr1" id="l9">1</td><td class="ctr2" id="m11">1</td></tr><tr><td id="a1"><a href="Decompose.java.html" class="el_source">Decompose.java</a></td><td class="bar" id="b12"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="127" alt="127"/></td><td class="ctr2" id="c13">0%</td><td class="bar" id="d9"><img src="../jacoco-resources/redbar.gif" width="8" height="10" title="16" alt="16"/></td><td class="ctr2" id="e11">0%</td><td class="ctr1" id="f7">19</td><td class="ctr2" id="g7">19</td><td class="ctr1" id="h10">28</td><td class="ctr2" id="i10">28</td><td class="ctr1" id="j5">11</td><td class="ctr2" id="k5">11</td><td class="ctr1" id="l10">1</td><td class="ctr2" id="m12">1</td></tr><tr><td id="a0"><a href="CholeskyDecomposition.java.html" class="el_source">CholeskyDecomposition.java</a></td><td class="bar" id="b13"><img src="../jacoco-resources/redbar.gif" width="6" height="10" title="123" alt="123"/></td><td class="ctr2" id="c14">0%</td><td class="bar" id="d11"><img src="../jacoco-resources/redbar.gif" width="5" height="10" title="10" alt="10"/></td><td class="ctr2" id="e12">0%</td><td class="ctr1" id="f11">7</td><td class="ctr2" id="g11">7</td><td class="ctr1" id="h12">18</td><td class="ctr2" id="i12">18</td><td class="ctr1" id="j13">2</td><td class="ctr2" id="k13">2</td><td class="ctr1" id="l11">1</td><td class="ctr2" id="m13">1</td></tr><tr><td id="a4"><a href="MatrixChecks.java.html" class="el_source">MatrixChecks.java</a></td><td class="bar" id="b14"><img src="../jacoco-resources/redbar.gif" width="2" height="10" title="47" alt="47"/></td><td class="ctr2" id="c15">0%</td><td class="bar" id="d12"><img src="../jacoco-resources/redbar.gif" width="4" height="10" title="8" alt="8"/></td><td class="ctr2" id="e13">0%</td><td class="ctr1" id="f13">6</td><td class="ctr2" id="g13">6</td><td class="ctr1" id="h13">12</td><td class="ctr2" id="i13">12</td><td class="ctr1" id="j14">2</td><td class="ctr2" id="k14">2</td><td class="ctr1" id="l12">1</td><td class="ctr2" id="m14">1</td></tr><tr><td id="a10"><a href="PrintOptions.java.html" class="el_source">PrintOptions.java</a></td><td class="bar" id="b15"/><td class="ctr2" id="c0">56%</td><td class="bar" id="d15"/><td class="ctr2" id="e15">n/a</td><td class="ctr1" id="f15">1</td><td class="ctr2" id="g15">2</td><td class="ctr1" id="h15">2</td><td class="ctr2" id="i15">6</td><td class="ctr1" id="j15">1</td><td class="ctr2" id="k15">2</td><td class="ctr1" id="l15">0</td><td class="ctr2" id="m15">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>
\ No newline at end of file
Index: target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuite xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd\" version=\"3.0\" name=\"linalg.matrix.MatrixConstructorTest\" time=\"0.066\" tests=\"6\" errors=\"0\" skipped=\"0\" failures=\"0\">\r\n  <properties>\r\n    <property name=\"java.specification.version\" value=\"16\"/>\r\n    <property name=\"sun.cpu.isalist\" value=\"amd64\"/>\r\n    <property name=\"sun.jnu.encoding\" value=\"Cp1252\"/>\r\n    <property name=\"java.class.path\" value=\"C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\\target\\test-classes;C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\\target\\classes;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-surefire-provider\\1.1.0\\junit-platform-surefire-provider-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apiguardian\\apiguardian-api\\1.0.0\\apiguardian-api-1.0.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-launcher\\1.1.0\\junit-platform-launcher-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\surefire\\surefire-api\\2.19.1\\surefire-api-2.19.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\surefire\\common-java5\\2.19.1\\common-java5-2.19.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-engine\\5.1.0\\junit-jupiter-engine-5.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-engine\\1.1.0\\junit-platform-engine-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-commons\\1.1.0\\junit-platform-commons-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\opentest4j\\opentest4j\\1.0.0\\opentest4j-1.0.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-api\\5.1.0\\junit-jupiter-api-5.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\jacoco-maven-plugin\\0.8.7\\jacoco-maven-plugin-0.8.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-plugin-api\\3.0\\maven-plugin-api-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-model\\3.0\\maven-model-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-artifact\\3.0\\maven-artifact-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\sisu\\sisu-inject-plexus\\1.4.2\\sisu-inject-plexus-1.4.2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\sisu\\sisu-inject-bean\\1.4.2\\sisu-inject-bean-1.4.2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\sisu\\sisu-guice\\2.1.7\\sisu-guice-2.1.7-noaop.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-core\\3.0\\maven-core-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-settings\\3.0\\maven-settings-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-settings-builder\\3.0\\maven-settings-builder-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-repository-metadata\\3.0\\maven-repository-metadata-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-model-builder\\3.0\\maven-model-builder-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-aether-provider\\3.0\\maven-aether-provider-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-impl\\1.7\\aether-impl-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-spi\\1.7\\aether-spi-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-api\\1.7\\aether-api-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-util\\1.7\\aether-util-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-interpolation\\1.14\\plexus-interpolation-1.14.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-classworlds\\2.2.3\\plexus-classworlds-2.2.3.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-component-annotations\\1.5.5\\plexus-component-annotations-1.5.5.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\plexus\\plexus-sec-dispatcher\\1.3\\plexus-sec-dispatcher-1.3.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\plexus\\plexus-cipher\\1.4\\plexus-cipher-1.4.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-utils\\3.0.22\\plexus-utils-3.0.22.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\shared\\file-management\\1.2.1\\file-management-1.2.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\shared\\maven-shared-io\\1.1\\maven-shared-io-1.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-artifact-manager\\2.0.2\\maven-artifact-manager-2.0.2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\wagon\\wagon-provider-api\\1.0-alpha-6\\wagon-provider-api-1.0-alpha-6.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-container-default\\1.0-alpha-9\\plexus-container-default-1.0-alpha-9.jar;C:\\Users\\jacob\\.m2\\repository\\junit\\junit\\3.8.1\\junit-3.8.1.jar;C:\\Users\\jacob\\.m2\\repository\\classworlds\\classworlds\\1.1-alpha-2\\classworlds-1.1-alpha-2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\reporting\\maven-reporting-api\\3.0\\maven-reporting-api-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\doxia\\doxia-sink-api\\1.0\\doxia-sink-api-1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\org.jacoco.agent\\0.8.7\\org.jacoco.agent-0.8.7-runtime.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\org.jacoco.core\\0.8.7\\org.jacoco.core-0.8.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm\\9.1\\asm-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm-commons\\9.1\\asm-commons-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm-analysis\\9.1\\asm-analysis-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm-tree\\9.1\\asm-tree-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\org.jacoco.report\\0.8.7\\org.jacoco.report-0.8.7.jar;\"/>\r\n    <property name=\"java.vm.vendor\" value=\"Amazon.com Inc.\"/>\r\n    <property name=\"sun.arch.data.model\" value=\"64\"/>\r\n    <property name=\"user.variant\" value=\"\"/>\r\n    <property name=\"java.vendor.url\" value=\"https://aws.amazon.com/corretto/\"/>\r\n    <property name=\"user.timezone\" value=\"America/Denver\"/>\r\n    <property name=\"os.name\" value=\"Windows 10\"/>\r\n    <property name=\"java.vm.specification.version\" value=\"16\"/>\r\n    <property name=\"sun.java.launcher\" value=\"SUN_STANDARD\"/>\r\n    <property name=\"user.country\" value=\"US\"/>\r\n    <property name=\"sun.boot.library.path\" value=\"C:\\Users\\jacob\\.jdks\\corretto-16.0.2\\bin\"/>\r\n    <property name=\"sun.java.command\" value=\"C:\\Users\\jacob\\AppData\\Local\\Temp\\surefire8329626879719581442\\surefirebooter6653255358942717234.jar C:\\Users\\jacob\\AppData\\Local\\Temp\\surefire8329626879719581442 2022-03-24T01-02-01_424-jvmRun1 surefire7948779978244714346tmp surefire_04447127630122267276tmp\"/>\r\n    <property name=\"jdk.debug\" value=\"release\"/>\r\n    <property name=\"surefire.test.class.path\" value=\"C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\\target\\test-classes;C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\\target\\classes;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-surefire-provider\\1.1.0\\junit-platform-surefire-provider-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apiguardian\\apiguardian-api\\1.0.0\\apiguardian-api-1.0.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-launcher\\1.1.0\\junit-platform-launcher-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\surefire\\surefire-api\\2.19.1\\surefire-api-2.19.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\surefire\\common-java5\\2.19.1\\common-java5-2.19.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-engine\\5.1.0\\junit-jupiter-engine-5.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-engine\\1.1.0\\junit-platform-engine-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\platform\\junit-platform-commons\\1.1.0\\junit-platform-commons-1.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\opentest4j\\opentest4j\\1.0.0\\opentest4j-1.0.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-api\\5.1.0\\junit-jupiter-api-5.1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\jacoco-maven-plugin\\0.8.7\\jacoco-maven-plugin-0.8.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-plugin-api\\3.0\\maven-plugin-api-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-model\\3.0\\maven-model-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-artifact\\3.0\\maven-artifact-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\sisu\\sisu-inject-plexus\\1.4.2\\sisu-inject-plexus-1.4.2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\sisu\\sisu-inject-bean\\1.4.2\\sisu-inject-bean-1.4.2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\sisu\\sisu-guice\\2.1.7\\sisu-guice-2.1.7-noaop.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-core\\3.0\\maven-core-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-settings\\3.0\\maven-settings-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-settings-builder\\3.0\\maven-settings-builder-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-repository-metadata\\3.0\\maven-repository-metadata-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-model-builder\\3.0\\maven-model-builder-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-aether-provider\\3.0\\maven-aether-provider-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-impl\\1.7\\aether-impl-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-spi\\1.7\\aether-spi-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-api\\1.7\\aether-api-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\aether\\aether-util\\1.7\\aether-util-1.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-interpolation\\1.14\\plexus-interpolation-1.14.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-classworlds\\2.2.3\\plexus-classworlds-2.2.3.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-component-annotations\\1.5.5\\plexus-component-annotations-1.5.5.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\plexus\\plexus-sec-dispatcher\\1.3\\plexus-sec-dispatcher-1.3.jar;C:\\Users\\jacob\\.m2\\repository\\org\\sonatype\\plexus\\plexus-cipher\\1.4\\plexus-cipher-1.4.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-utils\\3.0.22\\plexus-utils-3.0.22.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\shared\\file-management\\1.2.1\\file-management-1.2.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\shared\\maven-shared-io\\1.1\\maven-shared-io-1.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\maven-artifact-manager\\2.0.2\\maven-artifact-manager-2.0.2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\wagon\\wagon-provider-api\\1.0-alpha-6\\wagon-provider-api-1.0-alpha-6.jar;C:\\Users\\jacob\\.m2\\repository\\org\\codehaus\\plexus\\plexus-container-default\\1.0-alpha-9\\plexus-container-default-1.0-alpha-9.jar;C:\\Users\\jacob\\.m2\\repository\\junit\\junit\\3.8.1\\junit-3.8.1.jar;C:\\Users\\jacob\\.m2\\repository\\classworlds\\classworlds\\1.1-alpha-2\\classworlds-1.1-alpha-2.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\reporting\\maven-reporting-api\\3.0\\maven-reporting-api-3.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\apache\\maven\\doxia\\doxia-sink-api\\1.0\\doxia-sink-api-1.0.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\org.jacoco.agent\\0.8.7\\org.jacoco.agent-0.8.7-runtime.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\org.jacoco.core\\0.8.7\\org.jacoco.core-0.8.7.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm\\9.1\\asm-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm-commons\\9.1\\asm-commons-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm-analysis\\9.1\\asm-analysis-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\ow2\\asm\\asm-tree\\9.1\\asm-tree-9.1.jar;C:\\Users\\jacob\\.m2\\repository\\org\\jacoco\\org.jacoco.report\\0.8.7\\org.jacoco.report-0.8.7.jar;\"/>\r\n    <property name=\"sun.cpu.endian\" value=\"little\"/>\r\n    <property name=\"user.home\" value=\"C:\\Users\\jacob\"/>\r\n    <property name=\"user.language\" value=\"en\"/>\r\n    <property name=\"java.specification.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"java.version.date\" value=\"2021-07-20\"/>\r\n    <property name=\"java.home\" value=\"C:\\Users\\jacob\\.jdks\\corretto-16.0.2\"/>\r\n    <property name=\"file.separator\" value=\"\\\"/>\r\n    <property name=\"basedir\" value=\"C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\"/>\r\n    <property name=\"java.vm.compressedOopsMode\" value=\"Zero based\"/>\r\n    <property name=\"line.separator\" value=\"&#10;\"/>\r\n    <property name=\"java.vm.specification.vendor\" value=\"Oracle Corporation\"/>\r\n    <property name=\"java.specification.name\" value=\"Java Platform API Specification\"/>\r\n    <property name=\"surefire.real.class.path\" value=\"C:\\Users\\jacob\\AppData\\Local\\Temp\\surefire8329626879719581442\\surefirebooter6653255358942717234.jar\"/>\r\n    <property name=\"user.script\" value=\"\"/>\r\n    <property name=\"sun.management.compiler\" value=\"HotSpot 64-Bit Tiered Compilers\"/>\r\n    <property name=\"java.runtime.version\" value=\"16.0.2+7\"/>\r\n    <property name=\"user.name\" value=\"jacob\"/>\r\n    <property name=\"path.separator\" value=\";\"/>\r\n    <property name=\"os.version\" value=\"10.0\"/>\r\n    <property name=\"java.runtime.name\" value=\"OpenJDK Runtime Environment\"/>\r\n    <property name=\"file.encoding\" value=\"Cp1252\"/>\r\n    <property name=\"java.vm.name\" value=\"OpenJDK 64-Bit Server VM\"/>\r\n    <property name=\"java.vendor.version\" value=\"Corretto-16.0.2.7.1\"/>\r\n    <property name=\"localRepository\" value=\"C:\\Users\\jacob\\.m2\\repository\"/>\r\n    <property name=\"java.vendor.url.bug\" value=\"https://github.com/corretto/corretto-jdk/issues/\"/>\r\n    <property name=\"java.io.tmpdir\" value=\"C:\\Users\\jacob\\AppData\\Local\\Temp\\\"/>\r\n    <property name=\"idea.version\" value=\"2021.3.2\"/>\r\n    <property name=\"java.version\" value=\"16.0.2\"/>\r\n    <property name=\"user.dir\" value=\"C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\"/>\r\n    <property name=\"os.arch\" value=\"amd64\"/>\r\n    <property name=\"java.vm.specification.name\" value=\"Java Virtual Machine Specification\"/>\r\n    <property name=\"sun.os.patch.level\" value=\"\"/>\r\n    <property name=\"java.library.path\" value=\"C:\\Users\\jacob\\.jdks\\corretto-16.0.2\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Program Files\\Common Files\\Oracle\\Java\\javapath;C:\\Program Files\\Microsoft\\jdk-11.0.12.7-hotspot\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2022.1.1\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\NVIDIA\\CUDNN\\v8.3\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\jacob\\AppData\\Local\\Microsoft\\WindowsApps;;.\"/>\r\n    <property name=\"java.vm.info\" value=\"mixed mode, sharing\"/>\r\n    <property name=\"java.vendor\" value=\"Amazon.com Inc.\"/>\r\n    <property name=\"java.vm.version\" value=\"16.0.2+7\"/>\r\n    <property name=\"sun.io.unicode.encoding\" value=\"UnicodeLittle\"/>\r\n    <property name=\"java.class.version\" value=\"60.0\"/>\r\n  </properties>\r\n  <testcase name=\"rowsColsConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.051\"/>\r\n  <testcase name=\"defaultConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.001\"/>\r\n  <testcase name=\"rowsColsValueConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.003\"/>\r\n  <testcase name=\"sizeValueConstructorTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.001\"/>\r\n  <testcase name=\"sizeConstructorFirstTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0.001\"/>\r\n  <testcase name=\"sizeConstructorSecondTestCase\" classname=\"linalg.matrix.MatrixConstructorTest\" time=\"0\"/>\r\n</testsuite>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml b/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml
--- a/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml	(date 1648106316387)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="linalg.matrix.MatrixConstructorTest" time="0.066" tests="6" errors="0" skipped="0" failures="0">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="linalg.matrix.MatrixConstructorTest" time="0.047" tests="6" errors="0" skipped="0" failures="0">
   <properties>
     <property name="java.specification.version" value="16"/>
     <property name="sun.cpu.isalist" value="amd64"/>
@@ -15,7 +15,7 @@
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
     <property name="user.country" value="US"/>
     <property name="sun.boot.library.path" value="C:\Users\jacob\.jdks\corretto-16.0.2\bin"/>
-    <property name="sun.java.command" value="C:\Users\jacob\AppData\Local\Temp\surefire8329626879719581442\surefirebooter6653255358942717234.jar C:\Users\jacob\AppData\Local\Temp\surefire8329626879719581442 2022-03-24T01-02-01_424-jvmRun1 surefire7948779978244714346tmp surefire_04447127630122267276tmp"/>
+    <property name="sun.java.command" value="C:\Users\jacob\AppData\Local\Temp\surefire11877014273691310189\surefirebooter5268320785052206297.jar C:\Users\jacob\AppData\Local\Temp\surefire11877014273691310189 2022-03-24T01-18-35_682-jvmRun1 surefire11989243838515177886tmp surefire_016475452633756478668tmp"/>
     <property name="jdk.debug" value="release"/>
     <property name="surefire.test.class.path" value="C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\target\test-classes;C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\target\classes;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-surefire-provider\1.1.0\junit-platform-surefire-provider-1.1.0.jar;C:\Users\jacob\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-launcher\1.1.0\junit-platform-launcher-1.1.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\surefire\surefire-api\2.19.1\surefire-api-2.19.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\surefire\common-java5\2.19.1\common-java5-2.19.1.jar;C:\Users\jacob\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.1.0\junit-jupiter-engine-5.1.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-engine\1.1.0\junit-platform-engine-1.1.0.jar;C:\Users\jacob\.m2\repository\org\junit\platform\junit-platform-commons\1.1.0\junit-platform-commons-1.1.0.jar;C:\Users\jacob\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\jacob\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.1.0\junit-jupiter-api-5.1.0.jar;C:\Users\jacob\.m2\repository\org\jacoco\jacoco-maven-plugin\0.8.7\jacoco-maven-plugin-0.8.7.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\jacob\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\jacob\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\jacob\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\jacob\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\jacob\.m2\repository\org\apache\maven\shared\file-management\1.2.1\file-management-1.2.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\shared\maven-shared-io\1.1\maven-shared-io-1.1.jar;C:\Users\jacob\.m2\repository\org\apache\maven\maven-artifact-manager\2.0.2\maven-artifact-manager-2.0.2.jar;C:\Users\jacob\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-alpha-6\wagon-provider-api-1.0-alpha-6.jar;C:\Users\jacob\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\jacob\.m2\repository\junit\junit\3.8.1\junit-3.8.1.jar;C:\Users\jacob\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\jacob\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\jacob\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.0\doxia-sink-api-1.0.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.agent\0.8.7\org.jacoco.agent-0.8.7-runtime.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.core\0.8.7\org.jacoco.core-0.8.7.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-commons\9.1\asm-commons-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-analysis\9.1\asm-analysis-9.1.jar;C:\Users\jacob\.m2\repository\org\ow2\asm\asm-tree\9.1\asm-tree-9.1.jar;C:\Users\jacob\.m2\repository\org\jacoco\org.jacoco.report\0.8.7\org.jacoco.report-0.8.7.jar;"/>
     <property name="sun.cpu.endian" value="little"/>
@@ -30,7 +30,7 @@
     <property name="line.separator" value="&#10;"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
     <property name="java.specification.name" value="Java Platform API Specification"/>
-    <property name="surefire.real.class.path" value="C:\Users\jacob\AppData\Local\Temp\surefire8329626879719581442\surefirebooter6653255358942717234.jar"/>
+    <property name="surefire.real.class.path" value="C:\Users\jacob\AppData\Local\Temp\surefire11877014273691310189\surefirebooter5268320785052206297.jar"/>
     <property name="user.script" value=""/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
     <property name="java.runtime.version" value="16.0.2+7"/>
@@ -57,10 +57,10 @@
     <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
     <property name="java.class.version" value="60.0"/>
   </properties>
-  <testcase name="rowsColsConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.051"/>
+  <testcase name="rowsColsConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.035"/>
   <testcase name="defaultConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.001"/>
-  <testcase name="rowsColsValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.003"/>
-  <testcase name="sizeValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.001"/>
+  <testcase name="rowsColsValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.002"/>
+  <testcase name="sizeValueConstructorTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0"/>
   <testcase name="sizeConstructorFirstTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0.001"/>
   <testcase name="sizeConstructorSecondTestCase" classname="linalg.matrix.MatrixConstructorTest" time="0"/>
 </testsuite>
\ No newline at end of file
Index: target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-------------------------------------------------------------------------------\r\nTest set: linalg.matrix.MatrixConstructorTest\r\n-------------------------------------------------------------------------------\r\nTests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 s - in linalg.matrix.MatrixConstructorTest\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt b/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt
--- a/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt	(date 1648106316382)
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: linalg.matrix.MatrixConstructorTest
 -------------------------------------------------------------------------------
-Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 s - in linalg.matrix.MatrixConstructorTest
+Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 s - in linalg.matrix.MatrixConstructorTest
Index: target/site/jacoco/jacoco.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>GROUP,PACKAGE,CLASS,INSTRUCTION_MISSED,INSTRUCTION_COVERED,BRANCH_MISSED,BRANCH_COVERED,LINE_MISSED,LINE_COVERED,COMPLEXITY_MISSED,COMPLEXITY_COVERED,METHOD_MISSED,METHOD_COVERED\r\nJava-Linear-Algebra,linalg.concurrent,ThreadTypes,27,0,0,0,2,0,1,0,1,0\r\nJava-Linear-Algebra,linalg.concurrent,MatrixAdditionWorker,105,0,4,0,18,0,5,0,3,0\r\nJava-Linear-Algebra,linalg.concurrent,ConcurrentMatrixAddition,132,0,8,0,31,0,8,0,4,0\r\nJava-Linear-Algebra,linalg.concurrent,MatrixMultiplicationWorker,175,0,14,0,16,0,9,0,2,0\r\nJava-Linear-Algebra,linalg.concurrent,ConcurrentMatrixMultiplication,139,0,8,0,32,0,8,0,4,0\r\nJava-Linear-Algebra,linalg.complex_number,CNumber,893,106,107,3,160,28,103,5,48,5\r\nJava-Linear-Algebra,linalg.util,StringUtils,9,48,2,6,3,9,3,4,1,2\r\nJava-Linear-Algebra,linalg.util,Token,24,43,3,5,6,10,5,7,2,6\r\nJava-Linear-Algebra,linalg.util,ShapeLexer,129,0,30,0,37,0,18,0,3,0\r\nJava-Linear-Algebra,linalg.util,LinAlgArrayUtils,573,29,68,4,97,5,52,3,18,1\r\nJava-Linear-Algebra,linalg.util,NumberLexer,113,142,31,29,29,39,22,10,0,2\r\nJava-Linear-Algebra,linalg.util,ExampleMatrices,900,0,0,0,19,0,2,0,2,0\r\nJava-Linear-Algebra,linalg.util,Parser,128,90,11,7,29,23,10,2,2,1\r\nJava-Linear-Algebra,linalg.util,FileManager,247,0,16,0,49,0,12,0,4,0\r\nJava-Linear-Algebra,linalg.util,Lexer,13,49,1,7,5,11,3,7,2,4\r\nJava-Linear-Algebra,linalg,QRDecomposition,1049,0,18,0,79,0,14,0,5,0\r\nJava-Linear-Algebra,linalg,SchurDecomposition,368,0,12,0,55,0,8,0,2,0\r\nJava-Linear-Algebra,linalg,MatrixOperations,2067,0,186,0,275,0,133,0,40,0\r\nJava-Linear-Algebra,linalg,MatrixMultiplicationAlgorithms,132,0,6,0,11,0,6,0,3,0\r\nJava-Linear-Algebra,linalg,LUDecomposition,544,0,37,0,98,0,28,0,8,0\r\nJava-Linear-Algebra,linalg,MatrixManipulations,1884,0,148,0,272,0,115,0,41,0\r\nJava-Linear-Algebra,linalg,PrintOptions,7,9,0,0,2,4,1,1,1,1\r\nJava-Linear-Algebra,linalg,SingularValueDecomposition,371,0,0,0,24,0,3,0,3,0\r\nJava-Linear-Algebra,linalg,MatrixChecks,47,0,8,0,12,0,6,0,2,0\r\nJava-Linear-Algebra,linalg,Solvers,332,0,20,0,52,0,18,0,8,0\r\nJava-Linear-Algebra,linalg,Matrix,1517,169,118,14,251,42,107,10,45,6\r\nJava-Linear-Algebra,linalg,Vector,751,0,50,0,165,0,51,0,26,0\r\nJava-Linear-Algebra,linalg,CholeskyDecomposition,123,0,10,0,18,0,7,0,2,0\r\nJava-Linear-Algebra,linalg,MatrixComparisons,208,0,42,0,47,0,28,0,7,0\r\nJava-Linear-Algebra,linalg,MatrixProperties,2330,18,214,0,291,6,149,3,42,3\r\nJava-Linear-Algebra,linalg,Decompose,127,0,16,0,28,0,19,0,11,0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/site/jacoco/jacoco.csv b/target/site/jacoco/jacoco.csv
--- a/target/site/jacoco/jacoco.csv	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/target/site/jacoco/jacoco.csv	(date 1648106316673)
@@ -16,7 +16,7 @@
 Java-Linear-Algebra,linalg.util,Lexer,13,49,1,7,5,11,3,7,2,4
 Java-Linear-Algebra,linalg,QRDecomposition,1049,0,18,0,79,0,14,0,5,0
 Java-Linear-Algebra,linalg,SchurDecomposition,368,0,12,0,55,0,8,0,2,0
-Java-Linear-Algebra,linalg,MatrixOperations,2067,0,186,0,275,0,133,0,40,0
+Java-Linear-Algebra,linalg,MatrixOperations,2106,0,186,0,283,0,134,0,41,0
 Java-Linear-Algebra,linalg,MatrixMultiplicationAlgorithms,132,0,6,0,11,0,6,0,3,0
 Java-Linear-Algebra,linalg,LUDecomposition,544,0,37,0,98,0,28,0,8,0
 Java-Linear-Algebra,linalg,MatrixManipulations,1884,0,148,0,272,0,115,0,41,0
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"Java-Linear-Algebra-v0.0.1-beta:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7072a60c-bdbe-44dc-912a-0b1b7f9f3af3\" name=\"Changes\" comment=\"Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.\">\r\n      <change afterPath=\"$PROJECT_DIR$/benchmarks/MatrixMultiplication-Single_vs_Multi_Thread.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/ConcurrentMatrixMultiplication.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixMultiplicationWorker.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/benchmarks/MatrixAddition-Single_vs_Multi_Thread.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/benchmarks/MatrixAddition-Single_vs_Multi_Thread.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/benchmarks/MatrixMultiplication-block_sizes.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/benchmarks/MatrixMultiplication-block_sizes.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/MatrixMultiplicationAlgorithms.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/linalg/MatrixMultiplicationAlgorithms.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/MatrixOperations.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/linalg/MatrixOperations.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/AllocateThreads.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixAdditionWorker.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixAdditionWorker.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/ThreadedMatrixAddition.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/linalg/concurrent/ConcurrentMatrixAddition.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/Java-Linear-Algebra-v0.0.1-beta.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/Java-Linear-Algebra-v0.0.1-beta.jar\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/linalg/MatrixOperations.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/linalg/MatrixOperations.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/jacoco.exec\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/jacoco.exec\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/site/jacoco/index.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/site/jacoco/index.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/site/jacoco/jacoco-sessions.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/site/jacoco/jacoco-sessions.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/site/jacoco/jacoco.csv\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/site/jacoco/jacoco.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/site/jacoco/jacoco.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/site/jacoco/jacoco.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/site/jacoco/linalg/MatrixOperations.java.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/site/jacoco/linalg/MatrixOperations.java.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"develop\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixAdditionWorker.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenRunner\">\r\n    <option name=\"delegateBuildToMaven\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1yc8grbYeBrYoZturjsTdZ94eiV\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../Testing\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Artifacts\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15280464\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.1743421\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.maven.runner\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\jacob\\IdeaProjects\\Java-Linear-Algebra\\benchmarks\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.ConcurrentMatrixAddition\">\r\n    <configuration name=\"ConcurrentMatrixAddition\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"linalg.concurrent.ConcurrentMatrixAddition\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"linalg.concurrent.ConcurrentMatrixAddition\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MatrixManipulations\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"linalg.MatrixManipulations\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"linalg.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MatrixOperations\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"linalg.MatrixOperations\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"linalg.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SchurDecomposition\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"linalg.SchurDecomposition\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"linalg.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Temp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Temp\" />\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Run All Tests\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"Java-Linear-Algebra\" />\r\n      <extension name=\"coverage\" sample_coverage=\"false\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"linalg\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <dir value=\"$PROJECT_DIR$/../JML/src/test/java\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MatrixOperations\" />\r\n        <item itemvalue=\"Application.ConcurrentMatrixAddition\" />\r\n        <item itemvalue=\"Application.SchurDecomposition\" />\r\n        <item itemvalue=\"Application.Temp\" />\r\n        <item itemvalue=\"Application.MatrixManipulations\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7072a60c-bdbe-44dc-912a-0b1b7f9f3af3\" name=\"Changes\" comment=\"\" />\r\n      <created>1632539632382</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1632539632382</updated>\r\n      <workItem from=\"1632539633669\" duration=\"66000\" />\r\n      <workItem from=\"1632539702223\" duration=\"1530000\" />\r\n      <workItem from=\"1632796311477\" duration=\"1142000\" />\r\n      <workItem from=\"1632804621813\" duration=\"1949000\" />\r\n      <workItem from=\"1632853984296\" duration=\"604000\" />\r\n      <workItem from=\"1633560686654\" duration=\"1378000\" />\r\n      <workItem from=\"1633619129483\" duration=\"15000\" />\r\n      <workItem from=\"1633814089150\" duration=\"618000\" />\r\n      <workItem from=\"1634341044636\" duration=\"1183000\" />\r\n      <workItem from=\"1634342400536\" duration=\"264000\" />\r\n      <workItem from=\"1634604329967\" duration=\"4002000\" />\r\n      <workItem from=\"1634926319012\" duration=\"15000\" />\r\n      <workItem from=\"1635100619572\" duration=\"7340000\" />\r\n      <workItem from=\"1635280770365\" duration=\"1759000\" />\r\n      <workItem from=\"1635283112110\" duration=\"877000\" />\r\n      <workItem from=\"1637537007419\" duration=\"158000\" />\r\n      <workItem from=\"1637705135001\" duration=\"600000\" />\r\n      <workItem from=\"1637769778469\" duration=\"2208000\" />\r\n      <workItem from=\"1637876727416\" duration=\"750000\" />\r\n      <workItem from=\"1637963874808\" duration=\"16000\" />\r\n      <workItem from=\"1640365654234\" duration=\"1264000\" />\r\n      <workItem from=\"1640565431424\" duration=\"849000\" />\r\n      <workItem from=\"1640751458485\" duration=\"3619000\" />\r\n      <workItem from=\"1642820072823\" duration=\"991000\" />\r\n      <workItem from=\"1643323926454\" duration=\"4059000\" />\r\n      <workItem from=\"1643419483786\" duration=\"9000\" />\r\n      <workItem from=\"1643423209754\" duration=\"118000\" />\r\n      <workItem from=\"1643426565017\" duration=\"119000\" />\r\n      <workItem from=\"1647985972533\" duration=\"22118000\" />\r\n      <workItem from=\"1648064334675\" duration=\"15677000\" />\r\n      <workItem from=\"1648087481953\" duration=\"10583000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Add Jar for Release\">\r\n      <created>1632540231649</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1632540231649</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Add Jar for Release\">\r\n      <created>1632540703641</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1632540703641</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Bug Fixes. Added matrix constructor tests.\">\r\n      <created>1632804759524</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1632804759524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Bug Fixes.\">\r\n      <created>1633561427757</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1633561427757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Bug Fixes.\">\r\n      <created>1633562184555</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1633562184555</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Bug Fixes.\">\r\n      <created>1633619134302</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1633619134302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634342155258</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634342155258</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634342642017</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634342642017</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634604808227</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634604808227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1634604904987</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1634604904987</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1635104552927</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1635104552927</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1635282493022</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1635282493022</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1635282526609</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1635282526609</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1640565882552</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640565882552</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added extend method to MatrixManipulations\">\r\n      <created>1640565891492</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640565891492</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Added ThreadedMatrixAddition and MatrixRowWorker files for computing matrix addition on multiple threads.\">\r\n      <created>1647904510366</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1647904510366</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.\">\r\n      <created>1648087165128</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1648087165128</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.\">\r\n      <created>1648087174975</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1648087174975</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.\">\r\n      <created>1648087206220</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1648087206220</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"20\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Add Jar for Release\" />\r\n    <MESSAGE value=\"Bug Fixes. Added matrix constructor tests.\" />\r\n    <MESSAGE value=\"Bug Fixes. New Javadoc.\" />\r\n    <MESSAGE value=\"Bug Fixes.\" />\r\n    <MESSAGE value=\"Added extend method to MatrixManipulations\" />\r\n    <MESSAGE value=\"Added ThreadedMatrixAddition and MatrixRowWorker files for computing matrix addition on multiple threads.\" />\r\n    <MESSAGE value=\"Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Java_Linear_Algebra$Run_All_Tests.exec\" NAME=\"Run All Tests Coverage Results\" MODIFIED=\"1632796540094\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"jacoco\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"true\" />\r\n    <SUITE FILE_PATH=\"coverage/Java_Linear_Algebra$Run_All_Tests.ic\" NAME=\"Run All Tests Coverage Results\" MODIFIED=\"1632796824493\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 53180b264a60b6b949b679f22a9aa47ef2a69430)
+++ b/.idea/workspace.xml	(date 1648106396695)
@@ -9,28 +9,38 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7072a60c-bdbe-44dc-912a-0b1b7f9f3af3" name="Changes" comment="Several performance improvements.&#10;&#10;Changed several matrix operations so that they do not make unnecessary copies.&#10;&#10;Added MatrixMultiplicationAlgorithms class which contains the standard matrix multiplication algorithm as well as a blocked algorithm which is faster for large matrices. The Matrix.mult(...) algorithm now chooses which algorithm to use based on the size.">
-      <change afterPath="$PROJECT_DIR$/benchmarks/MatrixMultiplication-Single_vs_Multi_Thread.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/linalg/concurrent/ConcurrentMatrixMultiplication.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixMultiplicationWorker.java" afterDir="false" />
+    <list default="true" id="7072a60c-bdbe-44dc-912a-0b1b7f9f3af3" name="Changes" comment="Added multi-threading for matrix multiplication.&#10;&#10;The Matrix.mult(...) method now chooses whether to use the standard algorithm or the concurrent algorithm for the matrix multiplication based on the size of the matrix.">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/benchmarks/MatrixAddition-Single_vs_Multi_Thread.txt" beforeDir="false" afterPath="$PROJECT_DIR$/benchmarks/MatrixAddition-Single_vs_Multi_Thread.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/benchmarks/MatrixMultiplication-block_sizes.txt" beforeDir="false" afterPath="$PROJECT_DIR$/benchmarks/MatrixMultiplication-block_sizes.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/MatrixMultiplicationAlgorithms.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/MatrixMultiplicationAlgorithms.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/linalg/MatrixOperations.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/MatrixOperations.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/concurrent/AllocateThreads.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixAdditionWorker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/concurrent/MatrixAdditionWorker.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/linalg/concurrent/ThreadedMatrixAddition.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/linalg/concurrent/ConcurrentMatrixAddition.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/Java-Linear-Algebra-v0.0.1-beta.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/Java-Linear-Algebra-v0.0.1-beta.jar" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/linalg/MatrixOperations.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/linalg/MatrixOperations.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/jacoco.exec" beforeDir="false" afterPath="$PROJECT_DIR$/target/jacoco.exec" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/site/jacoco/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/index.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/site/jacoco/jacoco-sessions.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/jacoco-sessions.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/site/jacoco/jacoco.csv" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/jacoco.csv" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/site/jacoco/jacoco.xml" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/jacoco.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/ConcurrentMatrixAddition.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/ConcurrentMatrixAddition.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/ConcurrentMatrixMultiplication.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/ConcurrentMatrixMultiplication.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/MatrixAdditionWorker.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/MatrixAdditionWorker.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/MatrixMultiplicationWorker.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/MatrixMultiplicationWorker.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/ThreadTypes.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.concurrent/ThreadTypes.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.util/Lexer.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.util/Lexer.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.util/NumberLexer.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.util/NumberLexer.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.util/StringUtils.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.util/StringUtils.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg.util/Token.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg.util/Token.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/Matrix.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/Matrix.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixComparisons.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixComparisons.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixManipulations.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixManipulations.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixMultiplicationAlgorithms.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixMultiplicationAlgorithms.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixOperations.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixOperations.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixOperations.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixOperations.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixProperties.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/MatrixProperties.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/PrintOptions.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/PrintOptions.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/Vector.java.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/Vector.java.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/site/jacoco/linalg/index.source.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/site/jacoco/linalg/index.source.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/target/surefire-reports/TEST-linalg.matrix.MatrixConstructorTest.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/surefire-reports/linalg.matrix.MatrixConstructorTest.txt" afterDir="false" />
     </list>
@@ -98,7 +108,7 @@
       <recent name="C:\Users\jacob\IdeaProjects\Java-Linear-Algebra\benchmarks" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.ConcurrentMatrixAddition">
+  <component name="RunManager" selected="Application.MatrixOperations">
     <configuration name="ConcurrentMatrixAddition" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="linalg.concurrent.ConcurrentMatrixAddition" />
       <module name="Java-Linear-Algebra" />
