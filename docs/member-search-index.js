memberSearchIndex = [{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"abs()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"abs(CNumber)","u":"abs(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"abs(CNumber[])","u":"abs(com.github.jacobwatters.linalg.complex_number.CNumber[])"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"add(CNumber, CNumber)","u":"add(com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"add(CNumber, CNumber, CNumber...)","u":"add(com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"add(Matrix)","u":"add(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"add(Vector)","u":"add(com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"addInv(CNumber)","u":"addInv(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"allSqrt(CNumber)","u":"allSqrt(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"augment(Matrix)","u":"augment(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg.util","c":"StringUtils","l":"center(String, int)","u":"center(java.lang.String,int)"},{"p":"com.github.jacobwatters.linalg.util","c":"StringUtils","l":"center(String, int, char)","u":"center(java.lang.String,int,char)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"cholesky(Matrix)","u":"cholesky(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"CNumber()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"CNumber(CNumber)","u":"%3Cinit%3E(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"CNumber(double)","u":"%3Cinit%3E(double)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"CNumber(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"CNumber(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"colSpace()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"COLUMN_VECTOR"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"compareTo(CNumber)","u":"compareTo(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"compareToReal(CNumber)","u":"compareToReal(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"compareToReal(double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"conjT()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"conjugate()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"conjugate(CNumber)","u":"conjugate(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"contains(int[], int)","u":"contains(int[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"copy()"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"Decompose()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"det()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"diag()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"diagAsVector()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"directSum(Matrix...)","u":"directSum(com.github.jacobwatters.linalg.Matrix...)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"divide(CNumber, CNumber)","u":"divide(com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"divRow(int, CNumber)","u":"divRow(int,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"divRow(int, double)","u":"divRow(int,double)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"doubleImaginaryValue()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"doubleValue()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"E"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"eig()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"eigVals()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"eigVecs()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"elemDiv(Matrix)","u":"elemDiv(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"elemMult(Matrix)","u":"elemMult(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"equals(double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"equals(Matrix)","u":"equals(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"erref()"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"ExampleMatrices()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"exp(CNumber)","u":"exp(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"exp(double)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"extend2D(CNumber[], int)","u":"extend2D(com.github.jacobwatters.linalg.complex_number.CNumber[],int)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"extend2D(double[], int)","u":"extend2D(double[],int)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"extend2D(int[], int)","u":"extend2D(int[],int)"},{"p":"com.github.jacobwatters.linalg.util","c":"MathUtil","l":"fact(int)"},{"p":"com.github.jacobwatters.linalg.util","c":"FileManager","l":"FileManager()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"fip(Matrix)","u":"fip(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"flatten()"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"flatten(CNumber[][])","u":"flatten(com.github.jacobwatters.linalg.complex_number.CNumber[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"flatten(int)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"floatImaginaryValue()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"floatValue()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"get(int, int)","u":"get(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getAsDouble(int, int)","u":"getAsDouble(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getCol(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getColAsVector(int)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"getDims(CNumber[][])","u":"getDims(com.github.jacobwatters.linalg.complex_number.CNumber[][])"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"getEntries()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"getImaginary()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"getReal()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getRow(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getRowAsVector(int)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"getSection(CNumber[][], int, int, int, int)","u":"getSection(com.github.jacobwatters.linalg.complex_number.CNumber[][],int,int,int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getSlice(int, int, int, int)","u":"getSlice(int,int,int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getValues()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"getValuesAsDouble()"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"group(CNumber[])","u":"group(com.github.jacobwatters.linalg.complex_number.CNumber[])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"H()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"hermAdjoint()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"hessu()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"hessuV()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"I(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"I(int, int)","u":"I(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"identity(int)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"im"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"IMAGINARY_UNIT"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"infNorm()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"infNorm()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"innerProduct(Vector)","u":"innerProduct(com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"intImaginaryValue()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"intValue()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"inv()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"inv(CNumber)","u":"inv(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"inverse()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"isComplex()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isComplex()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isDiagonal()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isDiagonalizable()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isEmpty()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isFullRank()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isHermation()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isI()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"isImaginary()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"isInt()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isInv(Matrix)","u":"isInv(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isNeg()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isOrthogonal()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isPos()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isPosDef()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isPosSemidef()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"isReal()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isReal()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isSelfAdjoint()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isSingular()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isSkewSymmetric()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isSquare()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isSymmetric()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isSymmetric(String)","u":"isSymmetric(java.lang.String)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isTri()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isTriL()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isTriU()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isUnitary()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isVector()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"isZero()"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"LDU(Matrix)","u":"LDU(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"leftNullSpace()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"length(CNumber)","u":"length(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"longImaginaryValue()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"longValue()"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"LU(Matrix)","u":"LU(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"LUP(Matrix)","u":"LUP(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"LUPQ(Matrix)","u":"LUPQ(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"mag()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.github.jacobwatters.linalg.util","c":"FileManager","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.github.jacobwatters.linalg.util","c":"MathUtil","l":"MathUtil()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_0"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_1"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_2"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_3"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_4"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_5"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_6"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_7"},{"p":"com.github.jacobwatters.linalg.util","c":"ExampleMatrices","l":"MATRIX_8"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(CNumber[][])","u":"%3Cinit%3E(com.github.jacobwatters.linalg.complex_number.CNumber[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(int)","u":"%3Cinit%3E(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(int, CNumber)","u":"%3Cinit%3E(int,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(int, int, CNumber)","u":"%3Cinit%3E(int,int,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(int[][])","u":"%3Cinit%3E(int[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(Matrix)","u":"%3Cinit%3E(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(String, CNumber)","u":"%3Cinit%3E(java.lang.String,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(String, double)","u":"%3Cinit%3E(java.lang.String,double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"Matrix(String[][])","u":"%3Cinit%3E(java.lang.String[][])"},{"p":"com.github.jacobwatters.linalg","c":"PrintOptions","l":"MAX_COLUMNS"},{"p":"com.github.jacobwatters.linalg","c":"PrintOptions","l":"MAX_ROWS"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"MAX_VALUE"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"max()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"max(CNumber...)","u":"max(com.github.jacobwatters.linalg.complex_number.CNumber...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"maxComplex()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"maxReal()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"MIN_VALUE"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"min()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"min(CNumber...)","u":"min(com.github.jacobwatters.linalg.complex_number.CNumber...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"minComplex()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"minReal()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"mult(Matrix)","u":"mult(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"multiply(CNumber, CNumber)","u":"multiply(com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"multRow(int, CNumber)","u":"multRow(int,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"multRow(int, double)","u":"multRow(int,double)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"nearZero(double)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"NEGATIVE_ONE"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"norm()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"norm()"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"norm(CNumber[])","u":"norm(com.github.jacobwatters.linalg.complex_number.CNumber[])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"norm(double)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"norm(double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"norm(double, double)","u":"norm(double,double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"nullity()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"nullSpace()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"numCols()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"numRows()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"ONE"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"ones(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"ones(int, int)","u":"ones(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"ones(String)","u":"ones(java.lang.String)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"outerProduct(Vector)","u":"outerProduct(com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg","c":"PrintOptions","l":"PADDING"},{"p":"com.github.jacobwatters.linalg.util","c":"Parser","l":"parseNumber(String)","u":"parseNumber(java.lang.String)"},{"p":"com.github.jacobwatters.linalg.util","c":"Parser","l":"Parser()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg.util","c":"Parser","l":"parseShape(String)","u":"parseShape(java.lang.String)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"PI"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"pow(CNumber, CNumber)","u":"pow(com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"pow(CNumber, int)","u":"pow(com.github.jacobwatters.linalg.complex_number.CNumber,int)"},{"p":"com.github.jacobwatters.linalg","c":"PrintOptions","l":"PRECISION"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"print(Object...)","u":"print(java.lang.Object...)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"printArr(CNumber[])","u":"printArr(com.github.jacobwatters.linalg.complex_number.CNumber[])"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"printArr(CNumber[][])","u":"printArr(com.github.jacobwatters.linalg.complex_number.CNumber[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"println(Object...)","u":"println(java.lang.Object...)"},{"p":"com.github.jacobwatters.linalg","c":"PrintOptions","l":"PrintOptions()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"printSep(String, Object...)","u":"printSep(java.lang.String,java.lang.Object...)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"QR(Matrix)","u":"QR(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"QR(Matrix, boolean)","u":"QR(com.github.jacobwatters.linalg.Matrix,boolean)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"randn()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"randn(boolean)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"randn(int, int, boolean)","u":"randn(int,int,boolean)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"randn(int, int, boolean)","u":"randn(int,int,boolean)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"random()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"random(double)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"random(double, double, boolean...)","u":"random(double,double,boolean...)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"random(int, int)","u":"random(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"random(int, int, boolean...)","u":"random(int,int,boolean...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"random(int, int, double)","u":"random(int,int,double)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"random(int, int, double)","u":"random(int,int,double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"random(int, int, double, double, boolean...)","u":"random(int,int,double,double,boolean...)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"random(int, int, double, double, boolean...)","u":"random(int,int,double,double,boolean...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"random(String, boolean...)","u":"random(java.lang.String,boolean...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"random(String, double)","u":"random(java.lang.String,double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"random(String, double, double, boolean...)","u":"random(java.lang.String,double,double,boolean...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"randomComplex(int, int)","u":"randomComplex(int,int)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"randomComplex(int, int)","u":"randomComplex(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"randomOrthogonal(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"randomUnitary(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"rank()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"re"},{"p":"com.github.jacobwatters.linalg.util","c":"FileManager","l":"readcsv(String)","u":"readcsv(java.lang.String)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"recep()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"ref()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"removeCol(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"removeCols(int...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"removeRow(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"removeRows(int...)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"reshape(int, int)","u":"reshape(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"reshape(String)","u":"reshape(java.lang.String)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"round(CNumber, int)","u":"round(com.github.jacobwatters.linalg.complex_number.CNumber,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"round(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"roundToZero(int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"ROW_VECTOR"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"rowSpace()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"rref()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"rref(boolean)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"rrefNoPivot()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"sameShape(Matrix)","u":"sameShape(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"sameShape(Matrix, int)","u":"sameShape(com.github.jacobwatters.linalg.Matrix,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"scalDiv(CNumber)","u":"scalDiv(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"scalDiv(CNumber)","u":"scalDiv(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"scalDiv(double)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"scalDiv(double)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"scalMult(CNumber)","u":"scalMult(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"scalMult(double)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"schur(Matrix)","u":"schur(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"schur(Matrix, boolean)","u":"schur(com.github.jacobwatters.linalg.Matrix,boolean)"},{"p":"com.github.jacobwatters.linalg","c":"Decompose","l":"schurReal(Matrix)","u":"schurReal(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"set(CNumber, int, int)","u":"set(com.github.jacobwatters.linalg.complex_number.CNumber,int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"set(double, int, int)","u":"set(double,int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setCol(CNumber[], int)","u":"setCol(com.github.jacobwatters.linalg.complex_number.CNumber[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setCol(double[], int)","u":"setCol(double[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setCol(Vector, int)","u":"setCol(com.github.jacobwatters.linalg.Vector,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setRow(CNumber[], int)","u":"setRow(com.github.jacobwatters.linalg.complex_number.CNumber[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setRow(double[], int)","u":"setRow(double[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setRow(Vector, int)","u":"setRow(com.github.jacobwatters.linalg.Vector,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setSlice(int, int, Matrix)","u":"setSlice(int,int,com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setSliceCopy(int, int, Matrix)","u":"setSliceCopy(int,int,com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setValues(CNumber[][])","u":"setValues(com.github.jacobwatters.linalg.complex_number.CNumber[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"setValues(double[][])"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"shape()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"sign(CNumber)","u":"sign(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Solvers","l":"solve(Matrix, Vector)","u":"solve(com.github.jacobwatters.linalg.Matrix,com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg","c":"Solvers","l":"solve(Matrix, Vector...)","u":"solve(com.github.jacobwatters.linalg.Matrix,com.github.jacobwatters.linalg.Vector...)"},{"p":"com.github.jacobwatters.linalg","c":"Solvers","l":"solveQR(Matrix, Matrix)","u":"solveQR(com.github.jacobwatters.linalg.Matrix,com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Solvers","l":"solveQR(Matrix, Vector)","u":"solveQR(com.github.jacobwatters.linalg.Matrix,com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg","c":"Solvers","l":"Solvers()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Solvers","l":"sovle(Matrix, Matrix)","u":"sovle(com.github.jacobwatters.linalg.Matrix,com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"sqrt()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"sqrt(CNumber)","u":"sqrt(com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"stack(Matrix)","u":"stack(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"stack(Matrix, int)","u":"stack(com.github.jacobwatters.linalg.Matrix,int)"},{"p":"com.github.jacobwatters.linalg.util","c":"StringUtils","l":"StringUtils()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"sub(Matrix)","u":"sub(com.github.jacobwatters.linalg.Matrix)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"sub(Vector)","u":"sub(com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"subtract(CNumber, CNumber)","u":"subtract(com.github.jacobwatters.linalg.complex_number.CNumber,com.github.jacobwatters.linalg.complex_number.CNumber)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"swapCols(int, int)","u":"swapCols(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"swapRows(int, int)","u":"swapRows(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"T()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"toColVector()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"toMatrix()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"toMatrix(Vector)","u":"toMatrix(com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"toRowVector()"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"toString()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"toString()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"toString()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"toVector()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"tr()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"trace()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"transpose()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"tril()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"tril(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"triu()"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"triu(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"van(Vector, int)","u":"van(com.github.jacobwatters.linalg.Vector,int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector()","u":"%3Cinit%3E()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(CNumber[])","u":"%3Cinit%3E(com.github.jacobwatters.linalg.complex_number.CNumber[])"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(CNumber[], int)","u":"%3Cinit%3E(com.github.jacobwatters.linalg.complex_number.CNumber[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(double[])","u":"%3Cinit%3E(double[])"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(double[], int)","u":"%3Cinit%3E(double[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(int)","u":"%3Cinit%3E(int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(int[])","u":"%3Cinit%3E(int[])"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(int[], int)","u":"%3Cinit%3E(int[],int)"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"Vector(Vector)","u":"%3Cinit%3E(com.github.jacobwatters.linalg.Vector)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"vectorType()"},{"p":"com.github.jacobwatters.linalg","c":"Vector","l":"vectorType()"},{"p":"com.github.jacobwatters.linalg.util","c":"FileManager","l":"write2csv(Matrix, String)","u":"write2csv(com.github.jacobwatters.linalg.Matrix,java.lang.String)"},{"p":"com.github.jacobwatters.linalg.complex_number","c":"CNumber","l":"ZERO"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"zeros(int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"zeros(int, int)","u":"zeros(int,int)"},{"p":"com.github.jacobwatters.linalg.util","c":"LinAlgArrayUtils","l":"zeros(int, int)","u":"zeros(int,int)"},{"p":"com.github.jacobwatters.linalg","c":"Matrix","l":"zeros(String)","u":"zeros(java.lang.String)"}];updateSearchResults();